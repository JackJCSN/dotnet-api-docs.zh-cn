<Type Name="WebRequest" FullName="System.Net.WebRequest">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6bda4f7795590111839d343be99b8324fb137097" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70539818" /></Metadata><TypeSignature Language="C#" Value="public abstract class WebRequest : MarshalByRefObject, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit WebRequest extends System.MarshalByRefObject implements class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Net.WebRequest" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class WebRequest&#xA;Inherits MarshalByRefObject&#xA;Implements ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebRequest abstract : MarshalByRefObject, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type WebRequest = class&#xA;    inherit MarshalByRefObject&#xA;    interface ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Requests</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="cee8a-101">对统一资源标识符 (URI) 发出请求。</span><span class="sxs-lookup"><span data-stu-id="cee8a-101">Makes a request to a Uniform Resource Identifier (URI).</span></span> <span data-ttu-id="cee8a-102">这是一个 <see langword="abstract" /> 类。</span><span class="sxs-lookup"><span data-stu-id="cee8a-102">This is an <see langword="abstract" /> class.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  

> [!IMPORTANT]
>  <span data-ttu-id="cee8a-103">建议你不要将`WebRequest`或其派生类用于新的开发。</span><span class="sxs-lookup"><span data-stu-id="cee8a-103">We don't recommend that you use `WebRequest` or its derived classes for new development.</span></span> <span data-ttu-id="cee8a-104">而应使用<xref:System.Net.Http.HttpClient?displayProperty=nameWithType>类。</span><span class="sxs-lookup"><span data-stu-id="cee8a-104">Instead, use the <xref:System.Net.Http.HttpClient?displayProperty=nameWithType> class.</span></span>

 <span data-ttu-id="cee8a-105"><xref:System.Net.WebRequest>是的`abstract`基类。用于从 Internet 访问数据的网络请求/响应模型。</span><span class="sxs-lookup"><span data-stu-id="cee8a-105"><xref:System.Net.WebRequest> is the `abstract` base class for .NET's request/response model for accessing data from the Internet.</span></span> <span data-ttu-id="cee8a-106">使用请求/响应模型的应用程序可以采用与协议无关的方式从 Internet 请求数据，其中，应用程序使用<xref:System.Net.WebRequest>类的实例，而特定于协议的子类执行的详细信息请求。</span><span class="sxs-lookup"><span data-stu-id="cee8a-106">An application that uses the request/response model can request data from the Internet in a protocol-agnostic manner, in which the application works with instances of the <xref:System.Net.WebRequest> class while protocol-specific descendant classes carry out the details of the request.</span></span>  
  
 <span data-ttu-id="cee8a-107">请求将从应用程序发送到特定的 URI，如服务器上的网页。</span><span class="sxs-lookup"><span data-stu-id="cee8a-107">Requests are sent from an application to a particular URI, such as a Web page on a server.</span></span> <span data-ttu-id="cee8a-108">URI 确定要从为应用程序注册的<xref:System.Net.WebRequest>后代列表创建的正确子代类。</span><span class="sxs-lookup"><span data-stu-id="cee8a-108">The URI determines the proper descendant class to create from a list of <xref:System.Net.WebRequest> descendants registered for the application.</span></span> <span data-ttu-id="cee8a-109"><xref:System.Net.WebRequest>通常会将子代注册为处理特定协议（如 HTTP 或 FTP），但可以注册子代来处理对服务器上特定服务器或路径的请求。</span><span class="sxs-lookup"><span data-stu-id="cee8a-109"><xref:System.Net.WebRequest> descendants are typically registered to handle a specific protocol, such as HTTP or FTP, but can be registered to handle a request to a specific server or path on a server.</span></span>  
  
 <span data-ttu-id="cee8a-110">在访问 Internet 资源的过程中发生错误时， <xref:System.Net.WebRequest>类将引发。 <xref:System.Net.WebException></span><span class="sxs-lookup"><span data-stu-id="cee8a-110">The <xref:System.Net.WebRequest> class throws a <xref:System.Net.WebException> when errors occur while accessing an Internet resource.</span></span> <span data-ttu-id="cee8a-111">属性是指示错误源的<xref:System.Net.WebExceptionStatus>值之一。 <xref:System.Net.WebException.Status%2A></span><span class="sxs-lookup"><span data-stu-id="cee8a-111">The <xref:System.Net.WebException.Status%2A> property is one of the <xref:System.Net.WebExceptionStatus> values that indicates the source of the error.</span></span> <span data-ttu-id="cee8a-112">当<xref:System.Net.WebException.Status%2A>为<xref:System.Net.WebExceptionStatus.ProtocolError?displayProperty=nameWithType>时<xref:System.Net.WebResponse> ， <xref:System.Net.WebException.Response%2A>属性包含从 Internet 资源接收的。</span><span class="sxs-lookup"><span data-stu-id="cee8a-112">When <xref:System.Net.WebException.Status%2A> is <xref:System.Net.WebExceptionStatus.ProtocolError?displayProperty=nameWithType>, the <xref:System.Net.WebException.Response%2A> property contains the <xref:System.Net.WebResponse> received from the Internet resource.</span></span>  
  
 <span data-ttu-id="cee8a-113">由于类是类，因此<xref:System.Net.WebRequest.Create%2A> ，运行时实例的实际行为由方法返回的子代类确定。 <xref:System.Net.WebRequest>  `abstract` <xref:System.Net.WebRequest></span><span class="sxs-lookup"><span data-stu-id="cee8a-113">Because the <xref:System.Net.WebRequest> class is an `abstract` class, the actual behavior of <xref:System.Net.WebRequest> instances at run time is determined by the descendant class returned by <xref:System.Net.WebRequest.Create%2A> method.</span></span> <span data-ttu-id="cee8a-114">有关默认值和异常的详细信息，请参阅子代类的文档，例如<xref:System.Net.HttpWebRequest>和。 <xref:System.Net.FileWebRequest></span><span class="sxs-lookup"><span data-stu-id="cee8a-114">For more information about default values and exceptions, see the documentation for the descendant classes, such as <xref:System.Net.HttpWebRequest> and <xref:System.Net.FileWebRequest>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cee8a-115">使用方法初始化新<xref:System.Net.WebRequest>实例。 <xref:System.Net.WebRequest.Create%2A></span><span class="sxs-lookup"><span data-stu-id="cee8a-115">Use the <xref:System.Net.WebRequest.Create%2A> method to initialize new <xref:System.Net.WebRequest> instances.</span></span> <span data-ttu-id="cee8a-116">不要使用<xref:System.Net.WebRequest>构造函数。</span><span class="sxs-lookup"><span data-stu-id="cee8a-116">Do not use the <xref:System.Net.WebRequest> constructor.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cee8a-117">如果创建 WebRequest 对象的应用程序使用普通用户的凭据运行，则应用程序将不能访问本地计算机存储中安装的证书，除非用户已明确授予该用户的权限。</span><span class="sxs-lookup"><span data-stu-id="cee8a-117">If the application that creates the WebRequest object runs with the credentials of a Normal user, the application will not be able to access certificates installed in the local machine store unless permission has been explicitly given to the user to do so.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cee8a-118">下面的示例演示如何创建<xref:System.Net.WebRequest>实例并返回响应。</span><span class="sxs-lookup"><span data-stu-id="cee8a-118">The following example shows how to create a <xref:System.Net.WebRequest> instance and return the response.</span></span>  
  
 [!code-cpp[NclWebRequestSimple#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebRequestSimple/CPP/webrequestget.cpp#1)]
 [!code-csharp[NclWebRequestSimple#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebRequestSimple/CS/webrequestget.cs#1)]
 [!code-vb[NclWebRequestSimple#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebRequestSimple/VB/webrequestget.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Net.WebPermission"><span data-ttu-id="cee8a-119">访问请求的 URI 或请求重定向到的任何 URI。</span><span class="sxs-lookup"><span data-stu-id="cee8a-119">To access the requested URI or any URI that the request is redirected to.</span></span> <span data-ttu-id="cee8a-120">关联枚举：<see cref="F:System.Net.NetworkAccess.Connect" />。</span><span class="sxs-lookup"><span data-stu-id="cee8a-120">Associated enumeration: <see cref="F:System.Net.NetworkAccess.Connect" />.</span></span></permission>
    <block subset="none" type="overrides"><para><span data-ttu-id="cee8a-121">当<see cref="T:System.Net.WebRequest" />从继承时，必须重写以下成员： <see cref="P:System.Net.WebRequest.PreAuthenticate" /> <see cref="P:System.Net.WebRequest.ContentType" /> <see cref="P:System.Net.WebRequest.Headers" /> <see cref="P:System.Net.WebRequest.ContentLength" /> <see cref="P:System.Net.WebRequest.Method" />  <see cref="P:System.Net.WebRequest.RequestUri" /> 、、 、、 <see cref="M:System.Net.WebRequest.GetRequestStream" /> 、、 <see cref="M:System.Net.WebRequest.EndGetRequestStream(System.IAsyncResult)" />  、、、 <see cref="M:System.Net.WebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" /> <see cref="P:System.Net.WebRequest.Credentials" />、 <see cref="M:System.Net.WebRequest.GetResponse" />、 <see cref="M:System.Net.WebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />和。 <see cref="M:System.Net.WebRequest.EndGetResponse(System.IAsyncResult)" /></span><span class="sxs-lookup"><span data-stu-id="cee8a-121">When you inherit from <see cref="T:System.Net.WebRequest" />, you must override the following members: <see cref="P:System.Net.WebRequest.Method" />, <see cref="P:System.Net.WebRequest.RequestUri" />, <see cref="P:System.Net.WebRequest.Headers" />, <see cref="P:System.Net.WebRequest.ContentLength" />, <see cref="P:System.Net.WebRequest.ContentType" />, <see cref="P:System.Net.WebRequest.Credentials" />, <see cref="P:System.Net.WebRequest.PreAuthenticate" />, <see cref="M:System.Net.WebRequest.GetRequestStream" />, <see cref="M:System.Net.WebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />, <see cref="M:System.Net.WebRequest.EndGetRequestStream(System.IAsyncResult)" />, <see cref="M:System.Net.WebRequest.GetResponse" />, <see cref="M:System.Net.WebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />, and <see cref="M:System.Net.WebRequest.EndGetResponse(System.IAsyncResult)" />.</span></span> <span data-ttu-id="cee8a-122">此外，还必须提供<see cref="T:System.Net.IWebRequestCreate" />接口的实现，该实现定义调用<see cref="M:System.Net.WebRequest.Create(System.Uri)" />时使用<see cref="M:System.Net.IWebRequestCreate.Create(System.Uri)" />的方法。</span><span class="sxs-lookup"><span data-stu-id="cee8a-122">In addition, you must provide an implementation of the <see cref="T:System.Net.IWebRequestCreate" /> interface, which defines the <see cref="M:System.Net.IWebRequestCreate.Create(System.Uri)" /> method used when you call <see cref="M:System.Net.WebRequest.Create(System.Uri)" />.</span></span> <span data-ttu-id="cee8a-123">您必须<see cref="T:System.Net.IWebRequestCreate" /> <see cref="M:System.Net.WebRequest.RegisterPrefix(System.String,System.Net.IWebRequestCreate)" />使用方法或配置文件来注册实现接口的类。</span><span class="sxs-lookup"><span data-stu-id="cee8a-123">You must register the class that implements the <see cref="T:System.Net.IWebRequestCreate" /> interface, using the <see cref="M:System.Net.WebRequest.RegisterPrefix(System.String,System.Net.IWebRequestCreate)" /> method or the configuration file.</span></span></para></block>
    <altmember cref="T:System.Net.HttpWebRequest" />
    <related type="Article" href="~/docs/framework/network-programming/requesting-data.md"><span data-ttu-id="cee8a-124">正在请求数据...</span><span class="sxs-lookup"><span data-stu-id="cee8a-124">Requesting Data</span></span></related>
    <related type="Article" href="~/docs/framework/network-programming/programming-pluggable-protocols.md"><span data-ttu-id="cee8a-125">对可插入协议进行编程</span><span class="sxs-lookup"><span data-stu-id="cee8a-125">Programming Pluggable Protocols</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cee8a-126">初始化 <see cref="T:System.Net.WebRequest" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="cee8a-126">Initializes a new instance of the <see cref="T:System.Net.WebRequest" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WebRequest ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WebRequest();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cee8a-127">初始化 <see cref="T:System.Net.WebRequest" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="cee8a-127">Initializes a new instance of the <see cref="T:System.Net.WebRequest" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cee8a-128">使用方法初始化新<xref:System.Net.WebRequest>实例。 <xref:System.Net.WebRequest.Create%2A></span><span class="sxs-lookup"><span data-stu-id="cee8a-128">Use the <xref:System.Net.WebRequest.Create%2A> method to initialize new <xref:System.Net.WebRequest> instances.</span></span> <span data-ttu-id="cee8a-129">不要使用构造函数。</span><span class="sxs-lookup"><span data-stu-id="cee8a-129">Do not use the constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cee8a-130">下面的示例演示如何通过在<xref:System.Net.WebRequest> <xref:System.Net.WebRequest>类上<xref:System.Net.WebRequest.Create%2A>调用方法来创建实例。</span><span class="sxs-lookup"><span data-stu-id="cee8a-130">The following example shows how to create a <xref:System.Net.WebRequest> instance by calling the <xref:System.Net.WebRequest.Create%2A> method on the <xref:System.Net.WebRequest> class.</span></span>  
  
 [!code-cpp[Classic WebRequest.WebRequest Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic WebRequest.WebRequest Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebRequest.WebRequest Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic WebRequest.WebRequest Example/CS/source.cs#1)]
 [!code-vb[Classic WebRequest.WebRequest Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic WebRequest.WebRequest Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WebRequest (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype System.Runtime.Serialization.StreamingContext streamingContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WebRequest(System::Runtime::Serialization::SerializationInfo ^ serializationInfo, System::Runtime::Serialization::StreamingContext streamingContext);" />
      <MemberSignature Language="F#" Value="new System.Net.WebRequest : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Net.WebRequest" Usage="new System.Net.WebRequest (serializationInfo, streamingContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="streamingContext" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="serializationInfo"><span data-ttu-id="cee8a-131"><see cref="T:System.Runtime.Serialization.SerializationInfo" />，包含序列化新的 <see cref="T:System.Net.WebRequest" /> 实例所需的信息。</span><span class="sxs-lookup"><span data-stu-id="cee8a-131">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that contains the information required to serialize the new <see cref="T:System.Net.WebRequest" /> instance.</span></span></param>
        <param name="streamingContext"><span data-ttu-id="cee8a-132"><see cref="T:System.Runtime.Serialization.StreamingContext" />，指示与新的 <see cref="T:System.Net.WebRequest" /> 实例关联的序列化流的源。</span><span class="sxs-lookup"><span data-stu-id="cee8a-132">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> that indicates the source of the serialized stream associated with the new <see cref="T:System.Net.WebRequest" /> instance.</span></span></param>
        <summary><span data-ttu-id="cee8a-133">从 <see cref="T:System.Net.WebRequest" /> 和 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 类的指定实例初始化 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="cee8a-133">Initializes a new instance of the <see cref="T:System.Net.WebRequest" /> class from the specified instances of the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> and <see cref="T:System.Runtime.Serialization.StreamingContext" /> classes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cee8a-134">当由子类实现时，此构造函数实现<xref:System.Runtime.Serialization.ISerializable> <xref:System.Net.WebRequest>子代的接口。</span><span class="sxs-lookup"><span data-stu-id="cee8a-134">When implemented by a descendant class, this constructor implements the <xref:System.Runtime.Serialization.ISerializable> interface for the <xref:System.Net.WebRequest> descendant.</span></span>  
  
 <span data-ttu-id="cee8a-135">请注意，在使用序列化时，应用程序必须在完全信任模式下运行。</span><span class="sxs-lookup"><span data-stu-id="cee8a-135">Notice that an application must run in full trust mode when using serialization.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="cee8a-136">当未在子类中重写该构造函数时，尝试访问该构造函数。</span><span class="sxs-lookup"><span data-stu-id="cee8a-136">Any attempt is made to access the constructor, when the constructor is not overridden in a descendant class.</span></span></exception>
        <related type="Article" href="~/docs/standard/serialization/xml-and-soap-serialization.md"><span data-ttu-id="cee8a-137">XML 和 SOAP 序列化</span><span class="sxs-lookup"><span data-stu-id="cee8a-137">XML and SOAP Serialization</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public virtual void Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.Abort" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Abort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Abort();" />
      <MemberSignature Language="F#" Value="abstract member Abort : unit -&gt; unit&#xA;override this.Abort : unit -&gt; unit" Usage="webRequest.Abort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cee8a-138">中止请求。</span><span class="sxs-lookup"><span data-stu-id="cee8a-138">Aborts the request.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cee8a-139"><xref:System.Net.WebRequest.Abort%2A>方法取消 <xref:System.Net.WebRequest.BeginGetResponse%2A> 通过方法启动的对 Internet 资源的异步请求。</span><span class="sxs-lookup"><span data-stu-id="cee8a-139">The <xref:System.Net.WebRequest.Abort%2A> method cancels asynchronous requests to Internet resources started with the <xref:System.Net.WebRequest.BeginGetResponse%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cee8a-140">类是一个 `abstract` 类。 <xref:System.Net.WebRequest></span><span class="sxs-lookup"><span data-stu-id="cee8a-140">The <xref:System.Net.WebRequest> class is an `abstract` class.</span></span> <span data-ttu-id="cee8a-141"><xref:System.Net.WebRequest>实例在运行时的实际行为由<xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType>方法返回的子代类确定。</span><span class="sxs-lookup"><span data-stu-id="cee8a-141">The actual behavior of <xref:System.Net.WebRequest> instances at run time is determined by the descendant class returned by the <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="cee8a-142">有关默认值和异常的详细信息，请参阅子代类的文档，例如<xref:System.Net.HttpWebRequest>和。 <xref:System.Net.FileWebRequest></span><span class="sxs-lookup"><span data-stu-id="cee8a-142">For more information about default values and exceptions, see the documentation for the descendant classes, such as <xref:System.Net.HttpWebRequest> and <xref:System.Net.FileWebRequest>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="cee8a-143">当未在子类中重写该方法时，试图访问该方法。</span><span class="sxs-lookup"><span data-stu-id="cee8a-143">Any attempt is made to access the method, when the method is not overridden in a descendant class.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AuthenticationLevel">
      <MemberSignature Language="C#" Value="public System.Net.Security.AuthenticationLevel AuthenticationLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Security.AuthenticationLevel AuthenticationLevel" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.AuthenticationLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property AuthenticationLevel As AuthenticationLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Security::AuthenticationLevel AuthenticationLevel { System::Net::Security::AuthenticationLevel get(); void set(System::Net::Security::AuthenticationLevel value); };" />
      <MemberSignature Language="F#" Value="member this.AuthenticationLevel : System.Net.Security.AuthenticationLevel with get, set" Usage="System.Net.WebRequest.AuthenticationLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Security.AuthenticationLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cee8a-144">获取或设置用于此请求的身份验证和模拟的级别。</span><span class="sxs-lookup"><span data-stu-id="cee8a-144">Gets or sets values indicating the level of authentication and impersonation used for this request.</span></span></summary>
        <value><span data-ttu-id="cee8a-145"><see cref="T:System.Net.Security.AuthenticationLevel" /> 值的按位组合。</span><span class="sxs-lookup"><span data-stu-id="cee8a-145">A bitwise combination of the <see cref="T:System.Net.Security.AuthenticationLevel" /> values.</span></span> <span data-ttu-id="cee8a-146">默认值为 <see cref="F:System.Net.Security.AuthenticationLevel.MutualAuthRequested" />。</span><span class="sxs-lookup"><span data-stu-id="cee8a-146">The default value is <see cref="F:System.Net.Security.AuthenticationLevel.MutualAuthRequested" />.</span></span>  
  
<span data-ttu-id="cee8a-147">在相互身份验证中，客户端和服务器双方都出示凭据以确定其身份。</span><span class="sxs-lookup"><span data-stu-id="cee8a-147">In mutual authentication, both the client and server present credentials to establish their identity.</span></span> <span data-ttu-id="cee8a-148"><see cref="F:System.Net.Security.AuthenticationLevel.MutualAuthRequired" /> 和 <see cref="F:System.Net.Security.AuthenticationLevel.MutualAuthRequested" /> 值与 Kerberos 身份验证有关。</span><span class="sxs-lookup"><span data-stu-id="cee8a-148">The <see cref="F:System.Net.Security.AuthenticationLevel.MutualAuthRequired" /> and <see cref="F:System.Net.Security.AuthenticationLevel.MutualAuthRequested" /> values are relevant for Kerberos authentication.</span></span> <span data-ttu-id="cee8a-149">可以直接支持 Kerberos 身份验证，也可以仅在使用 Negotiate 安全协议选择实际的安全协议时使用该身份验证。</span><span class="sxs-lookup"><span data-stu-id="cee8a-149">Kerberos authentication can be supported directly, or can be used if the Negotiate security protocol is used to select the actual security protocol.</span></span> <span data-ttu-id="cee8a-150">有关身份验证协议的详细信息，请参阅[Internet 身份验证](https://msdn.microsoft.com/library/d342e87c-f672-4660-a513-41a2f2b80c4a)。</span><span class="sxs-lookup"><span data-stu-id="cee8a-150">For more information about authentication protocols, see [Internet Authentication](https://msdn.microsoft.com/library/d342e87c-f672-4660-a513-41a2f2b80c4a).</span></span>  
  
<span data-ttu-id="cee8a-151">若要确定相互身份验证是否发生，请检查 <see cref="P:System.Net.WebResponse.IsMutuallyAuthenticated" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="cee8a-151">To determine whether mutual authentication occurred, check the <see cref="P:System.Net.WebResponse.IsMutuallyAuthenticated" /> property.</span></span>  
  
<span data-ttu-id="cee8a-152">如果您指定了 <see cref="F:System.Net.Security.AuthenticationLevel.MutualAuthRequired" /> 身份验证标志值，而未发生相互身份验证，则应用程序将收到一个带有 <see cref="T:System.IO.IOException" /> 内部异常的 <see cref="T:System.Net.ProtocolViolationException" />，指示相互身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="cee8a-152">If you specify the <see cref="F:System.Net.Security.AuthenticationLevel.MutualAuthRequired" /> authentication flag value and mutual authentication does not occur, your application will receive an <see cref="T:System.IO.IOException" /> with a <see cref="T:System.Net.ProtocolViolationException" /> inner exception indicating that mutual authentication failed.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cee8a-153">下面的代码示例设置此属性的值。</span><span class="sxs-lookup"><span data-stu-id="cee8a-153">The following code example sets the value of this property.</span></span>  
  
 [!code-cpp[NclCredPolicy#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCredPolicy/CPP/NCLCredPolicy.cpp#1)]
 [!code-csharp[NclCredPolicy#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCredPolicy/CS/websample.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginGetRequestStream">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginGetRequestStream (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginGetRequestStream(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginGetRequestStream (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginGetRequestStream(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginGetRequestStream : AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginGetRequestStream : AsyncCallback * obj -&gt; IAsyncResult" Usage="webRequest.BeginGetRequestStream (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" Index="0" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="state" Type="System.Object" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="cee8a-154"><see cref="T:System.AsyncCallback" /> 委托。</span><span class="sxs-lookup"><span data-stu-id="cee8a-154">The <see cref="T:System.AsyncCallback" /> delegate.</span></span></param>
        <param name="state"><span data-ttu-id="cee8a-155">包含此异步请求的状态信息的对象。</span><span class="sxs-lookup"><span data-stu-id="cee8a-155">An object containing state information for this asynchronous request.</span></span></param>
        <summary><span data-ttu-id="cee8a-156">当在子类中重写时，提供 <see cref="M:System.Net.WebRequest.GetRequestStream" /> 方法的异步版本。</span><span class="sxs-lookup"><span data-stu-id="cee8a-156">When overridden in a descendant class, provides an asynchronous version of the <see cref="M:System.Net.WebRequest.GetRequestStream" /> method.</span></span></summary>
        <returns><span data-ttu-id="cee8a-157">引用该异步请求的 <see cref="T:System.IAsyncResult" />。</span><span class="sxs-lookup"><span data-stu-id="cee8a-157">An <see cref="T:System.IAsyncResult" /> that references the asynchronous request.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cee8a-158"><xref:System.Net.WebRequest.BeginGetRequestStream%2A>方法启动对用于将数据发送到 Internet 资源的流的异步请求。</span><span class="sxs-lookup"><span data-stu-id="cee8a-158">The <xref:System.Net.WebRequest.BeginGetRequestStream%2A> method starts an asynchronous request for a stream used to send data to an Internet resource.</span></span> <span data-ttu-id="cee8a-159">实现<xref:System.AsyncCallback>委托的回调方法<xref:System.Net.WebRequest.EndGetRequestStream%2A>使用方法返回请求流。</span><span class="sxs-lookup"><span data-stu-id="cee8a-159">The callback method that implements the <xref:System.AsyncCallback> delegate uses the <xref:System.Net.WebRequest.EndGetRequestStream%2A> method to return the request stream.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cee8a-160">类是一个 `abstract` 类。 <xref:System.Net.WebRequest></span><span class="sxs-lookup"><span data-stu-id="cee8a-160">The <xref:System.Net.WebRequest> class is an `abstract` class.</span></span> <span data-ttu-id="cee8a-161"><xref:System.Net.WebRequest>实例在运行时的实际行为由<xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType>方法返回的子代类确定。</span><span class="sxs-lookup"><span data-stu-id="cee8a-161">The actual behavior of <xref:System.Net.WebRequest> instances at run time is determined by the descendant class returned by the <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="cee8a-162">有关默认值和异常的详细信息，请参阅子代类的文档，例如<xref:System.Net.HttpWebRequest>和。 <xref:System.Net.FileWebRequest></span><span class="sxs-lookup"><span data-stu-id="cee8a-162">For more information about default values and exceptions, see the documentation for the descendant classes, such as <xref:System.Net.HttpWebRequest> and <xref:System.Net.FileWebRequest>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cee8a-163">下面的示例使用<xref:System.Net.WebRequest.BeginGetRequestStream%2A>异步获取请求流。</span><span class="sxs-lookup"><span data-stu-id="cee8a-163">The following example uses the <xref:System.Net.WebRequest.BeginGetRequestStream%2A> to asynchronously obtain the request stream.</span></span>  
  
 [!code-cpp[WebRequest_BeginGetRequest#3](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_BeginGetRequest/CPP/webrequest_begingetrequest.cpp#3)]
 [!code-csharp[WebRequest_BeginGetRequest#3](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_BeginGetRequest/CS/webrequest_begingetrequest.cs#3)]
 [!code-vb[WebRequest_BeginGetRequest#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_BeginGetRequest/VB/webrequest_begingetrequest.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="cee8a-164">当未在子类中重写该方法时，试图访问该方法。</span><span class="sxs-lookup"><span data-stu-id="cee8a-164">Any attempt is made to access the method, when the method is not overridden in a descendant class.</span></span></exception>
        <altmember cref="M:System.Net.WebRequest.EndGetRequestStream(System.IAsyncResult)" />
        <related type="Article" href="~/docs/framework/network-programming/making-asynchronous-requests.md"><span data-ttu-id="cee8a-165">发出异步请求</span><span class="sxs-lookup"><span data-stu-id="cee8a-165">Making Asynchronous Requests</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BeginGetResponse">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginGetResponse (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginGetResponse(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginGetResponse (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginGetResponse(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginGetResponse : AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginGetResponse : AsyncCallback * obj -&gt; IAsyncResult" Usage="webRequest.BeginGetResponse (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" Index="0" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="state" Type="System.Object" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="cee8a-166"><see cref="T:System.AsyncCallback" /> 委托。</span><span class="sxs-lookup"><span data-stu-id="cee8a-166">The <see cref="T:System.AsyncCallback" /> delegate.</span></span></param>
        <param name="state"><span data-ttu-id="cee8a-167">包含此异步请求的状态信息的对象。</span><span class="sxs-lookup"><span data-stu-id="cee8a-167">An object containing state information for this asynchronous request.</span></span></param>
        <summary><span data-ttu-id="cee8a-168">当在子类中被重写时，开始对 Internet 资源的异步请求。</span><span class="sxs-lookup"><span data-stu-id="cee8a-168">When overridden in a descendant class, begins an asynchronous request for an Internet resource.</span></span></summary>
        <returns><span data-ttu-id="cee8a-169">引用该异步请求的 <see cref="T:System.IAsyncResult" />。</span><span class="sxs-lookup"><span data-stu-id="cee8a-169">An <see cref="T:System.IAsyncResult" /> that references the asynchronous request.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cee8a-170"><xref:System.Net.WebRequest.BeginGetResponse%2A>方法启动对响应的异步请求。</span><span class="sxs-lookup"><span data-stu-id="cee8a-170">The <xref:System.Net.WebRequest.BeginGetResponse%2A> method starts an asynchronous request for a response.</span></span> <span data-ttu-id="cee8a-171">实现<xref:System.AsyncCallback>委托的回调方法<xref:System.Net.WebRequest.EndGetResponse%2A>使用方法<xref:System.Net.WebResponse>从 Internet 资源返回。</span><span class="sxs-lookup"><span data-stu-id="cee8a-171">The callback method that implements the <xref:System.AsyncCallback> delegate uses the <xref:System.Net.WebRequest.EndGetResponse%2A> method to return the <xref:System.Net.WebResponse> from the Internet resource.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cee8a-172">类是一个 `abstract` 类。 <xref:System.Net.WebRequest></span><span class="sxs-lookup"><span data-stu-id="cee8a-172">The <xref:System.Net.WebRequest> class is an `abstract` class.</span></span> <span data-ttu-id="cee8a-173"><xref:System.Net.WebRequest>实例在运行时的实际行为由<xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType>方法返回的子代类确定。</span><span class="sxs-lookup"><span data-stu-id="cee8a-173">The actual behavior of <xref:System.Net.WebRequest> instances at run time is determined by the descendant class returned by the <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="cee8a-174">有关默认值和异常的详细信息，请参阅子代类的文档，例如<xref:System.Net.HttpWebRequest>和。 <xref:System.Net.FileWebRequest></span><span class="sxs-lookup"><span data-stu-id="cee8a-174">For more information about default values and exceptions, see the documentation for the descendant classes, such as <xref:System.Net.HttpWebRequest> and <xref:System.Net.FileWebRequest>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cee8a-175">如果引发 WebException，请使用异常的<xref:System.Net.WebException.Response%2A>和<xref:System.Net.WebException.Status%2A>属性来确定来自服务器的响应。</span><span class="sxs-lookup"><span data-stu-id="cee8a-175">If a WebException is thrown, use the <xref:System.Net.WebException.Response%2A> and <xref:System.Net.WebException.Status%2A> properties of the exception to determine the response from the server.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cee8a-176">下面的示例使用<xref:System.Net.WebRequest.BeginGetResponse%2A>异步请求目标资源。</span><span class="sxs-lookup"><span data-stu-id="cee8a-176">The following example uses <xref:System.Net.WebRequest.BeginGetResponse%2A> to asynchronously request the target resource.</span></span> <span data-ttu-id="cee8a-177">获取资源后，将执行指定的回叫方法。</span><span class="sxs-lookup"><span data-stu-id="cee8a-177">When the resource has been obtained, the specified callback method will be executed.</span></span>  
  
 [!code-cpp[WebRequest_BeginGetResponse#2](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_BeginGetResponse/CPP/webrequest_begingetresponse.cpp#2)]
 [!code-csharp[WebRequest_BeginGetResponse#2](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_BeginGetResponse/CS/webrequest_begingetresponse.cs#2)]
 [!code-vb[WebRequest_BeginGetResponse#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_BeginGetResponse/VB/webrequest_begingetresponse.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="cee8a-178">当未在子类中重写该方法时，试图访问该方法。</span><span class="sxs-lookup"><span data-stu-id="cee8a-178">Any attempt is made to access the method, when the method is not overridden in a descendant class.</span></span></exception>
        <altmember cref="M:System.Net.WebRequest.EndGetResponse(System.IAsyncResult)" />
        <altmember cref="M:System.Net.WebRequest.GetResponse" />
        <related type="Article" href="~/docs/framework/network-programming/making-asynchronous-requests.md"><span data-ttu-id="cee8a-179">发出异步请求</span><span class="sxs-lookup"><span data-stu-id="cee8a-179">Making Asynchronous Requests</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CachePolicy">
      <MemberSignature Language="C#" Value="public virtual System.Net.Cache.RequestCachePolicy CachePolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Cache.RequestCachePolicy CachePolicy" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.CachePolicy" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CachePolicy As RequestCachePolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::Cache::RequestCachePolicy ^ CachePolicy { System::Net::Cache::RequestCachePolicy ^ get(); void set(System::Net::Cache::RequestCachePolicy ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CachePolicy : System.Net.Cache.RequestCachePolicy with get, set" Usage="System.Net.WebRequest.CachePolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Cache.RequestCachePolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cee8a-180">获取或设置此请求的缓存策略。</span><span class="sxs-lookup"><span data-stu-id="cee8a-180">Gets or sets the cache policy for this request.</span></span></summary>
        <value><span data-ttu-id="cee8a-181">定义缓存策略的 <see cref="T:System.Net.Cache.RequestCachePolicy" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="cee8a-181">A <see cref="T:System.Net.Cache.RequestCachePolicy" /> object that defines a cache policy.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cee8a-182">缓存中当前缓存策略和请求的资源的状态确定是否可以从缓存中检索响应。</span><span class="sxs-lookup"><span data-stu-id="cee8a-182">The current cache policy and the presence of the requested resource in the cache determine whether a response can be retrieved from the cache.</span></span> <span data-ttu-id="cee8a-183">使用缓存的响应通常会提高应用程序的性能，但存在缓存中的响应与服务器上的响应不匹配的风险。</span><span class="sxs-lookup"><span data-stu-id="cee8a-183">Using cached responses usually improves application performance, but there is a risk that the response in the cache does not match the response on the server.</span></span>  
  
 <span data-ttu-id="cee8a-184">默认缓存策略可以在 machine.config 配置文件中指定，也可以通过为使用超<xref:System.Net.HttpWebRequest.DefaultCachePolicy%2A>文本传输协议（HTTP）或安全超文本传输协议（HTTPS） URI 方案的请求设置属性来指定。</span><span class="sxs-lookup"><span data-stu-id="cee8a-184">Default cache policy can be specified in the Machine.config configuration file or by setting the <xref:System.Net.HttpWebRequest.DefaultCachePolicy%2A> property for requests that use the Hypertext Transfer Protocol (HTTP) or Secure Hypertext Transfer Protocol (HTTPS) URI scheme.</span></span>  
  
 <span data-ttu-id="cee8a-185">如果资源的响应流已检索并读取到流的末尾，则仅将资源的副本添加到缓存中。</span><span class="sxs-lookup"><span data-stu-id="cee8a-185">A copy of a resource is only added to the cache if the response stream for the resource is retrieved and read to the end of the stream.</span></span> <span data-ttu-id="cee8a-186">因此，对同一资源的另一请求可能会使用缓存的副本，具体取决于此请求的缓存策略级别。</span><span class="sxs-lookup"><span data-stu-id="cee8a-186">So another request for the same resource could use a cached copy, depending on the cache policy level for this request.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cee8a-187">下面的代码示例演示如何为 Web 请求设置缓存策略。</span><span class="sxs-lookup"><span data-stu-id="cee8a-187">The following code example demonstrates setting the cache policy for a Web request.</span></span>  
  
 [!code-cpp[NCLSimpleCache#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSimpleCache/CPP/NCLSimpleCache.cpp#2)]
 [!code-csharp[NCLSimpleCache#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSimpleCache/CS/example.cs#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Cache.RequestCachePolicy" />
        <altmember cref="T:System.Net.Cache.HttpRequestCacheLevel" />
        <altmember cref="T:System.Net.Cache.RequestCacheLevel" />
        <altmember cref="P:System.Net.HttpWebRequest.DefaultCachePolicy" />
        <altmember cref="P:System.Net.WebRequest.DefaultCachePolicy" />
      </Docs>
    </Member>
    <Member MemberName="ConnectionGroupName">
      <MemberSignature Language="C#" Value="public virtual string ConnectionGroupName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectionGroupName" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.ConnectionGroupName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ConnectionGroupName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ConnectionGroupName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConnectionGroupName : string with get, set" Usage="System.Net.WebRequest.ConnectionGroupName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cee8a-188">当在子类中重写时，获取或设置请求的连接组的名称。</span><span class="sxs-lookup"><span data-stu-id="cee8a-188">When overridden in a descendant class, gets or sets the name of the connection group for the request.</span></span></summary>
        <value><span data-ttu-id="cee8a-189">请求的连接组的名称。</span><span class="sxs-lookup"><span data-stu-id="cee8a-189">The name of the connection group for the request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cee8a-190"><xref:System.Net.WebRequest.ConnectionGroupName%2A>属性将应用程序内的特定请求关联到一个或多个连接池。</span><span class="sxs-lookup"><span data-stu-id="cee8a-190">The <xref:System.Net.WebRequest.ConnectionGroupName%2A> property associates specific requests within an application to one or more connection pools.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cee8a-191">类是一个 `abstract` 类。 <xref:System.Net.WebRequest></span><span class="sxs-lookup"><span data-stu-id="cee8a-191">The <xref:System.Net.WebRequest> class is an `abstract` class.</span></span> <span data-ttu-id="cee8a-192"><xref:System.Net.WebRequest>实例在运行时的实际行为由<xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType>方法返回的子代类确定。</span><span class="sxs-lookup"><span data-stu-id="cee8a-192">The actual behavior of <xref:System.Net.WebRequest> instances at run time is determined by the descendant class returned by the <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="cee8a-193">有关默认值和异常的详细信息，请参阅子代类的文档，例如<xref:System.Net.HttpWebRequest>和。 <xref:System.Net.FileWebRequest></span><span class="sxs-lookup"><span data-stu-id="cee8a-193">For more information about default values and exceptions, see the documentation for the descendant classes, such as <xref:System.Net.HttpWebRequest> and <xref:System.Net.FileWebRequest>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="cee8a-194">当未在子类中重写该属性时，试图获取或设置该属性。</span><span class="sxs-lookup"><span data-stu-id="cee8a-194">Any attempt is made to get or set the property, when the property is not overridden in a descendant class.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="cee8a-195"><see cref="P:System.Net.WebRequest.ConnectionGroupName" />属性通常会将共享一组凭据的一组请求与 Internet 资源关联，以避免潜在的安全问题。</span><span class="sxs-lookup"><span data-stu-id="cee8a-195">The <see cref="P:System.Net.WebRequest.ConnectionGroupName" /> property typically associates a group of requests that share a set of credentials with a connection to an Internet resource to avoid potential security failures.</span></span></para></block>
        <altmember cref="P:System.Net.Configuration.ConnectionManagementElement.MaxConnection" />
        <altmember cref="P:System.Net.HttpWebRequest.ConnectionGroupName" />
        <related type="Article" href="~/docs/framework/network-programming/connection-grouping.md"><span data-ttu-id="cee8a-196">连接分组</span><span class="sxs-lookup"><span data-stu-id="cee8a-196">Connection Grouping</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ContentLength">
      <MemberSignature Language="C#" Value="public virtual long ContentLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ContentLength" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.ContentLength" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ContentLength As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long ContentLength { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.ContentLength : int64 with get, set" Usage="System.Net.WebRequest.ContentLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cee8a-197">当在子类中被重写时，获取或设置所发送的请求数据的内容长度。</span><span class="sxs-lookup"><span data-stu-id="cee8a-197">When overridden in a descendant class, gets or sets the content length of the request data being sent.</span></span></summary>
        <value><span data-ttu-id="cee8a-198">发送的请求数据的字节数。</span><span class="sxs-lookup"><span data-stu-id="cee8a-198">The number of bytes of request data being sent.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cee8a-199">属性包含<xref:System.Net.WebRequest>实例发送到 Internet 资源的数据的字节数。 <xref:System.Net.WebRequest.ContentLength%2A></span><span class="sxs-lookup"><span data-stu-id="cee8a-199">The <xref:System.Net.WebRequest.ContentLength%2A> property contains the number of bytes of data sent to the Internet resource by the <xref:System.Net.WebRequest> instance.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cee8a-200">类是一个 `abstract` 类。 <xref:System.Net.WebRequest></span><span class="sxs-lookup"><span data-stu-id="cee8a-200">The <xref:System.Net.WebRequest> class is an `abstract` class.</span></span> <span data-ttu-id="cee8a-201"><xref:System.Net.WebRequest>实例在运行时的实际行为由<xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType>方法返回的子代类确定。</span><span class="sxs-lookup"><span data-stu-id="cee8a-201">The actual behavior of <xref:System.Net.WebRequest> instances at run time is determined by the descendant class returned by the <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="cee8a-202">有关默认值和异常的详细信息，请参阅子代类的文档，例如<xref:System.Net.HttpWebRequest>和。 <xref:System.Net.FileWebRequest></span><span class="sxs-lookup"><span data-stu-id="cee8a-202">For more information about default values and exceptions, see the documentation for the descendant classes, such as <xref:System.Net.HttpWebRequest> and <xref:System.Net.FileWebRequest>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cee8a-203">下面的示例将<xref:System.Net.WebRequest.ContentLength%2A>属性设置为输出字节缓冲区中的字节数。</span><span class="sxs-lookup"><span data-stu-id="cee8a-203">The following example sets the <xref:System.Net.WebRequest.ContentLength%2A> property to the amount of bytes in the outgoing byte buffer.</span></span>  
  
 [!code-cpp[WebRequest_ContentType#4](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_ContentType/CPP/webrequest_contenttype.cpp#4)]
 [!code-csharp[WebRequest_ContentType#4](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_ContentType/CS/webrequest_contenttype.cs#4)]
 [!code-vb[WebRequest_ContentType#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_ContentType/VB/webrequest_contenttype.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="cee8a-204">当未在子类中重写该属性时，试图获取或设置该属性。</span><span class="sxs-lookup"><span data-stu-id="cee8a-204">Any attempt is made to get or set the property, when the property is not overridden in a descendant class.</span></span></exception>
        <altmember cref="P:System.Net.HttpWebRequest.ContentLength" />
      </Docs>
    </Member>
    <Member MemberName="ContentType">
      <MemberSignature Language="C#" Value="public virtual string ContentType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContentType" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.ContentType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ContentType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ContentType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContentType : string with get, set" Usage="System.Net.WebRequest.ContentType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cee8a-205">当在子类中被重写时，获取或设置所发送的请求数据的内容类型。</span><span class="sxs-lookup"><span data-stu-id="cee8a-205">When overridden in a descendant class, gets or sets the content type of the request data being sent.</span></span></summary>
        <value><span data-ttu-id="cee8a-206">请求数据的内容类型。</span><span class="sxs-lookup"><span data-stu-id="cee8a-206">The content type of the request data.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cee8a-207"><xref:System.Net.WebRequest.ContentType%2A>属性包含请求的媒体类型。</span><span class="sxs-lookup"><span data-stu-id="cee8a-207">The <xref:System.Net.WebRequest.ContentType%2A> property contains the media type of the request.</span></span> <span data-ttu-id="cee8a-208">这通常是内容的 MIME 编码。</span><span class="sxs-lookup"><span data-stu-id="cee8a-208">This is typically the MIME encoding of the content.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cee8a-209">类是一个 `abstract` 类。 <xref:System.Net.WebRequest></span><span class="sxs-lookup"><span data-stu-id="cee8a-209">The <xref:System.Net.WebRequest> class is an `abstract` class.</span></span> <span data-ttu-id="cee8a-210"><xref:System.Net.WebRequest>实例在运行时的实际行为由<xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType>方法返回的子代类确定。</span><span class="sxs-lookup"><span data-stu-id="cee8a-210">The actual behavior of <xref:System.Net.WebRequest> instances at run time is determined by the descendant class returned by the <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="cee8a-211">有关默认值和异常的详细信息，请参阅子代类的文档，例如<xref:System.Net.HttpWebRequest>和。 <xref:System.Net.FileWebRequest></span><span class="sxs-lookup"><span data-stu-id="cee8a-211">For more information about default values and exceptions, see the documentation for the descendant classes, such as <xref:System.Net.HttpWebRequest> and <xref:System.Net.FileWebRequest>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cee8a-212">下面的示例将<xref:System.Net.WebRequest.ContentType%2A>属性设置为适当的媒体类型。</span><span class="sxs-lookup"><span data-stu-id="cee8a-212">The following example sets the <xref:System.Net.WebRequest.ContentType%2A> property to the appropriate media type.</span></span>  
  
 [!code-cpp[WebRequest_ContentType#4](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_ContentType/CPP/webrequest_contenttype.cpp#4)]
 [!code-csharp[WebRequest_ContentType#4](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_ContentType/CS/webrequest_contenttype.cs#4)]
 [!code-vb[WebRequest_ContentType#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_ContentType/VB/webrequest_contenttype.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="cee8a-213">当未在子类中重写该属性时，试图获取或设置该属性。</span><span class="sxs-lookup"><span data-stu-id="cee8a-213">Any attempt is made to get or set the property, when the property is not overridden in a descendant class.</span></span></exception>
        <altmember cref="P:System.Net.HttpWebRequest.ContentType" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cee8a-214">初始化新的 <see cref="T:System.Net.WebRequest" />。</span><span class="sxs-lookup"><span data-stu-id="cee8a-214">Initializes a new <see cref="T:System.Net.WebRequest" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Net.WebRequest Create (string requestUriString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.WebRequest Create(string requestUriString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.Create(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (requestUriString As String) As WebRequest" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::WebRequest ^ Create(System::String ^ requestUriString);" />
      <MemberSignature Language="F#" Value="static member Create : string -&gt; System.Net.WebRequest" Usage="System.Net.WebRequest.Create requestUriString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUriString" Type="System.String" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="requestUriString"><span data-ttu-id="cee8a-215">标识 Internet 资源的 URI。</span><span class="sxs-lookup"><span data-stu-id="cee8a-215">The URI that identifies the Internet resource.</span></span></param>
        <summary><span data-ttu-id="cee8a-216">为指定的 URI 方案初始化新的 <see cref="T:System.Net.WebRequest" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="cee8a-216">Initializes a new <see cref="T:System.Net.WebRequest" /> instance for the specified URI scheme.</span></span></summary>
        <returns><span data-ttu-id="cee8a-217">特定 URI 方案的 <see cref="T:System.Net.WebRequest" /> 子代。</span><span class="sxs-lookup"><span data-stu-id="cee8a-217">A <see cref="T:System.Net.WebRequest" /> descendant for the specific URI scheme.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cee8a-218">方法返回在运行时确定为<xref:System.Net.WebRequest>的最接近注册匹配项`requestUri`的类的后代。 <xref:System.Net.WebRequest.Create%2A></span><span class="sxs-lookup"><span data-stu-id="cee8a-218">The <xref:System.Net.WebRequest.Create%2A> method returns a descendant of the <xref:System.Net.WebRequest> class determined at run time as the closest registered match for `requestUri`.</span></span>  
  
 <span data-ttu-id="cee8a-219">例如，当 URI 以`http://`或`https://` `requestUri`开头时， <xref:System.Net.HttpWebRequest>将返回<xref:System.Net.WebRequest.Create%2A>。</span><span class="sxs-lookup"><span data-stu-id="cee8a-219">For example, when a URI beginning with `http://` or `https://` is passed in `requestUri`, an <xref:System.Net.HttpWebRequest> is returned by <xref:System.Net.WebRequest.Create%2A>.</span></span> <span data-ttu-id="cee8a-220">如果改为传递以`ftp://`开头的 URI，则<xref:System.Net.WebRequest.Create%2A>该方法将返回<xref:System.Net.FtpWebRequest>实例。</span><span class="sxs-lookup"><span data-stu-id="cee8a-220">If a URI beginning with `ftp://` is passed instead, the <xref:System.Net.WebRequest.Create%2A> method will return a <xref:System.Net.FtpWebRequest> instance.</span></span> <span data-ttu-id="cee8a-221">如果改为传递以`file://`开头的 URI，则<xref:System.Net.WebRequest.Create%2A>该方法将返回<xref:System.Net.FileWebRequest>实例。</span><span class="sxs-lookup"><span data-stu-id="cee8a-221">If a URI beginning with `file://` is passed instead, the <xref:System.Net.WebRequest.Create%2A> method will return a <xref:System.Net.FileWebRequest> instance.</span></span>  
  
 <span data-ttu-id="cee8a-222">已注册的预注册的预留类型包括：</span><span class="sxs-lookup"><span data-stu-id="cee8a-222">The pre-registered reserve types already registered include the following:</span></span>  
  
-   `http://`  
  
-   `https://`  
  
-   `ftp://`  
  
-   `file://`  
  
 <span data-ttu-id="cee8a-223">.Net 包括对`http://`、 `https://`、 `ftp://`和`file://` URI 方案的支持。</span><span class="sxs-lookup"><span data-stu-id="cee8a-223">.NET includes support for the `http://`, `https://`, `ftp://`, and `file://` URI schemes.</span></span> <span data-ttu-id="cee8a-224">用方法注册自定义<xref:System.Net.WebRequest>子代来处理其他请求。 <xref:System.Net.WebRequest.RegisterPrefix%2A></span><span class="sxs-lookup"><span data-stu-id="cee8a-224">Custom <xref:System.Net.WebRequest> descendants to handle other requests are registered with the <xref:System.Net.WebRequest.RegisterPrefix%2A> method.</span></span>  
  
 <span data-ttu-id="cee8a-225">方法使用参数创建它传递给新<xref:System.Net.WebRequest>的实例。 <xref:System.Uri>  `requestUriString` <xref:System.Net.WebRequest.Create%2A></span><span class="sxs-lookup"><span data-stu-id="cee8a-225">The <xref:System.Net.WebRequest.Create%2A> method uses the `requestUriString` parameter to create a <xref:System.Uri> instance that it passes to the new <xref:System.Net.WebRequest>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cee8a-226">当你在应用程序中启用网络跟踪后，此成员将输出跟踪信息。</span><span class="sxs-lookup"><span data-stu-id="cee8a-226">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="cee8a-227">有关详细信息，请参阅[.NET Framework 中的网络跟踪](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="cee8a-227">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>
  
   
  
## Examples  
 <span data-ttu-id="cee8a-228">下面的示例使用<xref:System.Net.WebRequest.Create%2A> <xref:System.Net.HttpWebRequest>实例化实例。</span><span class="sxs-lookup"><span data-stu-id="cee8a-228">The following example uses <xref:System.Net.WebRequest.Create%2A> to instantiate an <xref:System.Net.HttpWebRequest> instance.</span></span> <span data-ttu-id="cee8a-229">表示目标 URL 的字符串用作构造函数参数。</span><span class="sxs-lookup"><span data-stu-id="cee8a-229">A string representing the target URL is used as the constructor parameter.</span></span>  
  
 [!code-cpp[WebResponse_ResponseUri#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebResponse_ResponseUri/CPP/webresponse_responseuri.cpp#1)]
 [!code-csharp[WebResponse_ResponseUri#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebResponse_ResponseUri/CS/webresponse_responseuri.cs#1)]
 [!code-vb[WebResponse_ResponseUri#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebResponse_ResponseUri/VB/webresponse_responseuri.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="cee8a-230"><paramref name="requestUriString" /> 中指定的请求方案尚未注册。</span><span class="sxs-lookup"><span data-stu-id="cee8a-230">The request scheme specified in <paramref name="requestUriString" /> has not been registered.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cee8a-231"><paramref name="requestUriString" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="cee8a-231"><paramref name="requestUriString" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="cee8a-232">调用方没有连接到请求的 URI 或请求重定向到的 URI 的 <see cref="T:System.Net.WebPermissionAttribute" /> 权限。</span><span class="sxs-lookup"><span data-stu-id="cee8a-232">The caller does not have <see cref="T:System.Net.WebPermissionAttribute" /> permission to connect to the requested URI or a URI that the request is redirected to.</span></span></exception>
        <exception cref="T:System.UriFormatException"><block subset="none" type="note">
            <para>  
 <span data-ttu-id="cee8a-233">在<see href="https://go.microsoft.com/fwlink/?LinkID=247912">适用于 Windows 应用商店应用的 .NET</see> 或<see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">可移植类库</see>中，改为捕获基类异常 <see cref="T:System.FormatException" />。</span><span class="sxs-lookup"><span data-stu-id="cee8a-233">In the <see href="https://go.microsoft.com/fwlink/?LinkID=247912">.NET for Windows Store apps</see> or the <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">Portable Class Library</see>, catch the base class exception, <see cref="T:System.FormatException" />, instead.</span></span>  
  
</para>
          </block>  
  
 <span data-ttu-id="cee8a-234"><paramref name="requestUriString" /> 中指定的 URI 不是有效的 URI。</span><span class="sxs-lookup"><span data-stu-id="cee8a-234">The URI specified in <paramref name="requestUriString" /> is not a valid URI.</span></span></exception>
        <related type="Article" href="~/docs/framework/network-programming/programming-pluggable-protocols.md"><span data-ttu-id="cee8a-235">对可插入协议进行编程</span><span class="sxs-lookup"><span data-stu-id="cee8a-235">Programming Pluggable Protocols</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Net.WebRequest Create (Uri requestUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.WebRequest Create(class System.Uri requestUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.Create(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (requestUri As Uri) As WebRequest" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::WebRequest ^ Create(Uri ^ requestUri);" />
      <MemberSignature Language="F#" Value="static member Create : Uri -&gt; System.Net.WebRequest" Usage="System.Net.WebRequest.Create requestUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="requestUri"><span data-ttu-id="cee8a-236">包含请求的资源的 URI 的 <see cref="T:System.Uri" />。</span><span class="sxs-lookup"><span data-stu-id="cee8a-236">A <see cref="T:System.Uri" /> containing the URI of the requested resource.</span></span></param>
        <summary><span data-ttu-id="cee8a-237">为指定的 URI 方案初始化新的 <see cref="T:System.Net.WebRequest" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="cee8a-237">Initializes a new <see cref="T:System.Net.WebRequest" /> instance for the specified URI scheme.</span></span></summary>
        <returns><span data-ttu-id="cee8a-238">指定的 URI 方案的 <see cref="T:System.Net.WebRequest" /> 子代。</span><span class="sxs-lookup"><span data-stu-id="cee8a-238">A <see cref="T:System.Net.WebRequest" /> descendant for the specified URI scheme.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cee8a-239">方法返回在运行时确定为<xref:System.Net.WebRequest>的最接近注册匹配项`requestUri`的类的后代。 <xref:System.Net.WebRequest.Create%2A></span><span class="sxs-lookup"><span data-stu-id="cee8a-239">The <xref:System.Net.WebRequest.Create%2A> method returns a descendant of the <xref:System.Net.WebRequest> class determined at run time as the closest registered match for `requestUri`.</span></span>  
  
 <span data-ttu-id="cee8a-240">例如，如果你创建了一个<xref:System.Net.WebRequest>子代 Handler1 来处理`http://www.contoso.com/text/`请求，并创建另一个名为`http://www.contoso.com/code/`Handler2 的请求来处理请求，则<xref:System.Net.WebRequest.Create%2A>可以使用方法返回与指定的 URI。</span><span class="sxs-lookup"><span data-stu-id="cee8a-240">For example, if you create a <xref:System.Net.WebRequest> descendant, Handler1, to handle requests to `http://www.contoso.com/text/` and another named Handler2 to handle requests to `http://www.contoso.com/code/`, you can use <xref:System.Net.WebRequest.Create%2A> method to return the WebRequest descendant associated with either specified URI.</span></span>  
  
 <span data-ttu-id="cee8a-241">若要仅基于 URI 的<xref:System.Net.WebRequest>方案部分返回类的子代，请<xref:System.Net.WebRequest.CreateDefault%2A>使用方法。</span><span class="sxs-lookup"><span data-stu-id="cee8a-241">To return a descendant of the <xref:System.Net.WebRequest> class based on only the scheme portion of a URI, use the <xref:System.Net.WebRequest.CreateDefault%2A> method.</span></span>  
  
 <span data-ttu-id="cee8a-242">例如，当 URI 以`http://`或`https://` `requestUri`开头时， <xref:System.Net.HttpWebRequest>将返回<xref:System.Net.WebRequest.Create%2A>。</span><span class="sxs-lookup"><span data-stu-id="cee8a-242">For example, when a URI beginning with `http://` or `https://` is passed in `requestUri`, an <xref:System.Net.HttpWebRequest> is returned by <xref:System.Net.WebRequest.Create%2A>.</span></span> <span data-ttu-id="cee8a-243">如果改为传递以`ftp://`开头的 URI，则<xref:System.Net.WebRequest.Create%2A>该方法将返回<xref:System.Net.FileWebRequest>实例。</span><span class="sxs-lookup"><span data-stu-id="cee8a-243">If a URI beginning with `ftp://` is passed instead, the <xref:System.Net.WebRequest.Create%2A> method will return a <xref:System.Net.FileWebRequest> instance.</span></span> <span data-ttu-id="cee8a-244">如果改为传递以`file://`开头的 URI，则<xref:System.Net.WebRequest.Create%2A>该方法将返回<xref:System.Net.FileWebRequest>实例。</span><span class="sxs-lookup"><span data-stu-id="cee8a-244">If a URI beginning with `file://` is passed instead, the <xref:System.Net.WebRequest.Create%2A> method will return a <xref:System.Net.FileWebRequest> instance.</span></span>  
  
 <span data-ttu-id="cee8a-245">已注册的预注册的预留类型包括：</span><span class="sxs-lookup"><span data-stu-id="cee8a-245">The pre-registered reserve types already registered include the following:</span></span>  
  
-   `http://`  
  
-   `https://`  
  
-   `ftp://`  
  
-   `file://`  
  
 <span data-ttu-id="cee8a-246">.Net 包括对`http://`、 `https://`、 `ftp://`和`file://` URI 方案的支持。</span><span class="sxs-lookup"><span data-stu-id="cee8a-246">.NET includes support for the `http://`, `https://`, `ftp://`, and `file://` URI schemes.</span></span> <span data-ttu-id="cee8a-247">用方法注册自定义<xref:System.Net.WebRequest>子代来处理其他请求。 <xref:System.Net.WebRequest.RegisterPrefix%2A></span><span class="sxs-lookup"><span data-stu-id="cee8a-247">Custom <xref:System.Net.WebRequest> descendants to handle other requests are registered with the <xref:System.Net.WebRequest.RegisterPrefix%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cee8a-248">当你在应用程序中启用网络跟踪后，此成员将输出跟踪信息。</span><span class="sxs-lookup"><span data-stu-id="cee8a-248">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="cee8a-249">有关详细信息，请参阅[.NET Framework 中的网络跟踪](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="cee8a-249">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cee8a-250">下面的示例使用<xref:System.Net.WebRequest.Create%2A> <xref:System.Net.HttpWebRequest>实例化实例。</span><span class="sxs-lookup"><span data-stu-id="cee8a-250">The following example uses <xref:System.Net.WebRequest.Create%2A> to instantiate an <xref:System.Net.HttpWebRequest> instance.</span></span> <span data-ttu-id="cee8a-251">表示目标 URL 的 Uri 用作构造函数参数。</span><span class="sxs-lookup"><span data-stu-id="cee8a-251">A Uri representing the target URL is used as the constructor parameter.</span></span>  
  
 [!code-cpp[WebRequest_Create#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_Create/CPP/webrequest_create.cpp#1)]
 [!code-csharp[WebRequest_Create#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_Create/CS/webrequest_create.cs#1)]
 [!code-vb[WebRequest_Create#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_Create/VB/webrequest_create.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="cee8a-252"><paramref name="requestUri" /> 中指定的请求方案未注册。</span><span class="sxs-lookup"><span data-stu-id="cee8a-252">The request scheme specified in <paramref name="requestUri" /> is not registered.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cee8a-253"><paramref name="requestUri" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="cee8a-253"><paramref name="requestUri" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="cee8a-254">调用方没有连接到请求的 URI 或请求重定向到的 URI 的 <see cref="T:System.Net.WebPermissionAttribute" /> 权限。</span><span class="sxs-lookup"><span data-stu-id="cee8a-254">The caller does not have <see cref="T:System.Net.WebPermissionAttribute" /> permission to connect to the requested URI or a URI that the request is redirected to.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateDefault">
      <MemberSignature Language="C#" Value="public static System.Net.WebRequest CreateDefault (Uri requestUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.WebRequest CreateDefault(class System.Uri requestUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.CreateDefault(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateDefault (requestUri As Uri) As WebRequest" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::WebRequest ^ CreateDefault(Uri ^ requestUri);" />
      <MemberSignature Language="F#" Value="static member CreateDefault : Uri -&gt; System.Net.WebRequest" Usage="System.Net.WebRequest.CreateDefault requestUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="requestUri"><span data-ttu-id="cee8a-255">包含请求的资源的 URI 的 <see cref="T:System.Uri" />。</span><span class="sxs-lookup"><span data-stu-id="cee8a-255">A <see cref="T:System.Uri" /> containing the URI of the requested resource.</span></span></param>
        <summary><span data-ttu-id="cee8a-256">为指定的 URI 方案初始化新的 <see cref="T:System.Net.WebRequest" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="cee8a-256">Initializes a new <see cref="T:System.Net.WebRequest" /> instance for the specified URI scheme.</span></span></summary>
        <returns><span data-ttu-id="cee8a-257">指定的 URI 方案的 <see cref="T:System.Net.WebRequest" /> 子代。</span><span class="sxs-lookup"><span data-stu-id="cee8a-257">A <see cref="T:System.Net.WebRequest" /> descendant for the specified URI scheme.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cee8a-258">方法仅基于 URI <xref:System.Net.WebRequest>的方案部分返回子代实例。 <xref:System.Net.WebRequest.CreateDefault%2A></span><span class="sxs-lookup"><span data-stu-id="cee8a-258">The <xref:System.Net.WebRequest.CreateDefault%2A> method returns a <xref:System.Net.WebRequest> descendant instance based on only the scheme portion of a URI.</span></span>  
  
 <span data-ttu-id="cee8a-259">例如`http://` ，当`requestUri`传入的 URI 传入时<xref:System.Net.WebRequest.CreateDefault%2A>， <xref:System.Net.HttpWebRequest>将返回。</span><span class="sxs-lookup"><span data-stu-id="cee8a-259">For example, when a URI beginning with `http://` is passed in `requestUri`, an <xref:System.Net.HttpWebRequest> is returned by <xref:System.Net.WebRequest.CreateDefault%2A>.</span></span> <span data-ttu-id="cee8a-260">如果改为传递以`file://`开头的 URI，则<xref:System.Net.WebRequest.CreateDefault%2A>该方法将返回<xref:System.Net.FileWebRequest>。</span><span class="sxs-lookup"><span data-stu-id="cee8a-260">If a URI beginning with `file://` is passed instead, the <xref:System.Net.WebRequest.CreateDefault%2A> method will return a <xref:System.Net.FileWebRequest>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cee8a-261">当你在应用程序中启用网络跟踪后，此成员将输出跟踪信息。</span><span class="sxs-lookup"><span data-stu-id="cee8a-261">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="cee8a-262">有关详细信息，请参阅[.net 中的网络跟踪](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="cee8a-262">For more information, see [Network Tracing in .NET](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="cee8a-263"><paramref name="requestUri" /> 中指定的请求方案未注册。</span><span class="sxs-lookup"><span data-stu-id="cee8a-263">The request scheme specified in <paramref name="requestUri" /> is not registered.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cee8a-264"><paramref name="requestUri" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="cee8a-264"><paramref name="requestUri" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="cee8a-265">调用方没有连接到请求的 URI 或请求重定向到的 URI 的 <see cref="T:System.Net.WebPermissionAttribute" /> 权限。</span><span class="sxs-lookup"><span data-stu-id="cee8a-265">The caller does not have <see cref="T:System.Net.WebPermissionAttribute" /> permission to connect to the requested URI or a URI that the request is redirected to.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateHttp">
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cee8a-266">为指定的 URI 初始化新的 <see cref="T:System.Net.HttpWebRequest" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="cee8a-266">Initializes a new <see cref="T:System.Net.HttpWebRequest" /> instance for the specified URI.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateHttp">
      <MemberSignature Language="C#" Value="public static System.Net.HttpWebRequest CreateHttp (string requestUriString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.HttpWebRequest CreateHttp(string requestUriString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.CreateHttp(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateHttp (requestUriString As String) As HttpWebRequest" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::HttpWebRequest ^ CreateHttp(System::String ^ requestUriString);" />
      <MemberSignature Language="F#" Value="static member CreateHttp : string -&gt; System.Net.HttpWebRequest" Usage="System.Net.WebRequest.CreateHttp requestUriString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.HttpWebRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUriString" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="requestUriString"><span data-ttu-id="cee8a-267">标识 Internet 资源的 URI 字符串。</span><span class="sxs-lookup"><span data-stu-id="cee8a-267">A URI string that identifies the Internet resource.</span></span></param>
        <summary><span data-ttu-id="cee8a-268">为指定的 URI 字符串初始化新的 <see cref="T:System.Net.HttpWebRequest" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="cee8a-268">Initializes a new <see cref="T:System.Net.HttpWebRequest" /> instance for the specified URI string.</span></span></summary>
        <returns><span data-ttu-id="cee8a-269">特定 URI 字符串的 <see cref="T:System.Net.HttpWebRequest" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="cee8a-269">An <see cref="T:System.Net.HttpWebRequest" /> instance for the specific URI string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cee8a-270">方法返回的<xref:System.Net.HttpWebRequest> 类 `requestUriString` 的实例。  <xref:System.Net.WebRequest.CreateHttp%28System.String%29></span><span class="sxs-lookup"><span data-stu-id="cee8a-270">The <xref:System.Net.WebRequest.CreateHttp%28System.String%29> method returns an instance of the <xref:System.Net.HttpWebRequest> class for the `requestUriString`.</span></span>  
  
 <span data-ttu-id="cee8a-271">`http://` `https://`如果在参数 `requestUriString` 中传递以或开头的 URI， <xref:System.Net.WebRequest.CreateHttp%28System.String%29>则将返回。 <xref:System.Net.HttpWebRequest></span><span class="sxs-lookup"><span data-stu-id="cee8a-271">When a URI that begins with `http://` or `https://` is passed in the `requestUriString` parameter, a <xref:System.Net.HttpWebRequest> is returned by <xref:System.Net.WebRequest.CreateHttp%28System.String%29>.</span></span> <span data-ttu-id="cee8a-272">任何其他方案都将引发<xref:System.NotSupportedException>。</span><span class="sxs-lookup"><span data-stu-id="cee8a-272">Any other scheme will throw a <xref:System.NotSupportedException>.</span></span>  
  
 <span data-ttu-id="cee8a-273">方法使用参数创建它传递给新<xref:System.Net.HttpWebRequest>的实例。 <xref:System.Uri>  `requestUriString` <xref:System.Net.WebRequest.CreateHttp%28System.String%29></span><span class="sxs-lookup"><span data-stu-id="cee8a-273">The <xref:System.Net.WebRequest.CreateHttp%28System.String%29> method uses the `requestUriString` parameter to create a <xref:System.Uri> instance that it passes to the new <xref:System.Net.HttpWebRequest>.</span></span> <span data-ttu-id="cee8a-274">如果该方法成功， <xref:System.Net.HttpWebRequest.AllowReadStreamBuffering%2A>则返回<xref:System.Net.HttpWebRequest>的实例的属性将设置为`false`。</span><span class="sxs-lookup"><span data-stu-id="cee8a-274">If the method is successful, the <xref:System.Net.HttpWebRequest.AllowReadStreamBuffering%2A> property on the returned <xref:System.Net.HttpWebRequest> instance is set to `false`.</span></span>  
  
 <span data-ttu-id="cee8a-275">.Net 包括对`http://`和`https://` URI 方案的支持。</span><span class="sxs-lookup"><span data-stu-id="cee8a-275">.NET includes support for the `http://` and  `https://` URI schemes.</span></span> <span data-ttu-id="cee8a-276">用方法注册自定义<xref:System.Net.WebRequest>子代来处理其他请求。 <xref:System.Net.WebRequest.RegisterPrefix%2A></span><span class="sxs-lookup"><span data-stu-id="cee8a-276">Custom <xref:System.Net.WebRequest> descendants to handle other requests are registered with the <xref:System.Net.WebRequest.RegisterPrefix%2A> method.</span></span> <span data-ttu-id="cee8a-277">方法可用于为其他方案创建<xref:System.Net.WebRequest>类的后代。 <xref:System.Net.WebRequest.Create%28System.String%29></span><span class="sxs-lookup"><span data-stu-id="cee8a-277">The <xref:System.Net.WebRequest.Create%28System.String%29> method can be used to create a descendant of the <xref:System.Net.WebRequest> class for other schemes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="cee8a-278"><paramref name="requestUriString" /> 中指定的请求方案为 http 或 https 方案。</span><span class="sxs-lookup"><span data-stu-id="cee8a-278">The request scheme specified in <paramref name="requestUriString" /> is the http or https scheme.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cee8a-279"><paramref name="requestUriString" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="cee8a-279"><paramref name="requestUriString" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="cee8a-280">调用方没有连接到请求的 URI 或请求重定向到的 URI 的 <see cref="T:System.Net.WebPermissionAttribute" /> 权限。</span><span class="sxs-lookup"><span data-stu-id="cee8a-280">The caller does not have <see cref="T:System.Net.WebPermissionAttribute" /> permission to connect to the requested URI or a URI that the request is redirected to.</span></span></exception>
        <exception cref="T:System.UriFormatException"><span data-ttu-id="cee8a-281"><paramref name="requestUriString" /> 中指定的 URI 不是有效的 URI。</span><span class="sxs-lookup"><span data-stu-id="cee8a-281">The URI specified in <paramref name="requestUriString" /> is not a valid URI.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateHttp">
      <MemberSignature Language="C#" Value="public static System.Net.HttpWebRequest CreateHttp (Uri requestUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.HttpWebRequest CreateHttp(class System.Uri requestUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.CreateHttp(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateHttp (requestUri As Uri) As HttpWebRequest" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::HttpWebRequest ^ CreateHttp(Uri ^ requestUri);" />
      <MemberSignature Language="F#" Value="static member CreateHttp : Uri -&gt; System.Net.HttpWebRequest" Usage="System.Net.WebRequest.CreateHttp requestUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.HttpWebRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="requestUri"><span data-ttu-id="cee8a-282">标识 Internet 资源的 URI。</span><span class="sxs-lookup"><span data-stu-id="cee8a-282">A URI that identifies the Internet resource.</span></span></param>
        <summary><span data-ttu-id="cee8a-283">为指定的 URI 初始化新的 <see cref="T:System.Net.HttpWebRequest" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="cee8a-283">Initializes a new <see cref="T:System.Net.HttpWebRequest" /> instance for the specified URI.</span></span></summary>
        <returns><span data-ttu-id="cee8a-284">特定 URI 字符串的 <see cref="T:System.Net.HttpWebRequest" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="cee8a-284">An <see cref="T:System.Net.HttpWebRequest" /> instance for the specific URI string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cee8a-285">方法返回的<xref:System.Net.HttpWebRequest> 类 `requestUri` 的实例。  <xref:System.Net.WebRequest.CreateHttp%28System.Uri%29></span><span class="sxs-lookup"><span data-stu-id="cee8a-285">The <xref:System.Net.WebRequest.CreateHttp%28System.Uri%29> method returns an instance of the <xref:System.Net.HttpWebRequest> class for the `requestUri`.</span></span>  
  
 <span data-ttu-id="cee8a-286">`http://` `http://`如果在参数 `requestUri` 中传递以或开头的 URI， <xref:System.Net.WebRequest.CreateHttp%28System.Uri%29>则将返回。 <xref:System.Net.HttpWebRequest></span><span class="sxs-lookup"><span data-stu-id="cee8a-286">When a URI that begins with `http://` or `http://` is passed in the `requestUri` parameter, an <xref:System.Net.HttpWebRequest> is returned by <xref:System.Net.WebRequest.CreateHttp%28System.Uri%29>.</span></span> <span data-ttu-id="cee8a-287">其他方案将引发<xref:System.NotSupportedException>。</span><span class="sxs-lookup"><span data-stu-id="cee8a-287">Another other scheme will throw a <xref:System.NotSupportedException>.</span></span>  
  
 <span data-ttu-id="cee8a-288">方法使用参数创建新<xref:System.Net.HttpWebRequest>的实例。 `requestUri` <xref:System.Net.WebRequest.CreateHttp%28System.Uri%29></span><span class="sxs-lookup"><span data-stu-id="cee8a-288">The <xref:System.Net.WebRequest.CreateHttp%28System.Uri%29> method uses the `requestUri` parameter to create a new <xref:System.Net.HttpWebRequest> instance.</span></span> <span data-ttu-id="cee8a-289">如果该方法成功， <xref:System.Net.HttpWebRequest.AllowReadStreamBuffering%2A>则返回<xref:System.Net.HttpWebRequest>的实例的属性将设置为`false`。</span><span class="sxs-lookup"><span data-stu-id="cee8a-289">If the method is successful, the <xref:System.Net.HttpWebRequest.AllowReadStreamBuffering%2A> property on the returned <xref:System.Net.HttpWebRequest> instance is set to `false`.</span></span>  
  
 <span data-ttu-id="cee8a-290">.Net 包括对`http://`和`https://` URI 方案的支持。</span><span class="sxs-lookup"><span data-stu-id="cee8a-290">.NET includes support for the `http://` and  `https://` URI schemes.</span></span> <span data-ttu-id="cee8a-291">用方法注册自定义<xref:System.Net.WebRequest>子代来处理其他请求。 <xref:System.Net.WebRequest.RegisterPrefix%2A></span><span class="sxs-lookup"><span data-stu-id="cee8a-291">Custom <xref:System.Net.WebRequest> descendants to handle other requests are registered with the <xref:System.Net.WebRequest.RegisterPrefix%2A> method.</span></span> <span data-ttu-id="cee8a-292">方法可用于为其他方案创建<xref:System.Net.WebRequest>类的后代。 <xref:System.Net.WebRequest.Create%28System.Uri%29></span><span class="sxs-lookup"><span data-stu-id="cee8a-292">The <xref:System.Net.WebRequest.Create%28System.Uri%29> method can be used to create a descendant of the <xref:System.Net.WebRequest> class for other schemes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="cee8a-293"><paramref name="requestUri" /> 中指定的请求方案为 http 或 https 方案。</span><span class="sxs-lookup"><span data-stu-id="cee8a-293">The request scheme specified in <paramref name="requestUri" /> is the http or https scheme.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cee8a-294"><paramref name="requestUri" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="cee8a-294"><paramref name="requestUri" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="cee8a-295">调用方没有连接到请求的 URI 或请求重定向到的 URI 的 <see cref="T:System.Net.WebPermissionAttribute" /> 权限。</span><span class="sxs-lookup"><span data-stu-id="cee8a-295">The caller does not have <see cref="T:System.Net.WebPermissionAttribute" /> permission to connect to the requested URI or a URI that the request is redirected to.</span></span></exception>
        <exception cref="T:System.UriFormatException"><span data-ttu-id="cee8a-296"><paramref name="requestUri" /> 中指定的 URI 不是有效的 URI。</span><span class="sxs-lookup"><span data-stu-id="cee8a-296">The URI specified in <paramref name="requestUri" /> is not a valid URI.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreatorInstance">
      <MemberSignature Language="C#" Value="public virtual System.Net.IWebRequestCreate CreatorInstance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IWebRequestCreate CreatorInstance" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.CreatorInstance" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CreatorInstance As IWebRequestCreate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::IWebRequestCreate ^ CreatorInstance { System::Net::IWebRequestCreate ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CreatorInstance : System.Net.IWebRequestCreate" Usage="System.Net.WebRequest.CreatorInstance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.IWebRequestCreate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cee8a-297">当在子类中重写时，获取从 <see cref="T:System.Net.IWebRequestCreate" /> 类派生的工厂对象，该类用于创建为生成对指定 URI 的请求而实例化的 <see cref="T:System.Net.WebRequest" />。</span><span class="sxs-lookup"><span data-stu-id="cee8a-297">When overridden in a descendant class, gets the factory object derived from the <see cref="T:System.Net.IWebRequestCreate" /> class used to create the <see cref="T:System.Net.WebRequest" /> instantiated for making the request to the specified URI.</span></span></summary>
        <value><span data-ttu-id="cee8a-298">由 <see cref="T:System.Net.WebRequest" /> 方法返回的派生 <see cref="M:System.Net.IWebRequestCreate.Create(System.Uri)" /> 类型。</span><span class="sxs-lookup"><span data-stu-id="cee8a-298">The derived <see cref="T:System.Net.WebRequest" /> type returned by the <see cref="M:System.Net.IWebRequestCreate.Create(System.Uri)" /> method.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
<span data-ttu-id="cee8a-299">此属性允许应用程序确定哪些<xref:System.Net.IWebRequestCreate>派生工厂对象用于创建请求。</span><span class="sxs-lookup"><span data-stu-id="cee8a-299">This property allows an application to determine which <xref:System.Net.IWebRequestCreate> derived factory object was used to create the request.</span></span> <span data-ttu-id="cee8a-300">此对象可以是[WebRequestCreator 或 BrowserHttp](https://msdn.microsoft.com/library/system.net.browser.webrequestcreator.browserhttp(v=vs.95))或[WebRequestCreator ClientHttp](https://msdn.microsoft.com/library/system.net.browser.webrequestcreator.clienthttp(v=vs.95))，但它也可能是派生<xref:System.Net.IWebRequestCreate>自的自定义实例。</span><span class="sxs-lookup"><span data-stu-id="cee8a-300">This object may be [System.Net.Browser.WebRequestCreator.BrowserHttp](https://msdn.microsoft.com/library/system.net.browser.webrequestcreator.browserhttp(v=vs.95)) or [System.Net.Browser.WebRequestCreator.ClientHttp](https://msdn.microsoft.com/library/system.net.browser.webrequestcreator.clienthttp(v=vs.95)), but it may also be a custom instance derived from <xref:System.Net.IWebRequestCreate>.</span></span> <span data-ttu-id="cee8a-301">这样，应用程序便可以确定浏览器承载[!INCLUDE[silverlight](~/includes/silverlight-md.md)] [!INCLUDE[silverlight](~/includes/silverlight-md.md)] 、客户端或某个自定义对象是否处理<xref:System.Net.WebRequest>实例的 HTTP 请求和响应。</span><span class="sxs-lookup"><span data-stu-id="cee8a-301">This allows an application to determine whether the browser hosting [!INCLUDE[silverlight](~/includes/silverlight-md.md)], the [!INCLUDE[silverlight](~/includes/silverlight-md.md)] client, or some custom object handles HTTP requests and responses for the <xref:System.Net.WebRequest> instance.</span></span> <span data-ttu-id="cee8a-302">使用<xref:System.Net.WebRequest.RegisterPrefix%2A>方法，应用程序可以配置在向<xref:System.Net.WebRequest>特定 URI 发出请求时将实例化的派生类型。</span><span class="sxs-lookup"><span data-stu-id="cee8a-302">The <xref:System.Net.WebRequest.RegisterPrefix%2A> method allows an application to configure which derived <xref:System.Net.WebRequest> type will be instantiated when making a request to a specific URI.</span></span> <span data-ttu-id="cee8a-303"><xref:System.Net.WebRequest>创建者通常会注册为处理特定协议，例如 HTTP 或 HTTPS，但可以注册以处理对服务器上特定服务器或路径的请求。</span><span class="sxs-lookup"><span data-stu-id="cee8a-303"><xref:System.Net.WebRequest> creators are typically registered to handle a specific protocol, such HTTP or HTTPS, but can be registered to handle a request to a specific server or path on a server.</span></span> <span data-ttu-id="cee8a-304">当多个派生<xref:System.Net.WebRequest>类型可以处理同一协议的请求时，这很有用。</span><span class="sxs-lookup"><span data-stu-id="cee8a-304">This is useful when more than one derived <xref:System.Net.WebRequest> type can process requests for the same protocol.</span></span> <span data-ttu-id="cee8a-305">和[!INCLUDE[sil3_first](~/includes/sil3-first-md.md)]更高版本的运行时支持具有不同功能的多个 HTTP 处理程序。</span><span class="sxs-lookup"><span data-stu-id="cee8a-305">The [!INCLUDE[sil3_first](~/includes/sil3-first-md.md)] and later runtime supports multiple HTTP handlers each having different capabilities.</span></span> <span data-ttu-id="cee8a-306">例如，使用具象状态传输（REST）的 web 服务可能需要[WebRequestCreator ClientHttp](https://msdn.microsoft.com/library/system.net.browser.webrequestcreator.clienthttp(v=vs.95))处理程序，而 SOAP web 服务可能能够使用默认值[WebRequestCreator. BrowserHttp](https://msdn.microsoft.com/library/system.net.browser.webrequestcreator.browserhttp(v=vs.95))处理程序。</span><span class="sxs-lookup"><span data-stu-id="cee8a-306">For example, a web service that uses Representational State Transfer (REST) might require the [System.Net.Browser.WebRequestCreator.ClientHttp](https://msdn.microsoft.com/library/system.net.browser.webrequestcreator.clienthttp(v=vs.95)) handler while a SOAP web service might be able to use the default [System.Net.Browser.WebRequestCreator.BrowserHttp](https://msdn.microsoft.com/library/system.net.browser.webrequestcreator.browserhttp(v=vs.95)) handler.</span></span>
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Credentials">
      <MemberSignature Language="C#" Value="public virtual System.Net.ICredentials Credentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ICredentials Credentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.Credentials" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Credentials As ICredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::ICredentials ^ Credentials { System::Net::ICredentials ^ get(); void set(System::Net::ICredentials ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Credentials : System.Net.ICredentials with get, set" Usage="System.Net.WebRequest.Credentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.ICredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cee8a-307">当在子类中被重写时，获取或设置用于对 Internet 资源请求进行身份验证的网络凭据。</span><span class="sxs-lookup"><span data-stu-id="cee8a-307">When overridden in a descendant class, gets or sets the network credentials used for authenticating the request with the Internet resource.</span></span></summary>
        <value><span data-ttu-id="cee8a-308">包含与该请求关联的身份验证凭据的 <see cref="T:System.Net.ICredentials" />。</span><span class="sxs-lookup"><span data-stu-id="cee8a-308">An <see cref="T:System.Net.ICredentials" /> containing the authentication credentials associated with the request.</span></span> <span data-ttu-id="cee8a-309">默认值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="cee8a-309">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cee8a-310"><xref:System.Net.WebRequest.Credentials%2A>属性包含访问 Internet 资源所需的身份验证凭据。</span><span class="sxs-lookup"><span data-stu-id="cee8a-310">The <xref:System.Net.WebRequest.Credentials%2A> property contains the authentication credentials required to access the Internet resource.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cee8a-311">类是一个 `abstract` 类。 <xref:System.Net.WebRequest></span><span class="sxs-lookup"><span data-stu-id="cee8a-311">The <xref:System.Net.WebRequest> class is an `abstract` class.</span></span> <span data-ttu-id="cee8a-312"><xref:System.Net.WebRequest>实例在运行时的实际行为由<xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType>方法返回的子代类确定。</span><span class="sxs-lookup"><span data-stu-id="cee8a-312">The actual behavior of <xref:System.Net.WebRequest> instances at run time is determined by the descendant class returned by the <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="cee8a-313">有关默认值和异常的详细信息，请参阅子代类的文档，例如<xref:System.Net.HttpWebRequest>和。 <xref:System.Net.FileWebRequest></span><span class="sxs-lookup"><span data-stu-id="cee8a-313">For more information about default values and exceptions, see the documentation for the descendant classes, such as <xref:System.Net.HttpWebRequest> and <xref:System.Net.FileWebRequest>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cee8a-314">下面的示例使用当前<xref:System.Net.WebRequest.Credentials%2A>用户的默认凭据设置属性。</span><span class="sxs-lookup"><span data-stu-id="cee8a-314">The following example sets the <xref:System.Net.WebRequest.Credentials%2A> property using the default credentials of the current user.</span></span> <span data-ttu-id="cee8a-315">发出请求时，将使用存储在此属性中的凭据来验证客户端。</span><span class="sxs-lookup"><span data-stu-id="cee8a-315">When the request is made, credentials stored in this property are used to validate the client.</span></span> <span data-ttu-id="cee8a-316">这等同于将<xref:System.Net.WebRequest.UseDefaultCredentials%2A>属性设置为。 `true`</span><span class="sxs-lookup"><span data-stu-id="cee8a-316">This is identical to setting the <xref:System.Net.WebRequest.UseDefaultCredentials%2A> property to `true`.</span></span>  
  
 [!code-cpp[NclWebRequestSimple#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebRequestSimple/CPP/webrequestget.cpp#2)]
 [!code-csharp[NclWebRequestSimple#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebRequestSimple/CS/webrequestget.cs#2)]
 [!code-vb[NclWebRequestSimple#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebRequestSimple/VB/webrequestget.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="cee8a-317">当未在子类中重写该属性时，试图获取或设置该属性。</span><span class="sxs-lookup"><span data-stu-id="cee8a-317">Any attempt is made to get or set the property, when the property is not overridden in a descendant class.</span></span></exception>
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="P:System.Net.HttpWebRequest.Credentials" />
      </Docs>
    </Member>
    <Member MemberName="DefaultCachePolicy">
      <MemberSignature Language="C#" Value="public static System.Net.Cache.RequestCachePolicy DefaultCachePolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Net.Cache.RequestCachePolicy DefaultCachePolicy" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.DefaultCachePolicy" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property DefaultCachePolicy As RequestCachePolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Net::Cache::RequestCachePolicy ^ DefaultCachePolicy { System::Net::Cache::RequestCachePolicy ^ get(); void set(System::Net::Cache::RequestCachePolicy ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultCachePolicy : System.Net.Cache.RequestCachePolicy with get, set" Usage="System.Net.WebRequest.DefaultCachePolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Cache.RequestCachePolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cee8a-318">获取或设置此请求的默认缓存策略。</span><span class="sxs-lookup"><span data-stu-id="cee8a-318">Gets or sets the default cache policy for this request.</span></span></summary>
        <value><span data-ttu-id="cee8a-319">一个 <see cref="T:System.Net.Cache.HttpRequestCachePolicy" />，它指定当没有其他策略适用时对此请求有效的缓存策略。</span><span class="sxs-lookup"><span data-stu-id="cee8a-319">A <see cref="T:System.Net.Cache.HttpRequestCachePolicy" /> that specifies the cache policy in effect for this request when no other policy is applicable.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cee8a-320">如果满足以下条件，则此策略用于此请求：</span><span class="sxs-lookup"><span data-stu-id="cee8a-320">This policy is used for this request if the following conditions exist:</span></span>  
  
-   <span data-ttu-id="cee8a-321">没有<xref:System.Net.HttpWebRequest.DefaultCachePolicy%2A>为此请求指定属性。</span><span class="sxs-lookup"><span data-stu-id="cee8a-321">There is no <xref:System.Net.HttpWebRequest.DefaultCachePolicy%2A> property specified for this request.</span></span>  
  
-   <span data-ttu-id="cee8a-322">计算机和应用程序配置文件不指定适用于用于创建此请求的统一资源标识符（URI）的缓存策略。</span><span class="sxs-lookup"><span data-stu-id="cee8a-322">The machine and application configuration files do not specify a cache policy that is applicable to the Uniform Resource Identifier (URI) used to create this request.</span></span>  
  
 <span data-ttu-id="cee8a-323">缓存策略确定是否可以从缓存中获取请求的资源，而不是将请求发送到资源主机计算机。</span><span class="sxs-lookup"><span data-stu-id="cee8a-323">The cache policy determines whether the requested resource can be taken from a cache instead of sending the request to the resource host computer.</span></span>  
  
 <span data-ttu-id="cee8a-324">如果资源的响应流已检索并读取到流的末尾，则仅将资源的副本添加到缓存中。</span><span class="sxs-lookup"><span data-stu-id="cee8a-324">A copy of a resource is only added to the cache if the response stream for the resource is retrieved and read to the end of the stream.</span></span> <span data-ttu-id="cee8a-325">因此，对同一资源的另一请求可能会使用缓存的副本，具体取决于此请求的缓存策略级别。</span><span class="sxs-lookup"><span data-stu-id="cee8a-325">So another request for the same resource could use a cached copy, depending on the cache policy level for this request.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cee8a-326">下面的代码示例演示如何为 Web 请求设置默认缓存策略。</span><span class="sxs-lookup"><span data-stu-id="cee8a-326">The following code example demonstrates setting the default cache policy for Web requests.</span></span>  
  
 [!code-cpp[NCLSimpleCache#15](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSimpleCache/CPP/NCLSimpleCache.cpp#15)]
 [!code-csharp[NCLSimpleCache#15](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSimpleCache/CS/example.cs#15)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Net.WebPermission"><span data-ttu-id="cee8a-327">用于对网络资源进行无限制的访问。</span><span class="sxs-lookup"><span data-stu-id="cee8a-327">For unrestricted access to network resources.</span></span> <span data-ttu-id="cee8a-328">关联的枚举：<see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="cee8a-328">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
        <altmember cref="T:System.Net.Cache.RequestCachePolicy" />
        <altmember cref="T:System.Net.Cache.HttpRequestCacheLevel" />
        <altmember cref="T:System.Net.Cache.RequestCacheLevel" />
        <altmember cref="P:System.Net.HttpWebRequest.DefaultCachePolicy" />
        <altmember cref="P:System.Net.WebRequest.CachePolicy" />
      </Docs>
    </Member>
    <Member MemberName="DefaultWebProxy">
      <MemberSignature Language="C#" Value="public static System.Net.IWebProxy DefaultWebProxy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Net.IWebProxy DefaultWebProxy" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.DefaultWebProxy" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property DefaultWebProxy As IWebProxy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Net::IWebProxy ^ DefaultWebProxy { System::Net::IWebProxy ^ get(); void set(System::Net::IWebProxy ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultWebProxy : System.Net.IWebProxy with get, set" Usage="System.Net.WebRequest.DefaultWebProxy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IWebProxy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cee8a-329">获取或设置全局 HTTP 代理。</span><span class="sxs-lookup"><span data-stu-id="cee8a-329">Gets or sets the global HTTP proxy.</span></span></summary>
        <value><span data-ttu-id="cee8a-330">对 <see cref="T:System.Net.IWebProxy" /> 实例的每一次调用所使用的 <see cref="T:System.Net.WebRequest" />。</span><span class="sxs-lookup"><span data-stu-id="cee8a-330">An <see cref="T:System.Net.IWebProxy" /> used by every call to instances of <see cref="T:System.Net.WebRequest" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cee8a-331"><xref:System.Net.WebRequest.DefaultWebProxy%2A>属性获取或设置全局代理。</span><span class="sxs-lookup"><span data-stu-id="cee8a-331">The <xref:System.Net.WebRequest.DefaultWebProxy%2A> property gets or sets the global proxy.</span></span> <span data-ttu-id="cee8a-332">属性确定所有<xref:System.Net.WebRequest>实例都使用的默认代理（如果请求支持代理），并且未使用<xref:System.Net.HttpWebRequest.Proxy%2A>属性显式设置代理。 <xref:System.Net.WebRequest.DefaultWebProxy%2A></span><span class="sxs-lookup"><span data-stu-id="cee8a-332">The <xref:System.Net.WebRequest.DefaultWebProxy%2A> property determines the default proxy that all <xref:System.Net.WebRequest> instances use if the request supports proxies and no proxy is set explicitly using the <xref:System.Net.HttpWebRequest.Proxy%2A> property.</span></span> <span data-ttu-id="cee8a-333">当前<xref:System.Net.FtpWebRequest> 和 <xref:System.Net.HttpWebRequest> 支持代理。</span><span class="sxs-lookup"><span data-stu-id="cee8a-333">Proxies are currently supported by <xref:System.Net.FtpWebRequest> and <xref:System.Net.HttpWebRequest>.</span></span>  
  
 <span data-ttu-id="cee8a-334"><xref:System.Net.WebRequest.DefaultWebProxy%2A>属性从 app.config 文件中读取代理设置。</span><span class="sxs-lookup"><span data-stu-id="cee8a-334">The <xref:System.Net.WebRequest.DefaultWebProxy%2A> property reads proxy settings from the app.config file.</span></span> <span data-ttu-id="cee8a-335">如果没有配置文件，则使用当前用户的 Internet Explorer （IE）代理设置。</span><span class="sxs-lookup"><span data-stu-id="cee8a-335">If there is no config file, the current user's Internet Explorer (IE) proxy settings are used.</span></span>  
  
 <span data-ttu-id="cee8a-336">如果该<xref:System.Net.WebRequest.DefaultWebProxy%2A>属性设置为 null，则<xref:System.Net.WebRequest.Create%2A>由或<xref:System.Net.WebRequest.CreateDefault%2A>方法创建的<xref:System.Net.WebRequest>类的所有后续实例都没有代理。</span><span class="sxs-lookup"><span data-stu-id="cee8a-336">If the <xref:System.Net.WebRequest.DefaultWebProxy%2A> property is set to null, all subsequent instances of the <xref:System.Net.WebRequest> class created by the <xref:System.Net.WebRequest.Create%2A> or <xref:System.Net.WebRequest.CreateDefault%2A> methods do not have a proxy.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Net.WebPermission"><span data-ttu-id="cee8a-337">获取或设置全局 HTTP 代理。</span><span class="sxs-lookup"><span data-stu-id="cee8a-337">To get or set the global HTTP proxy.</span></span> <span data-ttu-id="cee8a-338">关联的枚举：<see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="cee8a-338">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="EndGetRequestStream">
      <MemberSignature Language="C#" Value="public virtual System.IO.Stream EndGetRequestStream (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream EndGetRequestStream(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.EndGetRequestStream(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EndGetRequestStream (asyncResult As IAsyncResult) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Stream ^ EndGetRequestStream(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="abstract member EndGetRequestStream : IAsyncResult -&gt; System.IO.Stream&#xA;override this.EndGetRequestStream : IAsyncResult -&gt; System.IO.Stream" Usage="webRequest.EndGetRequestStream asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="cee8a-339">引用对流的挂起请求的 <see cref="T:System.IAsyncResult" />。</span><span class="sxs-lookup"><span data-stu-id="cee8a-339">An <see cref="T:System.IAsyncResult" /> that references a pending request for a stream.</span></span></param>
        <summary><span data-ttu-id="cee8a-340">当在子类中重写时，返回用于将数据写入 Internet 资源的 <see cref="T:System.IO.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="cee8a-340">When overridden in a descendant class, returns a <see cref="T:System.IO.Stream" /> for writing data to the Internet resource.</span></span></summary>
        <returns><span data-ttu-id="cee8a-341">将数据写入的 <see cref="T:System.IO.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="cee8a-341">A <see cref="T:System.IO.Stream" /> to write data to.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cee8a-342"><xref:System.Net.WebRequest.EndGetRequestStream%2A>方法完成 <xref:System.Net.WebRequest.BeginGetRequestStream%2A> 由方法启动的异步流请求。</span><span class="sxs-lookup"><span data-stu-id="cee8a-342">The <xref:System.Net.WebRequest.EndGetRequestStream%2A> method completes an asynchronous stream request that was started by the <xref:System.Net.WebRequest.BeginGetRequestStream%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cee8a-343">若要避免垃圾回收的计时问题，请确保在调用<xref:System.IO.Stream.Close%2A> <xref:System.Net.WebResponse.GetResponseStream%2A> <xref:System.Net.WebRequest.EndGetResponse%2A>后，通过对返回的流调用方法来关闭响应流。</span><span class="sxs-lookup"><span data-stu-id="cee8a-343">To avoid timing issues with garbage collection, be sure to close the response stream by calling the <xref:System.IO.Stream.Close%2A> method on the stream returned by <xref:System.Net.WebResponse.GetResponseStream%2A> after calling <xref:System.Net.WebRequest.EndGetResponse%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cee8a-344">类是一个 `abstract` 类。 <xref:System.Net.WebRequest></span><span class="sxs-lookup"><span data-stu-id="cee8a-344">The <xref:System.Net.WebRequest> class is an `abstract` class.</span></span> <span data-ttu-id="cee8a-345"><xref:System.Net.WebRequest>实例在运行时的实际行为由<xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType>方法返回的子代类确定。</span><span class="sxs-lookup"><span data-stu-id="cee8a-345">The actual behavior of <xref:System.Net.WebRequest> instances at run time is determined by the descendant class returned by the <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="cee8a-346">有关默认值和异常的详细信息，请参阅子代类的文档，例如<xref:System.Net.HttpWebRequest>和。 <xref:System.Net.FileWebRequest></span><span class="sxs-lookup"><span data-stu-id="cee8a-346">For more information about default values and exceptions, see the documentation for the descendant classes, such as <xref:System.Net.HttpWebRequest> and <xref:System.Net.FileWebRequest>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cee8a-347">下面的示例通过调用<xref:System.Net.WebRequest.EndGetRequestStream%2A>获取并使用请求流。</span><span class="sxs-lookup"><span data-stu-id="cee8a-347">The following example obtains and uses the request stream by calling the <xref:System.Net.WebRequest.EndGetRequestStream%2A>.</span></span> <span data-ttu-id="cee8a-348">方法完成对<xref:System.Net.WebRequest.BeginGetRequestStream%2A>的异步调用。 <xref:System.Net.WebRequest.EndGetRequestStream%2A></span><span class="sxs-lookup"><span data-stu-id="cee8a-348">The <xref:System.Net.WebRequest.EndGetRequestStream%2A> method completes the asynchronous call to <xref:System.Net.WebRequest.BeginGetRequestStream%2A>.</span></span>  
  
 [!code-cpp[WebRequest_BeginGetRequest#3](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_BeginGetRequest/CPP/webrequest_begingetrequest.cpp#3)]
 [!code-csharp[WebRequest_BeginGetRequest#3](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_BeginGetRequest/CS/webrequest_begingetrequest.cs#3)]
 [!code-vb[WebRequest_BeginGetRequest#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_BeginGetRequest/VB/webrequest_begingetrequest.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="cee8a-349">当未在子类中重写该方法时，试图访问该方法。</span><span class="sxs-lookup"><span data-stu-id="cee8a-349">Any attempt is made to access the method, when the method is not overridden in a descendant class.</span></span></exception>
        <altmember cref="M:System.Net.WebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />
        <related type="Article" href="~/docs/framework/network-programming/making-asynchronous-requests.md"><span data-ttu-id="cee8a-350">发出异步请求</span><span class="sxs-lookup"><span data-stu-id="cee8a-350">Making Asynchronous Requests</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EndGetResponse">
      <MemberSignature Language="C#" Value="public virtual System.Net.WebResponse EndGetResponse (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.WebResponse EndGetResponse(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.EndGetResponse(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EndGetResponse (asyncResult As IAsyncResult) As WebResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Net::WebResponse ^ EndGetResponse(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="abstract member EndGetResponse : IAsyncResult -&gt; System.Net.WebResponse&#xA;override this.EndGetResponse : IAsyncResult -&gt; System.Net.WebResponse" Usage="webRequest.EndGetResponse asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="cee8a-351">引用对响应的挂起请求的 <see cref="T:System.IAsyncResult" />。</span><span class="sxs-lookup"><span data-stu-id="cee8a-351">An <see cref="T:System.IAsyncResult" /> that references a pending request for a response.</span></span></param>
        <summary><span data-ttu-id="cee8a-352">当在子类中重写时，返回 <see cref="T:System.Net.WebResponse" />。</span><span class="sxs-lookup"><span data-stu-id="cee8a-352">When overridden in a descendant class, returns a <see cref="T:System.Net.WebResponse" />.</span></span></summary>
        <returns><span data-ttu-id="cee8a-353">包含对 Internet 请求的响应的 <see cref="T:System.Net.WebResponse" />。</span><span class="sxs-lookup"><span data-stu-id="cee8a-353">A <see cref="T:System.Net.WebResponse" /> that contains a response to the Internet request.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cee8a-354">方法完成异步请求，该请求是<xref:System.Net.WebRequest.BeginGetResponse%2A>使用方法启动的 Internet 资源。 <xref:System.Net.WebRequest.EndGetResponse%2A></span><span class="sxs-lookup"><span data-stu-id="cee8a-354">The <xref:System.Net.WebRequest.EndGetResponse%2A> method completes an asynchronous request for an Internet resource that was started with the <xref:System.Net.WebRequest.BeginGetResponse%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cee8a-355">类是一个 `abstract` 类。 <xref:System.Net.WebRequest></span><span class="sxs-lookup"><span data-stu-id="cee8a-355">The <xref:System.Net.WebRequest> class is an `abstract` class.</span></span> <span data-ttu-id="cee8a-356"><xref:System.Net.WebRequest>实例在运行时的实际行为由<xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType>方法返回的子代类确定。</span><span class="sxs-lookup"><span data-stu-id="cee8a-356">The actual behavior of <xref:System.Net.WebRequest> instances at run time is determined by the descendant class returned by the <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="cee8a-357">有关默认值和异常的详细信息，请参阅子代类的文档，例如<xref:System.Net.HttpWebRequest>和。 <xref:System.Net.FileWebRequest></span><span class="sxs-lookup"><span data-stu-id="cee8a-357">For more information about default values and exceptions, see the documentation for the descendant classes, such as <xref:System.Net.HttpWebRequest> and <xref:System.Net.FileWebRequest>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cee8a-358">下面的示例调用<xref:System.Net.WebRequest.EndGetResponse%2A>来检索目标资源。</span><span class="sxs-lookup"><span data-stu-id="cee8a-358">The following example calls the <xref:System.Net.WebRequest.EndGetResponse%2A> to retrieve the target resource.</span></span>  
  
 [!code-cpp[WebRequest_BeginGetResponse#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_BeginGetResponse/CPP/webrequest_begingetresponse.cpp#1)]
 [!code-csharp[WebRequest_BeginGetResponse#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_BeginGetResponse/CS/webrequest_begingetresponse.cs#1)]
 [!code-vb[WebRequest_BeginGetResponse#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_BeginGetResponse/VB/webrequest_begingetresponse.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="cee8a-359">当未在子类中重写该方法时，试图访问该方法。</span><span class="sxs-lookup"><span data-stu-id="cee8a-359">Any attempt is made to access the method, when the method is not overridden in a descendant class.</span></span></exception>
        <altmember cref="M:System.Net.WebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />
        <related type="Article" href="~/docs/framework/network-programming/making-asynchronous-requests.md"><span data-ttu-id="cee8a-360">发出异步请求</span><span class="sxs-lookup"><span data-stu-id="cee8a-360">Making Asynchronous Requests</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="protected virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype System.Runtime.Serialization.StreamingContext streamingContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ serializationInfo, System::Runtime::Serialization::StreamingContext streamingContext);" />
      <MemberSignature Language="F#" Value="abstract member GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="webRequest.GetObjectData (serializationInfo, streamingContext)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="streamingContext" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="serializationInfo"><span data-ttu-id="cee8a-361">要填充数据的 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</span><span class="sxs-lookup"><span data-stu-id="cee8a-361">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</span></span></param>
        <param name="streamingContext"><span data-ttu-id="cee8a-362">用于指定该序列化的目标的 <see cref="T:System.Runtime.Serialization.StreamingContext" />。</span><span class="sxs-lookup"><span data-stu-id="cee8a-362">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> that specifies the destination for this serialization.</span></span></param>
        <summary><span data-ttu-id="cee8a-363">使用将目标对象序列化所需的数据填充 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</span><span class="sxs-lookup"><span data-stu-id="cee8a-363">Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the target object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cee8a-364">格式化程序会自动跟踪<xref:System.Runtime.Serialization.SerializationInfo>和序列化中包含的所有对象。</span><span class="sxs-lookup"><span data-stu-id="cee8a-364">Any objects included in the <xref:System.Runtime.Serialization.SerializationInfo> are automatically tracked and serialized by the formatter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRequestStream">
      <MemberSignature Language="C#" Value="public virtual System.IO.Stream GetRequestStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream GetRequestStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.GetRequestStream" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRequestStream () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Stream ^ GetRequestStream();" />
      <MemberSignature Language="F#" Value="abstract member GetRequestStream : unit -&gt; System.IO.Stream&#xA;override this.GetRequestStream : unit -&gt; System.IO.Stream" Usage="webRequest.GetRequestStream " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cee8a-365">当在子类中重写时，返回用于将数据写入 Internet 资源的 <see cref="T:System.IO.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="cee8a-365">When overridden in a descendant class, returns a <see cref="T:System.IO.Stream" /> for writing data to the Internet resource.</span></span></summary>
        <returns><span data-ttu-id="cee8a-366">用于将数据写入 Internet 资源的 <see cref="T:System.IO.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="cee8a-366">A <see cref="T:System.IO.Stream" /> for writing data to the Internet resource.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cee8a-367">方法启动向 internet 资源发送数据的请求，并<xref:System.IO.Stream>返回用于将数据发送到 internet 资源的实例。 <xref:System.Net.WebRequest.GetRequestStream%2A></span><span class="sxs-lookup"><span data-stu-id="cee8a-367">The <xref:System.Net.WebRequest.GetRequestStream%2A> method initiates a request to send data to the Internet resource and returns a <xref:System.IO.Stream> instance for sending data to the Internet resource.</span></span>  
  
 <span data-ttu-id="cee8a-368">方法提供对的<xref:System.IO.Stream>同步访问。 <xref:System.Net.WebRequest.GetRequestStream%2A></span><span class="sxs-lookup"><span data-stu-id="cee8a-368">The <xref:System.Net.WebRequest.GetRequestStream%2A> method provides synchronous access to the <xref:System.IO.Stream>.</span></span> <span data-ttu-id="cee8a-369">对于异步访问，请使用<xref:System.Net.WebRequest.BeginGetRequestStream%2A>和<xref:System.Net.WebRequest.EndGetRequestStream%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="cee8a-369">For asynchronous access, use the <xref:System.Net.WebRequest.BeginGetRequestStream%2A> and <xref:System.Net.WebRequest.EndGetRequestStream%2A> methods.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cee8a-370">类是一个 `abstract` 类。 <xref:System.Net.WebRequest></span><span class="sxs-lookup"><span data-stu-id="cee8a-370">The <xref:System.Net.WebRequest> class is an `abstract` class.</span></span> <span data-ttu-id="cee8a-371"><xref:System.Net.WebRequest>实例在运行时的实际行为由<xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType>方法返回的子代类确定。</span><span class="sxs-lookup"><span data-stu-id="cee8a-371">The actual behavior of <xref:System.Net.WebRequest> instances at run time is determined by the descendant class returned by the <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="cee8a-372">有关默认值和异常的详细信息，请参阅子代类的文档，例如<xref:System.Net.HttpWebRequest>和。 <xref:System.Net.FileWebRequest></span><span class="sxs-lookup"><span data-stu-id="cee8a-372">For more information about default values and exceptions, see the documentation for the descendant classes, such as <xref:System.Net.HttpWebRequest> and <xref:System.Net.FileWebRequest>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cee8a-373">下面的示例使用<xref:System.Net.WebRequest.GetRequestStream%2A>方法来获取流，然后写入流式传输的数据。</span><span class="sxs-lookup"><span data-stu-id="cee8a-373">The following example uses the <xref:System.Net.WebRequest.GetRequestStream%2A> method to obtain a stream and then writes data that stream.</span></span>  
  
 [!code-cpp[WebRequest_ContentType#4](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_ContentType/CPP/webrequest_contenttype.cpp#4)]
 [!code-csharp[WebRequest_ContentType#4](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_ContentType/CS/webrequest_contenttype.cs#4)]
 [!code-vb[WebRequest_ContentType#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_ContentType/VB/webrequest_contenttype.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="cee8a-374">当未在子类中重写该方法时，试图访问该方法。</span><span class="sxs-lookup"><span data-stu-id="cee8a-374">Any attempt is made to access the method, when the method is not overridden in a descendant class.</span></span></exception>
        <altmember cref="M:System.Net.WebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />
        <related type="Article" href="~/docs/framework/network-programming/using-streams-on-the-network.md"><span data-ttu-id="cee8a-375">在网络上使用流</span><span class="sxs-lookup"><span data-stu-id="cee8a-375">Using Streams on the Network</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetRequestStreamAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.IO.Stream&gt; GetRequestStreamAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; GetRequestStreamAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.GetRequestStreamAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRequestStreamAsync () As Task(Of Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;System::IO::Stream ^&gt; ^ GetRequestStreamAsync();" />
      <MemberSignature Language="F#" Value="abstract member GetRequestStreamAsync : unit -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;&#xA;override this.GetRequestStreamAsync : unit -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="webRequest.GetRequestStreamAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cee8a-376">当在子类中被重写时，将用于写入数据的 <see cref="T:System.IO.Stream" /> 作为异步操作返回到 Internet 资源。</span><span class="sxs-lookup"><span data-stu-id="cee8a-376">When overridden in a descendant class, returns a <see cref="T:System.IO.Stream" /> for writing data to the Internet resource as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="cee8a-377">表示异步操作的任务对象。</span><span class="sxs-lookup"><span data-stu-id="cee8a-377">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cee8a-378">此操作不会阻止。</span><span class="sxs-lookup"><span data-stu-id="cee8a-378">This operation will not block.</span></span> <span data-ttu-id="cee8a-379">当向<xref:System.Threading.Tasks.Task%601> Internet 资源写入数据时，返回的对象将会完成。 <xref:System.IO.Stream></span><span class="sxs-lookup"><span data-stu-id="cee8a-379">The returned <xref:System.Threading.Tasks.Task%601> object will complete when the <xref:System.IO.Stream> for writing data to the Internet resource is available.</span></span>  
  
 <span data-ttu-id="cee8a-380">调用<xref:System.Net.WebRequest.GetRequestStreamAsync%2A>后，请确保在调用<xref:System.Net.WebRequest.GetResponseAsync%2A>之前关闭请求流。</span><span class="sxs-lookup"><span data-stu-id="cee8a-380">After you call <xref:System.Net.WebRequest.GetRequestStreamAsync%2A>, make sure you close the request stream before you call <xref:System.Net.WebRequest.GetResponseAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetResponse">
      <MemberSignature Language="C#" Value="public virtual System.Net.WebResponse GetResponse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.WebResponse GetResponse() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.GetResponse" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetResponse () As WebResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Net::WebResponse ^ GetResponse();" />
      <MemberSignature Language="F#" Value="abstract member GetResponse : unit -&gt; System.Net.WebResponse&#xA;override this.GetResponse : unit -&gt; System.Net.WebResponse" Usage="webRequest.GetResponse " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebResponse</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cee8a-381">当在子类中被重写时，返回对 Internet 请求的响应。</span><span class="sxs-lookup"><span data-stu-id="cee8a-381">When overridden in a descendant class, returns a response to an Internet request.</span></span></summary>
        <returns><span data-ttu-id="cee8a-382">包含对 Internet 请求的响应的 <see cref="T:System.Net.WebResponse" />。</span><span class="sxs-lookup"><span data-stu-id="cee8a-382">A <see cref="T:System.Net.WebResponse" /> containing the response to the Internet request.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cee8a-383">方法向 Internet 资源发送请求并返回一个<xref:System.Net.WebResponse>实例。 <xref:System.Net.WebRequest.GetResponse%2A></span><span class="sxs-lookup"><span data-stu-id="cee8a-383">The <xref:System.Net.WebRequest.GetResponse%2A> method sends a request to an Internet resource and returns a <xref:System.Net.WebResponse> instance.</span></span> <span data-ttu-id="cee8a-384">如果已通过调用来<xref:System.Net.WebRequest.GetRequestStream%2A>启动请求，则<xref:System.Net.WebRequest.GetResponse%2A>方法完成请求并返回任何响应。</span><span class="sxs-lookup"><span data-stu-id="cee8a-384">If the request has already been initiated by a call to <xref:System.Net.WebRequest.GetRequestStream%2A>, the <xref:System.Net.WebRequest.GetResponse%2A> method completes the request and returns any response.</span></span>  
  
 <span data-ttu-id="cee8a-385">方法提供对的<xref:System.Net.WebResponse>同步访问。 <xref:System.Net.WebRequest.GetResponse%2A></span><span class="sxs-lookup"><span data-stu-id="cee8a-385">The <xref:System.Net.WebRequest.GetResponse%2A> method provides synchronous access to the <xref:System.Net.WebResponse>.</span></span> <span data-ttu-id="cee8a-386">对于异步访问，请使用<xref:System.Net.WebRequest.BeginGetResponse%2A>和<xref:System.Net.WebRequest.EndGetResponse%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="cee8a-386">For asynchronous access, use the <xref:System.Net.WebRequest.BeginGetResponse%2A> and <xref:System.Net.WebRequest.EndGetResponse%2A> methods.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cee8a-387">类是一个 `abstract` 类。 <xref:System.Net.WebRequest></span><span class="sxs-lookup"><span data-stu-id="cee8a-387">The <xref:System.Net.WebRequest> class is an `abstract` class.</span></span> <span data-ttu-id="cee8a-388"><xref:System.Net.WebRequest>实例在运行时的实际行为由<xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType>方法返回的子代类确定。</span><span class="sxs-lookup"><span data-stu-id="cee8a-388">The actual behavior of <xref:System.Net.WebRequest> instances at run time is determined by the descendant class returned by the <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="cee8a-389">有关默认值和异常的详细信息，请参阅子代类的文档，例如<xref:System.Net.HttpWebRequest>和。 <xref:System.Net.FileWebRequest></span><span class="sxs-lookup"><span data-stu-id="cee8a-389">For more information about default values and exceptions, see the documentation for the descendant classes, such as <xref:System.Net.HttpWebRequest> and <xref:System.Net.FileWebRequest>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cee8a-390">如果引发 WebException，请使用异常的<xref:System.Net.WebException.Response%2A>和<xref:System.Net.WebException.Status%2A>属性来确定来自服务器的响应。</span><span class="sxs-lookup"><span data-stu-id="cee8a-390">If a WebException is thrown, use the <xref:System.Net.WebException.Response%2A> and <xref:System.Net.WebException.Status%2A> properties of the exception to determine the response from the server.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cee8a-391">下面的示例将<xref:System.Net.WebRequest.Timeout%2A>属性设置为10000毫秒。</span><span class="sxs-lookup"><span data-stu-id="cee8a-391">The following example sets the <xref:System.Net.WebRequest.Timeout%2A> property to 10000 milliseconds.</span></span> <span data-ttu-id="cee8a-392">如果超时期限在可以返回资源之前过期， <xref:System.Net.WebException>则会引发。</span><span class="sxs-lookup"><span data-stu-id="cee8a-392">If the timeout period expires before the resource can be returned, a <xref:System.Net.WebException> is thrown.</span></span>  
  
 [!code-cpp[WebRequest_Timeout#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_Timeout/CPP/webrequest_timeout.cpp#1)]
 [!code-csharp[WebRequest_Timeout#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_Timeout/CS/webrequest_timeout.cs#1)]
 [!code-vb[WebRequest_Timeout#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_Timeout/VB/webrequest_timeout.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="cee8a-393">当未在子类中重写该方法时，试图访问该方法。</span><span class="sxs-lookup"><span data-stu-id="cee8a-393">Any attempt is made to access the method, when the method is not overridden in a descendant class.</span></span></exception>
        <altmember cref="M:System.Net.WebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />
        <altmember cref="T:System.Net.WebResponse" />
      </Docs>
    </Member>
    <Member MemberName="GetResponseAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Net.WebResponse&gt; GetResponseAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Net.WebResponse&gt; GetResponseAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.GetResponseAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetResponseAsync () As Task(Of WebResponse)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;System::Net::WebResponse ^&gt; ^ GetResponseAsync();" />
      <MemberSignature Language="F#" Value="abstract member GetResponseAsync : unit -&gt; System.Threading.Tasks.Task&lt;System.Net.WebResponse&gt;&#xA;override this.GetResponseAsync : unit -&gt; System.Threading.Tasks.Task&lt;System.Net.WebResponse&gt;" Usage="webRequest.GetResponseAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.WebResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cee8a-394">当在子类中被重写时，将作为异步操作返回对 Internet 请求的响应。</span><span class="sxs-lookup"><span data-stu-id="cee8a-394">When overridden in a descendant class, returns a response to an Internet request as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="cee8a-395">表示异步操作的任务对象。</span><span class="sxs-lookup"><span data-stu-id="cee8a-395">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cee8a-396">此操作不会阻止。</span><span class="sxs-lookup"><span data-stu-id="cee8a-396">This operation will not block.</span></span> <span data-ttu-id="cee8a-397">返回<xref:System.Threading.Tasks.Task%601>的对象将在 Internet 请求的响应可用之后完成。</span><span class="sxs-lookup"><span data-stu-id="cee8a-397">The returned <xref:System.Threading.Tasks.Task%601> object will complete after a response to an Internet request is available.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSystemWebProxy">
      <MemberSignature Language="C#" Value="public static System.Net.IWebProxy GetSystemWebProxy ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IWebProxy GetSystemWebProxy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.GetSystemWebProxy" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSystemWebProxy () As IWebProxy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IWebProxy ^ GetSystemWebProxy();" />
      <MemberSignature Language="F#" Value="static member GetSystemWebProxy : unit -&gt; System.Net.IWebProxy" Usage="System.Net.WebRequest.GetSystemWebProxy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IWebProxy</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cee8a-398">返回当前模拟用户的 Internet Explorer 设置中配置的代理。</span><span class="sxs-lookup"><span data-stu-id="cee8a-398">Returns a proxy configured with the Internet Explorer settings of the currently impersonated user.</span></span></summary>
        <returns><span data-ttu-id="cee8a-399">对 <see cref="T:System.Net.IWebProxy" /> 实例的每一次调用所使用的 <see cref="T:System.Net.WebRequest" />。</span><span class="sxs-lookup"><span data-stu-id="cee8a-399">An <see cref="T:System.Net.IWebProxy" /> used by every call to instances of <see cref="T:System.Net.WebRequest" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cee8a-400"><xref:System.Net.WebRequest.GetSystemWebProxy%2A>方法读取当前用户的 Internet Explorer （IE）代理设置。</span><span class="sxs-lookup"><span data-stu-id="cee8a-400"><xref:System.Net.WebRequest.GetSystemWebProxy%2A> method reads the current user's Internet Explorer (IE) proxy settings.</span></span> <span data-ttu-id="cee8a-401">此过程包括用于自动检测代理设置的 IE 选项、使用自动配置脚本、手动代理服务器设置和高级手动代理服务器设置。</span><span class="sxs-lookup"><span data-stu-id="cee8a-401">This process includes the IE options to automatically detect proxy settings, use an automatic configuration script, manual proxy server settings, and advanced manual proxy server settings.</span></span>  
  
 <span data-ttu-id="cee8a-402">如果你的应用程序正在模拟多个用户，则<xref:System.Net.WebRequest.GetSystemWebProxy%2A>可以使用方法检索每个模拟用户的代理。</span><span class="sxs-lookup"><span data-stu-id="cee8a-402">If your application is impersonating several users, you can use the <xref:System.Net.WebRequest.GetSystemWebProxy%2A> method to retrieve a proxy for each impersonated user.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Net.WebPermission"><span data-ttu-id="cee8a-403">获取或设置全局 HTTP 代理。</span><span class="sxs-lookup"><span data-stu-id="cee8a-403">To get or set the global HTTP proxy.</span></span> <span data-ttu-id="cee8a-404">关联的枚举：<see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="cee8a-404">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Headers">
      <MemberSignature Language="C#" Value="public virtual System.Net.WebHeaderCollection Headers { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.WebHeaderCollection Headers" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.Headers" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Headers As WebHeaderCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::WebHeaderCollection ^ Headers { System::Net::WebHeaderCollection ^ get(); void set(System::Net::WebHeaderCollection ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Headers : System.Net.WebHeaderCollection with get, set" Usage="System.Net.WebRequest.Headers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebHeaderCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cee8a-405">当在子类中被重写时，获取或设置与请求关联的标头名称/值对的集合。</span><span class="sxs-lookup"><span data-stu-id="cee8a-405">When overridden in a descendant class, gets or sets the collection of header name/value pairs associated with the request.</span></span></summary>
        <value><span data-ttu-id="cee8a-406">包含与此请求关联的标题名/值对的 <see cref="T:System.Net.WebHeaderCollection" />。</span><span class="sxs-lookup"><span data-stu-id="cee8a-406">A <see cref="T:System.Net.WebHeaderCollection" /> containing the header name/value pairs associated with this request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cee8a-407">属性包含一个<xref:System.Net.WebHeaderCollection>实例，其中包含要发送到 Internet 资源的标头信息。 <xref:System.Net.WebRequest.Headers%2A></span><span class="sxs-lookup"><span data-stu-id="cee8a-407">The <xref:System.Net.WebRequest.Headers%2A> property contains a <xref:System.Net.WebHeaderCollection> instance containing the header information to send to the Internet resource.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cee8a-408">类是一个 `abstract` 类。 <xref:System.Net.WebRequest></span><span class="sxs-lookup"><span data-stu-id="cee8a-408">The <xref:System.Net.WebRequest> class is an `abstract` class.</span></span> <span data-ttu-id="cee8a-409"><xref:System.Net.WebRequest>实例在运行时的实际行为由<xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType>方法返回的子代类确定。</span><span class="sxs-lookup"><span data-stu-id="cee8a-409">The actual behavior of <xref:System.Net.WebRequest> instances at run time is determined by the descendant class returned by the <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="cee8a-410">有关默认值和异常的详细信息，请参阅子代类的文档，例如<xref:System.Net.HttpWebRequest>和。 <xref:System.Net.FileWebRequest></span><span class="sxs-lookup"><span data-stu-id="cee8a-410">For more information about default values and exceptions, see the documentation for the descendant classes, such as <xref:System.Net.HttpWebRequest> and <xref:System.Net.FileWebRequest>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cee8a-411">下面的示例显示与此请求关联的标头名称/值对。</span><span class="sxs-lookup"><span data-stu-id="cee8a-411">The following example displays the header name/value pairs associated with this request.</span></span>  
  
 [!code-cpp[WebRequest_Headers#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_Headers/CPP/webrequest_headers.cpp#1)]
 [!code-csharp[WebRequest_Headers#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_Headers/CS/webrequest_headers.cs#1)]
 [!code-vb[WebRequest_Headers#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_Headers/VB/webrequest_headers.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="cee8a-412">当未在子类中重写该属性时，试图获取或设置该属性。</span><span class="sxs-lookup"><span data-stu-id="cee8a-412">Any attempt is made to get or set the property, when the property is not overridden in a descendant class.</span></span></exception>
        <altmember cref="T:System.Net.WebHeaderCollection" />
        <altmember cref="P:System.Net.HttpWebRequest.Headers" />
      </Docs>
    </Member>
    <Member MemberName="ImpersonationLevel">
      <MemberSignature Language="C#" Value="public System.Security.Principal.TokenImpersonationLevel ImpersonationLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Principal.TokenImpersonationLevel ImpersonationLevel" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.ImpersonationLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property ImpersonationLevel As TokenImpersonationLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Principal::TokenImpersonationLevel ImpersonationLevel { System::Security::Principal::TokenImpersonationLevel get(); void set(System::Security::Principal::TokenImpersonationLevel value); };" />
      <MemberSignature Language="F#" Value="member this.ImpersonationLevel : System.Security.Principal.TokenImpersonationLevel with get, set" Usage="System.Net.WebRequest.ImpersonationLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.TokenImpersonationLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cee8a-413">获取或设置当前请求的模拟级别。</span><span class="sxs-lookup"><span data-stu-id="cee8a-413">Gets or sets the impersonation level for the current request.</span></span></summary>
        <value><span data-ttu-id="cee8a-414">一个 <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 值。</span><span class="sxs-lookup"><span data-stu-id="cee8a-414">A <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cee8a-415">模拟级别确定服务器如何使用客户端凭据。</span><span class="sxs-lookup"><span data-stu-id="cee8a-415">The impersonation level determines how the server can use the client's credentials.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Method">
      <MemberSignature Language="C#" Value="public virtual string Method { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Method" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.Method" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Method As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Method { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Method : string with get, set" Usage="System.Net.WebRequest.Method" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cee8a-416">当在子类中被重写时，获取或设置要在此请求中使用的协议方法。</span><span class="sxs-lookup"><span data-stu-id="cee8a-416">When overridden in a descendant class, gets or sets the protocol method to use in this request.</span></span></summary>
        <value><span data-ttu-id="cee8a-417">在此请求中使用的协议方法。</span><span class="sxs-lookup"><span data-stu-id="cee8a-417">The protocol method to use in this request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cee8a-418">当在子代类中重写时<xref:System.Net.WebRequest.Method%2A> ，属性包含要在此请求中使用的请求方法。</span><span class="sxs-lookup"><span data-stu-id="cee8a-418">When overridden in a descendant class, the <xref:System.Net.WebRequest.Method%2A> property contains the request method to use in this request.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cee8a-419">类是一个 `abstract` 类。 <xref:System.Net.WebRequest></span><span class="sxs-lookup"><span data-stu-id="cee8a-419">The <xref:System.Net.WebRequest> class is an `abstract` class.</span></span> <span data-ttu-id="cee8a-420"><xref:System.Net.WebRequest>实例在运行时的实际行为由<xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType>方法返回的子代类确定。</span><span class="sxs-lookup"><span data-stu-id="cee8a-420">The actual behavior of <xref:System.Net.WebRequest> instances at run time is determined by the descendant class returned by the <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="cee8a-421">有关默认值和异常的详细信息，请参阅子代类的文档，例如<xref:System.Net.HttpWebRequest>和。 <xref:System.Net.FileWebRequest></span><span class="sxs-lookup"><span data-stu-id="cee8a-421">For more information about default values and exceptions, see the documentation for the descendant classes, such as <xref:System.Net.HttpWebRequest> and <xref:System.Net.FileWebRequest>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cee8a-422">下面的示例将<xref:System.Net.WebRequest.Method%2A>属性设置为 post，以指示请求将数据发送到目标主机。</span><span class="sxs-lookup"><span data-stu-id="cee8a-422">The following example sets the <xref:System.Net.WebRequest.Method%2A> property to POST to indicate that the request will post data to the target host.</span></span>  
  
 [!code-cpp[WebRequest_BeginGetRequest#3](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_BeginGetRequest/CPP/webrequest_begingetrequest.cpp#3)]
 [!code-csharp[WebRequest_BeginGetRequest#3](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_BeginGetRequest/CS/webrequest_begingetrequest.cs#3)]
 [!code-vb[WebRequest_BeginGetRequest#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_BeginGetRequest/VB/webrequest_begingetrequest.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="cee8a-423">在子类中未重写该属性的情况下，试图获取或设置该属性。</span><span class="sxs-lookup"><span data-stu-id="cee8a-423">If the property is not overridden in a descendant class, any attempt is made to get or set the property.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="cee8a-424"><see cref="P:System.Net.WebRequest.Method" />属性可以包含实现的协议的任何有效的请求方法。</span><span class="sxs-lookup"><span data-stu-id="cee8a-424">The <see cref="P:System.Net.WebRequest.Method" /> property can contain any valid request method for the protocol implemented.</span></span> <span data-ttu-id="cee8a-425">默认值必须提供不需要设置特定于协议的属性的默认请求/响应事务。</span><span class="sxs-lookup"><span data-stu-id="cee8a-425">The default value must provide a default request/response transaction that does not require protocol-specific properties to be set.</span></span></para></block>
        <altmember cref="P:System.Net.HttpWebRequest.Method" />
      </Docs>
    </Member>
    <Member MemberName="PreAuthenticate">
      <MemberSignature Language="C#" Value="public virtual bool PreAuthenticate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PreAuthenticate" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.PreAuthenticate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property PreAuthenticate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool PreAuthenticate { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.PreAuthenticate : bool with get, set" Usage="System.Net.WebRequest.PreAuthenticate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cee8a-426">当在子类中被重写时，指示是否对请求进行预身份验证。</span><span class="sxs-lookup"><span data-stu-id="cee8a-426">When overridden in a descendant class, indicates whether to pre-authenticate the request.</span></span></summary>
        <value><span data-ttu-id="cee8a-427">若要进行预身份验证，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="cee8a-427"><see langword="true" /> to pre-authenticate; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cee8a-428">除第一个请求之外， <xref:System.Net.WebRequest.PreAuthenticate%2A>属性指示是否在不等待服务器质询的情况下，发送后续请求的身份验证信息。</span><span class="sxs-lookup"><span data-stu-id="cee8a-428">With the exception of the first request, the <xref:System.Net.WebRequest.PreAuthenticate%2A> property indicates whether to send authentication information with subsequent requests without waiting to be challenged by the server.</span></span> <span data-ttu-id="cee8a-429">当<xref:System.Net.WebRequest.PreAuthenticate%2A>为`false`时， <xref:System.Net.WebRequest>将在发送身份验证信息之前等待身份验证质询。</span><span class="sxs-lookup"><span data-stu-id="cee8a-429">When <xref:System.Net.WebRequest.PreAuthenticate%2A> is `false`, the <xref:System.Net.WebRequest> waits for an authentication challenge before sending authentication information.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cee8a-430">类是一个 `abstract` 类。 <xref:System.Net.WebRequest></span><span class="sxs-lookup"><span data-stu-id="cee8a-430">The <xref:System.Net.WebRequest> class is an `abstract` class.</span></span> <span data-ttu-id="cee8a-431"><xref:System.Net.WebRequest>实例在运行时的实际行为由<xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType>方法返回的子代类确定。</span><span class="sxs-lookup"><span data-stu-id="cee8a-431">The actual behavior of <xref:System.Net.WebRequest> instances at run time is determined by the descendant class returned by the <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="cee8a-432">有关默认值和异常的详细信息，请参阅子代类的文档，例如<xref:System.Net.HttpWebRequest>和。 <xref:System.Net.FileWebRequest></span><span class="sxs-lookup"><span data-stu-id="cee8a-432">For more information about default values and exceptions, see the documentation for the descendant classes, such as <xref:System.Net.HttpWebRequest> and <xref:System.Net.FileWebRequest>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cee8a-433"><xref:System.Net.WebRequest.PreAuthenticate%2A>下面的示例将属性设置为`true` ，以便将存储在<xref:System.Net.WebRequest.Credentials%2A>属性中的<xref:System.Net.NetworkCredential>与资源请求一起发送。</span><span class="sxs-lookup"><span data-stu-id="cee8a-433">The following example sets the <xref:System.Net.WebRequest.PreAuthenticate%2A> property to `true` so that the <xref:System.Net.NetworkCredential> stored in the <xref:System.Net.WebRequest.Credentials%2A> property will be sent to along with the resource request.</span></span>  
  
 [!code-cpp[WebRequest_PreAuthenticate#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_PreAuthenticate/CPP/webrequest_preauthenticate.cpp#1)]
 [!code-csharp[WebRequest_PreAuthenticate#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_PreAuthenticate/CS/webrequest_preauthenticate.cs#1)]
 [!code-vb[WebRequest_PreAuthenticate#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_PreAuthenticate/VB/webrequest_preauthenticate.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="cee8a-434">当未在子类中重写该属性时，试图获取或设置该属性。</span><span class="sxs-lookup"><span data-stu-id="cee8a-434">Any attempt is made to get or set the property, when the property is not overridden in a descendant class.</span></span></exception>
        <altmember cref="P:System.Net.HttpWebRequest.PreAuthenticate" />
      </Docs>
    </Member>
    <Member MemberName="Proxy">
      <MemberSignature Language="C#" Value="public virtual System.Net.IWebProxy Proxy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IWebProxy Proxy" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.Proxy" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Proxy As IWebProxy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::IWebProxy ^ Proxy { System::Net::IWebProxy ^ get(); void set(System::Net::IWebProxy ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Proxy : System.Net.IWebProxy with get, set" Usage="System.Net.WebRequest.Proxy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IWebProxy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cee8a-435">当在子类中被重写时，获取或设置用于访问此 Internet 资源的网络代理。</span><span class="sxs-lookup"><span data-stu-id="cee8a-435">When overridden in a descendant class, gets or sets the network proxy to use to access this Internet resource.</span></span></summary>
        <value><span data-ttu-id="cee8a-436">用于访问 Internet 资源的 <see cref="T:System.Net.IWebProxy" />。</span><span class="sxs-lookup"><span data-stu-id="cee8a-436">The <see cref="T:System.Net.IWebProxy" /> to use to access the Internet resource.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cee8a-437"><xref:System.Net.WebRequest.Proxy%2A>属性标识请求用于访问 Internet 资源的网络代理。</span><span class="sxs-lookup"><span data-stu-id="cee8a-437">The <xref:System.Net.WebRequest.Proxy%2A> property identifies the network proxy that the request uses to access the Internet resource.</span></span> <span data-ttu-id="cee8a-438">请求是通过代理服务器发出的，而不是直接连接到 Internet 资源。</span><span class="sxs-lookup"><span data-stu-id="cee8a-438">The request is made through the proxy server rather than directly to the Internet resource.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cee8a-439">类是一个 `abstract` 类。 <xref:System.Net.WebRequest></span><span class="sxs-lookup"><span data-stu-id="cee8a-439">The <xref:System.Net.WebRequest> class is an `abstract` class.</span></span> <span data-ttu-id="cee8a-440"><xref:System.Net.WebRequest>实例在运行时的实际行为由<xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType>方法返回的子代类确定。</span><span class="sxs-lookup"><span data-stu-id="cee8a-440">The actual behavior of <xref:System.Net.WebRequest> instances at run time is determined by the descendant class returned by the <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="cee8a-441">有关默认值和异常的详细信息，请参阅子代类的文档，例如<xref:System.Net.HttpWebRequest>和。 <xref:System.Net.FileWebRequest></span><span class="sxs-lookup"><span data-stu-id="cee8a-441">For more information about default values and exceptions, see the documentation for the descendant classes, such as <xref:System.Net.HttpWebRequest> and <xref:System.Net.FileWebRequest>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cee8a-442">以下示例显示当前网络代理地址，并允许用户分配新的网络代理地址和端口号。</span><span class="sxs-lookup"><span data-stu-id="cee8a-442">The following example displays the current network proxy address and allows the user to assign a new network proxy address and port number.</span></span>  
  
 [!code-cpp[WebRequest_Proxy#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_Proxy/CPP/webrequest_proxy.cpp#1)]
 [!code-csharp[WebRequest_Proxy#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_Proxy/CS/webrequest_proxy.cs#1)]
 [!code-vb[WebRequest_Proxy#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_Proxy/VB/webrequest_proxy.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="cee8a-443">当未在子类中重写该属性时，试图获取或设置该属性。</span><span class="sxs-lookup"><span data-stu-id="cee8a-443">Any attempt is made to get or set the property, when the property is not overridden in a descendant class.</span></span></exception>
        <altmember cref="T:System.Net.IWebProxy" />
        <altmember cref="T:System.Net.WebProxy" />
        <altmember cref="P:System.Net.HttpWebRequest.Proxy" />
      </Docs>
    </Member>
    <Member MemberName="RegisterPortableWebRequestCreator">
      <MemberSignature Language="C#" Value="public static void RegisterPortableWebRequestCreator (System.Net.IWebRequestCreate creator);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterPortableWebRequestCreator(class System.Net.IWebRequestCreate creator) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.RegisterPortableWebRequestCreator(System.Net.IWebRequestCreate)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RegisterPortableWebRequestCreator (creator As IWebRequestCreate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterPortableWebRequestCreator(System::Net::IWebRequestCreate ^ creator);" />
      <MemberSignature Language="F#" Value="static member RegisterPortableWebRequestCreator : System.Net.IWebRequestCreate -&gt; unit" Usage="System.Net.WebRequest.RegisterPortableWebRequestCreator creator" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="creator" Type="System.Net.IWebRequestCreate" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="creator"><span data-ttu-id="cee8a-444">要注册的 <see cref="T:System.Net.IWebRequestCreate" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="cee8a-444">The <see cref="T:System.Net.IWebRequestCreate" /> object to register.</span></span></param>
        <summary><span data-ttu-id="cee8a-445">注册 <see cref="T:System.Net.IWebRequestCreate" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="cee8a-445">Register an <see cref="T:System.Net.IWebRequestCreate" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterPrefix">
      <MemberSignature Language="C#" Value="public static bool RegisterPrefix (string prefix, System.Net.IWebRequestCreate creator);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool RegisterPrefix(string prefix, class System.Net.IWebRequestCreate creator) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.RegisterPrefix(System.String,System.Net.IWebRequestCreate)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RegisterPrefix (prefix As String, creator As IWebRequestCreate) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool RegisterPrefix(System::String ^ prefix, System::Net::IWebRequestCreate ^ creator);" />
      <MemberSignature Language="F#" Value="static member RegisterPrefix : string * System.Net.IWebRequestCreate -&gt; bool" Usage="System.Net.WebRequest.RegisterPrefix (prefix, creator)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" Index="0" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="creator" Type="System.Net.IWebRequestCreate" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="prefix"><span data-ttu-id="cee8a-446"><see cref="T:System.Net.WebRequest" /> 子代为其提供服务的完整 URI 或 URI 前缀。</span><span class="sxs-lookup"><span data-stu-id="cee8a-446">The complete URI or URI prefix that the <see cref="T:System.Net.WebRequest" /> descendant services.</span></span></param>
        <param name="creator"><span data-ttu-id="cee8a-447">创建方法，<see cref="T:System.Net.WebRequest" /> 调用它以创建 <see cref="T:System.Net.WebRequest" /> 子代。</span><span class="sxs-lookup"><span data-stu-id="cee8a-447">The create method that the <see cref="T:System.Net.WebRequest" /> calls to create the <see cref="T:System.Net.WebRequest" /> descendant.</span></span></param>
        <summary><span data-ttu-id="cee8a-448">为指定的 URI 注册 <see cref="T:System.Net.WebRequest" /> 子代。</span><span class="sxs-lookup"><span data-stu-id="cee8a-448">Registers a <see cref="T:System.Net.WebRequest" /> descendant for the specified URI.</span></span></summary>
        <returns><span data-ttu-id="cee8a-449">如果注册成功，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="cee8a-449"><see langword="true" /> if registration is successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cee8a-450">方法将子代<xref:System.Net.WebRequest>注册到服务请求。 <xref:System.Net.WebRequest.RegisterPrefix%2A></span><span class="sxs-lookup"><span data-stu-id="cee8a-450">The <xref:System.Net.WebRequest.RegisterPrefix%2A> method registers <xref:System.Net.WebRequest> descendants to service requests.</span></span> <span data-ttu-id="cee8a-451"><xref:System.Net.WebRequest>通常会将子代注册为处理特定协议（如 HTTP 或 FTP），但可以注册子代来处理对服务器上特定服务器或路径的请求。</span><span class="sxs-lookup"><span data-stu-id="cee8a-451"><xref:System.Net.WebRequest> descendants are typically registered to handle a specific protocol, such HTTP or FTP, but can be registered to handle a request to a specific server or path on a server.</span></span>  
  
 <span data-ttu-id="cee8a-452">已注册的预注册的预留类型包括：</span><span class="sxs-lookup"><span data-stu-id="cee8a-452">The pre-registered reserve types already registered include the following:</span></span>  
  
-   `http://`  
  
-   `https://`  
  
-   `ftp://`  
  
-   `file://`  
  
 <span data-ttu-id="cee8a-453">有关详细信息，请参阅<xref:System.Net.WebRequest.Create%28System.String%29>和<xref:System.Net.WebRequest.Create%28System.Uri%29>方法。</span><span class="sxs-lookup"><span data-stu-id="cee8a-453">For more information, see the <xref:System.Net.WebRequest.Create%28System.String%29> and <xref:System.Net.WebRequest.Create%28System.Uri%29> methods.</span></span>  
  
 <span data-ttu-id="cee8a-454">不允许使用重复的前缀。</span><span class="sxs-lookup"><span data-stu-id="cee8a-454">Duplicate prefixes are not allowed.</span></span> <span data-ttu-id="cee8a-455"><xref:System.Net.WebRequest.RegisterPrefix%2A>如果`false`尝试注册重复的前缀，则返回。</span><span class="sxs-lookup"><span data-stu-id="cee8a-455"><xref:System.Net.WebRequest.RegisterPrefix%2A> returns `false` if an attempt is made to register a duplicate prefix.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cee8a-456">默认情况下，类将注册到 HTTP 和 HTTPS 方案的服务请求。 <xref:System.Net.HttpWebRequest></span><span class="sxs-lookup"><span data-stu-id="cee8a-456">The <xref:System.Net.HttpWebRequest> class is registered to service requests for HTTP and HTTPS schemes by default.</span></span> <span data-ttu-id="cee8a-457">尝试为这些方案注册<xref:System.Net.WebRequest>不同的后代会失败。</span><span class="sxs-lookup"><span data-stu-id="cee8a-457">Attempts to register a different <xref:System.Net.WebRequest> descendant for these schemes will fail.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cee8a-458"><paramref name="prefix" /> 为 <see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="cee8a-458"><paramref name="prefix" /> is <see langword="null" /></span></span>  
  
<span data-ttu-id="cee8a-459">或</span><span class="sxs-lookup"><span data-stu-id="cee8a-459">-or-</span></span> 
 <span data-ttu-id="cee8a-460"><paramref name="creator" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="cee8a-460"><paramref name="creator" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RequestUri">
      <MemberSignature Language="C#" Value="public virtual Uri RequestUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri RequestUri" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.RequestUri" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequestUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Uri ^ RequestUri { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RequestUri : Uri" Usage="System.Net.WebRequest.RequestUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cee8a-461">当在子类中被重写时，获取与请求关联的 Internet 资源的 URI。</span><span class="sxs-lookup"><span data-stu-id="cee8a-461">When overridden in a descendant class, gets the URI of the Internet resource associated with the request.</span></span></summary>
        <value><span data-ttu-id="cee8a-462">表示与请求关联的资源的 <see cref="T:System.Uri" />。</span><span class="sxs-lookup"><span data-stu-id="cee8a-462">A <see cref="T:System.Uri" /> representing the resource associated with the request</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cee8a-463">当在子代类中重写时<xref:System.Net.WebRequest.RequestUri%2A> ，属性<xref:System.Uri>包含<xref:System.Net.WebRequest.Create%2A>方法用于创建请求的实例。</span><span class="sxs-lookup"><span data-stu-id="cee8a-463">When overridden in a descendant class, the <xref:System.Net.WebRequest.RequestUri%2A> property contains the <xref:System.Uri> instance that <xref:System.Net.WebRequest.Create%2A> method uses to create the request.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cee8a-464">类是一个 `abstract` 类。 <xref:System.Net.WebRequest></span><span class="sxs-lookup"><span data-stu-id="cee8a-464">The <xref:System.Net.WebRequest> class is an `abstract` class.</span></span> <span data-ttu-id="cee8a-465"><xref:System.Net.WebRequest>实例在运行时的实际行为由<xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType>方法返回的子代类确定。</span><span class="sxs-lookup"><span data-stu-id="cee8a-465">The actual behavior of <xref:System.Net.WebRequest> instances at run time is determined by the descendant class returned by the <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="cee8a-466">有关默认值和异常的详细信息，请参阅子代类的文档，例如<xref:System.Net.HttpWebRequest>和。 <xref:System.Net.FileWebRequest></span><span class="sxs-lookup"><span data-stu-id="cee8a-466">For more information about default values and exceptions, see the documentation for the descendant classes, such as <xref:System.Net.HttpWebRequest> and <xref:System.Net.FileWebRequest>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cee8a-467">下面的示例检查<xref:System.Net.WebRequest.RequestUri%2A>属性以确定最初请求的站点。</span><span class="sxs-lookup"><span data-stu-id="cee8a-467">The following example checks the <xref:System.Net.WebRequest.RequestUri%2A> property to determine the site originally requested.</span></span>  
  
 [!code-cpp[WebRequest_RequestUri1#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_RequestUri1/CPP/webrequest_requesturi.cpp#1)]
 [!code-csharp[WebRequest_RequestUri1#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_RequestUri1/CS/webrequest_requesturi.cs#1)]
 [!code-vb[WebRequest_RequestUri1#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_RequestUri1/VB/webrequest_requesturi.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="cee8a-468">当未在子类中重写该属性时，试图获取或设置该属性。</span><span class="sxs-lookup"><span data-stu-id="cee8a-468">Any attempt is made to get or set the property, when the property is not overridden in a descendant class.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="cee8a-469">
            <see cref="P:System.Net.WebRequest.RequestUri" />必须包含传递<see cref="M:System.Net.WebRequest.Create(System.Uri)" />给<see cref="T:System.Uri" />方法的原始实例。</span><span class="sxs-lookup"><span data-stu-id="cee8a-469">
            <see cref="P:System.Net.WebRequest.RequestUri" /> must contain the original <see cref="T:System.Uri" /> instance passed to the <see cref="M:System.Net.WebRequest.Create(System.Uri)" /> method.</span></span> <span data-ttu-id="cee8a-470">如果协议能够将请求重定向到另一个 URI 来处理请求，则后代必须提供一个属性以包含实际服务于请求的 URI</span><span class="sxs-lookup"><span data-stu-id="cee8a-470">If the protocol is able to redirect the request to a different URI to service the request, the descendant must provide a property to contain the URI that actually services the request</span></span></para></block>
        <altmember cref="P:System.Net.HttpWebRequest.RequestUri" />
        <altmember cref="P:System.Net.HttpWebRequest.Address" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype System.Runtime.Serialization.StreamingContext streamingContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ serializationInfo, System::Runtime::Serialization::StreamingContext streamingContext) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="streamingContext" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="serializationInfo"><span data-ttu-id="cee8a-471">一个 <see cref="T:System.Runtime.Serialization.SerializationInfo" />，包含 <see cref="T:System.Net.WebRequest" /> 的序列化数据。</span><span class="sxs-lookup"><span data-stu-id="cee8a-471">A <see cref="T:System.Runtime.Serialization.SerializationInfo" />, which holds the serialized data for the <see cref="T:System.Net.WebRequest" />.</span></span></param>
        <param name="streamingContext"><span data-ttu-id="cee8a-472">一个 <see cref="T:System.Runtime.Serialization.StreamingContext" />，它包含与新的 <see cref="T:System.Net.WebRequest" /> 关联的序列化流的目标。</span><span class="sxs-lookup"><span data-stu-id="cee8a-472">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains the destination of the serialized stream associated with the new <see cref="T:System.Net.WebRequest" />.</span></span></param>
        <summary><span data-ttu-id="cee8a-473">当在子代类中重写时，使用序列化 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 所需要的数据来填充 <see cref="T:System.Net.WebRequest" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="cee8a-473">When overridden in a descendant class, populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> instance with the data needed to serialize the <see cref="T:System.Net.WebRequest" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="cee8a-474">当未在子代类中重写该接口时，尝试序列化该对象。</span><span class="sxs-lookup"><span data-stu-id="cee8a-474">An attempt is made to serialize the object, when the interface is not overridden in a descendant class.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Timeout">
      <MemberSignature Language="C#" Value="public virtual int Timeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Timeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.Timeout" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Timeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Timeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Timeout : int with get, set" Usage="System.Net.WebRequest.Timeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cee8a-475">获取或设置请求超时之前的时间长度（以毫秒为单位）。</span><span class="sxs-lookup"><span data-stu-id="cee8a-475">Gets or sets the length of time, in milliseconds, before the request times out.</span></span></summary>
        <value><span data-ttu-id="cee8a-476">请求超时前的时间长度（以毫秒为单位）或指示请求不超时<see cref="F:System.Threading.Timeout.Infinite" />的值。默认值是由子代类定义的。</span><span class="sxs-lookup"><span data-stu-id="cee8a-476">The length of time, in milliseconds, until the request times out, or the value <see cref="F:System.Threading.Timeout.Infinite" /> to indicate that the request does not time out. The default value is defined by the descendant class.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cee8a-477">属性指示请求超时前的时间长度（以毫秒为单位），并<xref:System.Net.WebException>引发。 <xref:System.Net.WebRequest.Timeout%2A></span><span class="sxs-lookup"><span data-stu-id="cee8a-477">The <xref:System.Net.WebRequest.Timeout%2A> property indicates the length of time, in milliseconds, until the request times out and throws a <xref:System.Net.WebException>.</span></span> <span data-ttu-id="cee8a-478">此<xref:System.Net.WebRequest.Timeout%2A>属性仅影响<xref:System.Net.WebRequest.GetResponse%2A>通过方法发出的同步请求。</span><span class="sxs-lookup"><span data-stu-id="cee8a-478">The <xref:System.Net.WebRequest.Timeout%2A> property affects only synchronous requests made with the <xref:System.Net.WebRequest.GetResponse%2A> method.</span></span> <span data-ttu-id="cee8a-479">若要超时异步请求，请使用<xref:System.Net.WebRequest.Abort%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="cee8a-479">To time out asynchronous requests, use the <xref:System.Net.WebRequest.Abort%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cee8a-480">类是一个 `abstract` 类。 <xref:System.Net.WebRequest></span><span class="sxs-lookup"><span data-stu-id="cee8a-480">The <xref:System.Net.WebRequest> class is an `abstract` class.</span></span> <span data-ttu-id="cee8a-481"><xref:System.Net.WebRequest>实例在运行时的实际行为由<xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType>方法返回的子代类确定。</span><span class="sxs-lookup"><span data-stu-id="cee8a-481">The actual behavior of <xref:System.Net.WebRequest> instances at run time is determined by the descendant class returned by the <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="cee8a-482">有关默认值和异常的详细信息，请参阅子代类的文档，例如<xref:System.Net.HttpWebRequest>和。 <xref:System.Net.FileWebRequest></span><span class="sxs-lookup"><span data-stu-id="cee8a-482">For more information about default values and exceptions, see the documentation for the descendant classes, such as <xref:System.Net.HttpWebRequest> and <xref:System.Net.FileWebRequest>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cee8a-483">下面的示例将<xref:System.Net.WebRequest.Timeout%2A>属性设置为10000毫秒。</span><span class="sxs-lookup"><span data-stu-id="cee8a-483">The following example sets the <xref:System.Net.WebRequest.Timeout%2A> property to 10000 milliseconds.</span></span> <span data-ttu-id="cee8a-484">如果超时期限在可以返回资源之前过期， <xref:System.Net.WebException>则会引发。</span><span class="sxs-lookup"><span data-stu-id="cee8a-484">If the timeout period expires before the resource can be returned, a <xref:System.Net.WebException> is thrown.</span></span>  
  
 [!code-cpp[WebRequest_Timeout#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_Timeout/CPP/webrequest_timeout.cpp#1)]
 [!code-csharp[WebRequest_Timeout#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_Timeout/CS/webrequest_timeout.cs#1)]
 [!code-vb[WebRequest_Timeout#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_Timeout/VB/webrequest_timeout.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="cee8a-485">当未在子类中重写该属性时，试图获取或设置该属性。</span><span class="sxs-lookup"><span data-stu-id="cee8a-485">Any attempt is made to get or set the property, when the property is not overridden in a descendant class.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="cee8a-486">子类通过引发<see cref="T:System.Net.WebException" /> <see cref="P:System.Net.WebException.Status" /> ，并将字段设置为， <see cref="F:System.Net.WebExceptionStatus.Timeout" />以指示超时。</span><span class="sxs-lookup"><span data-stu-id="cee8a-486">Descendant classes signal a timeout by throwing a <see cref="T:System.Net.WebException" /> with the <see cref="P:System.Net.WebException.Status" /> field set to <see cref="F:System.Net.WebExceptionStatus.Timeout" />.</span></span> <span data-ttu-id="cee8a-487">当<see cref="P:System.Net.WebRequest.Timeout" />设置为<see cref="F:System.Threading.Timeout.Infinite" />子类时，不会超时。</span><span class="sxs-lookup"><span data-stu-id="cee8a-487">When <see cref="P:System.Net.WebRequest.Timeout" /> is set to <see cref="F:System.Threading.Timeout.Infinite" /> the descendant class does not time out.</span></span></para></block>
        <altmember cref="P:System.Net.HttpWebRequest.Timeout" />
      </Docs>
    </Member>
    <Member MemberName="UseDefaultCredentials">
      <MemberSignature Language="C#" Value="public virtual bool UseDefaultCredentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseDefaultCredentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.UseDefaultCredentials" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property UseDefaultCredentials As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool UseDefaultCredentials { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseDefaultCredentials : bool with get, set" Usage="System.Net.WebRequest.UseDefaultCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cee8a-488">当在子代类中重写时，获取或设置一个 <see cref="T:System.Boolean" /> 值，该值控制 <see cref="P:System.Net.CredentialCache.DefaultCredentials" /> 是否随请求一起发送。</span><span class="sxs-lookup"><span data-stu-id="cee8a-488">When overridden in a descendant class, gets or sets a <see cref="T:System.Boolean" /> value that controls whether <see cref="P:System.Net.CredentialCache.DefaultCredentials" /> are sent with requests.</span></span></summary>
        <value><span data-ttu-id="cee8a-489">如果使用默认凭据，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="cee8a-489"><see langword="true" /> if the default credentials are used; otherwise <see langword="false" />.</span></span> <span data-ttu-id="cee8a-490">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="cee8a-490">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cee8a-491">如果此`true` <xref:System.Net.WebRequest>对象发出的请求应在服务器请求时使用当前登录用户的凭据进行身份验证，请将此属性设置为。</span><span class="sxs-lookup"><span data-stu-id="cee8a-491">Set this property to `true` when requests made by this <xref:System.Net.WebRequest> object should, if requested by the server, be authenticated using the credentials of the currently logged on user.</span></span> <span data-ttu-id="cee8a-492">对于客户端应用程序，这在大多数情况下都是所需的行为。</span><span class="sxs-lookup"><span data-stu-id="cee8a-492">For client applications, this is the desired behavior in most scenarios.</span></span> <span data-ttu-id="cee8a-493">对于中间层应用程序（如 ASP.NET 应用程序），通常应将<xref:System.Net.WebRequest.Credentials%2A>属性设置为代表其发出请求的客户端的凭据。</span><span class="sxs-lookup"><span data-stu-id="cee8a-493">For middle tier applications, such as ASP.NET applications, instead of using this property, you would typically set the <xref:System.Net.WebRequest.Credentials%2A> property to the credentials of the client on whose behalf the request is made.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cee8a-494">您尝试在该请求发送之后设置此属性。</span><span class="sxs-lookup"><span data-stu-id="cee8a-494">You attempted to set this property after the request was sent.</span></span></exception>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="cee8a-495">当未在子类中重写该属性时，尝试访问该属性。</span><span class="sxs-lookup"><span data-stu-id="cee8a-495">Any attempt is made to access the property, when the property is not overridden in a descendant class.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
