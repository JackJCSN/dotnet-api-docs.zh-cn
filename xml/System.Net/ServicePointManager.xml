<Type Name="ServicePointManager" FullName="System.Net.ServicePointManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a36b2762317640c0807dd57933a88f6eb251b886" /><Meta Name="ms.sourcegitcommit" Value="f55040f35c19a83c85beb55243330558f6e369be" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="06/10/2019" /><Meta Name="ms.locfileid" Value="66818554" /></Metadata><TypeSignature Language="C#" Value="public class ServicePointManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi ServicePointManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.ServicePointManager" />
  <TypeSignature Language="VB.NET" Value="Public Class ServicePointManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServicePointManager" />
  <TypeSignature Language="F#" Value="type ServicePointManager = class" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.ServicePoint</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="9c59d-101">管理 <see cref="T:System.Net.ServicePoint" /> 对象集合。</span><span class="sxs-lookup"><span data-stu-id="9c59d-101">Manages the collection of <see cref="T:System.Net.ServicePoint" /> objects.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c59d-102"><xref:System.Net.ServicePointManager> 是用于创建、 维护和删除的实例的静态类<xref:System.Net.ServicePoint>类。</span><span class="sxs-lookup"><span data-stu-id="9c59d-102"><xref:System.Net.ServicePointManager> is a static class used to create, maintain, and delete instances of the <xref:System.Net.ServicePoint> class.</span></span>  
  
 <span data-ttu-id="9c59d-103">当应用程序请求对 Internet 资源统一资源标识符 (URI) 的连接通过<xref:System.Net.ServicePointManager>对象，<xref:System.Net.ServicePointManager>返回<xref:System.Net.ServicePoint>对象，其中包含的主机和标识方案的连接信息通过 URI。</span><span class="sxs-lookup"><span data-stu-id="9c59d-103">When an application requests a connection to an Internet resource Uniform Resource Identifier (URI) through the <xref:System.Net.ServicePointManager> object, the <xref:System.Net.ServicePointManager> returns a <xref:System.Net.ServicePoint> object that contains connection information for the host and scheme identified by the URI.</span></span> <span data-ttu-id="9c59d-104">如果已存在<xref:System.Net.ServicePoint>对象为该主机和方案，请<xref:System.Net.ServicePointManager>对象返回现有<xref:System.Net.ServicePoint>对象; 否则为<xref:System.Net.ServicePointManager>对象创建一个新<xref:System.Net.ServicePoint>对象。</span><span class="sxs-lookup"><span data-stu-id="9c59d-104">If there is an existing <xref:System.Net.ServicePoint> object for that host and scheme, the <xref:System.Net.ServicePointManager> object returns the existing <xref:System.Net.ServicePoint> object; otherwise, the <xref:System.Net.ServicePointManager> object creates a new <xref:System.Net.ServicePoint> object.</span></span>  
  
 <span data-ttu-id="9c59d-105">.NET Framework 4.6 包括一个新的安全功能，将阻止不安全的密码和哈希算法的连接。</span><span class="sxs-lookup"><span data-stu-id="9c59d-105">The .NET Framework 4.6 includes a new security feature that blocks insecure cipher and hashing algorithms for connections.</span></span> <span data-ttu-id="9c59d-106">如使用 TLS/SSL 通过 Api 的应用程序<xref:System.Net.Http.HttpClient>， <xref:System.Net.HttpWebRequest>， <xref:System.Net.FtpWebRequest>， <xref:System.Net.Mail.SmtpClient>，<xref:System.Net.Security.SslStream>等和面向.NET Framework 4.6 默认情况下获得更安全的行为。</span><span class="sxs-lookup"><span data-stu-id="9c59d-106">Applications using TLS/SSL through APIs such as <xref:System.Net.Http.HttpClient>, <xref:System.Net.HttpWebRequest>, <xref:System.Net.FtpWebRequest>, <xref:System.Net.Mail.SmtpClient>, <xref:System.Net.Security.SslStream>, etc. and targeting .NET Framework 4.6 get the more-secure behavior by default.</span></span>  
  
 <span data-ttu-id="9c59d-107">开发人员可能想要选择退出此行为以维护带 RC4 服务使用其现有 SSL3 服务或 TLS 互操作性。</span><span class="sxs-lookup"><span data-stu-id="9c59d-107">Developers may want to opt out of this behavior in order to maintain interoperability with their existing SSL3 services or TLS w/ RC4 services.</span></span> <span data-ttu-id="9c59d-108">[这篇文章](https://support.microsoft.com/kb/3069494)介绍了如何修改你的代码，以便禁用新行为。</span><span class="sxs-lookup"><span data-stu-id="9c59d-108">[This article](https://support.microsoft.com/kb/3069494) explains how to modify your code so that the new behavior is disabled.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9c59d-109">下面的代码示例将创建<xref:System.Net.ServicePoint>连接到 URI 的对象`www.contoso.com`。</span><span class="sxs-lookup"><span data-stu-id="9c59d-109">The following code example creates a <xref:System.Net.ServicePoint> object for connections to the URI `www.contoso.com`.</span></span>  
  
 [!code-cpp[Classic ServicePoint Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic ServicePoint Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ServicePoint Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic ServicePoint Example/CS/source.cs#1)]
 [!code-vb[Classic ServicePoint Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic ServicePoint Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Net.ServicePoint" />
    <related type="Article" href="https://msdn.microsoft.com/library/6e5def51-3646-4ef6-a7bd-c69151321bec"><span data-ttu-id="9c59d-110">ServicePointManager 元素 （网络设置）</span><span class="sxs-lookup"><span data-stu-id="9c59d-110">ServicePointManager Element (Network Settings)</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="CertificatePolicy">
      <MemberSignature Language="C#" Value="public static System.Net.ICertificatePolicy CertificatePolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Net.ICertificatePolicy CertificatePolicy" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePointManager.CertificatePolicy" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property CertificatePolicy As ICertificatePolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Net::ICertificatePolicy ^ CertificatePolicy { System::Net::ICertificatePolicy ^ get(); void set(System::Net::ICertificatePolicy ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CertificatePolicy : System.Net.ICertificatePolicy with get, set" Usage="System.Net.ServicePointManager.CertificatePolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use ServerCertificateValidationCallback instead", false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("CertificatePolicy is obsoleted for this type, please use ServerCertificateValidationCallback instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.ICertificatePolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9c59d-111">获取或设置服务器证书的策略。</span><span class="sxs-lookup"><span data-stu-id="9c59d-111">Gets or sets policy for server certificates.</span></span></summary>
        <value><span data-ttu-id="9c59d-112">一个实现 <see cref="T:System.Net.ICertificatePolicy" /> 接口的对象。</span><span class="sxs-lookup"><span data-stu-id="9c59d-112">An object that implements the <see cref="T:System.Net.ICertificatePolicy" /> interface.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c59d-113">当<xref:System.Net.ServicePointManager.CertificatePolicy%2A>属性设置为<xref:System.Net.ICertificatePolicy>接口对象<xref:System.Net.ServicePointManager>对象使用该实例而不是默认证书策略中定义的证书策略。</span><span class="sxs-lookup"><span data-stu-id="9c59d-113">When the <xref:System.Net.ServicePointManager.CertificatePolicy%2A> property is set to an <xref:System.Net.ICertificatePolicy> interface object, the <xref:System.Net.ServicePointManager> object uses the certificate policy defined in that instance instead of the default certificate policy.</span></span>  
  
 <span data-ttu-id="9c59d-114">默认证书策略允许有效的证书和有效的证书已过期。</span><span class="sxs-lookup"><span data-stu-id="9c59d-114">The default certificate policy allows valid certificates and valid certificates that have expired.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9c59d-115">下面的代码示例演示如何捕获自定义证书策略的证书策略异常。</span><span class="sxs-lookup"><span data-stu-id="9c59d-115">The following code example shows how to catch a certificate policy exception for a custom certificate policy.</span></span> <span data-ttu-id="9c59d-116">它假定已定义证书策略对象、 Web 资源的统一资源标识符 (URI) 包含在变量`myUri`，并且是否有一个名为方法`ProcessResponse`执行应用程序的工作。</span><span class="sxs-lookup"><span data-stu-id="9c59d-116">It assumes that the certificate policy object has been defined, that the Uniform Resource Identifier (URI) for the Web resource is contained in the variable `myUri`, and that there is a method named `ProcessResponse` that performs the work of the application.</span></span>  
  
 [!code-cpp[Classic ServicePointManager.CertificatePolicy Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic ServicePointManager.CertificatePolicy Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ServicePointManager.CertificatePolicy Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic ServicePointManager.CertificatePolicy Example/CS/source.cs#1)]
 [!code-vb[Classic ServicePointManager.CertificatePolicy Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic ServicePointManager.CertificatePolicy Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="9c59d-117">若要设置<see cref="P:System.Net.ServicePointManager.CertificatePolicy" />属性。</span><span class="sxs-lookup"><span data-stu-id="9c59d-117">To set the <see cref="P:System.Net.ServicePointManager.CertificatePolicy" /> property.</span></span> <span data-ttu-id="9c59d-118">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="9c59d-118">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <altmember cref="T:System.Net.ServicePoint" />
        <altmember cref="T:System.Security.Permissions.SecurityPermission" />
      </Docs>
    </Member>
    <Member MemberName="CheckCertificateRevocationList">
      <MemberSignature Language="C#" Value="public static bool CheckCertificateRevocationList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool CheckCertificateRevocationList" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePointManager.CheckCertificateRevocationList" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property CheckCertificateRevocationList As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool CheckCertificateRevocationList { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CheckCertificateRevocationList : bool with get, set" Usage="System.Net.ServicePointManager.CheckCertificateRevocationList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("CRL checks not implemented")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9c59d-119">获取或设置一个 <see cref="T:System.Boolean" /> 值，该值指示是否根据证书颁发机构吊销列表检查证书。</span><span class="sxs-lookup"><span data-stu-id="9c59d-119">Gets or sets a <see cref="T:System.Boolean" /> value that indicates whether the certificate is checked against the certificate authority revocation list.</span></span></summary>
        <value><span data-ttu-id="9c59d-120">如果检查证书吊销列表，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="9c59d-120"><see langword="true" /> if the certificate revocation list is checked; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c59d-121">当<xref:System.Net.ServicePointManager.CheckCertificateRevocationList%2A>是`true`，根据证书颁发机构吊销列表中，证书验证过程的一部分检查证书。</span><span class="sxs-lookup"><span data-stu-id="9c59d-121">When the <xref:System.Net.ServicePointManager.CheckCertificateRevocationList%2A> is `true`, the certificate is checked against the certificate authority revocation list, as part of the certificate validation process.</span></span> <span data-ttu-id="9c59d-122">其默认值是`false`。</span><span class="sxs-lookup"><span data-stu-id="9c59d-122">Its default value is `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9c59d-123">下面的代码示例设置此属性。</span><span class="sxs-lookup"><span data-stu-id="9c59d-123">The following code example sets this property.</span></span>  
  
 [!code-cpp[System.Net.ServicePoint#10](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#10)]
 [!code-csharp[System.Net.ServicePoint#10](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#10)]
 [!code-vb[System.Net.ServicePoint#10](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#10)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="9c59d-124">若要设置此属性。</span><span class="sxs-lookup"><span data-stu-id="9c59d-124">To set this property.</span></span> <span data-ttu-id="9c59d-125">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="9c59d-125">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <altmember cref="T:System.Net.ServicePoint" />
        <altmember cref="T:System.Security.Permissions.SecurityPermission" />
      </Docs>
    </Member>
    <Member MemberName="ClientCipherSuitesCallback">
      <MemberSignature Language="C#" Value="public static System.Net.CipherSuitesCallback ClientCipherSuitesCallback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Net.CipherSuitesCallback ClientCipherSuitesCallback" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePointManager.ClientCipherSuitesCallback" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property ClientCipherSuitesCallback As CipherSuitesCallback" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Net::CipherSuitesCallback ^ ClientCipherSuitesCallback { System::Net::CipherSuitesCallback ^ get(); void set(System::Net::CipherSuitesCallback ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ClientCipherSuitesCallback : System.Net.CipherSuitesCallback with get, set" Usage="System.Net.ServicePointManager.ClientCipherSuitesCallback" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.Obsolete("This API is no longer supported.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.CipherSuitesCallback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultConnectionLimit">
      <MemberSignature Language="C#" Value="public static int DefaultConnectionLimit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 DefaultConnectionLimit" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePointManager.DefaultConnectionLimit" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property DefaultConnectionLimit As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int DefaultConnectionLimit { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultConnectionLimit : int with get, set" Usage="System.Net.ServicePointManager.DefaultConnectionLimit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9c59d-126">获取或设置 <see cref="T:System.Net.ServicePoint" /> 对象所允许的最大并发连接数。</span><span class="sxs-lookup"><span data-stu-id="9c59d-126">Gets or sets the maximum number of concurrent connections allowed by a <see cref="T:System.Net.ServicePoint" /> object.</span></span></summary>
        <value><span data-ttu-id="9c59d-127"><see cref="T:System.Net.ServicePoint" /> 对象允许的最大并发连接数。</span><span class="sxs-lookup"><span data-stu-id="9c59d-127">The maximum number of concurrent connections allowed by a <see cref="T:System.Net.ServicePoint" /> object.</span></span> <span data-ttu-id="9c59d-128">默认连接限制为 10 中的 ASP.NET 借宿应用程序和对所有其他人的 2。</span><span class="sxs-lookup"><span data-stu-id="9c59d-128">The default connection limit is 10 for ASP.NET hosted applications and 2 for all others.</span></span> <span data-ttu-id="9c59d-129">应用作为 ASP.NET 主机运行时，如果 autoConfig 属性设置为 <see langword="true" />，则无法通过配置文件更改此属性的值。</span><span class="sxs-lookup"><span data-stu-id="9c59d-129">When an app is running as an ASP.NET host, it is not possible to alter the value of this property through the config file if the autoConfig property is set to <see langword="true" />.</span></span> <span data-ttu-id="9c59d-130">但是，当 autoConfig 属性设置为 <see langword="true" /> 时，可以按编程方式更改值。</span><span class="sxs-lookup"><span data-stu-id="9c59d-130">However, you can change the value programmatically when the autoConfig property is <see langword="true" />.</span></span> <span data-ttu-id="9c59d-131">当 AppDomain 加载时，设置一次首选值。</span><span class="sxs-lookup"><span data-stu-id="9c59d-131">Set your preferred value once, when the AppDomain loads.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c59d-132"><xref:System.Net.ServicePointManager.DefaultConnectionLimit%2A>属性设置的默认最大并发连接数<xref:System.Net.ServicePointManager>对象将分配给<xref:System.Net.ServicePoint.ConnectionLimit%2A>属性时创建<xref:System.Net.ServicePoint>对象。</span><span class="sxs-lookup"><span data-stu-id="9c59d-132">The <xref:System.Net.ServicePointManager.DefaultConnectionLimit%2A> property sets the default maximum number of concurrent connections that the <xref:System.Net.ServicePointManager> object assigns to the <xref:System.Net.ServicePoint.ConnectionLimit%2A> property when creating <xref:System.Net.ServicePoint> objects.</span></span>  
  
 <span data-ttu-id="9c59d-133">更改<xref:System.Net.ServicePointManager.DefaultConnectionLimit%2A>属性具有不会影响现有<xref:System.Net.ServicePoint>对象; 它只影响<xref:System.Net.ServicePoint>初始化在更改后的对象。</span><span class="sxs-lookup"><span data-stu-id="9c59d-133">Changing the <xref:System.Net.ServicePointManager.DefaultConnectionLimit%2A> property has no effect on existing <xref:System.Net.ServicePoint> objects; it affects only <xref:System.Net.ServicePoint> objects that are initialized after the change.</span></span> <span data-ttu-id="9c59d-134">如果尚未设置此属性的值，直接或通过配置，则该值默认为该常量<xref:System.Net.ServicePointManager.DefaultPersistentConnectionLimit>。</span><span class="sxs-lookup"><span data-stu-id="9c59d-134">If the value of this property has not been set either directly or through configuration, the value defaults to the constant <xref:System.Net.ServicePointManager.DefaultPersistentConnectionLimit>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9c59d-135">对任何更改<xref:System.Net.ServicePointManager.DefaultConnectionLimit%2A>属性将影响 HTTP 1.0 和 HTTP 1.1 连接。</span><span class="sxs-lookup"><span data-stu-id="9c59d-135">Any changes to the <xref:System.Net.ServicePointManager.DefaultConnectionLimit%2A> property affect both HTTP 1.0 and HTTP 1.1 connections.</span></span> <span data-ttu-id="9c59d-136">不能单独更改 HTTP 1.0 和 HTTP 1.1 协议的连接限制。</span><span class="sxs-lookup"><span data-stu-id="9c59d-136">It is not possible to separately alter the connection limit for HTTP 1.0 and HTTP 1.1 protocols.</span></span>
  
   
  
## Examples  
 <span data-ttu-id="9c59d-137">下面的代码示例设置此属性。</span><span class="sxs-lookup"><span data-stu-id="9c59d-137">The following code example sets this property.</span></span>  
  
 [!code-cpp[System.Net.ServicePoint#10](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#10)]
 [!code-csharp[System.Net.ServicePoint#10](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#10)]
 [!code-vb[System.Net.ServicePoint#10](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="9c59d-138"><see cref="P:System.Net.ServicePointManager.DefaultConnectionLimit" /> 小于或等于 0。</span><span class="sxs-lookup"><span data-stu-id="9c59d-138"><see cref="P:System.Net.ServicePointManager.DefaultConnectionLimit" /> is less than or equal to 0.</span></span></exception>
        <permission cref="T:System.Net.WebPermission"><span data-ttu-id="9c59d-139">为无限制的 Web 权限。</span><span class="sxs-lookup"><span data-stu-id="9c59d-139">for unrestricted Web permissions.</span></span> <span data-ttu-id="9c59d-140">关联的枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="9c59d-140">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
        <altmember cref="T:System.Net.ServicePoint" />
        <altmember cref="T:System.Net.WebPermission" />
      </Docs>
    </Member>
    <Member MemberName="DefaultNonPersistentConnectionLimit">
      <MemberSignature Language="C#" Value="public const int DefaultNonPersistentConnectionLimit = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 DefaultNonPersistentConnectionLimit = (4)" />
      <MemberSignature Language="DocId" Value="F:System.Net.ServicePointManager.DefaultNonPersistentConnectionLimit" />
      <MemberSignature Language="VB.NET" Value="Public Const DefaultNonPersistentConnectionLimit As Integer  = 4" />
      <MemberSignature Language="C++ CLI" Value="public: int DefaultNonPersistentConnectionLimit = 4;" />
      <MemberSignature Language="F#" Value="val mutable DefaultNonPersistentConnectionLimit : int" Usage="System.Net.ServicePointManager.DefaultNonPersistentConnectionLimit" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary><span data-ttu-id="9c59d-141">在连接到 HTTP/1.0 或更高版本服务器的 <see cref="T:System.Net.ServicePoint" /> 对象上允许存在的非持久性连接的默认数目 (4)。</span><span class="sxs-lookup"><span data-stu-id="9c59d-141">The default number of non-persistent connections (4) allowed on a <see cref="T:System.Net.ServicePoint" /> object connected to an HTTP/1.0 or later server.</span></span> <span data-ttu-id="9c59d-142">此字段为常量，但在 .NET Framework 2.0 中不再使用。</span><span class="sxs-lookup"><span data-stu-id="9c59d-142">This field is constant but is no longer used in the .NET Framework 2.0.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultPersistentConnectionLimit">
      <MemberSignature Language="C#" Value="public const int DefaultPersistentConnectionLimit = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 DefaultPersistentConnectionLimit = (2)" />
      <MemberSignature Language="DocId" Value="F:System.Net.ServicePointManager.DefaultPersistentConnectionLimit" />
      <MemberSignature Language="VB.NET" Value="Public Const DefaultPersistentConnectionLimit As Integer  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: int DefaultPersistentConnectionLimit = 2;" />
      <MemberSignature Language="F#" Value="val mutable DefaultPersistentConnectionLimit : int" Usage="System.Net.ServicePointManager.DefaultPersistentConnectionLimit" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="9c59d-143">在连接到 HTTP/1.1 或更高版本服务器的 <see cref="T:System.Net.ServicePoint" /> 对象上允许存在的持久性连接的默认数目 (2)。</span><span class="sxs-lookup"><span data-stu-id="9c59d-143">The default number of persistent connections (2) allowed on a <see cref="T:System.Net.ServicePoint" /> object connected to an HTTP/1.1 or later server.</span></span> <span data-ttu-id="9c59d-144">如果未以直接方式或通过配置设置 <see cref="P:System.Net.ServicePointManager.DefaultConnectionLimit" /> 属性的值，则此字段为常量，用于初始化 <see cref="P:System.Net.ServicePointManager.DefaultConnectionLimit" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="9c59d-144">This field is constant and is used to initialize the <see cref="P:System.Net.ServicePointManager.DefaultConnectionLimit" /> property if the value of the <see cref="P:System.Net.ServicePointManager.DefaultConnectionLimit" /> property has not been set either directly or through configuration.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9c59d-145">下面的代码示例设置<xref:System.Net.ServicePointManager.DefaultConnectionLimit%2A>使用此字段的属性。</span><span class="sxs-lookup"><span data-stu-id="9c59d-145">The following code example sets the <xref:System.Net.ServicePointManager.DefaultConnectionLimit%2A> property using this field.</span></span>  
  
 [!code-cpp[System.Net.ServicePoint#10](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#10)]
 [!code-csharp[System.Net.ServicePoint#10](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#10)]
 [!code-vb[System.Net.ServicePoint#10](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DnsRefreshTimeout">
      <MemberSignature Language="C#" Value="public static int DnsRefreshTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 DnsRefreshTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePointManager.DnsRefreshTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property DnsRefreshTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int DnsRefreshTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.DnsRefreshTimeout : int with get, set" Usage="System.Net.ServicePointManager.DnsRefreshTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9c59d-146">获取或设置一个值，该值指示域名服务 (DNS) 解析多长时间内视为有效。</span><span class="sxs-lookup"><span data-stu-id="9c59d-146">Gets or sets a value that indicates how long a Domain Name Service (DNS) resolution is considered valid.</span></span></summary>
        <value><span data-ttu-id="9c59d-147">超时值（以毫秒为单位）。</span><span class="sxs-lookup"><span data-stu-id="9c59d-147">The time-out value, in milliseconds.</span></span> <span data-ttu-id="9c59d-148">值 -1 指示超时期限无限。</span><span class="sxs-lookup"><span data-stu-id="9c59d-148">A value of -1 indicates an infinite time-out period.</span></span> <span data-ttu-id="9c59d-149">默认值是 120,000 毫秒（2 分钟）。</span><span class="sxs-lookup"><span data-stu-id="9c59d-149">The default value is 120,000 milliseconds (two minutes).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9c59d-150">下面的代码示例设置此属性。</span><span class="sxs-lookup"><span data-stu-id="9c59d-150">The following code example sets this property.</span></span>  
  
 [!code-cpp[System.Net.ServicePointWhidbey#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePointWhidbey/cpp/servicepoint.cpp#1)]
 [!code-csharp[System.Net.ServicePointWhidbey#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePointWhidbey/CS/servicepoint.cs#1)]
 [!code-vb[System.Net.ServicePointWhidbey#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePointWhidbey/VB/servicepoint.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.ServicePoint" />
      </Docs>
    </Member>
    <Member MemberName="EnableDnsRoundRobin">
      <MemberSignature Language="C#" Value="public static bool EnableDnsRoundRobin { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool EnableDnsRoundRobin" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePointManager.EnableDnsRoundRobin" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property EnableDnsRoundRobin As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool EnableDnsRoundRobin { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableDnsRoundRobin : bool with get, set" Usage="System.Net.ServicePointManager.EnableDnsRoundRobin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9c59d-151">获取或设置一个值，该值指示域名服务 (DNS) 解析是否在多个适用的 Internet 协议 (IP) 地址之间轮流进行。</span><span class="sxs-lookup"><span data-stu-id="9c59d-151">Gets or sets a value that indicates whether a Domain Name Service (DNS) resolution rotates among the applicable Internet Protocol (IP) addresses.</span></span></summary>
        <value><span data-ttu-id="9c59d-152">如果 DNS 解析总是返回特定主机的第一个 IP 地址，则为 <see langword="false" />；否则，为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="9c59d-152"><see langword="false" /> if a DNS resolution always returns the first IP address for a particular host; otherwise <see langword="true" />.</span></span> <span data-ttu-id="9c59d-153">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="9c59d-153">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c59d-154">多个 IP 地址与主机名关联时，DNS 解析通常返回仅为第一个 IP 地址。</span><span class="sxs-lookup"><span data-stu-id="9c59d-154">When more than one IP address is associated with a host name, a DNS resolution normally returns only the first IP address.</span></span> <span data-ttu-id="9c59d-155">如果此属性设置为`true`，则后续的 DNS 解析将在特定主机的所有可用的 IP 地址之间进行循环。</span><span class="sxs-lookup"><span data-stu-id="9c59d-155">If you set this property to `true`, then subsequent DNS resolutions will cycle through all available IP addresses for a particular host.</span></span> <span data-ttu-id="9c59d-156">如果服务使用 DNS 作为负载平衡服务器或服务器群集之间的机制，此选项非常有用。</span><span class="sxs-lookup"><span data-stu-id="9c59d-156">This option is useful when a service uses DNS as a load balancing mechanism between servers or server clusters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9c59d-157">下面的代码示例设置此属性。</span><span class="sxs-lookup"><span data-stu-id="9c59d-157">The following code example sets this property.</span></span>  
  
 [!code-cpp[System.Net.ServicePointWhidbey#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePointWhidbey/cpp/servicepoint.cpp#1)]
 [!code-csharp[System.Net.ServicePointWhidbey#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePointWhidbey/CS/servicepoint.cs#1)]
 [!code-vb[System.Net.ServicePointWhidbey#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePointWhidbey/VB/servicepoint.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.ServicePoint" />
      </Docs>
    </Member>
    <Member MemberName="EncryptionPolicy">
      <MemberSignature Language="C#" Value="public static System.Net.Security.EncryptionPolicy EncryptionPolicy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Net.Security.EncryptionPolicy EncryptionPolicy" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePointManager.EncryptionPolicy" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property EncryptionPolicy As EncryptionPolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Net::Security::EncryptionPolicy EncryptionPolicy { System::Net::Security::EncryptionPolicy get(); };" />
      <MemberSignature Language="F#" Value="member this.EncryptionPolicy : System.Net.Security.EncryptionPolicy" Usage="System.Net.ServicePointManager.EncryptionPolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("Always returns EncryptionPolicy.RequireEncryption.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Security.EncryptionPolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9c59d-158">获取此 <see cref="T:System.Net.Security.EncryptionPolicy" /> 实例的 <see cref="T:System.Net.ServicePointManager" />。</span><span class="sxs-lookup"><span data-stu-id="9c59d-158">Gets the <see cref="T:System.Net.Security.EncryptionPolicy" /> for this <see cref="T:System.Net.ServicePointManager" /> instance.</span></span></summary>
        <value><span data-ttu-id="9c59d-159">用于此 <see cref="T:System.Net.ServicePointManager" /> 实例的加密策略。</span><span class="sxs-lookup"><span data-stu-id="9c59d-159">The encryption policy to use for this <see cref="T:System.Net.ServicePointManager" /> instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c59d-160">如果在配置文件中，不指定值<xref:System.Net.ServicePointManager.EncryptionPolicy%2A>属性的默认值为<xref:System.Net.Security.EncryptionPolicy.RequireEncryption?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="9c59d-160">If a value is not specified in the configuration file, the <xref:System.Net.ServicePointManager.EncryptionPolicy%2A> property defaults to <xref:System.Net.Security.EncryptionPolicy.RequireEncryption?displayProperty=nameWithType>.</span></span> <span data-ttu-id="9c59d-161">这应用于此的 SSL/TLS 会话<xref:System.Net.ServicePointManager>实例。</span><span class="sxs-lookup"><span data-stu-id="9c59d-161">This is applied to an SSL/TLS session on this <xref:System.Net.ServicePointManager> instance.</span></span>  
  
 <span data-ttu-id="9c59d-162">加密策略设置为时需要使用 Null 密码<xref:System.Net.Security.EncryptionPolicy.NoEncryption?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="9c59d-162">The use of the Null cipher is required when the encryption policy is set to <xref:System.Net.Security.EncryptionPolicy.NoEncryption?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.ServicePoint" />
        <altmember cref="P:System.Net.Configuration.ServicePointManagerElement.EncryptionPolicy" />
        <altmember cref="T:System.Net.Security.EncryptionPolicy" />
        <related type="Article" href="https://msdn.microsoft.com/library/6e5def51-3646-4ef6-a7bd-c69151321bec"><span data-ttu-id="9c59d-163">ServicePointManager 元素 （网络设置）</span><span class="sxs-lookup"><span data-stu-id="9c59d-163">ServicePointManager Element (Network Settings)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Expect100Continue">
      <MemberSignature Language="C#" Value="public static bool Expect100Continue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool Expect100Continue" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePointManager.Expect100Continue" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property Expect100Continue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool Expect100Continue { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Expect100Continue : bool with get, set" Usage="System.Net.ServicePointManager.Expect100Continue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9c59d-164">获取或设置一个 <see cref="T:System.Boolean" /> 值，该值确定是否使用 100-Continue 行为。</span><span class="sxs-lookup"><span data-stu-id="9c59d-164">Gets or sets a <see cref="T:System.Boolean" /> value that determines whether 100-Continue behavior is used.</span></span></summary>
        <value><span data-ttu-id="9c59d-165">若要启用 100-Continue 行为，则为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="9c59d-165"><see langword="true" /> to enable 100-Continue behavior.</span></span> <span data-ttu-id="9c59d-166">默认值为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="9c59d-166">The default value is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c59d-167">当此属性设置为`true`、 100-继续使用行为。</span><span class="sxs-lookup"><span data-stu-id="9c59d-167">When this property is set to `true`, 100-Continue behavior is used.</span></span> <span data-ttu-id="9c59d-168">客户端请求使用`PUT`并`POST`如果方法会将 Expect 标头添加到请求<xref:System.Net.ServicePointManager.Expect100Continue%2A>属性是`true`并<xref:System.Net.HttpWebRequest.ContentLength%2A>属性是大于零或<xref:System.Net.HttpWebRequest.SendChunked%2A>属性为 true。</span><span class="sxs-lookup"><span data-stu-id="9c59d-168">Client requests that use the `PUT` and `POST` methods will add an Expect header to the request if the <xref:System.Net.ServicePointManager.Expect100Continue%2A> property is `true` and <xref:System.Net.HttpWebRequest.ContentLength%2A> property is greater than zero or the <xref:System.Net.HttpWebRequest.SendChunked%2A> property is true.</span></span> <span data-ttu-id="9c59d-169">客户端希望接收 100-继续响应的服务器，用于指示客户端应发送要发布的数据。</span><span class="sxs-lookup"><span data-stu-id="9c59d-169">The client will expect to receive a 100-Continue response from the server to indicate that the client should send the data to be posted.</span></span> <span data-ttu-id="9c59d-170">此机制允许客户端以避免通过网络发送大量数据时的服务器，根据请求标头，想要拒绝此请求。</span><span class="sxs-lookup"><span data-stu-id="9c59d-170">This mechanism allows clients to avoid sending large amounts of data over the network when the server, based on the request headers, intends to reject the request.</span></span>  
  
 <span data-ttu-id="9c59d-171">例如，假设<xref:System.Net.ServicePointManager.Expect100Continue%2A>属性是`false`。</span><span class="sxs-lookup"><span data-stu-id="9c59d-171">For example, assume the <xref:System.Net.ServicePointManager.Expect100Continue%2A> property is `false`.</span></span> <span data-ttu-id="9c59d-172">当请求发送到服务器时，它包含的数据。</span><span class="sxs-lookup"><span data-stu-id="9c59d-172">When the request is sent to the server, it includes the data.</span></span> <span data-ttu-id="9c59d-173">如果之后读取的请求标头，服务器需要身份验证，并且必须发送 401 响应，客户端必须重新发送具有正确的身份验证标头的数据。</span><span class="sxs-lookup"><span data-stu-id="9c59d-173">If, after reading the request headers, the server requires authentication and must send a 401 response, the client must resend the data with proper authentication headers.</span></span>  
  
 <span data-ttu-id="9c59d-174">如果此属性为`true`，请求标头发送到服务器。</span><span class="sxs-lookup"><span data-stu-id="9c59d-174">If this property is `true`, the request headers are sent to the server.</span></span> <span data-ttu-id="9c59d-175">如果服务器不拒绝请求，则会发送一个 100-继续响应信号可以传输数据。</span><span class="sxs-lookup"><span data-stu-id="9c59d-175">If the server has not rejected the request, it sends a 100-Continue response signaling that the data can be transmitted.</span></span> <span data-ttu-id="9c59d-176">如果在上述示例中，服务器需要身份验证，将它发送 401 响应，客户端没有不必要地传输数据。</span><span class="sxs-lookup"><span data-stu-id="9c59d-176">If, as in the preceding example, the server requires authentication, it sends the 401 response and the client has not unnecessarily transmitted the data.</span></span>  
  
 <span data-ttu-id="9c59d-177">更改此属性的值不影响现有<xref:System.Net.ServicePoint>对象。</span><span class="sxs-lookup"><span data-stu-id="9c59d-177">Changing the value of this property does not affect existing <xref:System.Net.ServicePoint> objects.</span></span> <span data-ttu-id="9c59d-178">仅新<xref:System.Net.ServicePoint>会影响在更改后创建的对象。</span><span class="sxs-lookup"><span data-stu-id="9c59d-178">Only new <xref:System.Net.ServicePoint> objects created after the change are affected.</span></span>  
  
 <span data-ttu-id="9c59d-179">100-继续行为不使用的 HTTP 1.0 请求，即使此属性设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="9c59d-179">The 100-Continue behavior is not used for HTTP 1.0 requests even if this property is set to `true`.</span></span>  
  
 <span data-ttu-id="9c59d-180">Expect 100-继续在 IETF RFC 2616 部分 10.1.1 完全介绍行为。</span><span class="sxs-lookup"><span data-stu-id="9c59d-180">The Expect 100-Continue behavior is fully described in IETF RFC 2616 Section 10.1.1.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9c59d-181">下面的代码示例设置此属性。</span><span class="sxs-lookup"><span data-stu-id="9c59d-181">The following code example sets this property.</span></span>  
  
 [!code-cpp[System.Net.ServicePoint#10](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#10)]
 [!code-csharp[System.Net.ServicePoint#10](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#10)]
 [!code-vb[System.Net.ServicePoint#10](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.ServicePoint" />
      </Docs>
    </Member>
    <MemberGroup MemberName="FindServicePoint">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9c59d-182">查找现有的 <see cref="T:System.Net.ServicePoint" /> 对象或者创建新的 <see cref="T:System.Net.ServicePoint" /> 对象以管理此请求的通信。</span><span class="sxs-lookup"><span data-stu-id="9c59d-182">Finds an existing <see cref="T:System.Net.ServicePoint" /> object or creates a new <see cref="T:System.Net.ServicePoint" /> object to manage communication for this request.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindServicePoint">
      <MemberSignature Language="C#" Value="public static System.Net.ServicePoint FindServicePoint (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.ServicePoint FindServicePoint(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.ServicePointManager.FindServicePoint(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindServicePoint (address As Uri) As ServicePoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::ServicePoint ^ FindServicePoint(Uri ^ address);" />
      <MemberSignature Language="F#" Value="static member FindServicePoint : Uri -&gt; System.Net.ServicePoint" Usage="System.Net.ServicePointManager.FindServicePoint address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.ServicePoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="9c59d-183">要联系的 Internet 资源的 <see cref="T:System.Uri" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="9c59d-183">The <see cref="T:System.Uri" /> object of the Internet resource to contact.</span></span></param>
        <summary><span data-ttu-id="9c59d-184">查找现有的 <see cref="T:System.Net.ServicePoint" /> 对象或创建新的 <see cref="T:System.Net.ServicePoint" /> 对象来管理与指定 <see cref="T:System.Uri" /> 对象的通信。</span><span class="sxs-lookup"><span data-stu-id="9c59d-184">Finds an existing <see cref="T:System.Net.ServicePoint" /> object or creates a new <see cref="T:System.Net.ServicePoint" /> object to manage communications with the specified <see cref="T:System.Uri" /> object.</span></span></summary>
        <returns><span data-ttu-id="9c59d-185">管理该请求的通信的 <see cref="T:System.Net.ServicePoint" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="9c59d-185">The <see cref="T:System.Net.ServicePoint" /> object that manages communications for the request.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c59d-186"><xref:System.Net.ServicePointManager.FindServicePoint%2A>方法将返回<xref:System.Net.ServicePoint>与指定的 Internet 主机名称关联的对象。</span><span class="sxs-lookup"><span data-stu-id="9c59d-186">The <xref:System.Net.ServicePointManager.FindServicePoint%2A> method returns the <xref:System.Net.ServicePoint> object associated with the specified Internet host name.</span></span> <span data-ttu-id="9c59d-187">如果没有<xref:System.Net.ServicePoint>存在该主机对象<xref:System.Net.ServicePointManager>对象将创建一个。</span><span class="sxs-lookup"><span data-stu-id="9c59d-187">If no <xref:System.Net.ServicePoint> object exists for that host, the <xref:System.Net.ServicePointManager> object creates one.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9c59d-188"><paramref name="address" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9c59d-188"><paramref name="address" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="9c59d-189">已达到在 <see cref="T:System.Net.ServicePoint" /> 中定义的 <see cref="P:System.Net.ServicePointManager.MaxServicePoints" /> 对象的最大数量。</span><span class="sxs-lookup"><span data-stu-id="9c59d-189">The maximum number of <see cref="T:System.Net.ServicePoint" /> objects defined in <see cref="P:System.Net.ServicePointManager.MaxServicePoints" /> has been reached.</span></span></exception>
        <altmember cref="T:System.Net.ServicePoint" />
      </Docs>
    </Member>
    <Member MemberName="FindServicePoint">
      <MemberSignature Language="C#" Value="public static System.Net.ServicePoint FindServicePoint (string uriString, System.Net.IWebProxy proxy);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.ServicePoint FindServicePoint(string uriString, class System.Net.IWebProxy proxy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.ServicePointManager.FindServicePoint(System.String,System.Net.IWebProxy)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindServicePoint (uriString As String, proxy As IWebProxy) As ServicePoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::ServicePoint ^ FindServicePoint(System::String ^ uriString, System::Net::IWebProxy ^ proxy);" />
      <MemberSignature Language="F#" Value="static member FindServicePoint : string * System.Net.IWebProxy -&gt; System.Net.ServicePoint" Usage="System.Net.ServicePointManager.FindServicePoint (uriString, proxy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.ServicePoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uriString" Type="System.String" />
        <Parameter Name="proxy" Type="System.Net.IWebProxy" />
      </Parameters>
      <Docs>
        <param name="uriString"><span data-ttu-id="9c59d-190">要联系的 Internet 资源的 URI。</span><span class="sxs-lookup"><span data-stu-id="9c59d-190">The URI of the Internet resource to be contacted.</span></span></param>
        <param name="proxy"><span data-ttu-id="9c59d-191">此请求的代理数据。</span><span class="sxs-lookup"><span data-stu-id="9c59d-191">The proxy data for this request.</span></span></param>
        <summary><span data-ttu-id="9c59d-192">查找现有的 <see cref="T:System.Net.ServicePoint" /> 对象或创建新的 <see cref="T:System.Net.ServicePoint" /> 对象，以管理与指定的统一资源标识符 (URI) 的通信。</span><span class="sxs-lookup"><span data-stu-id="9c59d-192">Finds an existing <see cref="T:System.Net.ServicePoint" /> object or creates a new <see cref="T:System.Net.ServicePoint" /> object to manage communications with the specified Uniform Resource Identifier (URI).</span></span></summary>
        <returns><span data-ttu-id="9c59d-193">管理该请求的通信的 <see cref="T:System.Net.ServicePoint" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="9c59d-193">The <see cref="T:System.Net.ServicePoint" /> object that manages communications for the request.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c59d-194"><xref:System.Net.ServicePointManager.FindServicePoint%2A>方法将返回<xref:System.Net.ServicePoint>与指定的 Internet 主机名称关联的对象。</span><span class="sxs-lookup"><span data-stu-id="9c59d-194">The <xref:System.Net.ServicePointManager.FindServicePoint%2A> method returns the <xref:System.Net.ServicePoint> object associated with the specified Internet host name.</span></span> <span data-ttu-id="9c59d-195">如果没有<xref:System.Net.ServicePoint>存在该主机对象<xref:System.Net.ServicePointManager>对象将创建一个。</span><span class="sxs-lookup"><span data-stu-id="9c59d-195">If no <xref:System.Net.ServicePoint> object exists for that host, the <xref:System.Net.ServicePointManager> object creates one.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9c59d-196">下面的代码示例演示如何调用此方法来访问<xref:System.Net.ServicePoint>对象。</span><span class="sxs-lookup"><span data-stu-id="9c59d-196">The following code example demonstrates calling this method to access a <xref:System.Net.ServicePoint> object.</span></span>  
  
 [!code-cpp[System.Net.ServicePoint#7](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#7)]
 [!code-csharp[System.Net.ServicePoint#7](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#7)]
 [!code-vb[System.Net.ServicePoint#7](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UriFormatException"><span data-ttu-id="9c59d-197"><paramref name="uriString" /> 中指定的 URI 无效。</span><span class="sxs-lookup"><span data-stu-id="9c59d-197">The URI specified in <paramref name="uriString" /> is invalid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="9c59d-198">已达到在 <see cref="T:System.Net.ServicePoint" /> 中定义的 <see cref="P:System.Net.ServicePointManager.MaxServicePoints" /> 对象的最大数量。</span><span class="sxs-lookup"><span data-stu-id="9c59d-198">The maximum number of <see cref="T:System.Net.ServicePoint" /> objects defined in <see cref="P:System.Net.ServicePointManager.MaxServicePoints" /> has been reached.</span></span></exception>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ServicePoint" />
      </Docs>
    </Member>
    <Member MemberName="FindServicePoint">
      <MemberSignature Language="C#" Value="public static System.Net.ServicePoint FindServicePoint (Uri address, System.Net.IWebProxy proxy);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.ServicePoint FindServicePoint(class System.Uri address, class System.Net.IWebProxy proxy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.ServicePointManager.FindServicePoint(System.Uri,System.Net.IWebProxy)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindServicePoint (address As Uri, proxy As IWebProxy) As ServicePoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::ServicePoint ^ FindServicePoint(Uri ^ address, System::Net::IWebProxy ^ proxy);" />
      <MemberSignature Language="F#" Value="static member FindServicePoint : Uri * System.Net.IWebProxy -&gt; System.Net.ServicePoint" Usage="System.Net.ServicePointManager.FindServicePoint (address, proxy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.ServicePoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="proxy" Type="System.Net.IWebProxy" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="9c59d-199"><see cref="T:System.Uri" /> 对象，包含要联系的 Internet 资源的地址。</span><span class="sxs-lookup"><span data-stu-id="9c59d-199">A <see cref="T:System.Uri" /> object that contains the address of the Internet resource to contact.</span></span></param>
        <param name="proxy"><span data-ttu-id="9c59d-200">此请求的代理数据。</span><span class="sxs-lookup"><span data-stu-id="9c59d-200">The proxy data for this request.</span></span></param>
        <summary><span data-ttu-id="9c59d-201">查找现有的 <see cref="T:System.Net.ServicePoint" /> 对象或创建新的 <see cref="T:System.Net.ServicePoint" /> 对象来管理与指定 <see cref="T:System.Uri" /> 对象的通信。</span><span class="sxs-lookup"><span data-stu-id="9c59d-201">Finds an existing <see cref="T:System.Net.ServicePoint" /> object or creates a new <see cref="T:System.Net.ServicePoint" /> object to manage communications with the specified <see cref="T:System.Uri" /> object.</span></span></summary>
        <returns><span data-ttu-id="9c59d-202">管理该请求的通信的 <see cref="T:System.Net.ServicePoint" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="9c59d-202">The <see cref="T:System.Net.ServicePoint" /> object that manages communications for the request.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c59d-203"><xref:System.Net.ServicePointManager.FindServicePoint%2A>方法将返回<xref:System.Net.ServicePoint>与指定的 Internet 主机名称关联的对象。</span><span class="sxs-lookup"><span data-stu-id="9c59d-203">The <xref:System.Net.ServicePointManager.FindServicePoint%2A> method returns the <xref:System.Net.ServicePoint> object associated with the specified Internet host name.</span></span> <span data-ttu-id="9c59d-204">如果没有<xref:System.Net.ServicePoint>存在该主机对象<xref:System.Net.ServicePointManager>对象将创建一个。</span><span class="sxs-lookup"><span data-stu-id="9c59d-204">If no <xref:System.Net.ServicePoint> object exists for that host, the <xref:System.Net.ServicePointManager> object creates one.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9c59d-205"><paramref name="address" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9c59d-205"><paramref name="address" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="9c59d-206">已达到在 <see cref="T:System.Net.ServicePoint" /> 中定义的 <see cref="P:System.Net.ServicePointManager.MaxServicePoints" /> 对象的最大数量。</span><span class="sxs-lookup"><span data-stu-id="9c59d-206">The maximum number of <see cref="T:System.Net.ServicePoint" /> objects defined in <see cref="P:System.Net.ServicePointManager.MaxServicePoints" /> has been reached.</span></span></exception>
        <altmember cref="T:System.Net.ServicePoint" />
      </Docs>
    </Member>
    <Member MemberName="MaxServicePointIdleTime">
      <MemberSignature Language="C#" Value="public static int MaxServicePointIdleTime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 MaxServicePointIdleTime" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePointManager.MaxServicePointIdleTime" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property MaxServicePointIdleTime As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int MaxServicePointIdleTime { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxServicePointIdleTime : int with get, set" Usage="System.Net.ServicePointManager.MaxServicePointIdleTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9c59d-207">获取或设置 <see cref="T:System.Net.ServicePoint" /> 对象的最大空闲时间。</span><span class="sxs-lookup"><span data-stu-id="9c59d-207">Gets or sets the maximum idle time of a <see cref="T:System.Net.ServicePoint" /> object.</span></span></summary>
        <value><span data-ttu-id="9c59d-208"><see cref="T:System.Net.ServicePoint" /> 对象的最大空闲时间（以毫秒为单位）。</span><span class="sxs-lookup"><span data-stu-id="9c59d-208">The maximum idle time, in milliseconds, of a <see cref="T:System.Net.ServicePoint" /> object.</span></span> <span data-ttu-id="9c59d-209">默认值是 100,000 毫秒（100 秒）。</span><span class="sxs-lookup"><span data-stu-id="9c59d-209">The default value is 100,000 milliseconds (100 seconds).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c59d-210"><xref:System.Net.ServicePointManager.MaxServicePointIdleTime%2A>属性设置的最长空闲时间<xref:System.Net.ServicePointManager>对象将分配给<xref:System.Net.ServicePoint.MaxIdleTime%2A>属性时创建<xref:System.Net.ServicePoint>对象。</span><span class="sxs-lookup"><span data-stu-id="9c59d-210">The <xref:System.Net.ServicePointManager.MaxServicePointIdleTime%2A> property sets the maximum idle time that the <xref:System.Net.ServicePointManager> object assigns to the <xref:System.Net.ServicePoint.MaxIdleTime%2A> property when creating <xref:System.Net.ServicePoint> objects.</span></span> <span data-ttu-id="9c59d-211">为此值的更改只会影响<xref:System.Net.ServicePoint>后更改的值初始化的对象。</span><span class="sxs-lookup"><span data-stu-id="9c59d-211">Changes to this value affect only <xref:System.Net.ServicePoint> objects that are initialized after the value is changed.</span></span>  
  
 <span data-ttu-id="9c59d-212">之后<xref:System.Net.ServicePoint>对象中指定的时间已处于空闲状态<xref:System.Net.ServicePoint.MaxIdleTime%2A>，它是可以进行垃圾回收。</span><span class="sxs-lookup"><span data-stu-id="9c59d-212">After a <xref:System.Net.ServicePoint> object has been idle for the time specified in <xref:System.Net.ServicePoint.MaxIdleTime%2A>, it is eligible for garbage collection.</span></span> <span data-ttu-id="9c59d-213">一个<xref:System.Net.ServicePoint>对象处于空闲状态时与关联的连接列表<xref:System.Net.ServicePoint>对象为空。</span><span class="sxs-lookup"><span data-stu-id="9c59d-213">A <xref:System.Net.ServicePoint> object is idle when the list of connections associated with the <xref:System.Net.ServicePoint> object is empty.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9c59d-214">下面的代码示例设置此属性。</span><span class="sxs-lookup"><span data-stu-id="9c59d-214">The following code example sets this property.</span></span>  
  
 [!code-cpp[System.Net.ServicePoint#8](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#8)]
 [!code-csharp[System.Net.ServicePoint#8](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#8)]
 [!code-vb[System.Net.ServicePoint#8](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="9c59d-215"><see cref="P:System.Net.ServicePointManager.MaxServicePointIdleTime" /> 小于 <see cref="F:System.Threading.Timeout.Infinite" /> 或大于 <see cref="F:System.Int32.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="9c59d-215"><see cref="P:System.Net.ServicePointManager.MaxServicePointIdleTime" /> is less than <see cref="F:System.Threading.Timeout.Infinite" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
        <permission cref="T:System.Net.WebPermission"><span data-ttu-id="9c59d-216">为无限制的 Web 权限。</span><span class="sxs-lookup"><span data-stu-id="9c59d-216">For unrestricted Web permissions.</span></span> <span data-ttu-id="9c59d-217">关联的枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="9c59d-217">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
        <altmember cref="T:System.Net.ServicePoint" />
        <altmember cref="T:System.Net.WebPermission" />
      </Docs>
    </Member>
    <Member MemberName="MaxServicePoints">
      <MemberSignature Language="C#" Value="public static int MaxServicePoints { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 MaxServicePoints" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePointManager.MaxServicePoints" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property MaxServicePoints As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int MaxServicePoints { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxServicePoints : int with get, set" Usage="System.Net.ServicePointManager.MaxServicePoints" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9c59d-218">获取或设置任何时候保持的最大 <see cref="T:System.Net.ServicePoint" /> 对象数。</span><span class="sxs-lookup"><span data-stu-id="9c59d-218">Gets or sets the maximum number of <see cref="T:System.Net.ServicePoint" /> objects to maintain at any time.</span></span></summary>
        <value><span data-ttu-id="9c59d-219">要保持的最大 <see cref="T:System.Net.ServicePoint" /> 对象数。</span><span class="sxs-lookup"><span data-stu-id="9c59d-219">The maximum number of <see cref="T:System.Net.ServicePoint" /> objects to maintain.</span></span> <span data-ttu-id="9c59d-220">默认值是 0，表示对 <see cref="T:System.Net.ServicePoint" /> 对象的数量没有限制。</span><span class="sxs-lookup"><span data-stu-id="9c59d-220">The default value is 0, which means there is no limit to the number of <see cref="T:System.Net.ServicePoint" /> objects.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c59d-221">时减少<xref:System.Net.ServicePointManager.MaxServicePoints%2A>低于的数字属性<xref:System.Net.ServicePoint>对象中是否存在，当前<xref:System.Net.ServicePointManager>删除<xref:System.Net.ServicePoint>具有最长空闲时间的对象。</span><span class="sxs-lookup"><span data-stu-id="9c59d-221">When you reduce the <xref:System.Net.ServicePointManager.MaxServicePoints%2A> property below the number of <xref:System.Net.ServicePoint> objects currently in existence, the <xref:System.Net.ServicePointManager> deletes the <xref:System.Net.ServicePoint> objects with the longest idle times.</span></span> <span data-ttu-id="9c59d-222">如果数<xref:System.Net.ServicePoint>连接为活动状态的对象是否大于的值<xref:System.Net.ServicePointManager.MaxServicePoints%2A>，则<xref:System.Net.ServicePointManager>对象删除<xref:System.Net.ServicePoint>对象进入空闲状态。</span><span class="sxs-lookup"><span data-stu-id="9c59d-222">If the number of <xref:System.Net.ServicePoint> objects with active connections is greater than the value of <xref:System.Net.ServicePointManager.MaxServicePoints%2A>, the <xref:System.Net.ServicePointManager> object deletes the <xref:System.Net.ServicePoint> objects as they become idle.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9c59d-223">下面的代码示例设置此属性。</span><span class="sxs-lookup"><span data-stu-id="9c59d-223">The following code example sets this property.</span></span>  
  
 [!code-cpp[System.Net.ServicePoint#8](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#8)]
 [!code-csharp[System.Net.ServicePoint#8](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#8)]
 [!code-vb[System.Net.ServicePoint#8](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="9c59d-224"><see cref="P:System.Net.ServicePointManager.MaxServicePoints" /> 小于 0 或大于 <see cref="F:System.Int32.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="9c59d-224"><see cref="P:System.Net.ServicePointManager.MaxServicePoints" /> is less than 0 or greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
        <permission cref="T:System.Net.WebPermission"><span data-ttu-id="9c59d-225">为无限制的 Web 权限。</span><span class="sxs-lookup"><span data-stu-id="9c59d-225">for unrestricted Web permissions.</span></span> <span data-ttu-id="9c59d-226">关联的枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="9c59d-226">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
        <altmember cref="T:System.Net.ServicePoint" />
        <altmember cref="T:System.Net.WebPermission" />
      </Docs>
    </Member>
    <Member MemberName="ReusePort">
      <MemberSignature Language="C#" Value="public static bool ReusePort { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool ReusePort" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePointManager.ReusePort" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property ReusePort As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool ReusePort { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ReusePort : bool with get, set" Usage="System.Net.ServicePointManager.ReusePort" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9c59d-227">将此属性值设置为 <see langword="true" /> 会导致来自 HttpWebRequest 的所有出站 TCP 连接对套接字使用本机套接字选项 SO_REUSE_UNICASTPORT。</span><span class="sxs-lookup"><span data-stu-id="9c59d-227">Setting this property value to <see langword="true" /> causes all outbound TCP connections from HttpWebRequest to use the native socket option SO_REUSE_UNICASTPORT on the socket.</span></span> <span data-ttu-id="9c59d-228">这会导致共享基础传出端口。</span><span class="sxs-lookup"><span data-stu-id="9c59d-228">This causes the underlying outgoing ports to be shared.</span></span> <span data-ttu-id="9c59d-229">在短时间内进行大量传出连接并且应用面临端口耗尽风险的情况下，这很有用。</span><span class="sxs-lookup"><span data-stu-id="9c59d-229">This is useful for scenarios where a large number of outgoing connections are made in a short time, and the app risks running out of ports.</span></span></summary>
        <value><span data-ttu-id="9c59d-230">返回 <see cref="T:System.Boolean" />。</span><span class="sxs-lookup"><span data-stu-id="9c59d-230">Returns <see cref="T:System.Boolean" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c59d-231">默认值为 `false`。</span><span class="sxs-lookup"><span data-stu-id="9c59d-231">The default value is `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SecurityProtocol">
      <MemberSignature Language="C#" Value="public static System.Net.SecurityProtocolType SecurityProtocol { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Net.SecurityProtocolType SecurityProtocol" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePointManager.SecurityProtocol" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property SecurityProtocol As SecurityProtocolType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Net::SecurityProtocolType SecurityProtocol { System::Net::SecurityProtocolType get(); void set(System::Net::SecurityProtocolType value); };" />
      <MemberSignature Language="F#" Value="member this.SecurityProtocol : System.Net.SecurityProtocolType with get, set" Usage="System.Net.ServicePointManager.SecurityProtocol" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.SecurityProtocolType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9c59d-232">获取或设置由 <see cref="T:System.Net.ServicePointManager" /> 对象管理的 <see cref="T:System.Net.ServicePoint" /> 对象所使用的安全协议。</span><span class="sxs-lookup"><span data-stu-id="9c59d-232">Gets or sets the security protocol used by the <see cref="T:System.Net.ServicePoint" /> objects managed by the <see cref="T:System.Net.ServicePointManager" /> object.</span></span></summary>
        <value><span data-ttu-id="9c59d-233"><see cref="T:System.Net.SecurityProtocolType" /> 枚举中定义的值之一。</span><span class="sxs-lookup"><span data-stu-id="9c59d-233">One of the values defined in the <see cref="T:System.Net.SecurityProtocolType" /> enumeration.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
<span data-ttu-id="9c59d-234">此属性会选择要用于新的连接; 的安全套接字层 (SSL) 或传输层安全性 (TLS) 协议版本现有连接不会更改。</span><span class="sxs-lookup"><span data-stu-id="9c59d-234">This property selects the version of the Secure Sockets Layer (SSL) or Transport Layer Security (TLS) protocol to use for new connections; existing connections aren't changed.</span></span>  
  
<span data-ttu-id="9c59d-235">从.NET Framework 4.7 开始，此属性的默认值是<xref:System.Net.SecurityProtocolType.SystemDefault?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="9c59d-235">Starting with the .NET Framework 4.7, the default value of this property is <xref:System.Net.SecurityProtocolType.SystemDefault?displayProperty=nameWithType>.</span></span> <span data-ttu-id="9c59d-236">这允许.NET Framework 网络 Api 基于<xref:System.Net.Security.SslStream>（例如 FTP、 HTTP 和 SMTP） 继承的默认安全协议，从操作系统或由系统管理员执行任何自定义配置。</span><span class="sxs-lookup"><span data-stu-id="9c59d-236">This allows .NET Framework networking APIs based on <xref:System.Net.Security.SslStream> (such as FTP, HTTP, and SMTP) to inherit the default security protocols from the operating system or from any custom configurations performed by a system administrator.</span></span> <span data-ttu-id="9c59d-237">默认情况下，每个版本的 Windows 操作系统上的 SSL/TLS 有关启用协议的信息，请参阅[TLS/SSL (Schannel SSP) 中的协议](https://msdn.microsoft.com/library/windows/desktop/mt808159.aspx)。</span><span class="sxs-lookup"><span data-stu-id="9c59d-237">For information about which SSL/TLS protocols are enabled by default on each version of the Windows operating system, see  [Protocols in TLS/SSL (Schannel SSP)](https://msdn.microsoft.com/library/windows/desktop/mt808159.aspx).</span></span>
 
<span data-ttu-id="9c59d-238">对于.NET framework 4.6.2 的.NET framework 的版本，无默认值为此属性列出。</span><span class="sxs-lookup"><span data-stu-id="9c59d-238">For versions of the .NET Framework through the .NET Framework 4.6.2, no default value is listed for this property.</span></span> <span data-ttu-id="9c59d-239">安全情况不断更改，以及默认协议，保护级别随着时间的推移更改以避免已知的漏洞。</span><span class="sxs-lookup"><span data-stu-id="9c59d-239">The security landscape changes constantly, and default protocols and protection levels are changed over time in order to avoid known weaknesses.</span></span> <span data-ttu-id="9c59d-240">默认值取决于各个计算机配置、 已安装的软件和应用的修补程序。</span><span class="sxs-lookup"><span data-stu-id="9c59d-240">Defaults vary depending on individual machine configuration, installed software, and applied patches.</span></span>  
  
 <span data-ttu-id="9c59d-241">永远不会隐式取决于你的代码应使用特定的保护级别，或假定默认情况下使用给定的安全级别。</span><span class="sxs-lookup"><span data-stu-id="9c59d-241">Your code should never implicitly depend on using a particular protection level, or on the assumption that a given security level is used by default.</span></span> <span data-ttu-id="9c59d-242">如果您的应用程序依赖于使用特定的安全级别，您必须显式指定该级别，然后检查以确保它在建立的连接上使用实际上是。</span><span class="sxs-lookup"><span data-stu-id="9c59d-242">If your app depends on the use of a particular security level, you must explicitly specify that level and then check to be sure that it is actually in use on the established connection.</span></span> <span data-ttu-id="9c59d-243">此外，你的代码应设计为适应更改支持协议能力很强，这种情况下更改通常都是使用小提前通知以降低新出现的威胁。</span><span class="sxs-lookup"><span data-stu-id="9c59d-243">Further, your code should be designed to be robust in the face of changes to which protocols are supported, as such changes are often made with little advance notice in order to mitigate emerging threats.</span></span>  
  
 <span data-ttu-id="9c59d-244">.NET Framework 4.6 包括一个新的安全功能，将阻止不安全的密码和哈希算法的连接。</span><span class="sxs-lookup"><span data-stu-id="9c59d-244">The .NET Framework 4.6 includes a new security feature that blocks insecure cipher and hashing algorithms for connections.</span></span> <span data-ttu-id="9c59d-245">默认情况下，使用 TLS/SSL 通过 HttpClient、 HttpWebRequest、 FTPClient，SmtpClient、 SslStream 等 Api 和面向.NET Framework 4.6 的应用程序获得更安全的行为。</span><span class="sxs-lookup"><span data-stu-id="9c59d-245">Applications using TLS/SSL through APIs such as HttpClient, HttpWebRequest, FTPClient, SmtpClient, SslStream, etc. and targeting .NET Framework 4.6 get the more-secure behavior by default.</span></span>  
  
 <span data-ttu-id="9c59d-246">开发人员可能想要选择退出此行为以便保持与带 RC4 服务及其现有 SSL3 服务或 TLS 互操作性。</span><span class="sxs-lookup"><span data-stu-id="9c59d-246">Developers may want to opt out of this behavior in order to maintain interoperability with their existing SSL3 services OR TLS w/ RC4 services.</span></span> <span data-ttu-id="9c59d-247">[这篇文章](https://support.microsoft.com/kb/3069494)介绍了如何修改你的代码，以便禁用新行为。</span><span class="sxs-lookup"><span data-stu-id="9c59d-247">[This article](https://support.microsoft.com/kb/3069494) explains how to modify your code so that the new behavior is disabled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="9c59d-248">为设置属性而指定的值不是有效 <see cref="T:System.Net.SecurityProtocolType" /> 枚举值。</span><span class="sxs-lookup"><span data-stu-id="9c59d-248">The value specified to set the property is not a valid <see cref="T:System.Net.SecurityProtocolType" /> enumeration value.</span></span></exception>
        <altmember cref="T:System.Net.ServicePoint" />
        <altmember cref="T:System.Net.SecurityProtocolType" />
      </Docs>
    </Member>
    <Member MemberName="ServerCertificateValidationCallback">
      <MemberSignature Language="C#" Value="public static System.Net.Security.RemoteCertificateValidationCallback ServerCertificateValidationCallback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Net.Security.RemoteCertificateValidationCallback ServerCertificateValidationCallback" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePointManager.ServerCertificateValidationCallback" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property ServerCertificateValidationCallback As RemoteCertificateValidationCallback" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Net::Security::RemoteCertificateValidationCallback ^ ServerCertificateValidationCallback { System::Net::Security::RemoteCertificateValidationCallback ^ get(); void set(System::Net::Security::RemoteCertificateValidationCallback ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ServerCertificateValidationCallback : System.Net.Security.RemoteCertificateValidationCallback with get, set" Usage="System.Net.ServicePointManager.ServerCertificateValidationCallback" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Security.RemoteCertificateValidationCallback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9c59d-249">获取或设置用于验证服务器证书的回调。</span><span class="sxs-lookup"><span data-stu-id="9c59d-249">Gets or sets the callback to validate a server certificate.</span></span></summary>
        <value><span data-ttu-id="9c59d-250"><see cref="T:System.Net.Security.RemoteCertificateValidationCallback" />。</span><span class="sxs-lookup"><span data-stu-id="9c59d-250">A <see cref="T:System.Net.Security.RemoteCertificateValidationCallback" />.</span></span> <span data-ttu-id="9c59d-251">默认值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9c59d-251">The default value is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
<span data-ttu-id="9c59d-252">应用程序可以设置<xref:System.Net.ServicePointManager.ServerCertificateValidationCallback%2A>属性设置为要用于客户端的服务器证书的自定义验证方法。</span><span class="sxs-lookup"><span data-stu-id="9c59d-252">An application can set the <xref:System.Net.ServicePointManager.ServerCertificateValidationCallback%2A> property to a method to use for custom validation by the client of the server certificate.</span></span> <span data-ttu-id="9c59d-253">执行自定义验证时`sender`参数传递给<xref:System.Net.Security.RemoteCertificateValidationCallback>可以是主机字符串名称，或一个派生自<xref:System.Net.WebRequest>(<xref:System.Net.HttpWebRequest>，例如) 具体取决于<xref:System.Net.ServicePointManager.CertificatePolicy%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="9c59d-253">When doing custom validation, the `sender` parameter passed to the <xref:System.Net.Security.RemoteCertificateValidationCallback> can be a host string name or an object derived from <xref:System.Net.WebRequest> (<xref:System.Net.HttpWebRequest>, for example) depending on the <xref:System.Net.ServicePointManager.CertificatePolicy%2A> property.</span></span>  
  
<span data-ttu-id="9c59d-254">如果不使用自定义验证，证书名称将与用于创建请求的主机名进行比较。</span><span class="sxs-lookup"><span data-stu-id="9c59d-254">When custom validation is not used, the certificate name is compared with the host name used to create the request.</span></span> <span data-ttu-id="9c59d-255">例如，如果<xref:System.Net.WebRequest.Create%28System.String%29>传递的参数`"https://www.contoso.com/default.html"`，默认行为是客户端检查对证书`www.contoso.com`。</span><span class="sxs-lookup"><span data-stu-id="9c59d-255">For example, if <xref:System.Net.WebRequest.Create%28System.String%29> was passed a parameter of `"https://www.contoso.com/default.html"`, the default behavior is for the client to check the certificate against `www.contoso.com`.</span></span>  

<span data-ttu-id="9c59d-256">尽管多路广播的委托，只能从最后一个执行事件处理程序返回的值被视为具有权威。</span><span class="sxs-lookup"><span data-stu-id="9c59d-256">Despite being a multicast delegate, only the value returned from the last-executed event handler is considered authoritative.</span></span> <span data-ttu-id="9c59d-257">换而言之，可以附加多个代理，并获得来自回调<xref:System.Net.ServicePointManager.ServerCertificateValidationCallback%2A>。</span><span class="sxs-lookup"><span data-stu-id="9c59d-257">In other words, you can attach multiple delegates, and they all get a callback from <xref:System.Net.ServicePointManager.ServerCertificateValidationCallback%2A>.</span></span> <span data-ttu-id="9c59d-258">每个回调返回一个值，指示该证书已被接受或不;但是，只有最后一个委托的值，则考虑。</span><span class="sxs-lookup"><span data-stu-id="9c59d-258">Each callback returns a value that indicates whether the certificate is accepted or not; however, only the value from the last delegate is respected.</span></span>
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="9c59d-259">若要设置<see cref="P:System.Net.ServicePointManager.ServerCertificateValidationCallback" />属性。</span><span class="sxs-lookup"><span data-stu-id="9c59d-259">to set the <see cref="P:System.Net.ServicePointManager.ServerCertificateValidationCallback" /> property.</span></span> <span data-ttu-id="9c59d-260">关联枚举：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" />。</span><span class="sxs-lookup"><span data-stu-id="9c59d-260">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" />.</span></span></permission>
        <altmember cref="T:System.Net.ServicePoint" />
        <altmember cref="T:System.Security.Permissions.SecurityPermission" />
      </Docs>
    </Member>
    <Member MemberName="ServerCipherSuitesCallback">
      <MemberSignature Language="C#" Value="public static System.Net.CipherSuitesCallback ServerCipherSuitesCallback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Net.CipherSuitesCallback ServerCipherSuitesCallback" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePointManager.ServerCipherSuitesCallback" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property ServerCipherSuitesCallback As CipherSuitesCallback" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Net::CipherSuitesCallback ^ ServerCipherSuitesCallback { System::Net::CipherSuitesCallback ^ get(); void set(System::Net::CipherSuitesCallback ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ServerCipherSuitesCallback : System.Net.CipherSuitesCallback with get, set" Usage="System.Net.ServicePointManager.ServerCipherSuitesCallback" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.Obsolete("This API is no longer supported.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.CipherSuitesCallback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTcpKeepAlive">
      <MemberSignature Language="C#" Value="public static void SetTcpKeepAlive (bool enabled, int keepAliveTime, int keepAliveInterval);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetTcpKeepAlive(bool enabled, int32 keepAliveTime, int32 keepAliveInterval) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.ServicePointManager.SetTcpKeepAlive(System.Boolean,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetTcpKeepAlive (enabled As Boolean, keepAliveTime As Integer, keepAliveInterval As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetTcpKeepAlive(bool enabled, int keepAliveTime, int keepAliveInterval);" />
      <MemberSignature Language="F#" Value="static member SetTcpKeepAlive : bool * int * int -&gt; unit" Usage="System.Net.ServicePointManager.SetTcpKeepAlive (enabled, keepAliveTime, keepAliveInterval)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enabled" Type="System.Boolean" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="keepAliveTime" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="keepAliveInterval" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="enabled"><span data-ttu-id="9c59d-261">如果设置为 true，则将使用指定的 <paramref name="keepAliveTime" />和 <paramref name="keepAliveInterval" /> 值启用 TCP 连接上的 TCP keep-alive 选项。</span><span class="sxs-lookup"><span data-stu-id="9c59d-261">If set to true, then the TCP keep-alive option on a TCP connection will be enabled using the specified <paramref name="keepAliveTime" /> and <paramref name="keepAliveInterval" /> values.</span></span>  
  
<span data-ttu-id="9c59d-262">如果设置为 false，则将禁用 TCP keep-alive 选项，并忽略剩余参数。</span><span class="sxs-lookup"><span data-stu-id="9c59d-262">If set to false, then the TCP keep-alive option is disabled and the remaining parameters are ignored.</span></span>  
  
<span data-ttu-id="9c59d-263">默认值为 False。</span><span class="sxs-lookup"><span data-stu-id="9c59d-263">The default value is false.</span></span></param>
        <param name="keepAliveTime"><span data-ttu-id="9c59d-264">指定发送第一个 keep-alive 数据包之前没有活动的超时时间（以毫秒为单位）。</span><span class="sxs-lookup"><span data-stu-id="9c59d-264">Specifies the timeout, in milliseconds, with no activity until the first keep-alive packet is sent.</span></span>  
  
<span data-ttu-id="9c59d-265">该值必须大于 0。</span><span class="sxs-lookup"><span data-stu-id="9c59d-265">The value must be greater than 0.</span></span>  <span data-ttu-id="9c59d-266">如果传递的值小于或等于零，则会引发 <see cref="T:System.ArgumentOutOfRangeException" />。</span><span class="sxs-lookup"><span data-stu-id="9c59d-266">If a value of less than or equal to zero is passed an <see cref="T:System.ArgumentOutOfRangeException" /> is thrown.</span></span></param>
        <param name="keepAliveInterval"><span data-ttu-id="9c59d-267">指定当未收到确认消息时发送连续 keep-alive 数据包之间的间隔（以毫秒为单位）。</span><span class="sxs-lookup"><span data-stu-id="9c59d-267">Specifies the interval, in milliseconds, between when successive keep-alive packets are sent if no acknowledgement is received.</span></span>  
  
<span data-ttu-id="9c59d-268">该值必须大于 0。</span><span class="sxs-lookup"><span data-stu-id="9c59d-268">The value must be greater than 0.</span></span>  <span data-ttu-id="9c59d-269">如果传递的值小于或等于零，则会引发 <see cref="T:System.ArgumentOutOfRangeException" />。</span><span class="sxs-lookup"><span data-stu-id="9c59d-269">If a value of less than or equal to zero is passed an <see cref="T:System.ArgumentOutOfRangeException" /> is thrown.</span></span></param>
        <summary><span data-ttu-id="9c59d-270">对 TCP 连接启用或禁用 keep-alive 选项。</span><span class="sxs-lookup"><span data-stu-id="9c59d-270">Enables or disables the keep-alive option on a TCP connection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c59d-271">应用程序可以请求 TCP/IP 提供程序允许使用 TCP 连接上保持活动数据包。</span><span class="sxs-lookup"><span data-stu-id="9c59d-271">An application can request that a TCP/IP provider enable the use of keep-alive packets on a TCP connection.</span></span> <span data-ttu-id="9c59d-272">默认为使用 TCP 连接上保持活动数据包已禁用。</span><span class="sxs-lookup"><span data-stu-id="9c59d-272">The default is that the use of keep-alive packets on a TCP connection is disabled.</span></span>  
  
 <span data-ttu-id="9c59d-273">TCP 套接字时的默认设置初始化到 2 小时的设置保持活动超时和保持活动状态的时间间隔为 1 秒。</span><span class="sxs-lookup"><span data-stu-id="9c59d-273">The default settings when a TCP socket is initialized sets the keep-alive timeout to 2 hours and the keep-alive interval to 1 second.</span></span> <span data-ttu-id="9c59d-274">`keepAliveTime`参数指定的超时，以毫秒为单位，在发送第一个 keep-alive 数据包之前没有活动。</span><span class="sxs-lookup"><span data-stu-id="9c59d-274">The `keepAliveTime` parameter specifies the timeout, in milliseconds, with no activity until the first keep-alive packet is sent.</span></span> <span data-ttu-id="9c59d-275">`keepAliveInterval`参数指定的间隔，以毫秒为单位，介于时发送连续 keep-alive 数据包如果没有收到确认。</span><span class="sxs-lookup"><span data-stu-id="9c59d-275">The `keepAliveInterval` parameter specifies the interval, in milliseconds, between when successive keep-alive packets are sent if no acknowledgement is received.</span></span> <span data-ttu-id="9c59d-276">保持活动状态的探测数不能更改，并设置为 10。</span><span class="sxs-lookup"><span data-stu-id="9c59d-276">The number of keep-alive probes cannot be changed and is set to 10.</span></span>  
  
 <span data-ttu-id="9c59d-277">如果 TCP 连接删除 keep-alive，因此<xref:System.Net.Sockets.SocketError>的<xref:System.Net.Sockets.SocketError.NetworkReset>套接字，返回到正在进行中的任何调用，并且任何后续调用将失败并<xref:System.Net.Sockets.SocketError>的<xref:System.Net.Sockets.SocketError.NotConnected>。</span><span class="sxs-lookup"><span data-stu-id="9c59d-277">If a TCP connection is dropped as the result of keep-alives, a <xref:System.Net.Sockets.SocketError> of <xref:System.Net.Sockets.SocketError.NetworkReset> is returned to any calls in progress on the socket, and any subsequent calls will fail with a <xref:System.Net.Sockets.SocketError> of <xref:System.Net.Sockets.SocketError.NotConnected>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="9c59d-278">为 <paramref name="keepAliveTime" /> 或 <paramref name="keepAliveInterval" /> 参数指定的值小于等于 0.</span><span class="sxs-lookup"><span data-stu-id="9c59d-278">The value specified for <paramref name="keepAliveTime" /> or <paramref name="keepAliveInterval" /> parameter is less than or equal to 0.</span></span></exception>
        <altmember cref="T:System.Net.ServicePoint" />
      </Docs>
    </Member>
    <Member MemberName="UseNagleAlgorithm">
      <MemberSignature Language="C#" Value="public static bool UseNagleAlgorithm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool UseNagleAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePointManager.UseNagleAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property UseNagleAlgorithm As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool UseNagleAlgorithm { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseNagleAlgorithm : bool with get, set" Usage="System.Net.ServicePointManager.UseNagleAlgorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9c59d-279">确定由此 <see cref="T:System.Net.ServicePointManager" /> 对象管理的服务点是否使用 Nagle 算法。</span><span class="sxs-lookup"><span data-stu-id="9c59d-279">Determines whether the Nagle algorithm is used by the service points managed by this <see cref="T:System.Net.ServicePointManager" /> object.</span></span></summary>
        <value><span data-ttu-id="9c59d-280">如果使用 Nagle 算法，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="9c59d-280"><see langword="true" /> to use the Nagle algorithm; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="9c59d-281">默认值为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="9c59d-281">The default value is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c59d-282">使用 Nagle 算法来减少网络流量通过缓冲的数据的小型数据包，将它们传输作为单个数据包。</span><span class="sxs-lookup"><span data-stu-id="9c59d-282">The Nagle algorithm is used to reduce network traffic by buffering small packets of data and transmitting them as a single packet.</span></span> <span data-ttu-id="9c59d-283">此过程也称为"nagling";它被广泛使用，因为它可减少传输的数据包数量，并降低了每个数据包的开销。</span><span class="sxs-lookup"><span data-stu-id="9c59d-283">This process is also referred to as "nagling"; it is widely used because it reduces the number of packets transmitted and lowers the overhead per packet.</span></span>  
  
 <span data-ttu-id="9c59d-284">更改此属性的值不影响现有<xref:System.Net.ServicePoint>对象。</span><span class="sxs-lookup"><span data-stu-id="9c59d-284">Changing the value of this property does not affect existing <xref:System.Net.ServicePoint> objects.</span></span> <span data-ttu-id="9c59d-285">仅服务创建新点在更改后会受到影响。</span><span class="sxs-lookup"><span data-stu-id="9c59d-285">Only new service points created after the change are affected.</span></span>  
  
 <span data-ttu-id="9c59d-286">在 IETF RFC 896 完全描述 Nagle 算法。</span><span class="sxs-lookup"><span data-stu-id="9c59d-286">The Nagle algorithm is fully described in IETF RFC 896.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9c59d-287">下面的代码示例设置此属性。</span><span class="sxs-lookup"><span data-stu-id="9c59d-287">The following code example sets this property.</span></span>  
  
 [!code-cpp[System.Net.ServicePoint#10](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#10)]
 [!code-csharp[System.Net.ServicePoint#10](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#10)]
 [!code-vb[System.Net.ServicePoint#10](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.ServicePoint" />
      </Docs>
    </Member>
  </Members>
</Type>