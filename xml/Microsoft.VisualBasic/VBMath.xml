<Type Name="VBMath" FullName="Microsoft.VisualBasic.VBMath">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fe2fcb44654867bcd9fe2e1e62d7426f67b80053" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70405683" /></Metadata><TypeSignature Language="C#" Value="public sealed class VBMath" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed VBMath extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.VBMath" />
  <TypeSignature Language="VB.NET" Value="Public Module VBMath" />
  <TypeSignature Language="C++ CLI" Value="public ref class VBMath sealed" />
  <TypeSignature Language="F#" Value="type VBMath = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
    <AssemblyVersion>10.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Microsoft.VisualBasic.CompilerServices.StandardModule</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><see langword="VbMath" /> 模块包含用于执行算术操作的过程。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此模块支持用于生成随机数的 Visual Basic 语言关键字和运行库成员。  
  
   
  
## Examples  
 此示例使用`Rnd`函数生成从1到6范围内的随机整数值。  
  
 [!code-vb[VbVbalrMath#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#21)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/visual-basic/language-reference/keywords/math-summary.md">数学摘要</related>
    <related type="Article" href="~/docs/visual-basic/language-reference/keywords/derived-math-functions.md">派生的数学函数 (Visual Basic)</related>
    <related type="Article" href="~/docs/visual-basic/language-reference/keywords/index.md">关键字 (Visual Basic)</related>
    <related type="Article" href="~/docs/visual-basic/language-reference/runtime-library-members.md">Visual Basic 运行时库成员</related>
  </Docs>
  <Members>
    <MemberGroup MemberName="Randomize">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化随机数生成器。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Randomize">
      <MemberSignature Language="C#" Value="public static void Randomize ();" />
      <MemberSignature Language="ILAsm" Value=".method public static void Randomize() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.VBMath.Randomize" />
      <MemberSignature Language="VB.NET" Value="Public Sub Randomize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Randomize();" />
      <MemberSignature Language="F#" Value="static member Randomize : unit -&gt; unit" Usage="Microsoft.VisualBasic.VBMath.Randomize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>初始化随机数生成器。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此`Randomize`方法的重载不采用种子值。 相反，系统计时器返回的值将用作新的种子值。  
  
 如果`Randomize`未使用`Rnd` ，则函数（不带任何参数）在第一次调用时使用与种子相同的数字，然后使用最后生成的数字作为种子值。  
  
> [!NOTE]
>  若要重复随机数值序列，请`Rnd`在使用`Randomize`带有数值参数的前立即使用负参数调用。  
  
> [!IMPORTANT]
>  `Random`由于语句 `Rnd` 和函数以种子值开始，并生成在有限范围内的数字，因此知道用于生成它们的算法的人员可能会预测结果。 因此， `Random`不应使用语句`Rnd`和函数来生成用于加密的随机数字。 有关详细信息，请参阅 <xref:System.Security.Cryptography.RandomNumberGenerator>。  
  
   
  
## Examples  
 此示例使用`Randomize`语句初始化随机数生成器。 由于省略了 number 参数， `Randomize`因此使用`Timer`函数的返回值作为新的种子值。  
  
 [!code-vb[VbVbalrMath#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#21)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.VBMath.Rnd" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/math-summary.md">数学摘要</related>
      </Docs>
    </Member>
    <Member MemberName="Randomize">
      <MemberSignature Language="C#" Value="public static void Randomize (double Number);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Randomize(float64 Number) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.VBMath.Randomize(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Randomize (Number As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Randomize(double Number);" />
      <MemberSignature Language="F#" Value="static member Randomize : double -&gt; unit" Usage="Microsoft.VisualBasic.VBMath.Randomize Number" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Number">可选。 一个 <see langword="Object" /> 或任何有效的数值表达式。</param>
        <summary>初始化随机数生成器。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Randomize``Number` 使用 `Rnd` 初始化函数的随机数生成器，并为其提供新的种子值。 如果省略`Number`，系统计时器返回的值将用作新的种子值。  
  
 如果`Randomize`未使用`Rnd` ，则函数（不带任何参数）在第一次调用时使用与种子相同的数字，然后使用最后生成的数字作为种子值。  
  
> [!NOTE]
>  若要重复随机数值序列，请`Rnd`在使用`Randomize`带有数值参数的前立即使用负参数调用。 将`Randomize`与的`Number`值一起使用不会重复以前的序列。  
  
> [!IMPORTANT]
>  `Random`由于语句 `Rnd` 和函数以种子值开始，并生成在有限范围内的数字，因此知道用于生成它们的算法的人员可能会预测结果。 因此， `Random`不应使用语句`Rnd`和函数来生成用于加密的随机数字。 有关详细信息，请参阅 <xref:System.Security.Cryptography.RandomNumberGenerator>。  
  
   
  
## Examples  
 此示例使用`Randomize`语句初始化随机数生成器。 由于省略了 number 参数， `Randomize`因此使用`Timer`函数的返回值作为新的种子值。  
  
 [!code-vb[VbVbalrMath#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#21)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.VBMath.Rnd" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/math-summary.md">数学摘要</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Rnd">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>返回一个 <see langword="Single" /> 类型的随机数。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Rnd">
      <MemberSignature Language="C#" Value="public static float Rnd ();" />
      <MemberSignature Language="ILAsm" Value=".method public static float32 Rnd() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.VBMath.Rnd" />
      <MemberSignature Language="VB.NET" Value="Public Function Rnd () As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Rnd();" />
      <MemberSignature Language="F#" Value="static member Rnd : unit -&gt; single" Usage="Microsoft.VisualBasic.VBMath.Rnd " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回一个 <see langword="Single" /> 类型的随机数。</summary>
        <returns>序列中的下一个随机数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Rnd`函数返回小于1但大于或等于零的值。  
  
 在调用`Rnd`之前， `Randomize`使用不带参数的语句来使用基于系统计时器的种子初始化随机数生成器。  
  
 若要在给定范围内生成随机整数，请使用下面的公式。  
  
 [!code-vb[VbVbalrMath#30](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#30)]  
  
 此处为范围中的最大值`lowerbound` ，是该范围中的最小值。 `upperbound`  
  
> [!NOTE]
>  若要重复随机数值序列，请`Rnd`在使用`Randomize`带有数值参数的前立即使用负参数调用。  
  
> [!IMPORTANT]
>  `Random`由于语句 `Rnd` 和函数以种子值开始，并生成在有限范围内的数字，因此知道用于生成它们的算法的人员可能会预测结果。 因此， `Random`不应使用语句`Rnd`和函数来生成用于加密的随机数字。  
  
   
  
## Examples  
 此示例使用`Rnd`函数生成从1到6范围内的随机整数值。  
  
 [!code-vb[VbVbalrMath#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#21)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.VBMath.Randomize" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/math-summary.md">数学摘要</related>
      </Docs>
    </Member>
    <Member MemberName="Rnd">
      <MemberSignature Language="C#" Value="public static float Rnd (float Number);" />
      <MemberSignature Language="ILAsm" Value=".method public static float32 Rnd(float32 Number) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.VBMath.Rnd(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function Rnd (Number As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Rnd(float Number);" />
      <MemberSignature Language="F#" Value="static member Rnd : single -&gt; single" Usage="Microsoft.VisualBasic.VBMath.Rnd Number" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="Number">可选。 一个 <see langword="Single" /> 值或任何有效的 <see langword="Single" /> 表达式。</param>
        <summary>返回一个 <see langword="Single" /> 类型的随机数。</summary>
        <returns>如果 Number 小于零，则 Rnd 每次都使用 <paramref name="Number" /> 作为种子生成相同的数字。 如果 Number 大于零，则 Rnd 生成序列中的下一个随机数。 如果 Number 等于零，则 Rnd 生成最近生成的数字。 如果未提供 Number，则 Rnd 生成序列中的下一个随机数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Rnd`函数返回小于1但大于或等于零的值。  
  
 的值`Number`确定如何`Rnd`生成随机数。  
  
 对于任何给定的初始种子，都将生成相同的数字序列，因为对该`Rnd`函数的每个连续调用都使用之前生成的数作为序列中下一个数字的种子。  
  
 在调用`Rnd`之前， `Randomize`使用不带参数的语句来使用基于系统计时器的种子初始化随机数生成器。  
  
 若要在给定范围内生成随机整数，请使用下面的公式。  
  
 [!code-vb[VbVbalrMath#30](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#30)]  
  
 此处为范围中的最大值`lowerbound` ，是该范围中的最小值。 `upperbound`  
  
> [!NOTE]
>  若要重复随机数值序列，请`Rnd`在使用`Randomize`带有数值参数的前立即使用负参数调用。 将`Randomize`与的`Number`值一起使用不会重复以前的序列。  
  
> [!IMPORTANT]
>  `Random`由于语句 `Rnd` 和函数以种子值开始，并生成在有限范围内的数字，因此知道用于生成它们的算法的人员可能会预测结果。 因此， `Random`不应使用语句`Rnd`和函数来生成用于加密的随机数字。  
  
   
  
## Examples  
 此示例使用`Rnd`函数生成从1到6范围内的随机整数值。  
  
 [!code-vb[VbVbalrMath#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#21)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.VBMath.Randomize" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/math-summary.md">数学摘要</related>
      </Docs>
    </Member>
  </Members>
</Type>
