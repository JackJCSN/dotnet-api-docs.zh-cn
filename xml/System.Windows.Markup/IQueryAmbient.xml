<Type Name="IQueryAmbient" FullName="System.Windows.Markup.IQueryAmbient">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7412669d16ca6897e348def6cc8c79c20d146f1f" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="64202295" /></Metadata><TypeSignature Language="C#" Value="public interface IQueryAmbient" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IQueryAmbient" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.IQueryAmbient" />
  <TypeSignature Language="VB.NET" Value="Public Interface IQueryAmbient" />
  <TypeSignature Language="C++ CLI" Value="public interface class IQueryAmbient" />
  <TypeSignature Language="F#" Value="type IQueryAmbient = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="87a16-101">查询是否应将指定的属性视为当前范围中的环境属性。</span><span class="sxs-lookup"><span data-stu-id="87a16-101">Queries for whether a specified property should be treated as ambient in the current scope.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87a16-102">环境属性机制的目的是通过告知 XAML 对象编写器，以避免实例化某些对象，其中已知的对象是典型的运行时间是临时的而且不是有用的值的情况下缩短分析时间应用程序。</span><span class="sxs-lookup"><span data-stu-id="87a16-102">The purpose of an ambient property mechanism is to improve parsing time by informing a XAML object writer to avoid instantiating certain objects, in cases where it is known that the objects are for values that are temporary and not useful for a typical run time application.</span></span> <span data-ttu-id="87a16-103">通常情况下，XAML 查找或 XAML 处理的属性 get 访问器需要实例化此类对象来填充对象图表示形式使用随时可用值。</span><span class="sxs-lookup"><span data-stu-id="87a16-103">Normally, XAML lookups or XAML processing of a property get accessor would need to instantiate such objects to fill the object graph representation with ready-to-use values.</span></span>  
  
 <span data-ttu-id="87a16-104"><xref:System.Windows.Markup.IQueryAmbient> 一个成员： <xref:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable%2A>。</span><span class="sxs-lookup"><span data-stu-id="87a16-104"><xref:System.Windows.Markup.IQueryAmbient> has one member: <xref:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable%2A>.</span></span>  
  
 <span data-ttu-id="87a16-105"><xref:System.Windows.Markup.IQueryAmbient> 是为并行机制<xref:System.Windows.Markup.AmbientAttribute>。</span><span class="sxs-lookup"><span data-stu-id="87a16-105"><xref:System.Windows.Markup.IQueryAmbient> is a parallel mechanism to <xref:System.Windows.Markup.AmbientAttribute>.</span></span> <span data-ttu-id="87a16-106"><xref:System.Windows.Markup.IQueryAmbient> 是专用的机制，可避免使用反射来确定的信息，并且还可以包含 act 情况 (给定的对象可以选择报表`true`或`false`为<xref:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable%2A>)，而该属性是实质上是静态的分析）。</span><span class="sxs-lookup"><span data-stu-id="87a16-106"><xref:System.Windows.Markup.IQueryAmbient> is the specialized mechanism that avoids using reflection to determine information, and can also act situationally (a given object could choose to report `true` or `false` for <xref:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable%2A>), whereas the attribute is essentially static analysis).</span></span> <span data-ttu-id="87a16-107"><xref:System.Windows.Markup.AmbientAttribute> 是 XAML 对象编写器都可以使用的和，通常关联到专用的 XAML 类型系统属性的常规机制<xref:System.Xaml.XamlMember.IsAmbient%2A>和<xref:System.Xaml.XamlType.IsAmbient%2A>。</span><span class="sxs-lookup"><span data-stu-id="87a16-107"><xref:System.Windows.Markup.AmbientAttribute> is the general mechanism that can be used by XAML object writers and that typically correlates to the dedicated XAML type system properties <xref:System.Xaml.XamlMember.IsAmbient%2A> and <xref:System.Xaml.XamlType.IsAmbient%2A>.</span></span>  
  
## <a name="wpf-implementations-of-iqueryambient"></a><span data-ttu-id="87a16-108">IQueryAmbient 的 WPF 实现</span><span class="sxs-lookup"><span data-stu-id="87a16-108">WPF Implementations of IQueryAmbient</span></span>  
 <span data-ttu-id="87a16-109">在 WPF 中，<xref:System.Windows.Markup.IQueryAmbient>用于资源字典查找过程。</span><span class="sxs-lookup"><span data-stu-id="87a16-109">In WPF, <xref:System.Windows.Markup.IQueryAmbient> is used for the resource dictionary lookup process.</span></span> <span data-ttu-id="87a16-110">查找过程获取连续`Resources`整个 WPF 逻辑树的值，找到致力于资源作用域的根直到密钥或密钥确定在作用域中不存在。</span><span class="sxs-lookup"><span data-stu-id="87a16-110">The lookup process gets successive `Resources` values throughout the WPF logical tree, working towards the root of the resource scope until either a key is found or the key is determined to not exist in scope.</span></span> <span data-ttu-id="87a16-111">通常情况下，执行此操作需要实例化<xref:System.Windows.ResourceDictionary>每次接收结果。</span><span class="sxs-lookup"><span data-stu-id="87a16-111">Normally, doing so would require instantiating a <xref:System.Windows.ResourceDictionary> each time to receive the results.</span></span> <span data-ttu-id="87a16-112">声明的内容`Resources`环境，只要`Resources`存在来优化此查找过程。</span><span class="sxs-lookup"><span data-stu-id="87a16-112">Declaring the contents of `Resources` as ambient so long as `Resources` exists optimizes this lookup process.</span></span> <span data-ttu-id="87a16-113">在 WPF 中，在以下情况下实现此接口：</span><span class="sxs-lookup"><span data-stu-id="87a16-113">In WPF, this interface is implemented in the following cases:</span></span>  
  
-   <span data-ttu-id="87a16-114"><xref:System.Windows.FrameworkElement> 实现<xref:System.Windows.FrameworkElement.System%23Windows%23Markup%23IQueryAmbient%23IsAmbientPropertyAvailable%2A>以返回`true`的所有属性名称包含的现有<xref:System.Windows.ResourceDictionary>有关<xref:System.Windows.FrameworkElement.Resources%2A>，和，只要该查询不为<xref:System.Windows.FrameworkElement.Resources%2A>属性本身。</span><span class="sxs-lookup"><span data-stu-id="87a16-114"><xref:System.Windows.FrameworkElement> implements <xref:System.Windows.FrameworkElement.System%23Windows%23Markup%23IQueryAmbient%23IsAmbientPropertyAvailable%2A> to return `true` for all property names if it contains an existing <xref:System.Windows.ResourceDictionary> for <xref:System.Windows.FrameworkElement.Resources%2A>, and so long as the query is not for the <xref:System.Windows.FrameworkElement.Resources%2A> property itself.</span></span>  
  
-   <span data-ttu-id="87a16-115"><xref:System.Windows.Style> 实现的相同模式及其<xref:System.Windows.Style.Resources%2A>。</span><span class="sxs-lookup"><span data-stu-id="87a16-115"><xref:System.Windows.Style> implements the same pattern for its <xref:System.Windows.Style.Resources%2A>.</span></span>  
  
-   <span data-ttu-id="87a16-116"><xref:System.Windows.Application> 实现的相同模式及其<xref:System.Windows.Application.Resources%2A>。</span><span class="sxs-lookup"><span data-stu-id="87a16-116"><xref:System.Windows.Application> implements the same pattern for its <xref:System.Windows.Application.Resources%2A>.</span></span>  
  
-   <span data-ttu-id="87a16-117"><xref:System.Windows.FrameworkContentElement> 实现的相同模式及其<xref:System.Windows.FrameworkContentElement.Resources%2A>。</span><span class="sxs-lookup"><span data-stu-id="87a16-117"><xref:System.Windows.FrameworkContentElement> implements the same pattern for its <xref:System.Windows.FrameworkContentElement.Resources%2A>.</span></span>  
  
-   <span data-ttu-id="87a16-118"><xref:System.Windows.FrameworkTemplate> 实现的相同模式及其<xref:System.Windows.FrameworkTemplate.Resources%2A>。</span><span class="sxs-lookup"><span data-stu-id="87a16-118"><xref:System.Windows.FrameworkTemplate> implements the same pattern for its <xref:System.Windows.FrameworkTemplate.Resources%2A>.</span></span> <span data-ttu-id="87a16-119">它还报告<xref:System.Windows.FrameworkTemplate.Template%2A>环境，但是返回的内容`false`如果查询<xref:System.Windows.FrameworkTemplate.Template%2A>本身。</span><span class="sxs-lookup"><span data-stu-id="87a16-119">It also reports <xref:System.Windows.FrameworkTemplate.Template%2A> content as ambient but returns `false` if querying for <xref:System.Windows.FrameworkTemplate.Template%2A> itself.</span></span>  
  
-   <span data-ttu-id="87a16-120">在这些情况下，相关的每个`Resources`属性 (和<xref:System.Windows.FrameworkTemplate.Template%2A>) 经过属性化， <xref:System.Windows.Markup.AmbientAttribute>。</span><span class="sxs-lookup"><span data-stu-id="87a16-120">In each of these cases, the relevant `Resources` property (and <xref:System.Windows.FrameworkTemplate.Template%2A>) are attributed as <xref:System.Windows.Markup.AmbientAttribute>.</span></span> <span data-ttu-id="87a16-121">典型的用法是查询不是属性<xref:System.Windows.Markup.AmbientAttribute>特性化定义的接口的对象的属性。</span><span class="sxs-lookup"><span data-stu-id="87a16-121">The typical usage is to query for the properties that are NOT the <xref:System.Windows.Markup.AmbientAttribute> attributed properties of the object that defines the interface.</span></span> <span data-ttu-id="87a16-122">换而言之，只要资源字典存在是为了提供潜在的运行的时间值，创建对象图时，除了资源字典属性容器以外的任何其他属性可视为环境。</span><span class="sxs-lookup"><span data-stu-id="87a16-122">In other words, so long as a resource dictionary exists in order to provide the potential run time value when the object graph is created, any other property besides the resource dictionary's property container can be treated as ambient.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Xaml.XamlMember.IsAmbient" />
  </Docs>
  <Members>
    <Member MemberName="IsAmbientPropertyAvailable">
      <MemberSignature Language="C#" Value="public bool IsAmbientPropertyAvailable (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsAmbientPropertyAvailable(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsAmbientPropertyAvailable (propertyName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsAmbientPropertyAvailable(System::String ^ propertyName);" />
      <MemberSignature Language="F#" Value="abstract member IsAmbientPropertyAvailable : string -&gt; bool" Usage="iQueryAmbient.IsAmbientPropertyAvailable propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="87a16-123">要检查其环境状态的属性的名称。</span><span class="sxs-lookup"><span data-stu-id="87a16-123">The name of the property to check for ambience state.</span></span></param>
        <summary><span data-ttu-id="87a16-124">查询可否将指定的命名属性视为当前范围中的环境属性。</span><span class="sxs-lookup"><span data-stu-id="87a16-124">Queries for whether a specified named property can be considered ambient in the current scope.</span></span></summary>
        <returns><span data-ttu-id="87a16-125">如果所请求的属性可视为环境属性，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="87a16-125"><see langword="true" /> if the requested property can be considered ambient; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>