<Type Name="Format" FullName="Microsoft.SqlServer.Server.Format">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ffca0cda31e32a79ce7ab852c13be008741be0df" /><Meta Name="ms.sourcegitcommit" Value="feb111e137a41d186aef01d83f04819d820520eb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="06/21/2019" /><Meta Name="ms.locfileid" Value="67307951" /></Metadata><TypeSignature Language="C#" Value="public enum Format" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed Format extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:Microsoft.SqlServer.Server.Format" />
  <TypeSignature Language="VB.NET" Value="Public Enum Format" />
  <TypeSignature Language="C++ CLI" Value="public enum class Format" />
  <TypeSignature Language="F#" Value="type Format = " />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.SqlClient</AssemblyName>
    <AssemblyVersion>4.4.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.6.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>由 <see cref="T:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute" /> 和 <see cref="T:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute" /> 用来指示用户定义类型 (UDT) 或聚合的序列化格式。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  

此枚举由<xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute>和<xref:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute>以指示用户定义类型 (UDT) 或聚合的序列化格式。 利用`Native`和`UserDefined`枚举成员都有特殊要求。   

- `Format.Native`

   对于要求`Format.Native`格式是：  
  
   - <xref:System.Runtime.InteropServices.StructLayoutAttribute>与<xref:System.Runtime.InteropServices.StructLayoutAttribute.Value>属性值为<xref:System.Runtime.InteropServices.LayoutKind.Sequential?displayProperty=nameWithType>必须应用于聚合或如果它一个类，而不是结构中定义的 UDT。 这控制数据字段的物理布局，用于强制其出现顺序依次布局的成员。 SQL Server 使用此属性确定具有多个字段的 Udt 的字段顺序。
  
   - 该类型必须包含至少一个成员 （序列化的值不能为零字节的大小）。  
  
   - 聚合的所有字段必须都是*blittable*; 也就是说，它们必须在托管和非托管内存中具有共同的表示形式并不需要进行特殊处理互操作封送处理程序。  
  
   - UDT 的所有字段应都为可序列化的以下类型之一： `bool`， `byte`， `sbyte`， `short`， `ushort`， `int`， `uint`， `long`， `ulong`， `float``double`， <xref:System.Data.SqlTypes.SqlByte>， <xref:System.Data.SqlTypes.SqlInt16>， <xref:System.Data.SqlTypes.SqlInt32>， <xref:System.Data.SqlTypes.SqlInt64>， <xref:System.Data.SqlTypes.SqlDateTime>， <xref:System.Data.SqlTypes.SqlSingle>， <xref:System.Data.SqlTypes.SqlDouble>， <xref:System.Data.SqlTypes.SqlMoney>，或包含的其中一个字段的用户定义的其他值类型类型。  

   - 聚合必须指定为值`MaxByteSize`。  
  
   - 聚合不能有 [NonSerialized] 的任何字段。  
  
   - 字段不能标记为显式布局 (与<xref:System.Runtime.InteropServices.StructLayoutAttribute.Value?displayProperty=nameWithType>的<xref:System.Runtime.InteropServices.LayoutKind.Explicit?displayProperty=nameWithType>)。  

- `Format.UserDefined`

   对于要求`Format.UserDefined`格式是：

   - 聚合必须指定的值`MaxByteSize`。  
  
   - 指定<xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered%2A?displayProperty=nameWithType>特性属性。 默认值为 `false`。  
  
   - 如果省略中的任何字段<xref:Microsoft.SqlServer.Server.IBinarySerialize.Read%2A?displayProperty=nameWithType>或<xref:Microsoft.SqlServer.Server.IBinarySerialize.Write%2A?displayProperty=nameWithType>方法，该字段的状态不序列化。  

## Examples  

下面的示例演示`UserDefinedType`Point UDT 属性。  UDT 是字节顺序，名为"点"，其名为"ValidatePoint"的验证方法并使用本机序列化格式。  
  
[!code-csharp[DataWorks SqlUserDefinedTypeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlUserDefinedTypeAttribute Example/CS/source.cs#1)]
[!code-vb[DataWorks SqlUserDefinedTypeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlUserDefinedTypeAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Native">
      <MemberSignature Language="C#" Value="Native" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.SqlServer.Server.Format Native = int32(1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.SqlServer.Server.Format.Native" />
      <MemberSignature Language="VB.NET" Value="Native" />
      <MemberSignature Language="C++ CLI" Value="Native" />
      <MemberSignature Language="F#" Value="Native = 1" Usage="Microsoft.SqlServer.Server.Format.Native" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Server.Format</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>此序列化格式使用非常简单的算法，以便于 SQL Server 能够在磁盘上存储 UDT 的高效表示形式。 标记为 <see langword="Native" /> 序列化的类型只能将值类型（在 Microsoft Visual C# 中为 struct，在 Microsoft Visual Basic .NET 中为 structure）用作成员。 不支持引用类型（如 Visual C# 和 Visual Basic 中的类）的成员，无论是用户定义的成员，还是 .NET 类库中的现有成员（如 <see cref="T:System.String" />）。</summary>
      </Docs>
    </Member>
    <Member MemberName="Unknown">
      <MemberSignature Language="C#" Value="Unknown" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.SqlServer.Server.Format Unknown = int32(0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.SqlServer.Server.Format.Unknown" />
      <MemberSignature Language="VB.NET" Value="Unknown" />
      <MemberSignature Language="C++ CLI" Value="Unknown" />
      <MemberSignature Language="F#" Value="Unknown = 0" Usage="Microsoft.SqlServer.Server.Format.Unknown" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Server.Format</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>该序列化格式是未知的。</summary>
      </Docs>
    </Member>
    <Member MemberName="UserDefined">
      <MemberSignature Language="C#" Value="UserDefined" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.SqlServer.Server.Format UserDefined = int32(2)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.SqlServer.Server.Format.UserDefined" />
      <MemberSignature Language="VB.NET" Value="UserDefined" />
      <MemberSignature Language="C++ CLI" Value="UserDefined" />
      <MemberSignature Language="F#" Value="UserDefined = 2" Usage="Microsoft.SqlServer.Server.Format.UserDefined" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Server.Format</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>使用此序列化格式，开发人员可以通过 <see cref="M:Microsoft.SqlServer.Server.IBinarySerialize.Write(System.IO.BinaryWriter)" /> 和 <see cref="M:Microsoft.SqlServer.Server.IBinarySerialize.Read(System.IO.BinaryReader)" /> 方法完全控制二进制格式。</summary>
      </Docs>
    </Member>
  </Members>
</Type>
