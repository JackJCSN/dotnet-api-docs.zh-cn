<Type Name="SqlPipe" FullName="Microsoft.SqlServer.Server.SqlPipe">
  <Metadata><Meta Name="ms.openlocfilehash" Value="131acc8d6211ac9b84fd44506f00355caf4ba928" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="63949603" /></Metadata><TypeSignature Language="C#" Value="public sealed class SqlPipe" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlPipe extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.SqlServer.Server.SqlPipe" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlPipe" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlPipe sealed" />
  <TypeSignature Language="F#" Value="type SqlPipe = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="2adc5-101">允许托管存储过程在 SQL Server 数据库上进行进程内运行，以便将结果返回调用方。</span><span class="sxs-lookup"><span data-stu-id="2adc5-101">Allows managed stored procedures running in-process on a SQL Server database to return results back to the caller.</span></span> <span data-ttu-id="2adc5-102">此类不能被继承。</span><span class="sxs-lookup"><span data-stu-id="2adc5-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2adc5-103">此类的实例将提供给托管存储过程通过<xref:Microsoft.SqlServer.Server.SqlContext.Pipe%2A>属性的<xref:Microsoft.SqlServer.Server.SqlContext>类。</span><span class="sxs-lookup"><span data-stu-id="2adc5-103">An instance of this class is made available to managed stored procedures through the <xref:Microsoft.SqlServer.Server.SqlContext.Pipe%2A> property of the <xref:Microsoft.SqlServer.Server.SqlContext> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2adc5-104">下面的示例使用<xref:System.Data.SqlClient.SqlConnection>和<xref:System.Data.SqlClient.SqlCommand>来从存储过程中的数据源选择的行。</span><span class="sxs-lookup"><span data-stu-id="2adc5-104">The following example uses <xref:System.Data.SqlClient.SqlConnection> and <xref:System.Data.SqlClient.SqlCommand> to select rows from a data source in a stored procedure.</span></span> <span data-ttu-id="2adc5-105">该示例然后使用<xref:Microsoft.SqlServer.Server.SqlPipe>执行命令，将结果发送回客户端。</span><span class="sxs-lookup"><span data-stu-id="2adc5-105">The example then uses a <xref:Microsoft.SqlServer.Server.SqlPipe> to execute the command and send the results back to the client.</span></span>  
  
 [!code-csharp[DataWorks SqlPipe#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlPipe/CS/source.cs#1)]
 [!code-vb[DataWorks SqlPipe#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlPipe/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ExecuteAndSend">
      <MemberSignature Language="C#" Value="public void ExecuteAndSend (System.Data.SqlClient.SqlCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ExecuteAndSend(class System.Data.SqlClient.SqlCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Server.SqlPipe.ExecuteAndSend(System.Data.SqlClient.SqlCommand)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExecuteAndSend (command As SqlCommand)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExecuteAndSend(System::Data::SqlClient::SqlCommand ^ command);" />
      <MemberSignature Language="F#" Value="member this.ExecuteAndSend : System.Data.SqlClient.SqlCommand -&gt; unit" Usage="sqlPipe.ExecuteAndSend command" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Data.SqlClient.SqlCommand" />
      </Parameters>
      <Docs>
        <param name="command"><span data-ttu-id="2adc5-106">要执行的 <see cref="T:System.Data.SqlClient.SqlCommand" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="2adc5-106">The <see cref="T:System.Data.SqlClient.SqlCommand" /> object to be executed.</span></span></param>
        <summary><span data-ttu-id="2adc5-107">执行作为参数传递的命令，并将结果发送到客户端。</span><span class="sxs-lookup"><span data-stu-id="2adc5-107">Executes the command passed as a parameter and sends the results to the client.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2adc5-108">任何实际的结果，除了其他消息和错误还直接发送到客户端。</span><span class="sxs-lookup"><span data-stu-id="2adc5-108">In addition to any actual results, other messages and errors are also sent directly to the client.</span></span>  
  
 <span data-ttu-id="2adc5-109">输出参数和返回值不会发送到客户端;这些可供调用方，通过命令对象的参数集合。</span><span class="sxs-lookup"><span data-stu-id="2adc5-109">Output parameters and return values are not sent to the client; these are available to the caller, through the parameters collection of the command object.</span></span>  
  
 <span data-ttu-id="2adc5-110">如果该命令未绑定到进程内建立连接后，<xref:System.InvalidOperationException>引发。</span><span class="sxs-lookup"><span data-stu-id="2adc5-110">If the command is not bound to an in-process connection, an <xref:System.InvalidOperationException> is thrown.</span></span> <span data-ttu-id="2adc5-111">对于绑定到进程外连接的命令，此方法不受支持。</span><span class="sxs-lookup"><span data-stu-id="2adc5-111">This method is not supported on commands bound to out-of-process connections.</span></span>  
  
 <span data-ttu-id="2adc5-112">如果有错误<xref:System.Data.SqlClient.SqlCommand>已提交，异常发送到管道，但副本也会发送到调用托管代码的对象。</span><span class="sxs-lookup"><span data-stu-id="2adc5-112">If there are errors in the <xref:System.Data.SqlClient.SqlCommand> object that was submitted, exceptions are sent to the pipe, but a copy is also sent to calling managed code.</span></span> <span data-ttu-id="2adc5-113">如果调用代码不会捕获异常，它将传播到堆栈的 TRANSACT-SQL 代码并在输出中出现两次。</span><span class="sxs-lookup"><span data-stu-id="2adc5-113">If the calling code doesn't catch the exception, it will propagate up the stack to the Transact-SQL code and appear in the output twice.</span></span> <span data-ttu-id="2adc5-114">如果调用代码捕获了异常，则管道使用者仍将看到错误，但不是会重复错误。</span><span class="sxs-lookup"><span data-stu-id="2adc5-114">If the calling code does catch the exception, the pipe consumer will still see the error, but there will not be a duplicate error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2adc5-115">下面的示例使用<xref:System.Data.SqlClient.SqlConnection>和<xref:System.Data.SqlClient.SqlCommand>来从存储过程中的数据源选择的行。</span><span class="sxs-lookup"><span data-stu-id="2adc5-115">The following example uses <xref:System.Data.SqlClient.SqlConnection> and <xref:System.Data.SqlClient.SqlCommand> to select rows from a data source in a stored procedure.</span></span> <span data-ttu-id="2adc5-116">该示例然后使用<xref:Microsoft.SqlServer.Server.SqlPipe>执行命令，将结果发送回客户端。</span><span class="sxs-lookup"><span data-stu-id="2adc5-116">The example then uses a <xref:Microsoft.SqlServer.Server.SqlPipe> to execute the command and send the results back to the client.</span></span>  
  
 [!code-csharp[DataWorks SqlPipe.ExecuteAndSend#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlPipe.ExecuteAndSend/CS/source.cs#1)]
 [!code-vb[DataWorks SqlPipe.ExecuteAndSend#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlPipe.ExecuteAndSend/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2adc5-117"><paramref name="command" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2adc5-117">The <paramref name="command" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2adc5-118">对于绑定到进程外连接的命令，此方法不受支持。</span><span class="sxs-lookup"><span data-stu-id="2adc5-118">This method is not supported on commands bound to out-of-process connections.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsSendingResults">
      <MemberSignature Language="C#" Value="public bool IsSendingResults { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSendingResults" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlPipe.IsSendingResults" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSendingResults As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSendingResults { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSendingResults : bool" Usage="Microsoft.SqlServer.Server.SqlPipe.IsSendingResults" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2adc5-119">获取一个值，该值指示 <see cref="T:Microsoft.SqlServer.Server.SqlPipe" /> 是否处于将单个结果集发送回客户端的模式。</span><span class="sxs-lookup"><span data-stu-id="2adc5-119">Gets a value that indicates whether the <see cref="T:Microsoft.SqlServer.Server.SqlPipe" /> is in the mode of sending single result sets back to the client.</span></span> <span data-ttu-id="2adc5-120">此属性是只读的。</span><span class="sxs-lookup"><span data-stu-id="2adc5-120">This property is read-only.</span></span></summary>
        <value><span data-ttu-id="2adc5-121">如果已调用 <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" /> 方法，并且 <see cref="T:Microsoft.SqlServer.Server.SqlPipe" /> 处于将单个结果集发送回客户端的模式，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="2adc5-121"><see langword="true" /> if the <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" /> method has been called and the <see cref="T:Microsoft.SqlServer.Server.SqlPipe" /> is in the mode of sending single result sets back to the client; otherwise <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Send">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2adc5-122">将结果直接发送到客户端或当前输出使用者。</span><span class="sxs-lookup"><span data-stu-id="2adc5-122">Sends results directly to the client or current output consumer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2adc5-123">**发送**方法的数据将直接发送到客户端或调用方。</span><span class="sxs-lookup"><span data-stu-id="2adc5-123">The **Send** method sends data straight to the client or caller.</span></span> <span data-ttu-id="2adc5-124">它通常是客户端使用的输出**管道**方法，但在嵌套 CLR 存储的过程输出使用者还可以将存储的过程。</span><span class="sxs-lookup"><span data-stu-id="2adc5-124">It is usually the client that consumes the output from the **Pipe** method, but in the case of nested CLR stored procedures the output consumer can also be a stored procedure.</span></span> <span data-ttu-id="2adc5-125">例如，Procedure1 调用<xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>与命令文本"EXEC Procedure2"。</span><span class="sxs-lookup"><span data-stu-id="2adc5-125">For example, Procedure1 calls <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> with the command text "EXEC Procedure2".</span></span> <span data-ttu-id="2adc5-126">Procedure2 也是托管存储的过程。</span><span class="sxs-lookup"><span data-stu-id="2adc5-126">Procedure2 is also a managed stored procedure.</span></span> <span data-ttu-id="2adc5-127">如果现在 Procedure2 调用<xref:Microsoft.SqlServer.Server.SqlPipe.Send%2A>的行发送到 Procedure1 的读取器，不向客户端。</span><span class="sxs-lookup"><span data-stu-id="2adc5-127">If Procedure2 now calls <xref:Microsoft.SqlServer.Server.SqlPipe.Send%2A>, the row is sent to Procedure1's reader, not to the client.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public void Send (Microsoft.SqlServer.Server.SqlDataRecord record);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Send(class Microsoft.SqlServer.Server.SqlDataRecord record) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Server.SqlPipe.Send(Microsoft.SqlServer.Server.SqlDataRecord)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Send (record As SqlDataRecord)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Send(Microsoft::SqlServer::Server::SqlDataRecord ^ record);" />
      <MemberSignature Language="F#" Value="member this.Send : Microsoft.SqlServer.Server.SqlDataRecord -&gt; unit" Usage="sqlPipe.Send record" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="record" Type="Microsoft.SqlServer.Server.SqlDataRecord" />
      </Parameters>
      <Docs>
        <param name="record"><span data-ttu-id="2adc5-128">发送到客户端的单行结果集：一个 <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="2adc5-128">The single-row result set sent to the client: a <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> object.</span></span></param>
        <summary><span data-ttu-id="2adc5-129">将单行结果集直接发送到客户端或当前输出使用者。</span><span class="sxs-lookup"><span data-stu-id="2adc5-129">Sends a single-row result set directly to the client or current output consumer.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2adc5-130"><paramref name="record" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2adc5-130">The <paramref name="record" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public void Send (System.Data.SqlClient.SqlDataReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Send(class System.Data.SqlClient.SqlDataReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Server.SqlPipe.Send(System.Data.SqlClient.SqlDataReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Send (reader As SqlDataReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Send(System::Data::SqlClient::SqlDataReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.Send : System.Data.SqlClient.SqlDataReader -&gt; unit" Usage="sqlPipe.Send reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.SqlClient.SqlDataReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="2adc5-131">要发送到客户端的多行结果集：一个 <see cref="T:System.Data.SqlClient.SqlDataReader" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="2adc5-131">The multirow result set to be sent to the client: a <see cref="T:System.Data.SqlClient.SqlDataReader" /> object.</span></span></param>
        <summary><span data-ttu-id="2adc5-132">将多行结果集直接发送到客户端或当前输出使用者。</span><span class="sxs-lookup"><span data-stu-id="2adc5-132">Sends a multirow result set directly to the client or current output consumer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2adc5-133">如果<xref:System.Data.SqlClient.SqlDataReader>对象一起传递中作为一个参数具有隐藏列，则这些列不会传播到结果集发送到客户端。</span><span class="sxs-lookup"><span data-stu-id="2adc5-133">If the <xref:System.Data.SqlClient.SqlDataReader> object passed in as a parameter has hidden columns, those columns are not propagated to the result set sent to the client.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2adc5-134"><paramref name="reader" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2adc5-134">The <paramref name="reader" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public void Send (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Send(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Server.SqlPipe.Send(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Send (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Send(System::String ^ message);" />
      <MemberSignature Language="F#" Value="member this.Send : string -&gt; unit" Usage="sqlPipe.Send message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="2adc5-135">要发送到客户端的消息字符串。</span><span class="sxs-lookup"><span data-stu-id="2adc5-135">The message string to be sent to the client.</span></span></param>
        <summary><span data-ttu-id="2adc5-136">将字符串消息直接发送到客户端或当前输出使用者。</span><span class="sxs-lookup"><span data-stu-id="2adc5-136">Sends a string message directly to the client or current output consumer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2adc5-137">消息字符串是作为一条信息性消息发送到客户端。</span><span class="sxs-lookup"><span data-stu-id="2adc5-137">The message string is sent as an informational message to the client.</span></span> <span data-ttu-id="2adc5-138">客户端应用程序可以通过不同的机制，具体取决于数据访问应用程序编程接口 (API)，它们使用侦听消息。</span><span class="sxs-lookup"><span data-stu-id="2adc5-138">Client applications can listen to messages through different mechanisms, depending on the data access application programming interface (API) that they use.</span></span> <span data-ttu-id="2adc5-139">例如，如果客户端正在使用 ADO.NET，消息传输通过<xref:System.Data.SqlClient.SqlConnection.InfoMessage>事件。</span><span class="sxs-lookup"><span data-stu-id="2adc5-139">For example, if the client is using ADO.NET, the messages transmit through the <xref:System.Data.SqlClient.SqlConnection.InfoMessage> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2adc5-140">下面的示例使用<xref:Microsoft.SqlServer.Server.SqlPipe.Send%2A>方法直接向客户端发送的消息字符串。</span><span class="sxs-lookup"><span data-stu-id="2adc5-140">The following example uses the <xref:Microsoft.SqlServer.Server.SqlPipe.Send%2A> method to send a message string directly to the client.</span></span>  
  
 [!code-csharp[DataWorks SqlPipe.Send#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlPipe.Send/CS/source.cs#1)]
 [!code-vb[DataWorks SqlPipe.Send#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlPipe.Send/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2adc5-141"><paramref name="message" /> 大于4,000个字符。</span><span class="sxs-lookup"><span data-stu-id="2adc5-141">The <paramref name="message" /> is greater than 4,000 characters.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2adc5-142"><paramref name="message" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2adc5-142">The <paramref name="message" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SendResultsEnd">
      <MemberSignature Language="C#" Value="public void SendResultsEnd ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendResultsEnd() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendResultsEnd ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendResultsEnd();" />
      <MemberSignature Language="F#" Value="member this.SendResultsEnd : unit -&gt; unit" Usage="sqlPipe.SendResultsEnd " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2adc5-143">标记结果集的结尾，并将 <see cref="T:Microsoft.SqlServer.Server.SqlPipe" /> 实例返回到初始状态。</span><span class="sxs-lookup"><span data-stu-id="2adc5-143">Marks the end of a result set, and returns the <see cref="T:Microsoft.SqlServer.Server.SqlPipe" /> instance back to the initial state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2adc5-144">托管存储的过程可以将结果集发送到客户端不实现的<xref:System.Data.SqlClient.SqlDataReader>。</span><span class="sxs-lookup"><span data-stu-id="2adc5-144">Managed stored procedures can send result sets to clients that are not implementing a <xref:System.Data.SqlClient.SqlDataReader>.</span></span> <span data-ttu-id="2adc5-145">此方法中，连同<xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A>和<xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A>，允许存储的过程以向客户端发送自定义结果集。</span><span class="sxs-lookup"><span data-stu-id="2adc5-145">This method, along with <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> and <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A>, allow stored procedures to send custom result sets to the client.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2adc5-146">下面的示例创建一个新<xref:Microsoft.SqlServer.Server.SqlDataRecord>并将其<xref:Microsoft.SqlServer.Server.SqlMetaData>。</span><span class="sxs-lookup"><span data-stu-id="2adc5-146">The following example creates a new <xref:Microsoft.SqlServer.Server.SqlDataRecord> and its <xref:Microsoft.SqlServer.Server.SqlMetaData>.</span></span> <span data-ttu-id="2adc5-147">该示例然后表示结果集使用开头<xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A>方法中，将使用示例数据记录发送回客户端使用<xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A>方法，并使用集结果的结尾标记<xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="2adc5-147">The example then marks the beginning of a result set using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> method, sends records with example data back to the client using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> method, and marks the end of the result set with the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> method.</span></span>  
  
 [!code-csharp[DataWorks SqlPipe.SendResultsEnd#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlPipe.SendResultsEnd/CS/source.cs#1)]
 [!code-vb[DataWorks SqlPipe.SendResultsEnd#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlPipe.SendResultsEnd/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2adc5-148"><see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" /> 方法以前未被调用过。</span><span class="sxs-lookup"><span data-stu-id="2adc5-148">The <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" /> method was not previously called.</span></span></exception>
        <altmember cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow(Microsoft.SqlServer.Server.SqlDataRecord)" />
        <altmember cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" />
      </Docs>
    </Member>
    <Member MemberName="SendResultsRow">
      <MemberSignature Language="C#" Value="public void SendResultsRow (Microsoft.SqlServer.Server.SqlDataRecord record);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendResultsRow(class Microsoft.SqlServer.Server.SqlDataRecord record) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow(Microsoft.SqlServer.Server.SqlDataRecord)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendResultsRow (record As SqlDataRecord)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendResultsRow(Microsoft::SqlServer::Server::SqlDataRecord ^ record);" />
      <MemberSignature Language="F#" Value="member this.SendResultsRow : Microsoft.SqlServer.Server.SqlDataRecord -&gt; unit" Usage="sqlPipe.SendResultsRow record" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="record" Type="Microsoft.SqlServer.Server.SqlDataRecord" />
      </Parameters>
      <Docs>
        <param name="record"><span data-ttu-id="2adc5-149"><see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> 对象，它具有要发送到客户端的行的列值。</span><span class="sxs-lookup"><span data-stu-id="2adc5-149">A <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> object with the column values for the row to be sent to the client.</span></span> <span data-ttu-id="2adc5-150">记录的架构必须与传递给 <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> 方法的 <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" /> 的元数据所描述的架构相匹配。</span><span class="sxs-lookup"><span data-stu-id="2adc5-150">The schema for the record must match the schema described by the metadata of the <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> passed to the <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" /> method.</span></span></param>
        <summary><span data-ttu-id="2adc5-151">将单行数据发送回客户端。</span><span class="sxs-lookup"><span data-stu-id="2adc5-151">Sends a single row of data back to the client.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2adc5-152">托管存储的过程可以将结果集发送到客户端不实现的<xref:System.Data.SqlClient.SqlDataReader>。</span><span class="sxs-lookup"><span data-stu-id="2adc5-152">Managed stored procedures can send result sets to clients that are not implementing a <xref:System.Data.SqlClient.SqlDataReader>.</span></span> <span data-ttu-id="2adc5-153">此方法中，连同<xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A>和<xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A>，允许存储的过程以向客户端发送自定义结果集。</span><span class="sxs-lookup"><span data-stu-id="2adc5-153">This method, along with <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> and <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A>, allows stored procedures to send custom result sets to the client.</span></span>  
  
 <span data-ttu-id="2adc5-154"><xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A>方法将单行数据发送回客户端。</span><span class="sxs-lookup"><span data-stu-id="2adc5-154">The <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> method sends a single row of data back to the client.</span></span> <span data-ttu-id="2adc5-155">行可以连续地返回给调用方通过调用<xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A>、 所发送的每行一次。</span><span class="sxs-lookup"><span data-stu-id="2adc5-155">Rows can subsequently be returned to the caller by calling <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A>, one time for each row being sent.</span></span> <span data-ttu-id="2adc5-156">已发送的所有行，对的调用后<xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A>方法所需标记结果集的末尾。</span><span class="sxs-lookup"><span data-stu-id="2adc5-156">After all the rows have been sent, a call to the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> method is required to mark the end of the result set.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2adc5-157">下面的示例创建一个新<xref:Microsoft.SqlServer.Server.SqlDataRecord>并将其<xref:Microsoft.SqlServer.Server.SqlMetaData>。</span><span class="sxs-lookup"><span data-stu-id="2adc5-157">The following example creates a new <xref:Microsoft.SqlServer.Server.SqlDataRecord> and its <xref:Microsoft.SqlServer.Server.SqlMetaData>.</span></span> <span data-ttu-id="2adc5-158">该示例然后表示结果集使用开头<xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A>方法中，将使用示例数据记录发送回客户端使用<xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A>方法，并使用集结果的结尾标记<xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="2adc5-158">The example then marks the beginning of a result set using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> method, sends records with example data back to the client using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> method, and marks the end of the result set with the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> method.</span></span>  
  
 [!code-csharp[DataWorks SqlPipe.SendResultsRow#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlPipe.SendResultsRow/CS/source.cs#1)]
 [!code-vb[DataWorks SqlPipe.SendResultsRow#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlPipe.SendResultsRow/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2adc5-159"><paramref name="record" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2adc5-159">The <paramref name="record" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2adc5-160"><see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" /> 方法以前未被调用过。</span><span class="sxs-lookup"><span data-stu-id="2adc5-160">The <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" /> method was not previously called.</span></span></exception>
        <altmember cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" />
        <altmember cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd" />
      </Docs>
    </Member>
    <Member MemberName="SendResultsStart">
      <MemberSignature Language="C#" Value="public void SendResultsStart (Microsoft.SqlServer.Server.SqlDataRecord record);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendResultsStart(class Microsoft.SqlServer.Server.SqlDataRecord record) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendResultsStart (record As SqlDataRecord)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendResultsStart(Microsoft::SqlServer::Server::SqlDataRecord ^ record);" />
      <MemberSignature Language="F#" Value="member this.SendResultsStart : Microsoft.SqlServer.Server.SqlDataRecord -&gt; unit" Usage="sqlPipe.SendResultsStart record" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="record" Type="Microsoft.SqlServer.Server.SqlDataRecord" />
      </Parameters>
      <Docs>
        <param name="record"><span data-ttu-id="2adc5-161"><see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> 对象，元数据即是从中提取并用来描述结果集的。</span><span class="sxs-lookup"><span data-stu-id="2adc5-161">A <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> object from which metadata is extracted and used to describe the result set.</span></span></param>
        <summary><span data-ttu-id="2adc5-162">标记要发送到客户端的结果集的开始，并使用记录参数构造描述结果集的元数据。</span><span class="sxs-lookup"><span data-stu-id="2adc5-162">Marks the beginning of a result set to be sent back to the client, and uses the record parameter to construct the metadata that describes the result set.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2adc5-163">托管存储的过程可以将结果集发送到客户端不实现的<xref:System.Data.SqlClient.SqlDataReader>。</span><span class="sxs-lookup"><span data-stu-id="2adc5-163">Managed stored procedures can send result sets to clients that are not implementing a <xref:System.Data.SqlClient.SqlDataReader>.</span></span> <span data-ttu-id="2adc5-164">此方法中，连同<xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A>和<xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A>，允许存储的过程以向客户端发送自定义结果集。</span><span class="sxs-lookup"><span data-stu-id="2adc5-164">This method, along with <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> and <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A>, allow stored procedures to send custom result sets to the client.</span></span>  
  
 <span data-ttu-id="2adc5-165"><xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A>方法标记结果集的开头，并使用记录参数构造描述结果集的元数据。</span><span class="sxs-lookup"><span data-stu-id="2adc5-165">The <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> method marks the beginning of a result set, and uses the record parameter to construct the metadata that describes the result set.</span></span> <span data-ttu-id="2adc5-166">所有后续的行，使用发送<xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A>方法，必须与该元数据定义匹配。</span><span class="sxs-lookup"><span data-stu-id="2adc5-166">All the subsequent rows, sent using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> method, must match that metadata definition.</span></span>  
  
 <span data-ttu-id="2adc5-167">请注意，之后调用<xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A>，则只<xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A>和<xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A>可以调用。</span><span class="sxs-lookup"><span data-stu-id="2adc5-167">Note that after calling <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A>, only <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> and <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> can be called.</span></span> <span data-ttu-id="2adc5-168">在同一个实例中的任何其他方法<xref:Microsoft.SqlServer.Server.SqlPipe>引发<xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="2adc5-168">Any other method in the same instance of <xref:Microsoft.SqlServer.Server.SqlPipe> throws an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="2adc5-169"><xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> 设置<xref:Microsoft.SqlServer.Server.SqlPipe>回其中调用其他方法的初始状态。</span><span class="sxs-lookup"><span data-stu-id="2adc5-169"><xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> sets <xref:Microsoft.SqlServer.Server.SqlPipe> back to the initial state where other methods can be called.</span></span>  
  
 <span data-ttu-id="2adc5-170">控制将返回到-CLR 执行后，不尝试使用静态或本地变量初始化为 CLR 内存。</span><span class="sxs-lookup"><span data-stu-id="2adc5-170">After control returns to Transact-SQL from CLR execution, do not attempt to use a static or local variable initialized to CLR memory.</span></span> <span data-ttu-id="2adc5-171">例如，是否不是类的实例正在进行的例如存储`SQLDataRecord`，其将控制返回从 CLR 后使用。</span><span class="sxs-lookup"><span data-stu-id="2adc5-171">For example, do not store an instance of an in process class, for example `SQLDataRecord`, which will be used after control returns from CLR.</span></span> <span data-ttu-id="2adc5-172">一个例外是`SQLMetaData`process 类中。</span><span class="sxs-lookup"><span data-stu-id="2adc5-172">One exception is the `SQLMetaData` in process class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2adc5-173">下面的示例创建一个新<xref:Microsoft.SqlServer.Server.SqlDataRecord>并将其<xref:Microsoft.SqlServer.Server.SqlMetaData>。</span><span class="sxs-lookup"><span data-stu-id="2adc5-173">The following example creates a new <xref:Microsoft.SqlServer.Server.SqlDataRecord> and its <xref:Microsoft.SqlServer.Server.SqlMetaData>.</span></span> <span data-ttu-id="2adc5-174">该示例然后表示结果集使用开头<xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A>方法中，将使用示例数据记录发送回客户端使用<xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A>方法，并使用集结果的结尾标记<xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="2adc5-174">The example then marks the beginning of a result set using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> method, sends records with example data back to the client using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> method, and marks the end of the result set with the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> method.</span></span>  
  
 [!code-csharp[DataWorks SqlPipe.SendResultsStart#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlPipe.SendResultsStart/CS/source.cs#1)]
 [!code-vb[DataWorks SqlPipe.SendResultsStart#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlPipe.SendResultsStart/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2adc5-175"><paramref name="record" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2adc5-175">The <paramref name="record" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2adc5-176"><paramref name="record" /> 没有列或者还没有初始化。</span><span class="sxs-lookup"><span data-stu-id="2adc5-176">The <paramref name="record" /> has no columns or has not been initialized.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2adc5-177">在 <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow(Microsoft.SqlServer.Server.SqlDataRecord)" /> 方法之后调用了一个 <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd" /> 或 <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" /> 方法之外的方法。</span><span class="sxs-lookup"><span data-stu-id="2adc5-177">A method other than <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow(Microsoft.SqlServer.Server.SqlDataRecord)" /> or <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd" /> was called after the <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" /> method.</span></span></exception>
        <altmember cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow(Microsoft.SqlServer.Server.SqlDataRecord)" />
        <altmember cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd" />
      </Docs>
    </Member>
  </Members>
</Type>