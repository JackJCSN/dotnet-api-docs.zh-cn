<Type Name="StronglyTypedResourceBuilder" FullName="System.Resources.Tools.StronglyTypedResourceBuilder">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d8c0f60588168ba2ca37bd1927706f957d6bf332" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69276083" /></Metadata><TypeSignature Language="C#" Value="public static class StronglyTypedResourceBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit StronglyTypedResourceBuilder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Resources.Tools.StronglyTypedResourceBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Class StronglyTypedResourceBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class StronglyTypedResourceBuilder abstract sealed" />
  <TypeSignature Language="F#" Value="type StronglyTypedResourceBuilder = class" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="9343a-101">为强类型资源提供支持。</span><span class="sxs-lookup"><span data-stu-id="9343a-101">Provides support for strongly typed resources.</span></span> <span data-ttu-id="9343a-102">此类不能被继承。</span><span class="sxs-lookup"><span data-stu-id="9343a-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9343a-103">通常, 资源会在应用程序中将代码与内容分离。</span><span class="sxs-lookup"><span data-stu-id="9343a-103">Typically, resources separate code from content within an application.</span></span> <span data-ttu-id="9343a-104">通过创建和使用这些资源, 可以更轻松地开发可本地化的应用程序。</span><span class="sxs-lookup"><span data-stu-id="9343a-104">Creating and consuming these resources makes it easier to develop localizable applications.</span></span> <span data-ttu-id="9343a-105">在 .NET Framework 中, 通常使用<xref:System.Resources.ResourceManager>类来使用资源, 该类包含在运行时提供对特定于区域性的资源的访问的方法。</span><span class="sxs-lookup"><span data-stu-id="9343a-105">In the .NET Framework, resources are usually consumed by using the <xref:System.Resources.ResourceManager> class, which contains methods that provide access to culture-specific resources at run time.</span></span> <span data-ttu-id="9343a-106">有关创建和使用资源的详细信息, 请参阅[桌面应用中的资源](https://msdn.microsoft.com/library/8ad495d4-2941-40cf-bf64-e82e85825890)。</span><span class="sxs-lookup"><span data-stu-id="9343a-106">For more information about creating and consuming resources, see [Resources in Desktop Apps](https://msdn.microsoft.com/library/8ad495d4-2941-40cf-bf64-e82e85825890).</span></span>  
  
 <span data-ttu-id="9343a-107">强类型资源支持是一项编译时功能, 它通过创建包含一组静态只读 (`get`) 属性的类来封装对资源的访问。</span><span class="sxs-lookup"><span data-stu-id="9343a-107">Strongly typed resource support is a compile-time feature that encapsulates access to resources by creating classes that contain a set of static, read-only (`get`) properties.</span></span> <span data-ttu-id="9343a-108">这提供了另一种方法来使用资源, 而<xref:System.Resources.ResourceManager.GetString%2A?displayProperty=nameWithType>不<xref:System.Resources.ResourceManager.GetObject%2A?displayProperty=nameWithType>是调用和方法。</span><span class="sxs-lookup"><span data-stu-id="9343a-108">This provides an alternative way to consume resources instead of calling the <xref:System.Resources.ResourceManager.GetString%2A?displayProperty=nameWithType> and <xref:System.Resources.ResourceManager.GetObject%2A?displayProperty=nameWithType> methods.</span></span>  
  
 <span data-ttu-id="9343a-109">强类型资源支持的基本功能由<xref:System.Resources.Tools.StronglyTypedResourceBuilder>类提供 (以及[resgen.exe (资源文件生成器)](~/docs/framework/tools/resgen-exe-resource-file-generator.md)中的`/str`命令行选项)。</span><span class="sxs-lookup"><span data-stu-id="9343a-109">The basic functionality for strongly typed resource support is provided by the <xref:System.Resources.Tools.StronglyTypedResourceBuilder> class (as well as the `/str` command-line option in the [Resgen.exe (Resource File Generator)](~/docs/framework/tools/resgen-exe-resource-file-generator.md)).</span></span> <span data-ttu-id="9343a-110">此<xref:System.Resources.Tools.StronglyTypedResourceBuilder.Create%2A>方法的输出是一个包含强类型属性的类, 这些属性与输入参数中引用的资源相匹配。</span><span class="sxs-lookup"><span data-stu-id="9343a-110">The output of the <xref:System.Resources.Tools.StronglyTypedResourceBuilder.Create%2A> method is a class that contains strongly typed properties that match the resources that are referenced in the input parameter.</span></span> <span data-ttu-id="9343a-111">此类提供对处理的文件中可用的资源的只读访问。</span><span class="sxs-lookup"><span data-stu-id="9343a-111">This class provides read-only access to the resources that are available in the file processed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9343a-112">下面的示例生成一个名`DemoResources`为的类, 它是用C#或 Visual Basic 编写的 (具体取决于示例的源代码)。</span><span class="sxs-lookup"><span data-stu-id="9343a-112">The following example generates a class named `DemoResources` that is written in C# or Visual Basic (depending on the example's source code).</span></span> <span data-ttu-id="9343a-113">此类位于`DemoApp`命名空间中, 并且具有返回徽标位图和应用程序名称的属性。</span><span class="sxs-lookup"><span data-stu-id="9343a-113">This class is in the `DemoApp` namespace and has properties that return the bitmap of a logo and the name of an application.</span></span> <span data-ttu-id="9343a-114">该示例调用一个`CreateResourceFile`方法来创建必要的 .resw 文件, 并要求在示例的当前目录中找到一个名为徽标键的位图文件。</span><span class="sxs-lookup"><span data-stu-id="9343a-114">The example calls a `CreateResourceFile` method to create the necessary .resw file and requires that a bitmap file named Logo.bmp be found in the example's current directory.</span></span> <span data-ttu-id="9343a-115">此代码示例使用以下名为 demo 的资源文件:</span><span class="sxs-lookup"><span data-stu-id="9343a-115">The code example uses the following resource file, named demo.resx:</span></span>  
  
 [!code-csharp[System.Resources.Tools.StronglyTypedResourceBuilder.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.tools.stronglytypedresourcebuilder.class/cs/example1.cs#1)]
 [!code-vb[System.Resources.Tools.StronglyTypedResourceBuilder.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.tools.stronglytypedresourcebuilder.class/vb/example1.vb#1)]  
  
 <span data-ttu-id="9343a-116">然后, 你的应用程序代码可以使用类, 如下所示:</span><span class="sxs-lookup"><span data-stu-id="9343a-116">Your application code can then use the class as follows:</span></span>  
  
 [!code-csharp[System.Resources.Tools.StronglyTypedResourceBuilder.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.tools.stronglytypedresourcebuilder.class/cs/demoresources.cs#2)]
 [!code-vb[System.Resources.Tools.StronglyTypedResourceBuilder.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.tools.stronglytypedresourcebuilder.class/vb/demoresources.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9343a-117">生成一个类文件，该文件包含与输入参数中所指定的资源相匹配的强类型属性。</span><span class="sxs-lookup"><span data-stu-id="9343a-117">Generates a class file that contains strongly typed properties that match the resources that are specified in the input parameter.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.CodeDom.CodeCompileUnit Create (System.Collections.IDictionary resourceList, string baseName, string generatedCodeNamespace, System.CodeDom.Compiler.CodeDomProvider codeProvider, bool internalClass, out string[] unmatchable);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CodeDom.CodeCompileUnit Create(class System.Collections.IDictionary resourceList, string baseName, string generatedCodeNamespace, class System.CodeDom.Compiler.CodeDomProvider codeProvider, bool internalClass, [out] string[]&amp; unmatchable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.Tools.StronglyTypedResourceBuilder.Create(System.Collections.IDictionary,System.String,System.String,System.CodeDom.Compiler.CodeDomProvider,System.Boolean,System.String[]@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (resourceList As IDictionary, baseName As String, generatedCodeNamespace As String, codeProvider As CodeDomProvider, internalClass As Boolean, ByRef unmatchable As String()) As CodeCompileUnit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::CodeDom::CodeCompileUnit ^ Create(System::Collections::IDictionary ^ resourceList, System::String ^ baseName, System::String ^ generatedCodeNamespace, System::CodeDom::Compiler::CodeDomProvider ^ codeProvider, bool internalClass, [Runtime::InteropServices::Out] cli::array &lt;System::String ^&gt; ^ % unmatchable);" />
      <MemberSignature Language="F#" Value="static member Create : System.Collections.IDictionary * string * string * System.CodeDom.Compiler.CodeDomProvider * bool *  -&gt; System.CodeDom.CodeCompileUnit" Usage="System.Resources.Tools.StronglyTypedResourceBuilder.Create (resourceList, baseName, generatedCodeNamespace, codeProvider, internalClass, unmatchable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeCompileUnit</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceList" Type="System.Collections.IDictionary" />
        <Parameter Name="baseName" Type="System.String" />
        <Parameter Name="generatedCodeNamespace" Type="System.String" />
        <Parameter Name="codeProvider" Type="System.CodeDom.Compiler.CodeDomProvider" />
        <Parameter Name="internalClass" Type="System.Boolean" />
        <Parameter Name="unmatchable" Type="System.String[]" RefType="out" />
      </Parameters>
      <Docs>
        <param name="resourceList"><span data-ttu-id="9343a-118">一个 <see cref="T:System.Collections.IDictionary" /> 集合，其中每个字典条目键值对都是资源的名称以及资源的值。</span><span class="sxs-lookup"><span data-stu-id="9343a-118">An <see cref="T:System.Collections.IDictionary" /> collection where each dictionary entry key/value pair is the name of a resource and the value of the resource.</span></span></param>
        <param name="baseName"><span data-ttu-id="9343a-119">要生成的类的名称。</span><span class="sxs-lookup"><span data-stu-id="9343a-119">The name of the class to be generated.</span></span></param>
        <param name="generatedCodeNamespace"><span data-ttu-id="9343a-120">要生成的类的命名空间。</span><span class="sxs-lookup"><span data-stu-id="9343a-120">The namespace of the class to be generated.</span></span></param>
        <param name="codeProvider"><span data-ttu-id="9343a-121">一个 <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> 类，该类提供生成该类所使用的语言。</span><span class="sxs-lookup"><span data-stu-id="9343a-121">A <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> class that provides the language in which the class will be generated.</span></span></param>
        <param name="internalClass"><span data-ttu-id="9343a-122">如果生成内部类，则为 <see langword="true" />；如果生成公共类，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="9343a-122"><see langword="true" /> to generate an internal class; <see langword="false" /> to generate a public class.</span></span></param>
        <param name="unmatchable"><span data-ttu-id="9343a-123">一个数组，该数组包含无法为其生成属性的每个资源名称。</span><span class="sxs-lookup"><span data-stu-id="9343a-123">An array that contains each resource name for which a property cannot be generated.</span></span> <span data-ttu-id="9343a-124">通常，无法生成属性是因为该资源名称不是有效的标识符。</span><span class="sxs-lookup"><span data-stu-id="9343a-124">Typically, a property cannot be generated because the resource name is not a valid identifier.</span></span></param>
        <summary><span data-ttu-id="9343a-125">生成一个类文件，该文件包含与指定集合中引用的资源相匹配的强类型的属性。</span><span class="sxs-lookup"><span data-stu-id="9343a-125">Generates a class file that contains strongly typed properties that match the resources referenced in the specified collection.</span></span></summary>
        <returns><span data-ttu-id="9343a-126">一个 <see cref="T:System.CodeDom.CodeCompileUnit" /> 容器。</span><span class="sxs-lookup"><span data-stu-id="9343a-126">A <see cref="T:System.CodeDom.CodeCompileUnit" /> container.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9343a-127">使用方法生成一个类, 该类提供强类型化的只读包装器来访问`resourceList`参数中包含的资源。 <xref:System.Resources.Tools.StronglyTypedResourceBuilder.Create%2A></span><span class="sxs-lookup"><span data-stu-id="9343a-127">Use the <xref:System.Resources.Tools.StronglyTypedResourceBuilder.Create%2A> method to generate a class that provides a strongly typed, read-only wrapper to access the resources that are contained in the `resourceList` parameter.</span></span>  
  
 <span data-ttu-id="9343a-128">类<xref:System.Resources.Tools.StronglyTypedResourceBuilder>将忽略以字符 "$" 或 "> >" 开头的任何资源名称。</span><span class="sxs-lookup"><span data-stu-id="9343a-128">The <xref:System.Resources.Tools.StronglyTypedResourceBuilder> class ignores any resource name that begins with the characters "$" or ">>".</span></span> <span data-ttu-id="9343a-129">资源名称 "Culture" 和 "ResourceManager" 是无效的标识符。</span><span class="sxs-lookup"><span data-stu-id="9343a-129">The resource names "Culture" and "ResourceManager" are invalid identifiers.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9343a-130"><paramref name="resourceList" />、<paramref name="basename" /> 或 <paramref name="codeProvider" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9343a-130"><paramref name="resourceList" />, <paramref name="basename" />, or <paramref name="codeProvider" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9343a-131">资源节点名称与其在 <paramref name="resourceList" /> 中的键不匹配。</span><span class="sxs-lookup"><span data-stu-id="9343a-131">A resource node name does not match its key in <paramref name="resourceList" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.CodeDom.CodeCompileUnit Create (string resxFile, string baseName, string generatedCodeNamespace, System.CodeDom.Compiler.CodeDomProvider codeProvider, bool internalClass, out string[] unmatchable);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CodeDom.CodeCompileUnit Create(string resxFile, string baseName, string generatedCodeNamespace, class System.CodeDom.Compiler.CodeDomProvider codeProvider, bool internalClass, [out] string[]&amp; unmatchable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.Tools.StronglyTypedResourceBuilder.Create(System.String,System.String,System.String,System.CodeDom.Compiler.CodeDomProvider,System.Boolean,System.String[]@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (resxFile As String, baseName As String, generatedCodeNamespace As String, codeProvider As CodeDomProvider, internalClass As Boolean, ByRef unmatchable As String()) As CodeCompileUnit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::CodeDom::CodeCompileUnit ^ Create(System::String ^ resxFile, System::String ^ baseName, System::String ^ generatedCodeNamespace, System::CodeDom::Compiler::CodeDomProvider ^ codeProvider, bool internalClass, [Runtime::InteropServices::Out] cli::array &lt;System::String ^&gt; ^ % unmatchable);" />
      <MemberSignature Language="F#" Value="static member Create : string * string * string * System.CodeDom.Compiler.CodeDomProvider * bool *  -&gt; System.CodeDom.CodeCompileUnit" Usage="System.Resources.Tools.StronglyTypedResourceBuilder.Create (resxFile, baseName, generatedCodeNamespace, codeProvider, internalClass, unmatchable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeCompileUnit</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resxFile" Type="System.String" />
        <Parameter Name="baseName" Type="System.String" />
        <Parameter Name="generatedCodeNamespace" Type="System.String" />
        <Parameter Name="codeProvider" Type="System.CodeDom.Compiler.CodeDomProvider" />
        <Parameter Name="internalClass" Type="System.Boolean" />
        <Parameter Name="unmatchable" Type="System.String[]" RefType="out" />
      </Parameters>
      <Docs>
        <param name="resxFile"><span data-ttu-id="9343a-132">.resx 文件的名称用作输入。</span><span class="sxs-lookup"><span data-stu-id="9343a-132">The name of a .resx file used as input.</span></span></param>
        <param name="baseName"><span data-ttu-id="9343a-133">要生成的类的名称。</span><span class="sxs-lookup"><span data-stu-id="9343a-133">The name of the class to be generated.</span></span></param>
        <param name="generatedCodeNamespace"><span data-ttu-id="9343a-134">要生成的类的命名空间。</span><span class="sxs-lookup"><span data-stu-id="9343a-134">The namespace of the class to be generated.</span></span></param>
        <param name="codeProvider"><span data-ttu-id="9343a-135">一个 <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> 类，该类提供生成该类所使用的语言。</span><span class="sxs-lookup"><span data-stu-id="9343a-135">A <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> class that provides the language in which the class will be generated.</span></span></param>
        <param name="internalClass"><span data-ttu-id="9343a-136">如果生成内部类，则为 <see langword="true" />；如果生成公共类，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="9343a-136"><see langword="true" /> to generate an internal class; <see langword="false" /> to generate a public class.</span></span></param>
        <param name="unmatchable"><span data-ttu-id="9343a-137">一个 <see cref="T:System.String" /> 数组，该数组包含无法为其生成属性的每个资源名称。</span><span class="sxs-lookup"><span data-stu-id="9343a-137">A <see cref="T:System.String" /> array that contains each resource name for which a property cannot be generated.</span></span> <span data-ttu-id="9343a-138">通常，无法生成属性是因为该资源名称不是有效的标识符。</span><span class="sxs-lookup"><span data-stu-id="9343a-138">Typically, a property cannot be generated because the resource name is not a valid identifier.</span></span></param>
        <summary><span data-ttu-id="9343a-139">生成一个类文件，该文件包含与指定的 .resx 文件中的资源相匹配的强类型属性。</span><span class="sxs-lookup"><span data-stu-id="9343a-139">Generates a class file that contains strongly typed properties that match the resources in the specified .resx file.</span></span></summary>
        <returns><span data-ttu-id="9343a-140">一个 <see cref="T:System.CodeDom.CodeCompileUnit" /> 容器。</span><span class="sxs-lookup"><span data-stu-id="9343a-140">A <see cref="T:System.CodeDom.CodeCompileUnit" /> container.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9343a-141">使用方法生成一个类, 该类提供对`resxFile`参数中包含的资源的强类型只读访问。 <xref:System.Resources.Tools.StronglyTypedResourceBuilder.Create%2A></span><span class="sxs-lookup"><span data-stu-id="9343a-141">Use the <xref:System.Resources.Tools.StronglyTypedResourceBuilder.Create%2A> method to generate a class that provides strongly typed, read-only access to the resources that are contained in the `resxFile` parameter.</span></span>  
  
 <span data-ttu-id="9343a-142">类<xref:System.Resources.Tools.StronglyTypedResourceBuilder>将忽略以字符 "$" 或 "> >" 开头的任何资源名称。</span><span class="sxs-lookup"><span data-stu-id="9343a-142">The <xref:System.Resources.Tools.StronglyTypedResourceBuilder> class ignores any resource name that begins with the characters "$" or ">>".</span></span> <span data-ttu-id="9343a-143">资源名称 "Culture" 和 "ResourceManager" 是无效的标识符。</span><span class="sxs-lookup"><span data-stu-id="9343a-143">The resource names "Culture" and "ResourceManager" are invalid identifiers.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9343a-144"><paramref name="basename" /> 或 <paramref name="codeProvider" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9343a-144"><paramref name="basename" /> or <paramref name="codeProvider" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.CodeDom.CodeCompileUnit Create (System.Collections.IDictionary resourceList, string baseName, string generatedCodeNamespace, string resourcesNamespace, System.CodeDom.Compiler.CodeDomProvider codeProvider, bool internalClass, out string[] unmatchable);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CodeDom.CodeCompileUnit Create(class System.Collections.IDictionary resourceList, string baseName, string generatedCodeNamespace, string resourcesNamespace, class System.CodeDom.Compiler.CodeDomProvider codeProvider, bool internalClass, [out] string[]&amp; unmatchable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.Tools.StronglyTypedResourceBuilder.Create(System.Collections.IDictionary,System.String,System.String,System.String,System.CodeDom.Compiler.CodeDomProvider,System.Boolean,System.String[]@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (resourceList As IDictionary, baseName As String, generatedCodeNamespace As String, resourcesNamespace As String, codeProvider As CodeDomProvider, internalClass As Boolean, ByRef unmatchable As String()) As CodeCompileUnit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::CodeDom::CodeCompileUnit ^ Create(System::Collections::IDictionary ^ resourceList, System::String ^ baseName, System::String ^ generatedCodeNamespace, System::String ^ resourcesNamespace, System::CodeDom::Compiler::CodeDomProvider ^ codeProvider, bool internalClass, [Runtime::InteropServices::Out] cli::array &lt;System::String ^&gt; ^ % unmatchable);" />
      <MemberSignature Language="F#" Value="static member Create : System.Collections.IDictionary * string * string * string * System.CodeDom.Compiler.CodeDomProvider * bool *  -&gt; System.CodeDom.CodeCompileUnit" Usage="System.Resources.Tools.StronglyTypedResourceBuilder.Create (resourceList, baseName, generatedCodeNamespace, resourcesNamespace, codeProvider, internalClass, unmatchable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeCompileUnit</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceList" Type="System.Collections.IDictionary" />
        <Parameter Name="baseName" Type="System.String" />
        <Parameter Name="generatedCodeNamespace" Type="System.String" />
        <Parameter Name="resourcesNamespace" Type="System.String" />
        <Parameter Name="codeProvider" Type="System.CodeDom.Compiler.CodeDomProvider" />
        <Parameter Name="internalClass" Type="System.Boolean" />
        <Parameter Name="unmatchable" Type="System.String[]" RefType="out" />
      </Parameters>
      <Docs>
        <param name="resourceList"><span data-ttu-id="9343a-145">一个 <see cref="T:System.Collections.IDictionary" /> 集合，其中每个字典条目键值对都是资源的名称以及资源的值。</span><span class="sxs-lookup"><span data-stu-id="9343a-145">An <see cref="T:System.Collections.IDictionary" /> collection where each dictionary entry key/value pair is the name of a resource and the value of the resource.</span></span></param>
        <param name="baseName"><span data-ttu-id="9343a-146">要生成的类的名称。</span><span class="sxs-lookup"><span data-stu-id="9343a-146">The name of the class to be generated.</span></span></param>
        <param name="generatedCodeNamespace"><span data-ttu-id="9343a-147">要生成的类的命名空间。</span><span class="sxs-lookup"><span data-stu-id="9343a-147">The namespace of the class to be generated.</span></span></param>
        <param name="resourcesNamespace"><span data-ttu-id="9343a-148">要生成的资源的命名空间。</span><span class="sxs-lookup"><span data-stu-id="9343a-148">The namespace of the resource to be generated.</span></span></param>
        <param name="codeProvider"><span data-ttu-id="9343a-149">一个 <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> 对象，该对象提供生成类所使用的语言。</span><span class="sxs-lookup"><span data-stu-id="9343a-149">A <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> object that provides the language in which the class will be generated.</span></span></param>
        <param name="internalClass"><span data-ttu-id="9343a-150">如果生成内部类，则为 <see langword="true" />；如果生成公共类，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="9343a-150"><see langword="true" /> to generate an internal class; <see langword="false" /> to generate a public class.</span></span></param>
        <param name="unmatchable"><span data-ttu-id="9343a-151">一个 <see cref="T:System.String" /> 数组，该数组包含无法为其生成属性的每个资源名称。</span><span class="sxs-lookup"><span data-stu-id="9343a-151">A <see cref="T:System.String" /> array that contains each resource name for which a property cannot be generated.</span></span> <span data-ttu-id="9343a-152">通常，无法生成属性是因为该资源名称不是有效的标识符。</span><span class="sxs-lookup"><span data-stu-id="9343a-152">Typically, a property cannot be generated because the resource name is not a valid identifier.</span></span></param>
        <summary><span data-ttu-id="9343a-153">生成一个类文件，该文件包含与指定集合中引用的资源相匹配的强类型的属性。</span><span class="sxs-lookup"><span data-stu-id="9343a-153">Generates a class file that contains strongly typed properties that match the resources referenced in the specified collection.</span></span></summary>
        <returns><span data-ttu-id="9343a-154">一个 <see cref="T:System.CodeDom.CodeCompileUnit" /> 容器。</span><span class="sxs-lookup"><span data-stu-id="9343a-154">A <see cref="T:System.CodeDom.CodeCompileUnit" /> container.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9343a-155">此重载使你能够使用`resourcesNamespace`参数为生成的资源指定命名空间。</span><span class="sxs-lookup"><span data-stu-id="9343a-155">This overload enables you to use the `resourcesNamespace` parameter to specify the namespace for the generated resources.</span></span> <span data-ttu-id="9343a-156">在这种情况下, 生成的代码如下所示:</span><span class="sxs-lookup"><span data-stu-id="9343a-156">In this case, the generated code appears as follows:</span></span>  
  
```  
System.Resources.ResourceManager rm = new System.Resources.ResourceManager("<resourceNamespace>.<baseName>",typeof(baseName).Assembly);  
```  
  
 <span data-ttu-id="9343a-157">在大多数情况下, 不需要从应用程序代码调用此方法。</span><span class="sxs-lookup"><span data-stu-id="9343a-157">In most cases, you do not need to call this method from your application code.</span></span>  
  
 <span data-ttu-id="9343a-158">类<xref:System.Resources.Tools.StronglyTypedResourceBuilder>将忽略以字符 "$" 或 "> >" 开头的任何资源名称。</span><span class="sxs-lookup"><span data-stu-id="9343a-158">The <xref:System.Resources.Tools.StronglyTypedResourceBuilder> class ignores any resource name that begins with the characters "$" or ">>".</span></span> <span data-ttu-id="9343a-159">资源名称 "Culture" 和 "ResourceManager" 是无效的标识符。</span><span class="sxs-lookup"><span data-stu-id="9343a-159">The resource names "Culture" and "ResourceManager" are invalid identifiers.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9343a-160"><paramref name="resourceList" />、<paramref name="basename" /> 或 <paramref name="codeProvider" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9343a-160"><paramref name="resourceList" />, <paramref name="basename" />, or <paramref name="codeProvider" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9343a-161">资源节点名称与其在 <paramref name="resourceList" /> 中的键不匹配。</span><span class="sxs-lookup"><span data-stu-id="9343a-161">A resource node name does not match its key in <paramref name="resourceList" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.CodeDom.CodeCompileUnit Create (string resxFile, string baseName, string generatedCodeNamespace, string resourcesNamespace, System.CodeDom.Compiler.CodeDomProvider codeProvider, bool internalClass, out string[] unmatchable);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CodeDom.CodeCompileUnit Create(string resxFile, string baseName, string generatedCodeNamespace, string resourcesNamespace, class System.CodeDom.Compiler.CodeDomProvider codeProvider, bool internalClass, [out] string[]&amp; unmatchable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.Tools.StronglyTypedResourceBuilder.Create(System.String,System.String,System.String,System.String,System.CodeDom.Compiler.CodeDomProvider,System.Boolean,System.String[]@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (resxFile As String, baseName As String, generatedCodeNamespace As String, resourcesNamespace As String, codeProvider As CodeDomProvider, internalClass As Boolean, ByRef unmatchable As String()) As CodeCompileUnit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::CodeDom::CodeCompileUnit ^ Create(System::String ^ resxFile, System::String ^ baseName, System::String ^ generatedCodeNamespace, System::String ^ resourcesNamespace, System::CodeDom::Compiler::CodeDomProvider ^ codeProvider, bool internalClass, [Runtime::InteropServices::Out] cli::array &lt;System::String ^&gt; ^ % unmatchable);" />
      <MemberSignature Language="F#" Value="static member Create : string * string * string * string * System.CodeDom.Compiler.CodeDomProvider * bool *  -&gt; System.CodeDom.CodeCompileUnit" Usage="System.Resources.Tools.StronglyTypedResourceBuilder.Create (resxFile, baseName, generatedCodeNamespace, resourcesNamespace, codeProvider, internalClass, unmatchable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeCompileUnit</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resxFile" Type="System.String" />
        <Parameter Name="baseName" Type="System.String" />
        <Parameter Name="generatedCodeNamespace" Type="System.String" />
        <Parameter Name="resourcesNamespace" Type="System.String" />
        <Parameter Name="codeProvider" Type="System.CodeDom.Compiler.CodeDomProvider" />
        <Parameter Name="internalClass" Type="System.Boolean" />
        <Parameter Name="unmatchable" Type="System.String[]" RefType="out" />
      </Parameters>
      <Docs>
        <param name="resxFile"><span data-ttu-id="9343a-162">.resx 文件的名称用作输入。</span><span class="sxs-lookup"><span data-stu-id="9343a-162">The name of a .resx file used as input.</span></span></param>
        <param name="baseName"><span data-ttu-id="9343a-163">要生成的类的名称。</span><span class="sxs-lookup"><span data-stu-id="9343a-163">The name of the class to be generated.</span></span></param>
        <param name="generatedCodeNamespace"><span data-ttu-id="9343a-164">要生成的类的命名空间。</span><span class="sxs-lookup"><span data-stu-id="9343a-164">The namespace of the class to be generated.</span></span></param>
        <param name="resourcesNamespace"><span data-ttu-id="9343a-165">要生成的资源的命名空间。</span><span class="sxs-lookup"><span data-stu-id="9343a-165">The namespace of the resource to be generated.</span></span></param>
        <param name="codeProvider"><span data-ttu-id="9343a-166">一个 <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> 类，该类提供生成该类所使用的语言。</span><span class="sxs-lookup"><span data-stu-id="9343a-166">A <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> class that provides the language in which the class will be generated.</span></span></param>
        <param name="internalClass"><span data-ttu-id="9343a-167">如果生成内部类，则为 <see langword="true" />；如果生成公共类，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="9343a-167"><see langword="true" /> to generate an internal class; <see langword="false" /> to generate a public class.</span></span></param>
        <param name="unmatchable"><span data-ttu-id="9343a-168">一个 <see cref="T:System.String" /> 数组，该数组包含无法为其生成属性的每个资源名称。</span><span class="sxs-lookup"><span data-stu-id="9343a-168">A <see cref="T:System.String" /> array that contains each resource name for which a property cannot be generated.</span></span> <span data-ttu-id="9343a-169">通常，无法生成属性是因为该资源名称不是有效的标识符。</span><span class="sxs-lookup"><span data-stu-id="9343a-169">Typically, a property cannot be generated because the resource name is not a valid identifier.</span></span></param>
        <summary><span data-ttu-id="9343a-170">生成一个类文件，该文件包含与指定的 .resx 文件中的资源相匹配的强类型属性。</span><span class="sxs-lookup"><span data-stu-id="9343a-170">Generates a class file that contains strongly typed properties that match the resources in the specified .resx file.</span></span></summary>
        <returns><span data-ttu-id="9343a-171">一个 <see cref="T:System.CodeDom.CodeCompileUnit" /> 容器。</span><span class="sxs-lookup"><span data-stu-id="9343a-171">A <see cref="T:System.CodeDom.CodeCompileUnit" /> container.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9343a-172">使用方法生成一个类, 该类提供对`resxFile`参数中包含的资源的强类型只读访问。 <xref:System.Resources.Tools.StronglyTypedResourceBuilder.Create%2A></span><span class="sxs-lookup"><span data-stu-id="9343a-172">Use the <xref:System.Resources.Tools.StronglyTypedResourceBuilder.Create%2A> method to generate a class that provides strongly typed, read-only access to the resources that are contained in the `resxFile` parameter.</span></span>  
  
 <span data-ttu-id="9343a-173">类<xref:System.Resources.Tools.StronglyTypedResourceBuilder>将忽略以字符 "$" 或 "> >" 开头的任何资源名称。</span><span class="sxs-lookup"><span data-stu-id="9343a-173">The <xref:System.Resources.Tools.StronglyTypedResourceBuilder> class ignores any resource name that begins with the characters "$" or ">>".</span></span> <span data-ttu-id="9343a-174">资源名称 "Culture" 和 "ResourceManager" 是无效的标识符。</span><span class="sxs-lookup"><span data-stu-id="9343a-174">The resource names "Culture" and "ResourceManager" are invalid identifiers.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9343a-175"><paramref name="basename" /> 或 <paramref name="codeProvider" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9343a-175"><paramref name="basename" /> or <paramref name="codeProvider" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="VerifyResourceName">
      <MemberSignature Language="C#" Value="public static string VerifyResourceName (string key, System.CodeDom.Compiler.CodeDomProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string VerifyResourceName(string key, class System.CodeDom.Compiler.CodeDomProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.Tools.StronglyTypedResourceBuilder.VerifyResourceName(System.String,System.CodeDom.Compiler.CodeDomProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function VerifyResourceName (key As String, provider As CodeDomProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ VerifyResourceName(System::String ^ key, System::CodeDom::Compiler::CodeDomProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member VerifyResourceName : string * System.CodeDom.Compiler.CodeDomProvider -&gt; string" Usage="System.Resources.Tools.StronglyTypedResourceBuilder.VerifyResourceName (key, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="provider" Type="System.CodeDom.Compiler.CodeDomProvider" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="9343a-176">待验证的字符串，如有必要，则转换为有效的资源名称。</span><span class="sxs-lookup"><span data-stu-id="9343a-176">The string to verify and, if necessary, convert to a valid resource name.</span></span></param>
        <param name="provider"><span data-ttu-id="9343a-177"><see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> 对象，它指定将使用的目标语言。</span><span class="sxs-lookup"><span data-stu-id="9343a-177">A <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> object that specifies the target language to use.</span></span></param>
        <summary><span data-ttu-id="9343a-178">根据指定的输入字符串和代码提供程序，生成一个有效的资源字符串。</span><span class="sxs-lookup"><span data-stu-id="9343a-178">Generates a valid resource string based on the specified input string and code provider.</span></span></summary>
        <returns><span data-ttu-id="9343a-179">派生自 <paramref name="key" /> 参数的有效资源名称。</span><span class="sxs-lookup"><span data-stu-id="9343a-179">A valid resource name derived from the <paramref name="key" /> parameter.</span></span> <span data-ttu-id="9343a-180">如果根据 <paramref name="provider" /> 参数所指定的语言，派生的字符串仍包含无效字符，所有无效标记都会被下划线 (_) 字符或 <see langword="null" /> 替代。</span><span class="sxs-lookup"><span data-stu-id="9343a-180">Any invalid tokens are replaced with the underscore (_) character, or <see langword="null" /> if the derived string still contains invalid characters according to the language specified by the <paramref name="provider" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9343a-181">`key`如果参数是有效的字符串, 则返回该字符串。</span><span class="sxs-lookup"><span data-stu-id="9343a-181">If the `key` parameter is a valid string of characters, that string is returned.</span></span> <span data-ttu-id="9343a-182">如果参数是无效字符串或包含无效字符的字符串, 则该<xref:System.Resources.Tools.StronglyTypedResourceBuilder.VerifyResourceName%2A>方法会尝试基于`key`和`provider`参数生成有效的字符串。 `key`</span><span class="sxs-lookup"><span data-stu-id="9343a-182">If the `key` parameter is an invalid string or a string that contains invalid characters, the <xref:System.Resources.Tools.StronglyTypedResourceBuilder.VerifyResourceName%2A> method attempts to generate a valid string based on the `key` and `provider` parameters.</span></span> <span data-ttu-id="9343a-183">如果可以生成有效的字符串, 则返回该字符串;否则, `null`将返回。</span><span class="sxs-lookup"><span data-stu-id="9343a-183">If a valid string can be generated, that string is returned; otherwise, `null` is returned.</span></span>  
  
 <span data-ttu-id="9343a-184">如果该`key`参数为空字符串 (""), 则返回一个包含单个下划线字符 (_) 的字符串。</span><span class="sxs-lookup"><span data-stu-id="9343a-184">If the `key` parameter is an empty string (""), a string that consists of a single underscore character (_) is returned.</span></span> <span data-ttu-id="9343a-185">如果参数不是空字符串, 则<xref:System.Resources.Tools.StronglyTypedResourceBuilder.VerifyResourceName%2A>方法会根据`provider`参数所指定的语言将字符串中的每个字符与一组无效的标记进行比较。 `key`</span><span class="sxs-lookup"><span data-stu-id="9343a-185">If the `key` parameter is not an empty string, the <xref:System.Resources.Tools.StronglyTypedResourceBuilder.VerifyResourceName%2A> method compares each character in the string to a set of invalid tokens based on the language specified by the `provider` parameter.</span></span> <span data-ttu-id="9343a-186">将字符串中的任何无效字符替换为下划线字符。</span><span class="sxs-lookup"><span data-stu-id="9343a-186">Any invalid character in the string is replaced with an underscore character.</span></span> <span data-ttu-id="9343a-187">将替换为下划线的字符如下所示:</span><span class="sxs-lookup"><span data-stu-id="9343a-187">The characters that will be replaced with an underscore are as follows:</span></span>  
  
 <span data-ttu-id="9343a-188">"" (空格)、U + 00A0 (非间断空格)、"."(period), "," (逗号), ";"(分号)、"&#124;"、"~"、"@"、"#"、"%"、"^"、"&"、"\*"、"+"、"-"、"/"、"\\"、\<""、">"、"？"、"["、"]"、"("、")"、"{"、"}"、"" "(引号)、" ' "(撇号)、": "和"! "。</span><span class="sxs-lookup"><span data-stu-id="9343a-188">' ' (space), U+00A0 (non-breaking space), '.' (period), ',' (comma), ';' (semicolon), '&#124;', '~', '@', '#', '%', '^', '&', '\*', '+', '-', '/', '\\', '\<', '>', '?', '[', ']', '(', ')', '{', '}', '"' (quote), ''' (apostrophe), ':', and '!'.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9343a-189">强类型资源不允许将语言关键字 (例如`if`、 `for`等) 用作资源键名称。</span><span class="sxs-lookup"><span data-stu-id="9343a-189">Strongly typed resources do not allow the use of language keywords (such as `if`, `for`, and so on) as resource key names.</span></span> <span data-ttu-id="9343a-190">但是, <xref:System.CodeDom>设计模式允许使用语言关键字, 方法是使用下划线作为关键字的前缀。</span><span class="sxs-lookup"><span data-stu-id="9343a-190">However, the <xref:System.CodeDom> design pattern allows the use of language keywords by prefixing the keyword with the underscore character.</span></span> <span data-ttu-id="9343a-191"><xref:System.Resources.Tools.StronglyTypedResourceBuilder.VerifyResourceName%2A> 方法<xref:System.CodeDom.Compiler.ICodeGenerator.CreateValidIdentifier%2A>调用方法来强制实施此设计。</span><span class="sxs-lookup"><span data-stu-id="9343a-191">The <xref:System.Resources.Tools.StronglyTypedResourceBuilder.VerifyResourceName%2A> method calls the <xref:System.CodeDom.Compiler.ICodeGenerator.CreateValidIdentifier%2A> method to enforce this design.</span></span> <span data-ttu-id="9343a-192">例如, 如果使用与 language 关键字相同的资源名称 (如`for`), 则名称将显示为`_for`生成的强类型资源类。</span><span class="sxs-lookup"><span data-stu-id="9343a-192">For example, if you use a resource name that is the same as a language keyword, such as `for`, the name appears as `_for` in the generated strongly typed resource class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9343a-193"><paramref name="key" /> 或 <paramref name="provider" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9343a-193"><paramref name="key" /> or <paramref name="provider" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
