<Type Name="OdbcDataReader" FullName="System.Data.Odbc.OdbcDataReader">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f4daca5ea0c1e5d937aceb041cb34597d5223a3e" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70573468" /></Metadata><TypeSignature Language="C#" Value="public sealed class OdbcDataReader : System.Data.Common.DbDataReader" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OdbcDataReader extends System.Data.Common.DbDataReader" />
  <TypeSignature Language="DocId" Value="T:System.Data.Odbc.OdbcDataReader" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OdbcDataReader&#xA;Inherits DbDataReader" />
  <TypeSignature Language="C++ CLI" Value="public ref class OdbcDataReader sealed : System::Data::Common::DbDataReader" />
  <TypeSignature Language="F#" Value="type OdbcDataReader = class&#xA;    inherit DbDataReader" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Odbc</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbDataReader</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-1.1">System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="bb1be-101">提供从数据源读取数据行的只进流的方法。</span><span class="sxs-lookup"><span data-stu-id="bb1be-101">Provides a way of reading a forward-only stream of data rows from a data source.</span></span> <span data-ttu-id="bb1be-102">此类不能被继承。</span><span class="sxs-lookup"><span data-stu-id="bb1be-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb1be-103">若要创建<xref:System.Data.Odbc.OdbcDataReader>，必须<xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A>调用<xref:System.Data.Odbc.OdbcCommand>对象的方法，而不是直接使用构造函数。</span><span class="sxs-lookup"><span data-stu-id="bb1be-103">To create an <xref:System.Data.Odbc.OdbcDataReader>, you must call the <xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A> method of the <xref:System.Data.Odbc.OdbcCommand> object, instead of directly using a constructor.</span></span>  
  
 <span data-ttu-id="bb1be-104">如果正在使用，则关联<xref:System.Data.Odbc.OdbcConnection>的忙于提供服务<xref:System.Data.Odbc.OdbcDataReader>，并且除关闭外， <xref:System.Data.Odbc.OdbcConnection>不能在其他操作上执行任何其他操作。 <xref:System.Data.Odbc.OdbcDataReader></span><span class="sxs-lookup"><span data-stu-id="bb1be-104">While the <xref:System.Data.Odbc.OdbcDataReader> is being used, the associated <xref:System.Data.Odbc.OdbcConnection> is busy serving the <xref:System.Data.Odbc.OdbcDataReader>, and no other operations can be performed on the <xref:System.Data.Odbc.OdbcConnection> other than closing it.</span></span> <span data-ttu-id="bb1be-105">在调用的<xref:System.Data.Odbc.OdbcDataReader.Close%2A>方法<xref:System.Data.Odbc.OdbcDataReader>之前，会出现这种情况。</span><span class="sxs-lookup"><span data-stu-id="bb1be-105">This is the case until the <xref:System.Data.Odbc.OdbcDataReader.Close%2A> method of the <xref:System.Data.Odbc.OdbcDataReader> is called.</span></span> <span data-ttu-id="bb1be-106">例如，在调用<xref:System.Data.Odbc.OdbcDataReader.Close%2A>之后，才能检索输出参数。</span><span class="sxs-lookup"><span data-stu-id="bb1be-106">For example, you cannot retrieve output parameters until after you call <xref:System.Data.Odbc.OdbcDataReader.Close%2A>.</span></span>  
  
 <span data-ttu-id="bb1be-107">在读取数据时，由其他进程或线程对结果集所做的更改可能对的用户<xref:System.Data.Odbc.OdbcDataReader>可见。</span><span class="sxs-lookup"><span data-stu-id="bb1be-107">Changes made to a result set by another process or thread while data is being read may be visible to the user of the <xref:System.Data.Odbc.OdbcDataReader>.</span></span> <span data-ttu-id="bb1be-108">但是，精确的行为是驱动程序和计时相关的。</span><span class="sxs-lookup"><span data-stu-id="bb1be-108">However, the precise behavior is both driver and timing dependent.</span></span>  
  
 <span data-ttu-id="bb1be-109"><xref:System.Data.Odbc.OdbcDataReader.IsClosed%2A>和<xref:System.Data.Odbc.OdbcDataReader.RecordsAffected%2A>是在关闭后可调用的<xref:System.Data.Odbc.OdbcDataReader>唯一属性。</span><span class="sxs-lookup"><span data-stu-id="bb1be-109"><xref:System.Data.Odbc.OdbcDataReader.IsClosed%2A> and <xref:System.Data.Odbc.OdbcDataReader.RecordsAffected%2A> are the only properties that you can call after the <xref:System.Data.Odbc.OdbcDataReader> is closed.</span></span> <span data-ttu-id="bb1be-110">有时，您必须先<xref:System.Data.Odbc.OdbcDataReader.Close%2A>调用，然后才能<xref:System.Data.Odbc.OdbcDataReader.RecordsAffected%2A>调用。</span><span class="sxs-lookup"><span data-stu-id="bb1be-110">Sometimes, you must call <xref:System.Data.Odbc.OdbcDataReader.Close%2A> before you can call <xref:System.Data.Odbc.OdbcDataReader.RecordsAffected%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb1be-111">下面的示例创建一个<xref:System.Data.Odbc.OdbcConnection>、一个<xref:System.Data.Odbc.OdbcCommand>和一个<xref:System.Data.Odbc.OdbcDataReader>。</span><span class="sxs-lookup"><span data-stu-id="bb1be-111">The following example creates an <xref:System.Data.Odbc.OdbcConnection>, an <xref:System.Data.Odbc.OdbcCommand>, and an <xref:System.Data.Odbc.OdbcDataReader>.</span></span> <span data-ttu-id="bb1be-112">该示例将读取数据，并将其写出到控制台。</span><span class="sxs-lookup"><span data-stu-id="bb1be-112">The example reads through the data, writing it out to the console.</span></span> <span data-ttu-id="bb1be-113">最后，该示例关闭<xref:System.Data.Odbc.OdbcDataReader>， <xref:System.Data.Odbc.OdbcConnection>然后关闭。</span><span class="sxs-lookup"><span data-stu-id="bb1be-113">Finally, the example closes the <xref:System.Data.Odbc.OdbcDataReader>, and then the <xref:System.Data.Odbc.OdbcConnection>.</span></span>  
  
 [!code-csharp[Classic WebData OdbcDataReader#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OdbcDataReader/CS/source.cs#1)]
 [!code-vb[Classic WebData OdbcDataReader#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OdbcDataReader/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="bb1be-114">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="bb1be-114">DataAdapters and DataReaders</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="odbcDataReader.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bb1be-115">关闭 <see cref="T:System.Data.Odbc.OdbcDataReader" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="bb1be-115">Closes the <see cref="T:System.Data.Odbc.OdbcDataReader" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb1be-116">使用完成后，必须<xref:System.Data.Odbc.OdbcDataReader.Close%2A>显式调用方法<xref:System.Data.Odbc.OdbcConnection> ，以将关联的用于 <xref:System.Data.Odbc.OdbcDataReader> 任何其他目的。</span><span class="sxs-lookup"><span data-stu-id="bb1be-116">You must explicitly call the <xref:System.Data.Odbc.OdbcDataReader.Close%2A> method when you are finished using the <xref:System.Data.Odbc.OdbcDataReader> to use the associated <xref:System.Data.Odbc.OdbcConnection> for any other purpose.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="bb1be-117">不要在类`Close`的`Dispose` `Finalize`方法中对连接、DataReader 或任何其他托管对象调用或。</span><span class="sxs-lookup"><span data-stu-id="bb1be-117">Do not call `Close` or `Dispose` on a Connection, a DataReader, or any other managed object in the `Finalize` method of your class.</span></span> <span data-ttu-id="bb1be-118">在终结器中，只应释放类直接拥有的非托管资源。</span><span class="sxs-lookup"><span data-stu-id="bb1be-118">In a finalizer, you should only release unmanaged resources that your class owns directly.</span></span> <span data-ttu-id="bb1be-119">如果类不拥有任何非托管资源，则不要在类定义中包含 `Finalize` 方法。</span><span class="sxs-lookup"><span data-stu-id="bb1be-119">If your class does not own any unmanaged resources, do not include a `Finalize` method in your class definition.</span></span> <span data-ttu-id="bb1be-120">有关详细信息，请参阅[垃圾回收](~/docs/standard/garbage-collection/index.md)。</span><span class="sxs-lookup"><span data-stu-id="bb1be-120">For more information, see [Garbage Collection](~/docs/standard/garbage-collection/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb1be-121">下面的示例创建一个<xref:System.Data.Odbc.OdbcConnection>、一个<xref:System.Data.Odbc.OdbcCommand>和一个<xref:System.Data.Odbc.OdbcDataReader>。</span><span class="sxs-lookup"><span data-stu-id="bb1be-121">The following example creates an <xref:System.Data.Odbc.OdbcConnection>, an <xref:System.Data.Odbc.OdbcCommand>, and an <xref:System.Data.Odbc.OdbcDataReader>.</span></span> <span data-ttu-id="bb1be-122">该示例将读取数据，并将其写出到控制台。</span><span class="sxs-lookup"><span data-stu-id="bb1be-122">The example reads through the data, writing it out to the console.</span></span> <span data-ttu-id="bb1be-123">最后，该示例关闭<xref:System.Data.Odbc.OdbcDataReader>， <xref:System.Data.Odbc.OdbcConnection>然后关闭。</span><span class="sxs-lookup"><span data-stu-id="bb1be-123">Finally, the example closes the <xref:System.Data.Odbc.OdbcDataReader>, and then the <xref:System.Data.Odbc.OdbcConnection>.</span></span>  
  
 [!code-csharp[Classic WebData IDataReader.Read Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData IDataReader.Read Example/CS/source.cs#1)]
 [!code-vb[Classic WebData IDataReader.Read Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData IDataReader.Read Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="bb1be-124">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="bb1be-124">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Depth">
      <MemberSignature Language="C#" Value="public override int Depth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Depth" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcDataReader.Depth" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Depth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Depth { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Depth : int" Usage="System.Data.Odbc.OdbcDataReader.Depth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb1be-125">获取一个值，用于指示当前行的嵌套深度。</span><span class="sxs-lookup"><span data-stu-id="bb1be-125">Gets a value that indicates the depth of nesting for the current row.</span></span></summary>
        <value><span data-ttu-id="bb1be-126">当前行的嵌套深度。</span><span class="sxs-lookup"><span data-stu-id="bb1be-126">The depth of nesting for the current row.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb1be-127">最外面的表的深度为零。</span><span class="sxs-lookup"><span data-stu-id="bb1be-127">The outermost table has a depth of zero.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="bb1be-128">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="bb1be-128">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="odbcDataReader.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FieldCount">
      <MemberSignature Language="C#" Value="public override int FieldCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FieldCount" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcDataReader.FieldCount" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property FieldCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int FieldCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.FieldCount : int" Usage="System.Data.Odbc.OdbcDataReader.FieldCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb1be-129">获取当前行中的列数。</span><span class="sxs-lookup"><span data-stu-id="bb1be-129">Gets the number of columns in the current row.</span></span></summary>
        <value><span data-ttu-id="bb1be-130">如果不是位于有效的记录集中，则为 0；否则为当前记录的列数。</span><span class="sxs-lookup"><span data-stu-id="bb1be-130">When not positioned in a valid record set, 0; otherwise the number of columns in the current record.</span></span> <span data-ttu-id="bb1be-131">默认值为 -1。</span><span class="sxs-lookup"><span data-stu-id="bb1be-131">The default is -1.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb1be-132">包括隐藏的字段。</span><span class="sxs-lookup"><span data-stu-id="bb1be-132">Includes hidden fields.</span></span> <span data-ttu-id="bb1be-133">使用 <xref:System.Data.Common.DbDataReader.VisibleFieldCount%2A> 可排除隐藏的字段。</span><span class="sxs-lookup"><span data-stu-id="bb1be-133">Use <xref:System.Data.Common.DbDataReader.VisibleFieldCount%2A> to exclude hidden fields.</span></span>  
  
 <span data-ttu-id="bb1be-134">执行不返回行的查询后， <xref:System.Data.Odbc.OdbcDataReader.FieldCount%2A>将返回0。</span><span class="sxs-lookup"><span data-stu-id="bb1be-134">After you execute a query that does not return rows, <xref:System.Data.Odbc.OdbcDataReader.FieldCount%2A> returns 0.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="bb1be-135">没有到数据源的当前连接。</span><span class="sxs-lookup"><span data-stu-id="bb1be-135">There is no current connection to a data source.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="bb1be-136">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="bb1be-136">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~OdbcDataReader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!OdbcDataReader ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="odbcDataReader.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bb1be-137">允许对象在被“垃圾回收”之前尝试释放资源并执行其他清理操作。</span><span class="sxs-lookup"><span data-stu-id="bb1be-137">Allows the object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBoolean">
      <MemberSignature Language="C#" Value="public override bool GetBoolean (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetBoolean(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetBoolean(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBoolean (i As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetBoolean(int i);" />
      <MemberSignature Language="F#" Value="override this.GetBoolean : int -&gt; bool" Usage="odbcDataReader.GetBoolean i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="bb1be-138">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="bb1be-138">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="bb1be-139">获取指定列的布尔值形式的值。</span><span class="sxs-lookup"><span data-stu-id="bb1be-139">Gets the value of the specified column as a Boolean.</span></span></summary>
        <returns><span data-ttu-id="bb1be-140">一个表示列值的布尔值。</span><span class="sxs-lookup"><span data-stu-id="bb1be-140">A Boolean that is the value of the column.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb1be-141">基于 ODBC 驱动程序的基础功能执行转换。</span><span class="sxs-lookup"><span data-stu-id="bb1be-141">Conversions are performed based on the underlying capabilities of the ODBC driver.</span></span> <span data-ttu-id="bb1be-142">如果不支持转换，则方法调用将失败。</span><span class="sxs-lookup"><span data-stu-id="bb1be-142">If the conversion is not supported then the method call will fail.</span></span>  
  
 <span data-ttu-id="bb1be-143">调用<xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A>此方法之前，调用以查找 null 值。</span><span class="sxs-lookup"><span data-stu-id="bb1be-143">Call <xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A> to look for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="bb1be-144">指定的强制转换无效。</span><span class="sxs-lookup"><span data-stu-id="bb1be-144">The specified cast is not valid.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="bb1be-145">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="bb1be-145">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetByte">
      <MemberSignature Language="C#" Value="public override byte GetByte (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8 GetByte(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetByte(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetByte (i As Integer) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Byte GetByte(int i);" />
      <MemberSignature Language="F#" Value="override this.GetByte : int -&gt; byte" Usage="odbcDataReader.GetByte i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="bb1be-146">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="bb1be-146">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="bb1be-147">以字节的形式获取指定列的值。</span><span class="sxs-lookup"><span data-stu-id="bb1be-147">Gets the value of the specified column as a byte.</span></span></summary>
        <returns><span data-ttu-id="bb1be-148">指定列的字节形式的值。</span><span class="sxs-lookup"><span data-stu-id="bb1be-148">The value of the specified column as a byte.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb1be-149">基于 ODBC 驱动程序的基础功能执行转换。</span><span class="sxs-lookup"><span data-stu-id="bb1be-149">Conversions are performed based on the underlying capabilities of the ODBC driver.</span></span> <span data-ttu-id="bb1be-150">如果不支持转换，则方法调用将失败。</span><span class="sxs-lookup"><span data-stu-id="bb1be-150">If the conversion is not supported, the method call fails.</span></span>  
  
 <span data-ttu-id="bb1be-151">调用<xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A>此方法之前，调用以查找 null 值。</span><span class="sxs-lookup"><span data-stu-id="bb1be-151">Call <xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A> to look for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="bb1be-152">指定的强制转换无效。</span><span class="sxs-lookup"><span data-stu-id="bb1be-152">The specified cast is not valid.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="bb1be-153">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="bb1be-153">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override long GetBytes (int i, long dataIndex, byte[] buffer, int bufferIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 GetBytes(int32 i, int64 dataIndex, unsigned int8[] buffer, int32 bufferIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (i As Integer, dataIndex As Long, buffer As Byte(), bufferIndex As Integer, length As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long GetBytes(int i, long dataIndex, cli::array &lt;System::Byte&gt; ^ buffer, int bufferIndex, int length);" />
      <MemberSignature Language="F#" Value="override this.GetBytes : int * int64 * byte[] * int * int -&gt; int64" Usage="odbcDataReader.GetBytes (i, dataIndex, buffer, bufferIndex, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
        <Parameter Name="dataIndex" Type="System.Int64" />
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="bufferIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="bb1be-154">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="bb1be-154">The zero-based column ordinal.</span></span></param>
        <param name="dataIndex"><span data-ttu-id="bb1be-155">字段中读取操作开始位置的索引。</span><span class="sxs-lookup"><span data-stu-id="bb1be-155">The index within the field where the read operation is to start.</span></span></param>
        <param name="buffer"><span data-ttu-id="bb1be-156">要读入字节流的缓冲区。</span><span class="sxs-lookup"><span data-stu-id="bb1be-156">The buffer into which to read the stream of bytes.</span></span></param>
        <param name="bufferIndex"><span data-ttu-id="bb1be-157"><paramref name="buffer" /> 中写入操作开始位置的索引。</span><span class="sxs-lookup"><span data-stu-id="bb1be-157">The index within the <paramref name="buffer" /> where the write operation is to start.</span></span></param>
        <param name="length"><span data-ttu-id="bb1be-158">要读取的字节数。</span><span class="sxs-lookup"><span data-stu-id="bb1be-158">The number of bytes to read.</span></span></param>
        <summary><span data-ttu-id="bb1be-159">从指定的列偏移量将字节流作为数组从特定的缓冲区偏移量开始读入缓冲区。</span><span class="sxs-lookup"><span data-stu-id="bb1be-159">Reads a stream of bytes from the specified column offset into the buffer as an array, starting at the particular buffer offset.</span></span></summary>
        <returns><span data-ttu-id="bb1be-160">读取的实际字节数。</span><span class="sxs-lookup"><span data-stu-id="bb1be-160">The actual number of bytes read.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb1be-161"><xref:System.Data.Odbc.OdbcDataReader.GetBytes%2A>返回字段中的可用字节数。</span><span class="sxs-lookup"><span data-stu-id="bb1be-161"><xref:System.Data.Odbc.OdbcDataReader.GetBytes%2A> returns the number of available bytes in the field.</span></span> <span data-ttu-id="bb1be-162">大多数情况下，这是字段的准确长度。</span><span class="sxs-lookup"><span data-stu-id="bb1be-162">Most of the time this is the exact length of the field.</span></span> <span data-ttu-id="bb1be-163">但是，如果<xref:System.Data.Odbc.OdbcDataReader.GetBytes%2A>已使用从字段获取字节，则返回的数字可能小于字段的实际长度。</span><span class="sxs-lookup"><span data-stu-id="bb1be-163">However, the number returned may be less than the true length of the field if <xref:System.Data.Odbc.OdbcDataReader.GetBytes%2A> has already been used to obtain bytes from the field.</span></span> <span data-ttu-id="bb1be-164">例如，如果<xref:System.Data.Odbc.OdbcDataReader>正在将大数据结构读入缓冲区，则可能会出现这种情况。</span><span class="sxs-lookup"><span data-stu-id="bb1be-164">This may be the case, for example, if the <xref:System.Data.Odbc.OdbcDataReader> is reading a large data structure into a buffer.</span></span> <span data-ttu-id="bb1be-165">有关详细信息，请参阅`SequentialAccess`的<xref:System.Data.CommandBehavior>设置。</span><span class="sxs-lookup"><span data-stu-id="bb1be-165">For more information, see the `SequentialAccess` setting for <xref:System.Data.CommandBehavior>.</span></span>  
  
 <span data-ttu-id="bb1be-166">如果传递的缓冲区为空值，则返回字段<xref:System.Data.Odbc.OdbcDataReader.GetBytes%2A>的长度（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="bb1be-166">If you pass a buffer that is a null value, <xref:System.Data.Odbc.OdbcDataReader.GetBytes%2A> returns the length of the field in bytes.</span></span>  
  
 <span data-ttu-id="bb1be-167">基于 ODBC 驱动程序的基础功能执行转换。</span><span class="sxs-lookup"><span data-stu-id="bb1be-167">Conversions are performed based on the underlying capabilities of the ODBC driver.</span></span> <span data-ttu-id="bb1be-168">如果不支持转换，则方法调用将失败。</span><span class="sxs-lookup"><span data-stu-id="bb1be-168">If the conversion is not supported then the method call will fail.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bb1be-169">如果的`bufferIndex`值超出数组，则不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="bb1be-169">No exception will be thrown if the value of `bufferIndex` is outside the array.</span></span> <span data-ttu-id="bb1be-170">将不读取任何数据，并且方法将返回0。</span><span class="sxs-lookup"><span data-stu-id="bb1be-170">No data will be read and the method will return 0.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="bb1be-171">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="bb1be-171">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetChar">
      <MemberSignature Language="C#" Value="public override char GetChar (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance char GetChar(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetChar(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetChar (i As Integer) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override char GetChar(int i);" />
      <MemberSignature Language="F#" Value="override this.GetChar : int -&gt; char" Usage="odbcDataReader.GetChar i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="bb1be-172">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="bb1be-172">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="bb1be-173">获取指定列的字符形式的值。</span><span class="sxs-lookup"><span data-stu-id="bb1be-173">Gets the value of the specified column as a character.</span></span></summary>
        <returns><span data-ttu-id="bb1be-174">指定列的字符形式的值。</span><span class="sxs-lookup"><span data-stu-id="bb1be-174">The value of the specified column as a character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb1be-175">基于 ODBC 驱动程序的基础功能执行转换。</span><span class="sxs-lookup"><span data-stu-id="bb1be-175">Conversions are performed based on the underlying capabilities of the ODBC driver.</span></span> <span data-ttu-id="bb1be-176">如果不支持转换，则方法调用将失败。</span><span class="sxs-lookup"><span data-stu-id="bb1be-176">If the conversion is not supported, the method call fails.</span></span>  
  
 <span data-ttu-id="bb1be-177">调用<xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A>此方法之前，调用以查找 null 值。</span><span class="sxs-lookup"><span data-stu-id="bb1be-177">Call <xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A> to look for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="bb1be-178">指定的强制转换无效。</span><span class="sxs-lookup"><span data-stu-id="bb1be-178">The specified cast is not valid.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="bb1be-179">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="bb1be-179">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public override long GetChars (int i, long dataIndex, char[] buffer, int bufferIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 GetChars(int32 i, int64 dataIndex, char[] buffer, int32 bufferIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetChars (i As Integer, dataIndex As Long, buffer As Char(), bufferIndex As Integer, length As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long GetChars(int i, long dataIndex, cli::array &lt;char&gt; ^ buffer, int bufferIndex, int length);" />
      <MemberSignature Language="F#" Value="override this.GetChars : int * int64 * char[] * int * int -&gt; int64" Usage="odbcDataReader.GetChars (i, dataIndex, buffer, bufferIndex, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
        <Parameter Name="dataIndex" Type="System.Int64" />
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="bufferIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="bb1be-180">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="bb1be-180">The zero-based column ordinal.</span></span></param>
        <param name="dataIndex"><span data-ttu-id="bb1be-181">行中读取操作开始位置的索引。</span><span class="sxs-lookup"><span data-stu-id="bb1be-181">The index within the row where the read operation is to start.</span></span></param>
        <param name="buffer"><span data-ttu-id="bb1be-182">要向其中复制数据的缓冲区。</span><span class="sxs-lookup"><span data-stu-id="bb1be-182">The buffer into which to copy data.</span></span></param>
        <param name="bufferIndex"><span data-ttu-id="bb1be-183"><paramref name="buffer" /> 中写入操作开始位置的索引。</span><span class="sxs-lookup"><span data-stu-id="bb1be-183">The index within the <paramref name="buffer" /> where the write operation is to start.</span></span></param>
        <param name="length"><span data-ttu-id="bb1be-184">要读取的字符数。</span><span class="sxs-lookup"><span data-stu-id="bb1be-184">The number of characters to read.</span></span></param>
        <summary><span data-ttu-id="bb1be-185">从指定的列偏移量将字符流作为数组从特定的缓冲区偏移量开始读入缓冲区。</span><span class="sxs-lookup"><span data-stu-id="bb1be-185">Reads a stream of characters from the specified column offset into the buffer as an array, starting at the particular buffer offset.</span></span></summary>
        <returns><span data-ttu-id="bb1be-186">读取的实际字符数。</span><span class="sxs-lookup"><span data-stu-id="bb1be-186">The actual number of characters read.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb1be-187"><xref:System.Data.Odbc.OdbcDataReader.GetChars%2A>返回字段中的可用字符数。</span><span class="sxs-lookup"><span data-stu-id="bb1be-187"><xref:System.Data.Odbc.OdbcDataReader.GetChars%2A> returns the number of available characters in the field.</span></span> <span data-ttu-id="bb1be-188">大多数情况下，这是字段的准确长度。</span><span class="sxs-lookup"><span data-stu-id="bb1be-188">Most of the time this is the exact length of the field.</span></span> <span data-ttu-id="bb1be-189">但是，如果<xref:System.Data.Odbc.OdbcDataReader.GetChars%2A>已使用从字段获取字符，则返回的数字可能小于字段的实际长度。</span><span class="sxs-lookup"><span data-stu-id="bb1be-189">However, the number returned may be less than the true length of the field if <xref:System.Data.Odbc.OdbcDataReader.GetChars%2A> has already been used to obtain characters from the field.</span></span> <span data-ttu-id="bb1be-190">例如，如果<xref:System.Data.Odbc.OdbcDataReader>正在将大数据结构读入缓冲区，则可能会出现这种情况。</span><span class="sxs-lookup"><span data-stu-id="bb1be-190">This may be the case, for example, if the <xref:System.Data.Odbc.OdbcDataReader> is reading a large data structure into a buffer.</span></span> <span data-ttu-id="bb1be-191">有关详细信息，请参阅`SequentialAccess`的<xref:System.Data.CommandBehavior>设置。</span><span class="sxs-lookup"><span data-stu-id="bb1be-191">For more information, see the `SequentialAccess` setting for <xref:System.Data.CommandBehavior>.</span></span>  
  
 <span data-ttu-id="bb1be-192">如果传递的缓冲区为空值，则返回字段<xref:System.Data.Odbc.OdbcDataReader.GetChars%2A>的长度（以字符为间隔）。</span><span class="sxs-lookup"><span data-stu-id="bb1be-192">If you pass a buffer that is a null value, <xref:System.Data.Odbc.OdbcDataReader.GetChars%2A> returns the length of the field in characters.</span></span>  
  
 <span data-ttu-id="bb1be-193">基于 ODBC 驱动程序的基础功能执行转换。</span><span class="sxs-lookup"><span data-stu-id="bb1be-193">Conversions are performed based on the underlying capabilities of the ODBC driver.</span></span> <span data-ttu-id="bb1be-194">如果不支持转换，则方法调用将失败。</span><span class="sxs-lookup"><span data-stu-id="bb1be-194">If the conversion is not supported then the method call will fail.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bb1be-195">如果的`bufferIndex`值超出数组，则不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="bb1be-195">No exception will be thrown if the value of `bufferIndex` is outside the array.</span></span> <span data-ttu-id="bb1be-196">将不读取任何数据，并且方法将返回0。</span><span class="sxs-lookup"><span data-stu-id="bb1be-196">No data will be read and the method will return 0.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="bb1be-197">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="bb1be-197">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public System.Data.IDataReader GetData (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.IDataReader GetData(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetData(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetData (i As Integer) As IDataReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::IDataReader ^ GetData(int i);" />
      <MemberSignature Language="F#" Value="abstract member GetData : int -&gt; System.Data.IDataReader&#xA;override this.GetData : int -&gt; System.Data.IDataReader" Usage="odbcDataReader.GetData i" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetData(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.IDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" Index="0" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="bb1be-198">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="bb1be-198">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="bb1be-199">返回指定列序号的 <see cref="T:System.Data.IDataReader" />。</span><span class="sxs-lookup"><span data-stu-id="bb1be-199">Returns an <see cref="T:System.Data.IDataReader" /> for the specified column ordinal.</span></span></summary>
        <returns><span data-ttu-id="bb1be-200">指定列序号的 <see cref="T:System.Data.IDataReader" />。</span><span class="sxs-lookup"><span data-stu-id="bb1be-200">The <see cref="T:System.Data.IDataReader" /> for the specified column ordinal.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataTypeName">
      <MemberSignature Language="C#" Value="public override string GetDataTypeName (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetDataTypeName(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetDataTypeName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDataTypeName (i As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetDataTypeName(int i);" />
      <MemberSignature Language="F#" Value="override this.GetDataTypeName : int -&gt; string" Usage="odbcDataReader.GetDataTypeName i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="bb1be-201">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="bb1be-201">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="bb1be-202">获取源数据类型的名称。</span><span class="sxs-lookup"><span data-stu-id="bb1be-202">Gets the name of the source data type.</span></span></summary>
        <returns><span data-ttu-id="bb1be-203">源数据类型的名称。</span><span class="sxs-lookup"><span data-stu-id="bb1be-203">The name of the source data type.</span></span></returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="bb1be-204">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="bb1be-204">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetDate">
      <MemberSignature Language="C#" Value="public DateTime GetDate (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTime GetDate(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetDate(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDate (i As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime GetDate(int i);" />
      <MemberSignature Language="F#" Value="member this.GetDate : int -&gt; DateTime" Usage="odbcDataReader.GetDate i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="bb1be-205">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="bb1be-205">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="bb1be-206">以 <see cref="T:System.DateTime" /> 对象的形式获取指定列的值。</span><span class="sxs-lookup"><span data-stu-id="bb1be-206">Gets the value of the specified column as a <see cref="T:System.DateTime" /> object.</span></span></summary>
        <returns><span data-ttu-id="bb1be-207">指定列的 <see cref="T:System.DateTime" /> 对象形式的值。</span><span class="sxs-lookup"><span data-stu-id="bb1be-207">The value of the specified column as a <see cref="T:System.DateTime" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="bb1be-208">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="bb1be-208">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetDateTime">
      <MemberSignature Language="C#" Value="public override DateTime GetDateTime (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime GetDateTime(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetDateTime(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDateTime (i As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DateTime GetDateTime(int i);" />
      <MemberSignature Language="F#" Value="override this.GetDateTime : int -&gt; DateTime" Usage="odbcDataReader.GetDateTime i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="bb1be-209">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="bb1be-209">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="bb1be-210">以 <see cref="T:System.DateTime" /> 对象的形式获取指定列的值。</span><span class="sxs-lookup"><span data-stu-id="bb1be-210">Gets the value of the specified column as a <see cref="T:System.DateTime" /> object.</span></span></summary>
        <returns><span data-ttu-id="bb1be-211">指定列的 <see cref="T:System.DateTime" /> 对象形式的值。</span><span class="sxs-lookup"><span data-stu-id="bb1be-211">The value of the specified column as a <see cref="T:System.DateTime" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb1be-212">基于 ODBC 驱动程序的基础功能执行转换。</span><span class="sxs-lookup"><span data-stu-id="bb1be-212">Conversions are performed based on the underlying capabilities of the ODBC driver.</span></span> <span data-ttu-id="bb1be-213">如果不支持转换，则方法调用将失败。</span><span class="sxs-lookup"><span data-stu-id="bb1be-213">If the conversion is not supported then the method call will fail.</span></span>  
  
 <span data-ttu-id="bb1be-214">调用<xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A>此方法之前，调用以查找 null 值。</span><span class="sxs-lookup"><span data-stu-id="bb1be-214">Call <xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A> to look for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="bb1be-215">指定的强制转换无效。</span><span class="sxs-lookup"><span data-stu-id="bb1be-215">The specified cast is not valid.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="bb1be-216">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="bb1be-216">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetDecimal">
      <MemberSignature Language="C#" Value="public override decimal GetDecimal (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Decimal GetDecimal(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetDecimal(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDecimal (i As Integer) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Decimal GetDecimal(int i);" />
      <MemberSignature Language="F#" Value="override this.GetDecimal : int -&gt; decimal" Usage="odbcDataReader.GetDecimal i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="bb1be-217">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="bb1be-217">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="bb1be-218">以 <see cref="T:System.Decimal" /> 对象的形式获取指定列的值。</span><span class="sxs-lookup"><span data-stu-id="bb1be-218">Gets the value of the specified column as a <see cref="T:System.Decimal" /> object.</span></span></summary>
        <returns><span data-ttu-id="bb1be-219">指定列的 <see cref="T:System.Decimal" /> 对象形式的值。</span><span class="sxs-lookup"><span data-stu-id="bb1be-219">The value of the specified column as a <see cref="T:System.Decimal" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb1be-220">基于 ODBC 驱动程序的基础功能执行转换。</span><span class="sxs-lookup"><span data-stu-id="bb1be-220">Conversions are performed based on the underlying capabilities of the ODBC driver.</span></span> <span data-ttu-id="bb1be-221">如果不支持转换，则方法调用将失败。</span><span class="sxs-lookup"><span data-stu-id="bb1be-221">If the conversion is not supported then the method call will fail.</span></span>  
  
 <span data-ttu-id="bb1be-222">调用<xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A>此方法之前，调用以查找 null 值。</span><span class="sxs-lookup"><span data-stu-id="bb1be-222">Call <xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A> to look for null values before calling this method.</span></span>  
  
 <span data-ttu-id="bb1be-223"><xref:System.Data.Odbc.OdbcDataReader.GetDecimal%2A>的最大精度为28。</span><span class="sxs-lookup"><span data-stu-id="bb1be-223"><xref:System.Data.Odbc.OdbcDataReader.GetDecimal%2A> has a maximum precision of 28.</span></span> <span data-ttu-id="bb1be-224">尝试以更大的精度来检索小数数据将导致异常。</span><span class="sxs-lookup"><span data-stu-id="bb1be-224">Attempting to retrieve decimal data with a larger precision will cause an exception.</span></span> <span data-ttu-id="bb1be-225">一种解决方法是将查询更改为将十进制类型转换为较小的数据类型，或者转换为字符串或二进制。</span><span class="sxs-lookup"><span data-stu-id="bb1be-225">One solution would be to change the query to cast the decimal type to either a smaller datatype or convert to string or binary.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="bb1be-226">指定的强制转换无效。</span><span class="sxs-lookup"><span data-stu-id="bb1be-226">The specified cast is not valid.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="bb1be-227">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="bb1be-227">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetDouble">
      <MemberSignature Language="C#" Value="public override double GetDouble (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance float64 GetDouble(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetDouble(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDouble (i As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override double GetDouble(int i);" />
      <MemberSignature Language="F#" Value="override this.GetDouble : int -&gt; double" Usage="odbcDataReader.GetDouble i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="bb1be-228">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="bb1be-228">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="bb1be-229">获取指定列的双精度浮点数形式的值。</span><span class="sxs-lookup"><span data-stu-id="bb1be-229">Gets the value of the specified column as a double-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="bb1be-230">指定列的双精度浮点数形式的值。</span><span class="sxs-lookup"><span data-stu-id="bb1be-230">The value of the specified column as a double-precision floating-point number.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb1be-231">基于 ODBC 驱动程序的基础功能执行转换。</span><span class="sxs-lookup"><span data-stu-id="bb1be-231">Conversions are performed based on the underlying capabilities of the ODBC driver.</span></span> <span data-ttu-id="bb1be-232">如果不支持转换，则方法调用将失败。</span><span class="sxs-lookup"><span data-stu-id="bb1be-232">If the conversion is not supported, the method call fails.</span></span>  
  
 <span data-ttu-id="bb1be-233">调用<xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A>此方法之前，调用以查找 null 值。</span><span class="sxs-lookup"><span data-stu-id="bb1be-233">Call <xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A> to look for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="bb1be-234">指定的强制转换无效。</span><span class="sxs-lookup"><span data-stu-id="bb1be-234">The specified cast is not valid.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="bb1be-235">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="bb1be-235">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public override System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="odbcDataReader.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bb1be-236">返回一个可用于循环访问数据读取器中的行的 <see cref="T:System.Collections.IEnumerator" />。</span><span class="sxs-lookup"><span data-stu-id="bb1be-236">Returns an <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the rows in the data reader.</span></span></summary>
        <returns><span data-ttu-id="bb1be-237">一个 <see cref="T:System.Collections.IEnumerator" />，可用于循环访问数据读取器中的行。</span><span class="sxs-lookup"><span data-stu-id="bb1be-237">An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the rows in the data reader.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb1be-238">尽管可以使用此方法来检索显式枚举器，但在支持`foreach`构造的语言中，直接使用循环构造来循环访问数据读取器中的行更为简单。</span><span class="sxs-lookup"><span data-stu-id="bb1be-238">Although you can use this method to retrieve an explicit enumerator, in languages that support a `foreach` construct, it is simpler to use the looping construct directly in order to iterate through the rows in the data reader.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="bb1be-239">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="bb1be-239">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetFieldType">
      <MemberSignature Language="C#" Value="public override Type GetFieldType (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type GetFieldType(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetFieldType(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetFieldType (i As Integer) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ GetFieldType(int i);" />
      <MemberSignature Language="F#" Value="override this.GetFieldType : int -&gt; Type" Usage="odbcDataReader.GetFieldType i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="bb1be-240">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="bb1be-240">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="bb1be-241">获取作为对象的数据类型的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="bb1be-241">Gets the <see cref="T:System.Type" /> that is the data type of the object.</span></span></summary>
        <returns><span data-ttu-id="bb1be-242">作为对象的数据类型的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="bb1be-242">The <see cref="T:System.Type" /> that is the data type of the object.</span></span></returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="bb1be-243">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="bb1be-243">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetFloat">
      <MemberSignature Language="C#" Value="public override float GetFloat (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance float32 GetFloat(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetFloat(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetFloat (i As Integer) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override float GetFloat(int i);" />
      <MemberSignature Language="F#" Value="override this.GetFloat : int -&gt; single" Usage="odbcDataReader.GetFloat i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="bb1be-244">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="bb1be-244">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="bb1be-245">获取指定列的单精度浮点数形式的值。</span><span class="sxs-lookup"><span data-stu-id="bb1be-245">Gets the value of the specified column as a single-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="bb1be-246">指定列的单精度浮点数形式的值。</span><span class="sxs-lookup"><span data-stu-id="bb1be-246">The value of the specified column as a single-precision floating-point number.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb1be-247">基于 ODBC 驱动程序的基础功能执行转换。</span><span class="sxs-lookup"><span data-stu-id="bb1be-247">Conversions are performed based on the underlying capabilities of the ODBC driver.</span></span> <span data-ttu-id="bb1be-248">如果不支持转换，则方法调用将失败。</span><span class="sxs-lookup"><span data-stu-id="bb1be-248">If the conversion is not supported then the method call will fail.</span></span>  
  
 <span data-ttu-id="bb1be-249">调用<xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A>此方法之前，调用以查找 null 值。</span><span class="sxs-lookup"><span data-stu-id="bb1be-249">Call <xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A> to look for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="bb1be-250">指定的强制转换无效。</span><span class="sxs-lookup"><span data-stu-id="bb1be-250">The specified cast is not valid.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="bb1be-251">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="bb1be-251">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetGuid">
      <MemberSignature Language="C#" Value="public override Guid GetGuid (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Guid GetGuid(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetGuid(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetGuid (i As Integer) As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Guid GetGuid(int i);" />
      <MemberSignature Language="F#" Value="override this.GetGuid : int -&gt; Guid" Usage="odbcDataReader.GetGuid i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="bb1be-252">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="bb1be-252">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="bb1be-253">获取指定列的值作为全局唯一标识符 (GUID)。</span><span class="sxs-lookup"><span data-stu-id="bb1be-253">Gets the value of the specified column as a globally unique identifier (GUID).</span></span></summary>
        <returns><span data-ttu-id="bb1be-254">指定列的 GUID 形式的值。</span><span class="sxs-lookup"><span data-stu-id="bb1be-254">The value of the specified column as a GUID.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb1be-255">基于 ODBC 驱动程序的基础功能执行转换。</span><span class="sxs-lookup"><span data-stu-id="bb1be-255">Conversions are performed based on the underlying capabilities of the ODBC driver.</span></span> <span data-ttu-id="bb1be-256">如果不支持转换，则方法调用将失败。</span><span class="sxs-lookup"><span data-stu-id="bb1be-256">If the conversion is not supported, the method call fails.</span></span>  
  
 <span data-ttu-id="bb1be-257">调用<xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A>此方法之前，调用以查找 null 值。</span><span class="sxs-lookup"><span data-stu-id="bb1be-257">Call <xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A> to look for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="bb1be-258">指定的强制转换无效。</span><span class="sxs-lookup"><span data-stu-id="bb1be-258">The specified cast is not valid.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="bb1be-259">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="bb1be-259">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetInt16">
      <MemberSignature Language="C#" Value="public override short GetInt16 (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int16 GetInt16(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetInt16(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInt16 (i As Integer) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override short GetInt16(int i);" />
      <MemberSignature Language="F#" Value="override this.GetInt16 : int -&gt; int16" Usage="odbcDataReader.GetInt16 i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="bb1be-260">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="bb1be-260">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="bb1be-261">获取指定列的 16 位有符号整数形式的值。</span><span class="sxs-lookup"><span data-stu-id="bb1be-261">Gets the value of the specified column as a 16-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="bb1be-262">指定列的 16 位有符号整数形式的值。</span><span class="sxs-lookup"><span data-stu-id="bb1be-262">The value of the specified column as a 16-bit signed integer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb1be-263">基于 ODBC 驱动程序的基础功能执行转换。</span><span class="sxs-lookup"><span data-stu-id="bb1be-263">Conversions are performed based on the underlying capabilities of the ODBC driver.</span></span> <span data-ttu-id="bb1be-264">如果不支持转换，则方法调用将失败。</span><span class="sxs-lookup"><span data-stu-id="bb1be-264">If the conversion is not supported, the method call fails.</span></span>  
  
 <span data-ttu-id="bb1be-265">调用<xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A>此方法之前，调用以查找 null 值。</span><span class="sxs-lookup"><span data-stu-id="bb1be-265">Call <xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A> to look for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="bb1be-266">指定的强制转换无效。</span><span class="sxs-lookup"><span data-stu-id="bb1be-266">The specified cast is not valid.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="bb1be-267">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="bb1be-267">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetInt32">
      <MemberSignature Language="C#" Value="public override int GetInt32 (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetInt32(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetInt32(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInt32 (i As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetInt32(int i);" />
      <MemberSignature Language="F#" Value="override this.GetInt32 : int -&gt; int" Usage="odbcDataReader.GetInt32 i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="bb1be-268">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="bb1be-268">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="bb1be-269">获取指定列的 32 位带符号整数形式的值。</span><span class="sxs-lookup"><span data-stu-id="bb1be-269">Gets the value of the specified column as a 32-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="bb1be-270">指定列的 32 位有符号整数形式的值。</span><span class="sxs-lookup"><span data-stu-id="bb1be-270">The value of the specified column as a 32-bit signed integer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb1be-271">基于 ODBC 驱动程序的基础功能执行转换。</span><span class="sxs-lookup"><span data-stu-id="bb1be-271">Conversions are performed based on the underlying capabilities of the ODBC driver.</span></span> <span data-ttu-id="bb1be-272">如果不支持转换，则方法调用将失败。</span><span class="sxs-lookup"><span data-stu-id="bb1be-272">If the conversion is not supported, the method call fails.</span></span>  
  
 <span data-ttu-id="bb1be-273">调用<xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A>此方法之前，调用以查找 null 值。</span><span class="sxs-lookup"><span data-stu-id="bb1be-273">Call <xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A> to look for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="bb1be-274">指定的强制转换无效。</span><span class="sxs-lookup"><span data-stu-id="bb1be-274">The specified cast is not valid.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="bb1be-275">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="bb1be-275">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetInt64">
      <MemberSignature Language="C#" Value="public override long GetInt64 (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 GetInt64(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetInt64(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInt64 (i As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long GetInt64(int i);" />
      <MemberSignature Language="F#" Value="override this.GetInt64 : int -&gt; int64" Usage="odbcDataReader.GetInt64 i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="bb1be-276">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="bb1be-276">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="bb1be-277">以 64 位有符号整数的形式获取指定列的值。</span><span class="sxs-lookup"><span data-stu-id="bb1be-277">Gets the value of the specified column as a 64-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="bb1be-278">指定列的 64 位有符号整数形式的值。</span><span class="sxs-lookup"><span data-stu-id="bb1be-278">The value of the specified column as a 64-bit signed integer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb1be-279">基于 ODBC 驱动程序的基础功能执行转换。</span><span class="sxs-lookup"><span data-stu-id="bb1be-279">Conversions are performed based on the underlying capabilities of the ODBC driver.</span></span> <span data-ttu-id="bb1be-280">如果不支持转换，则方法调用将失败。</span><span class="sxs-lookup"><span data-stu-id="bb1be-280">If the conversion is not supported, the method call fails.</span></span>  
  
 <span data-ttu-id="bb1be-281">调用<xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A>此方法之前，调用以查找 null 值。</span><span class="sxs-lookup"><span data-stu-id="bb1be-281">Call <xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A> to look for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="bb1be-282">指定的强制转换无效。</span><span class="sxs-lookup"><span data-stu-id="bb1be-282">The specified cast is not valid.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="bb1be-283">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="bb1be-283">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetName">
      <MemberSignature Language="C#" Value="public override string GetName (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetName(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetName (i As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetName(int i);" />
      <MemberSignature Language="F#" Value="override this.GetName : int -&gt; string" Usage="odbcDataReader.GetName i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="bb1be-284">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="bb1be-284">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="bb1be-285">获取指定列的名称。</span><span class="sxs-lookup"><span data-stu-id="bb1be-285">Gets the name of the specified column.</span></span></summary>
        <returns><span data-ttu-id="bb1be-286">指定列的名称的字符串。</span><span class="sxs-lookup"><span data-stu-id="bb1be-286">A string that is the name of the specified column.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Data.Odbc.OdbcDataReader.GetOrdinal(System.String)" />
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="bb1be-287">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="bb1be-287">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetOrdinal">
      <MemberSignature Language="C#" Value="public override int GetOrdinal (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetOrdinal(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetOrdinal(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetOrdinal (value As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetOrdinal(System::String ^ value);" />
      <MemberSignature Language="F#" Value="override this.GetOrdinal : string -&gt; int" Usage="odbcDataReader.GetOrdinal value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="bb1be-288">列的名称。</span><span class="sxs-lookup"><span data-stu-id="bb1be-288">The name of the column.</span></span></param>
        <summary><span data-ttu-id="bb1be-289">在给定列名时获取相应的列序号。</span><span class="sxs-lookup"><span data-stu-id="bb1be-289">Gets the column ordinal, given the name of the column.</span></span></summary>
        <returns><span data-ttu-id="bb1be-290">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="bb1be-290">The zero-based column ordinal.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb1be-291"><xref:System.Data.Odbc.OdbcDataReader.GetOrdinal%2A>首先执行区分大小写的查找。</span><span class="sxs-lookup"><span data-stu-id="bb1be-291"><xref:System.Data.Odbc.OdbcDataReader.GetOrdinal%2A> performs a case-sensitive lookup first.</span></span> <span data-ttu-id="bb1be-292">如果失败，将进行第二个不区分大小写的搜索。</span><span class="sxs-lookup"><span data-stu-id="bb1be-292">If it fails, a second case-insensitive search is made.</span></span> <span data-ttu-id="bb1be-293">如果找不到`IndexOutOfRange`基于零的列序号，方法将引发异常。</span><span class="sxs-lookup"><span data-stu-id="bb1be-293">The method throws an `IndexOutOfRange` exception if the zero-based column ordinal is not found.</span></span>  
  
 <span data-ttu-id="bb1be-294"><xref:System.Data.Odbc.OdbcDataReader.GetOrdinal%2A>不区分假名宽度。</span><span class="sxs-lookup"><span data-stu-id="bb1be-294"><xref:System.Data.Odbc.OdbcDataReader.GetOrdinal%2A> is kana-width insensitive.</span></span>  
  
 <span data-ttu-id="bb1be-295">由于基于序号的查找比命名查找更有效，因此在循环内调用<xref:System.Data.Odbc.OdbcDataReader.GetOrdinal%2A>是低效的。</span><span class="sxs-lookup"><span data-stu-id="bb1be-295">Because ordinal-based lookups are more efficient than named lookups, it is inefficient to call <xref:System.Data.Odbc.OdbcDataReader.GetOrdinal%2A> within a loop.</span></span> <span data-ttu-id="bb1be-296">相反，调用<xref:System.Data.Odbc.OdbcDataReader.GetOrdinal%2A>一次，然后将结果分配给一个整数变量以便在循环中使用。</span><span class="sxs-lookup"><span data-stu-id="bb1be-296">Instead, call <xref:System.Data.Odbc.OdbcDataReader.GetOrdinal%2A> one time and then assign the results to an integer variable for use within the loop.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb1be-297">下面的示例演示如何使用 <xref:System.Data.Odbc.OdbcDataReader.GetOrdinal%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="bb1be-297">The following example demonstrates how to use the <xref:System.Data.Odbc.OdbcDataReader.GetOrdinal%2A> method.</span></span>  
  
 [!code-csharp[Classic WebData OdbcDataReader.GetOrdinal#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OdbcDataReader.GetOrdinal/CS/source.cs#1)]
 [!code-vb[Classic WebData OdbcDataReader.GetOrdinal#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OdbcDataReader.GetOrdinal/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.Odbc.OdbcDataReader.GetName(System.Int32)" />
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="bb1be-298">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="bb1be-298">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetSchemaTable">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetSchemaTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetSchemaTable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetSchemaTable" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSchemaTable () As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::DataTable ^ GetSchemaTable();" />
      <MemberSignature Language="F#" Value="override this.GetSchemaTable : unit -&gt; System.Data.DataTable" Usage="odbcDataReader.GetSchemaTable " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bb1be-299">返回一个 <see cref="T:System.Data.DataTable" />，它描述 <see cref="T:System.Data.Odbc.OdbcDataReader" /> 的列元数据。</span><span class="sxs-lookup"><span data-stu-id="bb1be-299">Returns a <see cref="T:System.Data.DataTable" /> that describes the column metadata of the <see cref="T:System.Data.Odbc.OdbcDataReader" />.</span></span></summary>
        <returns><span data-ttu-id="bb1be-300">一个描述列元数据的 <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="bb1be-300">A <see cref="T:System.Data.DataTable" /> that describes the column metadata.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb1be-301"><xref:System.Data.Odbc.OdbcDataReader.GetSchemaTable%2A>方法按以下顺序返回有关每个列的元数据：</span><span class="sxs-lookup"><span data-stu-id="bb1be-301">The <xref:System.Data.Odbc.OdbcDataReader.GetSchemaTable%2A> method returns metadata about each column in the following order:</span></span>  
  
|<span data-ttu-id="bb1be-302">DataReader 列</span><span class="sxs-lookup"><span data-stu-id="bb1be-302">DataReader column</span></span>|<span data-ttu-id="bb1be-303">说明</span><span class="sxs-lookup"><span data-stu-id="bb1be-303">Description</span></span>|  
|-----------------------|-----------------|  
|<span data-ttu-id="bb1be-304">列名</span><span class="sxs-lookup"><span data-stu-id="bb1be-304">ColumnName</span></span>|<span data-ttu-id="bb1be-305">列的名称;这可能不是唯一的。</span><span class="sxs-lookup"><span data-stu-id="bb1be-305">The name of the column; this might not be unique.</span></span> <span data-ttu-id="bb1be-306">如果无法确定列名，则返回 null 值。</span><span class="sxs-lookup"><span data-stu-id="bb1be-306">If the column name cannot be determined, a null value is returned.</span></span> <span data-ttu-id="bb1be-307">此名称始终反映当前视图或命令文本中列的最新命名。</span><span class="sxs-lookup"><span data-stu-id="bb1be-307">This name always reflects the most recent naming of the column in the current view or command text.</span></span>|  
|<span data-ttu-id="bb1be-308">ColumnOrdinal</span><span class="sxs-lookup"><span data-stu-id="bb1be-308">ColumnOrdinal</span></span>|<span data-ttu-id="bb1be-309">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="bb1be-309">The zero-based ordinal of the column.</span></span> <span data-ttu-id="bb1be-310">此列不能包含 null 值。</span><span class="sxs-lookup"><span data-stu-id="bb1be-310">This column cannot contain a null value.</span></span>|  
|<span data-ttu-id="bb1be-311">ColumnSize</span><span class="sxs-lookup"><span data-stu-id="bb1be-311">ColumnSize</span></span>|<span data-ttu-id="bb1be-312">列中的值的最大可能长度。</span><span class="sxs-lookup"><span data-stu-id="bb1be-312">The maximum possible length of a value in the column.</span></span> <span data-ttu-id="bb1be-313">对于使用固定长度数据类型的列，这是数据类型的大小。</span><span class="sxs-lookup"><span data-stu-id="bb1be-313">For columns that use a fixed-length data type, this is the size of the data type.</span></span>|  
|<span data-ttu-id="bb1be-314">NumericPrecision</span><span class="sxs-lookup"><span data-stu-id="bb1be-314">NumericPrecision</span></span>|<span data-ttu-id="bb1be-315">如果<xref:System.Data.DbType>是数值数据类型，则这是列的最大精度。</span><span class="sxs-lookup"><span data-stu-id="bb1be-315">If <xref:System.Data.DbType> is a numeric data type, this is the maximum precision of the column.</span></span> <span data-ttu-id="bb1be-316">精度取决于该列的定义。</span><span class="sxs-lookup"><span data-stu-id="bb1be-316">The precision depends on the definition of the column.</span></span> <span data-ttu-id="bb1be-317">如果<xref:System.Data.DbType>不是数值数据类型，请不要使用此列中的数据。</span><span class="sxs-lookup"><span data-stu-id="bb1be-317">If <xref:System.Data.DbType> is not a numeric data type, do not use the data in this column.</span></span> <span data-ttu-id="bb1be-318">如果基础 ODBC 驱动程序返回非数值数据类型的精度值，则会在架构表中使用此值。</span><span class="sxs-lookup"><span data-stu-id="bb1be-318">If the underlying ODBC driver returns a precision value for a non-numeric data type, this value is used in the schema table.</span></span>|  
|<span data-ttu-id="bb1be-319">NumericScale</span><span class="sxs-lookup"><span data-stu-id="bb1be-319">NumericScale</span></span>|<span data-ttu-id="bb1be-320">如果<xref:System.Data.DbType> 为 <xref:System.Data.DbType.Decimal> ，则为小数点右侧的位数。</span><span class="sxs-lookup"><span data-stu-id="bb1be-320">If <xref:System.Data.DbType> is <xref:System.Data.DbType.Decimal>, the number of digits to the right of the decimal point.</span></span> <span data-ttu-id="bb1be-321">否则，此值为 null 值。</span><span class="sxs-lookup"><span data-stu-id="bb1be-321">Otherwise, this is a null value.</span></span> <span data-ttu-id="bb1be-322">如果基础 ODBC 驱动程序返回非数值数据类型的精度值，则会在架构表中使用此值。</span><span class="sxs-lookup"><span data-stu-id="bb1be-322">If the underlying ODBC driver returns a precision value for a non-numeric data type, this value is used in the schema table.</span></span>|  
|<span data-ttu-id="bb1be-323">数据类型</span><span class="sxs-lookup"><span data-stu-id="bb1be-323">DataType</span></span>|<span data-ttu-id="bb1be-324">映射到的公共语言运行时类型<xref:System.Data.DbType>。</span><span class="sxs-lookup"><span data-stu-id="bb1be-324">Maps to the common language runtime type of <xref:System.Data.DbType>.</span></span>|  
|<span data-ttu-id="bb1be-325">ProviderType</span><span class="sxs-lookup"><span data-stu-id="bb1be-325">ProviderType</span></span>|<span data-ttu-id="bb1be-326">基础驱动程序类型。</span><span class="sxs-lookup"><span data-stu-id="bb1be-326">The underlying driver type.</span></span>|  
|<span data-ttu-id="bb1be-327">IsLong</span><span class="sxs-lookup"><span data-stu-id="bb1be-327">IsLong</span></span>|<span data-ttu-id="bb1be-328">`true`如果列包含包含非常长数据的二进制长对象（BLOB），则为。</span><span class="sxs-lookup"><span data-stu-id="bb1be-328">`true` if the column contains a Binary Long Object (BLOB) that contains very long data.</span></span> <span data-ttu-id="bb1be-329">非常长的数据的定义是驱动程序特定的。</span><span class="sxs-lookup"><span data-stu-id="bb1be-329">The definition of very long data is driver-specific.</span></span>|  
|<span data-ttu-id="bb1be-330">AllowDBNull</span><span class="sxs-lookup"><span data-stu-id="bb1be-330">AllowDBNull</span></span>|<span data-ttu-id="bb1be-331">`true`如果使用者可以将列设置为 null 值，或者如果驱动程序无法确定使用者是否可以将该列设置为 null 值，则为。</span><span class="sxs-lookup"><span data-stu-id="bb1be-331">`true` if the consumer can set the column to a null value or if the driver cannot determine whether the consumer can set the column to a null value.</span></span> <span data-ttu-id="bb1be-332">否则为 `false`。</span><span class="sxs-lookup"><span data-stu-id="bb1be-332">Otherwise, `false`.</span></span> <span data-ttu-id="bb1be-333">列可能包含空值，即使它不能设置为 null 值也是如此。</span><span class="sxs-lookup"><span data-stu-id="bb1be-333">A column may contain null values, even if it cannot be set to a null value.</span></span>|  
|<span data-ttu-id="bb1be-334">为只读</span><span class="sxs-lookup"><span data-stu-id="bb1be-334">IsReadOnly</span></span>|<span data-ttu-id="bb1be-335">`true`如果无法修改列，则为;否则`false`为。</span><span class="sxs-lookup"><span data-stu-id="bb1be-335">`true` if the column cannot be modified; otherwise `false`.</span></span>|  
|<span data-ttu-id="bb1be-336">IsRowVersion</span><span class="sxs-lookup"><span data-stu-id="bb1be-336">IsRowVersion</span></span>|<span data-ttu-id="bb1be-337">如果列包含不能写入的持久性行标识符，并且没有任何有意义的值（标识该行），则设置。</span><span class="sxs-lookup"><span data-stu-id="bb1be-337">Set if the column contains a persistent row identifier that cannot be written to, and has no meaningful value except to identity the row.</span></span>|  
|<span data-ttu-id="bb1be-338">IsUnique</span><span class="sxs-lookup"><span data-stu-id="bb1be-338">IsUnique</span></span>|<span data-ttu-id="bb1be-339">`true`：基表中没有两行（在 BaseTableName 中返回的表）在此列中可能具有相同的值。</span><span class="sxs-lookup"><span data-stu-id="bb1be-339">`true`: No two rows in the base table (the table returned in BaseTableName) can have the same value in this column.</span></span> <span data-ttu-id="bb1be-340">如果列本身表示键`true` ，或者存在仅适用于此列的 UNIQUE 类型的约束，则可保证 IsUnique 为。</span><span class="sxs-lookup"><span data-stu-id="bb1be-340">IsUnique is guaranteed to be `true` if the column represents a key by itself or if there is a constraint of type UNIQUE that applies only to this column.</span></span><br /><br /> <span data-ttu-id="bb1be-341">`false`：列可以包含基表中的重复值。</span><span class="sxs-lookup"><span data-stu-id="bb1be-341">`false`: The column can contain duplicate values in the base table.</span></span> <span data-ttu-id="bb1be-342">此列的默认值为`false`。</span><span class="sxs-lookup"><span data-stu-id="bb1be-342">The default for this column is `false`.</span></span>|  
|<span data-ttu-id="bb1be-343">IsKey</span><span class="sxs-lookup"><span data-stu-id="bb1be-343">IsKey</span></span>|<span data-ttu-id="bb1be-344">`true`：列是行集中的一组列，这些列汇集在一起，以唯一标识行。</span><span class="sxs-lookup"><span data-stu-id="bb1be-344">`true`: The column is one of a set of columns in the rowset that, taken together, uniquely identify the row.</span></span> <span data-ttu-id="bb1be-345">将 IsKey 设置为`true`的列集必须唯一标识行集中的行。</span><span class="sxs-lookup"><span data-stu-id="bb1be-345">The set of columns with IsKey set to `true` must uniquely identify a row in the rowset.</span></span> <span data-ttu-id="bb1be-346">不要求这组列是最少的一组列。</span><span class="sxs-lookup"><span data-stu-id="bb1be-346">There is no requirement that this set of columns is a minimal set of columns.</span></span> <span data-ttu-id="bb1be-347">这组列可以从基表主键、unique 约束或唯一索引生成。</span><span class="sxs-lookup"><span data-stu-id="bb1be-347">This set of columns may be generated from a base table primary key, a unique constraint, or a unique index.</span></span><br /><br /> <span data-ttu-id="bb1be-348">`false`：唯一标识行不需要此列。</span><span class="sxs-lookup"><span data-stu-id="bb1be-348">`false`: The column is not required to uniquely identify the row.</span></span>|  
|<span data-ttu-id="bb1be-349">IsAutoIncrement</span><span class="sxs-lookup"><span data-stu-id="bb1be-349">IsAutoIncrement</span></span>|<span data-ttu-id="bb1be-350">`true`如果列以固定增量将值分配给新行，则为;否则`false`为。</span><span class="sxs-lookup"><span data-stu-id="bb1be-350">`true` if the column assigns values to new rows in fixed increments; otherwise `false`.</span></span> <span data-ttu-id="bb1be-351">此列的默认值为`false`。</span><span class="sxs-lookup"><span data-stu-id="bb1be-351">The default for this column is `false`.</span></span>|  
|<span data-ttu-id="bb1be-352">BaseSchemaName</span><span class="sxs-lookup"><span data-stu-id="bb1be-352">BaseSchemaName</span></span>|<span data-ttu-id="bb1be-353">数据源中包含该列的架构的名称。</span><span class="sxs-lookup"><span data-stu-id="bb1be-353">The name of the schema in the data source that contains the column.</span></span> <span data-ttu-id="bb1be-354">如果无法确定基本目录名称，则为 NULL。</span><span class="sxs-lookup"><span data-stu-id="bb1be-354">NULL if the base catalog name cannot be determined.</span></span> <span data-ttu-id="bb1be-355">此列的默认值为 null 值。</span><span class="sxs-lookup"><span data-stu-id="bb1be-355">The default for this column is a null value.</span></span>|  
|<span data-ttu-id="bb1be-356">BaseCatalogName</span><span class="sxs-lookup"><span data-stu-id="bb1be-356">BaseCatalogName</span></span>|<span data-ttu-id="bb1be-357">包含该列的数据存储区中的目录的名称。</span><span class="sxs-lookup"><span data-stu-id="bb1be-357">The name of the catalog in the data store that contains the column.</span></span> <span data-ttu-id="bb1be-358">如果无法确定基本目录名称，则为 NULL。</span><span class="sxs-lookup"><span data-stu-id="bb1be-358">NULL if the base catalog name cannot be determined.</span></span> <span data-ttu-id="bb1be-359">此列的默认值为 null 值。</span><span class="sxs-lookup"><span data-stu-id="bb1be-359">The default for this column is a null value.</span></span>|  
|<span data-ttu-id="bb1be-360">BaseTableName</span><span class="sxs-lookup"><span data-stu-id="bb1be-360">BaseTableName</span></span>|<span data-ttu-id="bb1be-361">包含该列的数据存储区中的表或视图的名称。</span><span class="sxs-lookup"><span data-stu-id="bb1be-361">The name of the table or view in the data store that contains the column.</span></span> <span data-ttu-id="bb1be-362">如果无法确定基表名称，则为 null 值。</span><span class="sxs-lookup"><span data-stu-id="bb1be-362">A null value if the base table name cannot be determined.</span></span> <span data-ttu-id="bb1be-363">此列的默认值为 null 值。</span><span class="sxs-lookup"><span data-stu-id="bb1be-363">The default of this column is a null value.</span></span>|  
|<span data-ttu-id="bb1be-364">BaseColumnName</span><span class="sxs-lookup"><span data-stu-id="bb1be-364">BaseColumnName</span></span>|<span data-ttu-id="bb1be-365">数据存储区中列的名称。</span><span class="sxs-lookup"><span data-stu-id="bb1be-365">The name of the column in the data store.</span></span> <span data-ttu-id="bb1be-366">如果使用了别名，则该名称可能不同于列名称返回的列名称。</span><span class="sxs-lookup"><span data-stu-id="bb1be-366">This might be different from the column name returned in the ColumnName column if an alias was used.</span></span> <span data-ttu-id="bb1be-367">如果无法确定基列名称，或者如果行集列派生，但与数据存储区中的列不完全相同，则为 null 值。</span><span class="sxs-lookup"><span data-stu-id="bb1be-367">A null value if the base column name cannot be determined or if the rowset column is derived, but not identical to, a column in the data store.</span></span> <span data-ttu-id="bb1be-368">此列的默认值为 null 值。</span><span class="sxs-lookup"><span data-stu-id="bb1be-368">The default for this column is a null value.</span></span>|  
  
 <span data-ttu-id="bb1be-369">为结果集中的每一列返回一行。</span><span class="sxs-lookup"><span data-stu-id="bb1be-369">A row is returned for every column in the results set.</span></span>  
  
 <span data-ttu-id="bb1be-370">ODBC 的 .NET Framework 数据提供程序假定在调用**SQLPrepare**、 **SQLExecute**或**SQLEXECUTEDIRECT**函数之一后，odbc 驱动程序中提供了元数据信息。</span><span class="sxs-lookup"><span data-stu-id="bb1be-370">The .NET Framework Data Provider for ODBC assumes that metadata information is available from an ODBC driver after one of **SQLPrepare**, **SQLExecute**, or **SQLExecuteDirect** functions are called.</span></span> <span data-ttu-id="bb1be-371">要使 "SchemaOnly" 命令行为正常工作， **SQLPrepare**必须返回所需的元数据信息。</span><span class="sxs-lookup"><span data-stu-id="bb1be-371">For "SchemaOnly" command behavior to work correctly, **SQLPrepare** must return the required metadata information.</span></span> <span data-ttu-id="bb1be-372">并非所有 ODBC 驱动程序都支持此函数或返回元数据信息。</span><span class="sxs-lookup"><span data-stu-id="bb1be-372">Not all ODBC drivers support this function or return metadata information.</span></span> <span data-ttu-id="bb1be-373">在这些情况下，SchemaTable 中的部分或全部信息将丢失。</span><span class="sxs-lookup"><span data-stu-id="bb1be-373">In these cases, part or all of the information in the SchemaTable will be missing.</span></span> <span data-ttu-id="bb1be-374">调用**SQLPrepare**后，数据访问接口会调用 ODBC **SQLColAttribute**函数来查找与查询结果中的每个列相关的元数据信息（例如，IsLong、IsUnique、AllowDBNull、BaseTableName、BaseColumnName）。</span><span class="sxs-lookup"><span data-stu-id="bb1be-374">After calling **SQLPrepare**, The data provider calls the ODBC **SQLColAttribute** function to find the metadata information related to each column in the query results (for example, IsLong, IsUnique, AllowDBNull, BaseTableName, BaseColumnName).</span></span> <span data-ttu-id="bb1be-375">如果基础驱动程序未返回某些信息，则不会正确设置 SchemaTable 中的相应值。</span><span class="sxs-lookup"><span data-stu-id="bb1be-375">If the underlying driver does not return some of this information, the corresponding values in the SchemaTable will not be set correctly.</span></span>  
  
 <span data-ttu-id="bb1be-376">用于 ODBC 的 .NET Framework 数据提供程序还将调用**SQLPrimaryKeys**来检索每个表的键信息。</span><span class="sxs-lookup"><span data-stu-id="bb1be-376">The .NET Framework Data Provider for ODBC also calls **SQLPrimaryKeys** to retrieve the key information for every table.</span></span> <span data-ttu-id="bb1be-377">如果基础 ODBC 驱动程序不支持此函数，则数据访问接口将调用**SQLStatistics**并选择一个唯一索引作为该表的主键。</span><span class="sxs-lookup"><span data-stu-id="bb1be-377">If the underlying ODBC driver does not support this function, the data provider calls **SQLStatistics** and chooses one of the unique indexes as the primary key for the table.</span></span> <span data-ttu-id="bb1be-378">这可能不会始终产生所需的结果。</span><span class="sxs-lookup"><span data-stu-id="bb1be-378">This may not always give the results that you want.</span></span>  
  
 <span data-ttu-id="bb1be-379"><xref:System.Data.Odbc.OdbcCommandBuilder>需要表的主键的正确标识，才能正常工作。</span><span class="sxs-lookup"><span data-stu-id="bb1be-379"><xref:System.Data.Odbc.OdbcCommandBuilder> needs the correct identification of the primary keys of the table in order to work correctly.</span></span> <span data-ttu-id="bb1be-380">如果查询结果中的每一列都未返回 BaseTableName，则用于 ODBC 的 .NET Framework 数据提供程序将尝试分析 SQL 语句，以便查找查询中涉及的表名称。</span><span class="sxs-lookup"><span data-stu-id="bb1be-380">If the BaseTableName is not returned for every column in the query results, the .NET Framework Data Provider for ODBC tries to parse the SQL statement to find the table names involved in the query.</span></span> <span data-ttu-id="bb1be-381">这适用于更新、插入、删除和简单的 SELECT 语句，但不适用于存储过程或基于联接的 SELECT 语句。</span><span class="sxs-lookup"><span data-stu-id="bb1be-381">This works with UPDATE, INSERT, DELETE and simple SELECT statements, but not with stored procedures or SELECT statements based on joins.</span></span> <span data-ttu-id="bb1be-382">如果此表中缺少部分或全部架构信息， <xref:System.Data.Odbc.OdbcCommandBuilder>将无法正常工作，因为它没有足够的架构信息来自动生成正确的 INSERT、UPDATE 或 DELETE 语句。</span><span class="sxs-lookup"><span data-stu-id="bb1be-382">If some or all the schema information is missing from this table, the <xref:System.Data.Odbc.OdbcCommandBuilder> will not work correctly, because it has insufficient schema information to automatically generate the correct INSERT, UPDATE, or DELETE statements.</span></span>  
  
 <span data-ttu-id="bb1be-383">若要确保 metadata 列返回正确的信息，必须调用<xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A>并将行为参数设置为 KeyInfo。</span><span class="sxs-lookup"><span data-stu-id="bb1be-383">To make sure that metadata columns return the correct information, you must call <xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A> with the behavior parameter set to KeyInfo.</span></span> <span data-ttu-id="bb1be-384">否则，架构表中的某些列可能返回默认值、null 值或不正确的数据。</span><span class="sxs-lookup"><span data-stu-id="bb1be-384">Otherwise, some of the columns in the schema table may return default, null, or incorrect data.</span></span>  
  
 <span data-ttu-id="bb1be-385">通过 ODBC 驱动程序使用 ODBC.NET 到 Oracle 时，别名列不会被识别为键列。</span><span class="sxs-lookup"><span data-stu-id="bb1be-385">When you use ODBC.NET to Oracle via the ODBC driver, aliased key columns are not recognized as keys.</span></span> <span data-ttu-id="bb1be-386">这会影响 OdbcDataReader 的架构表中的 IsKey 和 IsUnique 列。</span><span class="sxs-lookup"><span data-stu-id="bb1be-386">This affects the IsKey and IsUnique columns in the schema table of the OdbcDataReader.</span></span> <span data-ttu-id="bb1be-387">它还会影响 OdbcCommandBuilder 生成更新逻辑的能力。</span><span class="sxs-lookup"><span data-stu-id="bb1be-387">It also affects the OdbcCommandBuilder's ability to generate updating logic.</span></span> <span data-ttu-id="bb1be-388">请考虑不要对主键列使用别名。</span><span class="sxs-lookup"><span data-stu-id="bb1be-388">Consider not using an alias for a primary key column.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bb1be-389">Microsoft Jet ODBC 驱动程序始终将唯一索引和主键列返回为 null，无论它们是否可以为 null。</span><span class="sxs-lookup"><span data-stu-id="bb1be-389">The Microsoft Jet ODBC driver always returns unique index and primary key columns as nullable regardless of whether they are nullable or not.</span></span> <span data-ttu-id="bb1be-390">驱动程序也不会返回主键信息;它仅返回唯一索引及其列的列表（包括主键列），而不区分它们。</span><span class="sxs-lookup"><span data-stu-id="bb1be-390">The driver also does not return primary key information; it only returns a list of unique indexes and their columns, including primary key columns, without differentiating among them.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="bb1be-391"><see cref="T:System.Data.Odbc.OdbcDataReader" /> 是关闭的。</span><span class="sxs-lookup"><span data-stu-id="bb1be-391">The <see cref="T:System.Data.Odbc.OdbcDataReader" /> is closed.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="bb1be-392">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="bb1be-392">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public override string GetString (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetString(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetString(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetString (i As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetString(int i);" />
      <MemberSignature Language="F#" Value="override this.GetString : int -&gt; string" Usage="odbcDataReader.GetString i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="bb1be-393">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="bb1be-393">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="bb1be-394">获取指定列的 <see cref="T:System.String" /> 形式的值。</span><span class="sxs-lookup"><span data-stu-id="bb1be-394">Gets the value of the specified column as a <see cref="T:System.String" />.</span></span></summary>
        <returns><span data-ttu-id="bb1be-395">以 <see cref="T:System.String" /> 的形式指定的列的值。</span><span class="sxs-lookup"><span data-stu-id="bb1be-395">The value of the specified column as a <see cref="T:System.String" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb1be-396">基于 ODBC 驱动程序的基础功能执行转换。</span><span class="sxs-lookup"><span data-stu-id="bb1be-396">Conversions are performed based on the underlying capabilities of the ODBC driver.</span></span> <span data-ttu-id="bb1be-397">如果不支持转换，则方法调用将失败。</span><span class="sxs-lookup"><span data-stu-id="bb1be-397">If the conversion is not supported, the method call fails.</span></span>  
  
 <span data-ttu-id="bb1be-398">调用<xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A>此方法之前，调用以查找 null 值。</span><span class="sxs-lookup"><span data-stu-id="bb1be-398">Call <xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A> to look for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="bb1be-399">指定的强制转换无效。</span><span class="sxs-lookup"><span data-stu-id="bb1be-399">The specified cast is not valid.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="bb1be-400">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="bb1be-400">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetTime">
      <MemberSignature Language="C#" Value="public TimeSpan GetTime (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.TimeSpan GetTime(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetTime(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTime (i As Integer) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TimeSpan GetTime(int i);" />
      <MemberSignature Language="F#" Value="member this.GetTime : int -&gt; TimeSpan" Usage="odbcDataReader.GetTime i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="bb1be-401">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="bb1be-401">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="bb1be-402">以 <see cref="T:System.TimeSpan" /> 对象的形式获取指定列的值。</span><span class="sxs-lookup"><span data-stu-id="bb1be-402">Gets the value of the specified column as a <see cref="T:System.TimeSpan" /> object.</span></span></summary>
        <returns><span data-ttu-id="bb1be-403">指定列的 <see cref="T:System.TimeSpan" /> 对象形式的值。</span><span class="sxs-lookup"><span data-stu-id="bb1be-403">The value of the specified column as a <see cref="T:System.TimeSpan" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="bb1be-404">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="bb1be-404">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public override object GetValue (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetValue(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetValue (i As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetValue(int i);" />
      <MemberSignature Language="F#" Value="override this.GetValue : int -&gt; obj" Usage="odbcDataReader.GetValue i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="bb1be-405">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="bb1be-405">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="bb1be-406">获取以本机格式表示的指定序号处的列的值。</span><span class="sxs-lookup"><span data-stu-id="bb1be-406">Gets the value of the column at the specified ordinal in its native format.</span></span></summary>
        <returns><span data-ttu-id="bb1be-407">要返回的值。</span><span class="sxs-lookup"><span data-stu-id="bb1be-407">The value to return.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb1be-408">对于 null 数据库列，此方法返回 <xref:System.DBNull>。</span><span class="sxs-lookup"><span data-stu-id="bb1be-408">This method returns <xref:System.DBNull> for null database columns.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="bb1be-409">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="bb1be-409">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetValues">
      <MemberSignature Language="C#" Value="public override int GetValues (object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetValues(object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetValues(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetValues (values As Object()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetValues(cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="override this.GetValues : obj[] -&gt; int" Usage="odbcDataReader.GetValues values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="values"><span data-ttu-id="bb1be-410">将特性列复制到的 <see cref="T:System.Object" /> 类型的数组。</span><span class="sxs-lookup"><span data-stu-id="bb1be-410">An array of type <see cref="T:System.Object" /> into which to copy the attribute columns.</span></span></param>
        <summary><span data-ttu-id="bb1be-411">使用当前行的列值来填充对象数组。</span><span class="sxs-lookup"><span data-stu-id="bb1be-411">Populates an array of objects with the column values of the current row.</span></span></summary>
        <returns><span data-ttu-id="bb1be-412">数组中 <see cref="T:System.Object" /> 的实例的数目。</span><span class="sxs-lookup"><span data-stu-id="bb1be-412">The number of instances of <see cref="T:System.Object" /> in the array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb1be-413">对于大多数应用程序， <xref:System.Data.Odbc.OdbcDataReader.GetValues%2A>方法提供了一种有效的方法来检索所有列，而不是单独检索每个列。</span><span class="sxs-lookup"><span data-stu-id="bb1be-413">For most applications, the <xref:System.Data.Odbc.OdbcDataReader.GetValues%2A> method provides an efficient means for retrieving all columns, instead of retrieving each column individually.</span></span>  
  
 <span data-ttu-id="bb1be-414">可以传递一个<xref:System.Object>数组，该数组包含的列数少于所产生行中包含的列数。</span><span class="sxs-lookup"><span data-stu-id="bb1be-414">You can pass an <xref:System.Object> array that contains fewer than the number of columns that are contained in the resulting row.</span></span> <span data-ttu-id="bb1be-415">只有<xref:System.Object>数组保存的数据量会复制到数组中。</span><span class="sxs-lookup"><span data-stu-id="bb1be-415">Only the amount of data the <xref:System.Object> array holds is copied to the array.</span></span> <span data-ttu-id="bb1be-416">还可以传递<xref:System.Object>其长度大于结果行中包含的列数的数组。</span><span class="sxs-lookup"><span data-stu-id="bb1be-416">You can also pass an <xref:System.Object> array whose length is more than the number of columns that are contained in the resulting row.</span></span>  
  
 <span data-ttu-id="bb1be-417">对于 null 数据库列，此方法返回 <xref:System.DBNull>。</span><span class="sxs-lookup"><span data-stu-id="bb1be-417">This method returns <xref:System.DBNull> for null database columns.</span></span>  
  
   
  
## Examples  
 [!code-csharp[OdbcDataReader_GetValues#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/odbcdatareader_getvalues/cs/source.cs#1)]
 [!code-vb[OdbcDataReader_GetValues#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/odbcdatareader_getvalues/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="bb1be-418">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="bb1be-418">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="HasRows">
      <MemberSignature Language="C#" Value="public override bool HasRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasRows" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcDataReader.HasRows" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property HasRows As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HasRows { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasRows : bool" Usage="System.Data.Odbc.OdbcDataReader.HasRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb1be-419">获取一个值，该值指示 <see cref="T:System.Data.Odbc.OdbcDataReader" /> 是否包含一行还是多行。</span><span class="sxs-lookup"><span data-stu-id="bb1be-419">Gets a value that indicates whether the <see cref="T:System.Data.Odbc.OdbcDataReader" /> contains one or more rows.</span></span></summary>
        <value><span data-ttu-id="bb1be-420">如果 <see cref="T:System.Data.Odbc.OdbcDataReader" /> 包含一行或多行，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="bb1be-420"><see langword="true" /> if the <see cref="T:System.Data.Odbc.OdbcDataReader" /> contains one or more rows; otherwise <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="bb1be-421">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="bb1be-421">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsClosed">
      <MemberSignature Language="C#" Value="public override bool IsClosed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsClosed" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcDataReader.IsClosed" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsClosed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsClosed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsClosed : bool" Usage="System.Data.Odbc.OdbcDataReader.IsClosed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb1be-422">指示 <see cref="T:System.Data.Odbc.OdbcDataReader" /> 是否关闭。</span><span class="sxs-lookup"><span data-stu-id="bb1be-422">Indicates whether the <see cref="T:System.Data.Odbc.OdbcDataReader" /> is closed.</span></span></summary>
        <value><span data-ttu-id="bb1be-423">如果 <see cref="T:System.Data.Odbc.OdbcDataReader" /> 已关闭，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="bb1be-423"><see langword="true" /> if the <see cref="T:System.Data.Odbc.OdbcDataReader" /> is closed; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb1be-424"><xref:System.Data.Odbc.OdbcDataReader.IsClosed%2A>和<xref:System.Data.Odbc.OdbcDataReader.RecordsAffected%2A>是在关闭后可调用的<xref:System.Data.Odbc.OdbcDataReader>唯一属性。</span><span class="sxs-lookup"><span data-stu-id="bb1be-424"><xref:System.Data.Odbc.OdbcDataReader.IsClosed%2A> and <xref:System.Data.Odbc.OdbcDataReader.RecordsAffected%2A> are the only properties that you can call after the <xref:System.Data.Odbc.OdbcDataReader> is closed.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="bb1be-425">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="bb1be-425">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsDBNull">
      <MemberSignature Language="C#" Value="public override bool IsDBNull (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsDBNull(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.IsDBNull(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsDBNull (i As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsDBNull(int i);" />
      <MemberSignature Language="F#" Value="override this.IsDBNull : int -&gt; bool" Usage="odbcDataReader.IsDBNull i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="bb1be-426">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="bb1be-426">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="bb1be-427">获取一个值，该值指示列中是否包含不存在或丢失的值。</span><span class="sxs-lookup"><span data-stu-id="bb1be-427">Gets a value that indicates whether the column contains nonexistent or missing values.</span></span></summary>
        <returns><span data-ttu-id="bb1be-428">如果指定的列值与 <see cref="T:System.DBNull" /> 等效，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="bb1be-428"><see langword="true" /> if the specified column value is equivalent to <see cref="T:System.DBNull" />; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb1be-429">若要避免引发错误，请调用此方法，以在调用类型化 Get 方法之前（例如<xref:System.Data.Odbc.OdbcDataReader.GetByte%2A> <xref:System.Data.Odbc.OdbcDataReader.GetChar%2A>、等）查找空列值。</span><span class="sxs-lookup"><span data-stu-id="bb1be-429">To avoid raising an error, call this method to look for null column values before calling the typed Get methods (for example, <xref:System.Data.Odbc.OdbcDataReader.GetByte%2A>, <xref:System.Data.Odbc.OdbcDataReader.GetChar%2A>, and so on).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="bb1be-430">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="bb1be-430">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="bb1be-431">获取以本机格式表示的列的值。</span><span class="sxs-lookup"><span data-stu-id="bb1be-431">Gets the value of a column in its native format.</span></span></summary>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="bb1be-432">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="bb1be-432">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override object this[int i] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcDataReader.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides ReadOnly Property Item(i As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[int] { System::Object ^ get(int i); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : obj" Usage="System.Data.Odbc.OdbcDataReader.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="bb1be-433">列序号。</span><span class="sxs-lookup"><span data-stu-id="bb1be-433">The column ordinal.</span></span></param>
        <summary><span data-ttu-id="bb1be-434">在给定列序号的情况下，获取指定列的以本机格式表示的值。</span><span class="sxs-lookup"><span data-stu-id="bb1be-434">Gets the value of the specified column in its native format given the column ordinal.</span></span></summary>
        <value><span data-ttu-id="bb1be-435">指定列的以本机格式表示的值。</span><span class="sxs-lookup"><span data-stu-id="bb1be-435">The value of the specified column in its native format.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="bb1be-436">传递的索引位于 0 至 <see cref="P:System.Data.IDataRecord.FieldCount" /> 的范围之外。</span><span class="sxs-lookup"><span data-stu-id="bb1be-436">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount" />.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="bb1be-437">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="bb1be-437">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override object this[string value] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcDataReader.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides ReadOnly Property Item(value As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : obj" Usage="System.Data.Odbc.OdbcDataReader.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="bb1be-438">列名称。</span><span class="sxs-lookup"><span data-stu-id="bb1be-438">The column name.</span></span></param>
        <summary><span data-ttu-id="bb1be-439">在给定列名称的情况下，获取指定列的以本机格式表示的值。</span><span class="sxs-lookup"><span data-stu-id="bb1be-439">Gets the value of the specified column in its native format given the column name.</span></span></summary>
        <value><span data-ttu-id="bb1be-440">指定列的以本机格式表示的值。</span><span class="sxs-lookup"><span data-stu-id="bb1be-440">The value of the specified column in its native format.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb1be-441">首先执行区分大小写的查找。</span><span class="sxs-lookup"><span data-stu-id="bb1be-441">A case-sensitive lookup is performed first.</span></span> <span data-ttu-id="bb1be-442">如果失败，将进行第二个不区分大小写的搜索。</span><span class="sxs-lookup"><span data-stu-id="bb1be-442">If it fails, a second case-insensitive search is made.</span></span>  
  
 <span data-ttu-id="bb1be-443">此方法不区分假名宽度。</span><span class="sxs-lookup"><span data-stu-id="bb1be-443">This method is kana-width insensitive.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="bb1be-444">未找到具有指定名称的列。</span><span class="sxs-lookup"><span data-stu-id="bb1be-444">No column with the specified name was found.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="bb1be-445">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="bb1be-445">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="NextResult">
      <MemberSignature Language="C#" Value="public override bool NextResult ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool NextResult() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.NextResult" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function NextResult () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool NextResult();" />
      <MemberSignature Language="F#" Value="override this.NextResult : unit -&gt; bool" Usage="odbcDataReader.NextResult " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bb1be-446">读取批处理 SQL 语句的结果时，使 <see cref="T:System.Data.Odbc.OdbcDataReader" /> 前进到下一个结果。</span><span class="sxs-lookup"><span data-stu-id="bb1be-446">Advances the <see cref="T:System.Data.Odbc.OdbcDataReader" /> to the next result when reading the results of batch SQL statements.</span></span></summary>
        <returns><span data-ttu-id="bb1be-447">如果存在多个结果集，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="bb1be-447"><see langword="true" /> if there are more result sets; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb1be-448">用于处理可通过执行批处理 SQL 语句生成的多个结果。</span><span class="sxs-lookup"><span data-stu-id="bb1be-448">Used to process multiple results that can be generated by executing batch SQL statements.</span></span>  
  
 <span data-ttu-id="bb1be-449">默认情况下， <xref:System.Data.Odbc.OdbcDataReader>将定位在第一个结果上。</span><span class="sxs-lookup"><span data-stu-id="bb1be-449">By default, the <xref:System.Data.Odbc.OdbcDataReader> is positioned on the first result.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="bb1be-450">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="bb1be-450">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override bool Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.Read" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Read();" />
      <MemberSignature Language="F#" Value="override this.Read : unit -&gt; bool" Usage="odbcDataReader.Read " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bb1be-451">让 <see cref="T:System.Data.Odbc.OdbcDataReader" /> 前进到下一条记录。</span><span class="sxs-lookup"><span data-stu-id="bb1be-451">Advances the <see cref="T:System.Data.Odbc.OdbcDataReader" /> to the next record.</span></span></summary>
        <returns><span data-ttu-id="bb1be-452">如果存在更多行，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="bb1be-452"><see langword="true" /> if there are more rows; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb1be-453">的<xref:System.Data.Odbc.OdbcDataReader>默认位置位于第一条记录之前。</span><span class="sxs-lookup"><span data-stu-id="bb1be-453">The default position of the <xref:System.Data.Odbc.OdbcDataReader> is before the first record.</span></span> <span data-ttu-id="bb1be-454">因此，您必须调用<xref:System.Data.Odbc.OdbcDataReader.Read%2A>以开始访问任何数据。</span><span class="sxs-lookup"><span data-stu-id="bb1be-454">Therefore, you must call <xref:System.Data.Odbc.OdbcDataReader.Read%2A> to start accessing any data.</span></span>  
  
 <span data-ttu-id="bb1be-455">使用时，在调用<xref:System.Data.Odbc.OdbcDataReader.Close%2A>之前，关联<xref:System.Data.Odbc.OdbcConnection>的忙于提供服务。 <xref:System.Data.Odbc.OdbcDataReader></span><span class="sxs-lookup"><span data-stu-id="bb1be-455">While the <xref:System.Data.Odbc.OdbcDataReader> is being used, the associated <xref:System.Data.Odbc.OdbcConnection> is busy serving it until you call <xref:System.Data.Odbc.OdbcDataReader.Close%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb1be-456">下面的示例创建一个<xref:System.Data.Odbc.OdbcConnection>、一个<xref:System.Data.Odbc.OdbcCommand>和一个<xref:System.Data.Odbc.OdbcDataReader>。</span><span class="sxs-lookup"><span data-stu-id="bb1be-456">The following example creates an <xref:System.Data.Odbc.OdbcConnection>, an <xref:System.Data.Odbc.OdbcCommand>, and an <xref:System.Data.Odbc.OdbcDataReader>.</span></span> <span data-ttu-id="bb1be-457">该示例将读取数据，并将其写出到控制台。</span><span class="sxs-lookup"><span data-stu-id="bb1be-457">The example reads through the data, writing it out to the console.</span></span> <span data-ttu-id="bb1be-458">最后，该示例关闭<xref:System.Data.Odbc.OdbcDataReader>， <xref:System.Data.Odbc.OdbcConnection>然后关闭。</span><span class="sxs-lookup"><span data-stu-id="bb1be-458">Finally, the example closes the <xref:System.Data.Odbc.OdbcDataReader>, and then the <xref:System.Data.Odbc.OdbcConnection>.</span></span>  
  
 [!code-csharp[Classic WebData IDataReader.Read Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData IDataReader.Read Example/CS/source.cs#1)]
 [!code-vb[Classic WebData IDataReader.Read Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData IDataReader.Read Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="bb1be-459">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="bb1be-459">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RecordsAffected">
      <MemberSignature Language="C#" Value="public override int RecordsAffected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RecordsAffected" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcDataReader.RecordsAffected" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property RecordsAffected As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int RecordsAffected { int get(); };" />
      <MemberSignature Language="F#" Value="member this.RecordsAffected : int" Usage="System.Data.Odbc.OdbcDataReader.RecordsAffected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb1be-460">通过执行 SQL 语句获取更改、插入或删除的行数。</span><span class="sxs-lookup"><span data-stu-id="bb1be-460">Gets the number of rows changed, inserted, or deleted by execution of the SQL statement.</span></span></summary>
        <value><span data-ttu-id="bb1be-461">更改、插入或删除的行数。</span><span class="sxs-lookup"><span data-stu-id="bb1be-461">The number of rows changed, inserted, or deleted.</span></span> <span data-ttu-id="bb1be-462">对于 SELECT 语句为 -1；如果没影响任何行或该语句失败，则为 0。</span><span class="sxs-lookup"><span data-stu-id="bb1be-462">-1 for SELECT statements; 0 if no rows were affected, or the statement failed.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb1be-463">在<xref:System.Data.Odbc.OdbcDataReader.RecordsAffected%2A>读取所有行并<xref:System.Data.Odbc.OdbcDataReader>关闭之前，不会设置属性。</span><span class="sxs-lookup"><span data-stu-id="bb1be-463">The <xref:System.Data.Odbc.OdbcDataReader.RecordsAffected%2A> property is not set until all rows are read and you close the <xref:System.Data.Odbc.OdbcDataReader>.</span></span>  
  
 <span data-ttu-id="bb1be-464">此属性的值为累积值。</span><span class="sxs-lookup"><span data-stu-id="bb1be-464">The value of this property is cumulative.</span></span> <span data-ttu-id="bb1be-465">例如，如果<xref:System.Data.Odbc.OdbcDataReader.RecordsAffected%2A>将两个记录插入批处理模式，则的值将为2。</span><span class="sxs-lookup"><span data-stu-id="bb1be-465">For example, if two records are inserted in batch mode, the value of <xref:System.Data.Odbc.OdbcDataReader.RecordsAffected%2A> will be 2.</span></span>  
  
 <span data-ttu-id="bb1be-466"><xref:System.Data.Odbc.OdbcDataReader.IsClosed%2A>和<xref:System.Data.Odbc.OdbcDataReader.RecordsAffected%2A>是在关闭后可调用的<xref:System.Data.Odbc.OdbcDataReader>唯一属性。</span><span class="sxs-lookup"><span data-stu-id="bb1be-466"><xref:System.Data.Odbc.OdbcDataReader.IsClosed%2A> and <xref:System.Data.Odbc.OdbcDataReader.RecordsAffected%2A> are the only properties that you can call after the <xref:System.Data.Odbc.OdbcDataReader> is closed.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="bb1be-467">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="bb1be-467">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bb1be-468">返回循环访问集合的枚举数。</span><span class="sxs-lookup"><span data-stu-id="bb1be-468">Returns an enumerator that iterates through a collection.</span></span></summary>
        <returns><span data-ttu-id="bb1be-469">一个可用于循环访问集合的 <see cref="T:System.Collections.IEnumerator" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="bb1be-469">An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bb1be-470">释放 <see cref="T:System.Data.Odbc.OdbcDataReader" /> 类的当前实例所使用的所有资源。</span><span class="sxs-lookup"><span data-stu-id="bb1be-470">Releases all resources used by the current instance of the <see cref="T:System.Data.Odbc.OdbcDataReader" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>
