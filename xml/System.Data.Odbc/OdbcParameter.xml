<Type Name="OdbcParameter" FullName="System.Data.Odbc.OdbcParameter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0ecaa02dc8754496668938db83ca98b7f4e3ec22" /><Meta Name="ms.sourcegitcommit" Value="1bb00d2f4343e73ae8d58668f02297a3cf10a4c1" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="06/15/2019" /><Meta Name="ms.locfileid" Value="63891710" /></Metadata><TypeSignature Language="C#" Value="public sealed class OdbcParameter : System.Data.Common.DbParameter, ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OdbcParameter extends System.Data.Common.DbParameter implements class System.Data.IDataParameter, class System.Data.IDbDataParameter, class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Data.Odbc.OdbcParameter" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OdbcParameter&#xA;Inherits DbParameter&#xA;Implements ICloneable" />
  <TypeSignature Language="C++ CLI" Value="public ref class OdbcParameter sealed : System::Data::Common::DbParameter, ICloneable" />
  <TypeSignature Language="F#" Value="type OdbcParameter = class&#xA;    inherit DbParameter&#xA;    interface ICloneable&#xA;    interface IDbDataParameter&#xA;    interface IDataParameter" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Odbc</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbParameter</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-1.1">System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.IDataParameter</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Data.IDbDataParameter</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Data.Odbc.OdbcParameter/OdbcParameterConverter))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Data.Odbc.OdbcParameterConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="68c8e-101">表示 <see cref="T:System.Data.Odbc.OdbcCommand" /> 的参数，还可以表示它到 <see cref="T:System.Data.DataColumn" /> 的映射。</span><span class="sxs-lookup"><span data-stu-id="68c8e-101">Represents a parameter to an <see cref="T:System.Data.Odbc.OdbcCommand" /> and optionally, its mapping to a <see cref="T:System.Data.DataColumn" />.</span></span> <span data-ttu-id="68c8e-102">此类不能被继承。</span><span class="sxs-lookup"><span data-stu-id="68c8e-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68c8e-103">参数名称不区分大小写。</span><span class="sxs-lookup"><span data-stu-id="68c8e-103">Parameter names are not case sensitive.</span></span>  
  
 <span data-ttu-id="68c8e-104">在查询时使用 Oracle (MSDAORA) 和 ODBC.NET Framework 数据提供程序的 Microsoft OLE DB 访问接口的 Oracle 数据库，使用`LIKE`子句对查询中固定长度的字段的值可能不会返回所有预期的匹配项。</span><span class="sxs-lookup"><span data-stu-id="68c8e-104">When querying an Oracle database using the Microsoft OLE DB Provider for Oracle (MSDAORA) and the ODBC .NET Framework Data Provider, using the `LIKE` clause to query values in fixed-length fields might not return all expected matches.</span></span> <span data-ttu-id="68c8e-105">其原因在于当 Oracle 匹配中的固定长度字段的值时`LIKE`子句，它与匹配的字符串，包括任何填充尾随空格的整个长度。</span><span class="sxs-lookup"><span data-stu-id="68c8e-105">The reason is that when Oracle matches values for fixed-length fields in a `LIKE` clause, it matches the entire length of the string, including any padding trailing spaces.</span></span> <span data-ttu-id="68c8e-106">例如，如果表中的 Oracle 数据库包含一个名为"Field1"定义为字段`char(3)`，然后输入值"a"到表中，以下代码行不会返回行。</span><span class="sxs-lookup"><span data-stu-id="68c8e-106">For example, if a table in an Oracle database contains a field named "Field1" that is defined as `char(3)`, and you enter the value "a" into a row of that table, the following code will not return the row.</span></span>  
  
```vb  
Dim queryString As String = "SELECT * FROM Table1 WHERE Field1 LIKE ?"  
Dim command As OleDbCommand = New OleDbCommand(queryString, connection)  
command.Parameters.Add("@p1", OleDbType.Char, 3).Value = "a"  
Dim reader As OleDbDataReader = command.ExecuteReader()  
```  
  
```csharp  
string queryString = "SELECT * FROM Table1 WHERE Field1 LIKE ?";  
OleDbCommand command = new OleDbCommand(queryString, connection);  
command.Parameters.Add("@p1", OleDbType.Char, 3).Value = "a";  
OleDbDataReader reader = command.ExecuteReader();  
```  
  
 <span data-ttu-id="68c8e-107">这是因为 Oracle 将列值存储为"a"(填充"a"使用尾随空格，以达到固定的字段长度 3)，其中 Oracle 不会视为"a"的参数值的匹配项的情况下`LIKE`比较的固定长度的字段。</span><span class="sxs-lookup"><span data-stu-id="68c8e-107">This is because Oracle stores the column value as "a  " (padding "a", with trailing spaces, to the fixed field length of 3), which Oracle does not treat as a match for the parameter value of "a" in the case of a `LIKE` comparison of fixed-length fields.</span></span>  
  
 <span data-ttu-id="68c8e-108">若要解决此问题，请将百分比 （"%"） 通配符字符追加到参数值 (`"a%"`)，或使用 SQL`=`比较相反。</span><span class="sxs-lookup"><span data-stu-id="68c8e-108">To resolve this problem, append a percentage ("%") wildcard character to the parameter value (`"a%"`), or use an SQL `=` comparison instead.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68c8e-109">下面的示例创建的多个实例<xref:System.Data.Odbc.OdbcParameter>通过<xref:System.Data.Odbc.OdbcParameterCollection>内<xref:System.Data.Odbc.OdbcDataAdapter>。</span><span class="sxs-lookup"><span data-stu-id="68c8e-109">The following example creates multiple instances of <xref:System.Data.Odbc.OdbcParameter> through the <xref:System.Data.Odbc.OdbcParameterCollection> within the <xref:System.Data.Odbc.OdbcDataAdapter>.</span></span> <span data-ttu-id="68c8e-110">这些参数用于从数据源选择数据并在其中放置数据<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="68c8e-110">These parameters are used to select data from the data source and place the data in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="68c8e-111">此示例假定<xref:System.Data.DataSet>和一个<xref:System.Data.Odbc.OdbcDataAdapter>已创建使用适当的架构、 命令和连接。</span><span class="sxs-lookup"><span data-stu-id="68c8e-111">This example assumes that a <xref:System.Data.DataSet> and an <xref:System.Data.Odbc.OdbcDataAdapter> have already been created by using the appropriate schema, commands, and connection.</span></span>  
  
 [!code-csharp[Classic WebData OdbcParameter#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OdbcParameter/CS/source.cs#1)]
 [!code-vb[Classic WebData OdbcParameter#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OdbcParameter/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md"><span data-ttu-id="68c8e-112">使用命令</span><span class="sxs-lookup"><span data-stu-id="68c8e-112">Working with Commands</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="68c8e-113">初始化 <see cref="T:System.Data.Odbc.OdbcParameter" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="68c8e-113">Initializes a new instance of the <see cref="T:System.Data.Odbc.OdbcParameter" /> class.</span></span></summary>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md"><span data-ttu-id="68c8e-114">使用命令</span><span class="sxs-lookup"><span data-stu-id="68c8e-114">Working with Commands</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OdbcParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcParameter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OdbcParameter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="68c8e-115">初始化 <see cref="T:System.Data.Odbc.OdbcParameter" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="68c8e-115">Initializes a new instance of the <see cref="T:System.Data.Odbc.OdbcParameter" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68c8e-116">基构造函数初始化为其默认值的所有字段。</span><span class="sxs-lookup"><span data-stu-id="68c8e-116">The base constructor initializes all fields to their default values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68c8e-117">下面的示例创建<xref:System.Data.Odbc.OdbcParameter>和设置的某些属性。</span><span class="sxs-lookup"><span data-stu-id="68c8e-117">The following example creates an <xref:System.Data.Odbc.OdbcParameter> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData OdbcParameter.OdbcParameter#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OdbcParameter.OdbcParameter/CS/source.cs#1)]
 [!code-vb[Classic WebData OdbcParameter.OdbcParameter#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OdbcParameter.OdbcParameter/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md"><span data-ttu-id="68c8e-118">使用命令</span><span class="sxs-lookup"><span data-stu-id="68c8e-118">Working with Commands</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OdbcParameter (string name, System.Data.Odbc.OdbcType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.Data.Odbc.OdbcType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcParameter.#ctor(System.String,System.Data.Odbc.OdbcType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, type As OdbcType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OdbcParameter(System::String ^ name, System::Data::Odbc::OdbcType type);" />
      <MemberSignature Language="F#" Value="new System.Data.Odbc.OdbcParameter : string * System.Data.Odbc.OdbcType -&gt; System.Data.Odbc.OdbcParameter" Usage="new System.Data.Odbc.OdbcParameter (name, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.Data.Odbc.OdbcType" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="68c8e-119">参数的名称。</span><span class="sxs-lookup"><span data-stu-id="68c8e-119">The name of the parameter.</span></span></param>
        <param name="type"><span data-ttu-id="68c8e-120"><see cref="T:System.Data.Odbc.OdbcType" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="68c8e-120">One of the <see cref="T:System.Data.Odbc.OdbcType" /> values.</span></span></param>
        <summary><span data-ttu-id="68c8e-121">初始化使用参数名称和数据类型的 <see cref="T:System.Data.Odbc.OdbcParameter" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="68c8e-121">Initializes a new instance of the <see cref="T:System.Data.Odbc.OdbcParameter" /> class that uses the parameter name and data type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="68c8e-122">下面的示例创建<xref:System.Data.Odbc.OdbcParameter>和设置的某些属性。</span><span class="sxs-lookup"><span data-stu-id="68c8e-122">The following example creates an <xref:System.Data.Odbc.OdbcParameter> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData OdbcParameter.OdbcParameter1#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OdbcParameter.OdbcParameter1/CS/source.cs#1)]
 [!code-vb[Classic WebData OdbcParameter.OdbcParameter1#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OdbcParameter.OdbcParameter1/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="68c8e-123">参数 <paramref name="type" /> 中提供的值不是有效的后端数据类型。</span><span class="sxs-lookup"><span data-stu-id="68c8e-123">The value supplied in the <paramref name="type" /> parameter is an invalid back-end data type.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md"><span data-ttu-id="68c8e-124">使用命令</span><span class="sxs-lookup"><span data-stu-id="68c8e-124">Working with Commands</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OdbcParameter (string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcParameter.#ctor(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OdbcParameter(System::String ^ name, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="new System.Data.Odbc.OdbcParameter : string * obj -&gt; System.Data.Odbc.OdbcParameter" Usage="new System.Data.Odbc.OdbcParameter (name, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="68c8e-125">参数的名称。</span><span class="sxs-lookup"><span data-stu-id="68c8e-125">The name of the parameter.</span></span></param>
        <param name="value"><span data-ttu-id="68c8e-126"><see cref="T:System.Data.Odbc.OdbcParameter" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="68c8e-126">An <see cref="T:System.Data.Odbc.OdbcParameter" /> object.</span></span></param>
        <summary><span data-ttu-id="68c8e-127">初始化使用参数名称和 <see cref="T:System.Data.Odbc.OdbcParameter" /> 对象的 <see cref="T:System.Data.Odbc.OdbcParameter" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="68c8e-127">Initializes a new instance of the <see cref="T:System.Data.Odbc.OdbcParameter" /> class that uses the parameter name and an <see cref="T:System.Data.Odbc.OdbcParameter" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68c8e-128">使用此重载时要格外小心<xref:System.Data.Odbc.OdbcParameter>构造函数来指定整数参数值。</span><span class="sxs-lookup"><span data-stu-id="68c8e-128">Use caution when you are using this overload of the <xref:System.Data.Odbc.OdbcParameter> constructor to specify integer parameter values.</span></span> <span data-ttu-id="68c8e-129">因为此重载接受 <xref:System.Object> 类型的 `value`，所以当此值为零时，必须将整数值转换为 <xref:System.Object> 类型，如下面的 C# 示例所示。</span><span class="sxs-lookup"><span data-stu-id="68c8e-129">Because this overload takes a `value` of type <xref:System.Object>, you must convert the integral value to an <xref:System.Object> type when the value is zero, as the following C# example demonstrates.</span></span>  
  
```  
Parameter = new OdbcParameter("@pname", Convert.ToInt32(0));  
```  
  
 <span data-ttu-id="68c8e-130">如果不执行此转换，编译器将假定您尝试调用<xref:System.Data.Odbc.OdbcParameter.%23ctor%2A?displayProperty=nameWithType>构造函数重载。</span><span class="sxs-lookup"><span data-stu-id="68c8e-130">If you do not perform this conversion, the compiler assumes that you are trying to call the <xref:System.Data.Odbc.OdbcParameter.%23ctor%2A?displayProperty=nameWithType> constructor overload.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md"><span data-ttu-id="68c8e-131">使用命令</span><span class="sxs-lookup"><span data-stu-id="68c8e-131">Working with Commands</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OdbcParameter (string name, System.Data.Odbc.OdbcType type, int size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.Data.Odbc.OdbcType type, int32 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcParameter.#ctor(System.String,System.Data.Odbc.OdbcType,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, type As OdbcType, size As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OdbcParameter(System::String ^ name, System::Data::Odbc::OdbcType type, int size);" />
      <MemberSignature Language="F#" Value="new System.Data.Odbc.OdbcParameter : string * System.Data.Odbc.OdbcType * int -&gt; System.Data.Odbc.OdbcParameter" Usage="new System.Data.Odbc.OdbcParameter (name, type, size)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.Data.Odbc.OdbcType" />
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="68c8e-132">参数的名称。</span><span class="sxs-lookup"><span data-stu-id="68c8e-132">The name of the parameter.</span></span></param>
        <param name="type"><span data-ttu-id="68c8e-133"><see cref="T:System.Data.Odbc.OdbcType" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="68c8e-133">One of the <see cref="T:System.Data.Odbc.OdbcType" /> values.</span></span></param>
        <param name="size"><span data-ttu-id="68c8e-134">参数的长度。</span><span class="sxs-lookup"><span data-stu-id="68c8e-134">The length of the parameter.</span></span></param>
        <summary><span data-ttu-id="68c8e-135">初始化使用参数名称、数据类型和长度的 <see cref="T:System.Data.Odbc.OdbcParameter" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="68c8e-135">Initializes a new instance of the <see cref="T:System.Data.Odbc.OdbcParameter" /> class that uses the parameter name, data type, and length.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="68c8e-136">下面的示例创建<xref:System.Data.Odbc.OdbcParameter>和设置的某些属性。</span><span class="sxs-lookup"><span data-stu-id="68c8e-136">The following example creates an <xref:System.Data.Odbc.OdbcParameter> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData OdbcParameter.OdbcParameter2#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OdbcParameter.OdbcParameter2/CS/source.cs#1)]
 [!code-vb[Classic WebData OdbcParameter.OdbcParameter2#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OdbcParameter.OdbcParameter2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="68c8e-137">参数 <paramref name="type" /> 中提供的值不是有效的后端数据类型。</span><span class="sxs-lookup"><span data-stu-id="68c8e-137">The value supplied in the <paramref name="type" /> parameter is an invalid back-end data type.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md"><span data-ttu-id="68c8e-138">使用命令</span><span class="sxs-lookup"><span data-stu-id="68c8e-138">Working with Commands</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OdbcParameter (string name, System.Data.Odbc.OdbcType type, int size, string sourcecolumn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.Data.Odbc.OdbcType type, int32 size, string sourcecolumn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcParameter.#ctor(System.String,System.Data.Odbc.OdbcType,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, type As OdbcType, size As Integer, sourcecolumn As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OdbcParameter(System::String ^ name, System::Data::Odbc::OdbcType type, int size, System::String ^ sourcecolumn);" />
      <MemberSignature Language="F#" Value="new System.Data.Odbc.OdbcParameter : string * System.Data.Odbc.OdbcType * int * string -&gt; System.Data.Odbc.OdbcParameter" Usage="new System.Data.Odbc.OdbcParameter (name, type, size, sourcecolumn)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.Data.Odbc.OdbcType" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="sourcecolumn" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="68c8e-139">参数的名称。</span><span class="sxs-lookup"><span data-stu-id="68c8e-139">The name of the parameter.</span></span></param>
        <param name="type"><span data-ttu-id="68c8e-140"><see cref="T:System.Data.Odbc.OdbcType" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="68c8e-140">One of the <see cref="T:System.Data.Odbc.OdbcType" /> values.</span></span></param>
        <param name="size"><span data-ttu-id="68c8e-141">参数的长度。</span><span class="sxs-lookup"><span data-stu-id="68c8e-141">The length of the parameter.</span></span></param>
        <param name="sourcecolumn"><span data-ttu-id="68c8e-142">源列的名称。</span><span class="sxs-lookup"><span data-stu-id="68c8e-142">The name of the source column.</span></span></param>
        <summary><span data-ttu-id="68c8e-143">初始化使用参数名称、数据类型、长度和源列名称的 <see cref="T:System.Data.Odbc.OdbcParameter" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="68c8e-143">Initializes a new instance of the <see cref="T:System.Data.Odbc.OdbcParameter" /> class that uses the parameter name, data type, length, and source column name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="68c8e-144">下面的示例创建<xref:System.Data.Odbc.OdbcParameter>和设置的某些属性。</span><span class="sxs-lookup"><span data-stu-id="68c8e-144">The following example creates an <xref:System.Data.Odbc.OdbcParameter> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData OdbcParameter.OdbcParameter3#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OdbcParameter.OdbcParameter3/CS/source.cs#1)]
 [!code-vb[Classic WebData OdbcParameter.OdbcParameter3#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OdbcParameter.OdbcParameter3/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="68c8e-145">参数 <paramref name="type" /> 中提供的值不是有效的后端数据类型。</span><span class="sxs-lookup"><span data-stu-id="68c8e-145">The value supplied in the <paramref name="type" /> parameter is an invalid back-end data type.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md"><span data-ttu-id="68c8e-146">使用命令</span><span class="sxs-lookup"><span data-stu-id="68c8e-146">Working with Commands</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OdbcParameter (string parameterName, System.Data.Odbc.OdbcType odbcType, int size, System.Data.ParameterDirection parameterDirection, bool isNullable, byte precision, byte scale, string srcColumn, System.Data.DataRowVersion srcVersion, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string parameterName, valuetype System.Data.Odbc.OdbcType odbcType, int32 size, valuetype System.Data.ParameterDirection parameterDirection, bool isNullable, unsigned int8 precision, unsigned int8 scale, string srcColumn, valuetype System.Data.DataRowVersion srcVersion, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcParameter.#ctor(System.String,System.Data.Odbc.OdbcType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OdbcParameter(System::String ^ parameterName, System::Data::Odbc::OdbcType odbcType, int size, System::Data::ParameterDirection parameterDirection, bool isNullable, System::Byte precision, System::Byte scale, System::String ^ srcColumn, System::Data::DataRowVersion srcVersion, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="new System.Data.Odbc.OdbcParameter : string * System.Data.Odbc.OdbcType * int * System.Data.ParameterDirection * bool * byte * byte * string * System.Data.DataRowVersion * obj -&gt; System.Data.Odbc.OdbcParameter" Usage="new System.Data.Odbc.OdbcParameter (parameterName, odbcType, size, parameterDirection, isNullable, precision, scale, srcColumn, srcVersion, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netcore-2.1;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0;dotnet-plat-ext-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
        <Parameter Name="odbcType" Type="System.Data.Odbc.OdbcType" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="parameterDirection" Type="System.Data.ParameterDirection" />
        <Parameter Name="isNullable" Type="System.Boolean" />
        <Parameter Name="precision" Type="System.Byte" />
        <Parameter Name="scale" Type="System.Byte" />
        <Parameter Name="srcColumn" Type="System.String" />
        <Parameter Name="srcVersion" Type="System.Data.DataRowVersion" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="parameterName"><span data-ttu-id="68c8e-147">参数的名称。</span><span class="sxs-lookup"><span data-stu-id="68c8e-147">The name of the parameter.</span></span></param>
        <param name="odbcType"><span data-ttu-id="68c8e-148"><see cref="T:System.Data.Odbc.OdbcType" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="68c8e-148">One of the <see cref="T:System.Data.Odbc.OdbcType" /> values.</span></span></param>
        <param name="size"><span data-ttu-id="68c8e-149">参数的长度。</span><span class="sxs-lookup"><span data-stu-id="68c8e-149">The length of the parameter.</span></span></param>
        <param name="parameterDirection"><span data-ttu-id="68c8e-150"><see cref="T:System.Data.ParameterDirection" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="68c8e-150">One of the <see cref="T:System.Data.ParameterDirection" /> values.</span></span></param>
        <param name="isNullable"><span data-ttu-id="68c8e-151">如果字段的值可以为 null，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="68c8e-151"><see langword="true" /> if the value of the field can be null; otherwise <see langword="false" />.</span></span></param>
        <param name="precision"><span data-ttu-id="68c8e-152">所解析的 <see cref="P:System.Data.Odbc.OdbcParameter.Value" /> 的小数点左右两侧的总位数。</span><span class="sxs-lookup"><span data-stu-id="68c8e-152">The total number of digits to the left and right of the decimal point to which <see cref="P:System.Data.Odbc.OdbcParameter.Value" /> is resolved.</span></span></param>
        <param name="scale"><span data-ttu-id="68c8e-153">所解析的 <see cref="P:System.Data.Odbc.OdbcParameter.Value" /> 的总小数位数。</span><span class="sxs-lookup"><span data-stu-id="68c8e-153">The total number of decimal places to which <see cref="P:System.Data.Odbc.OdbcParameter.Value" /> is resolved.</span></span></param>
        <param name="srcColumn"><span data-ttu-id="68c8e-154">源列的名称。</span><span class="sxs-lookup"><span data-stu-id="68c8e-154">The name of the source column.</span></span></param>
        <param name="srcVersion"><span data-ttu-id="68c8e-155"><see cref="T:System.Data.DataRowVersion" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="68c8e-155">One of the <see cref="T:System.Data.DataRowVersion" /> values.</span></span></param>
        <param name="value"><span data-ttu-id="68c8e-156">作为 <see cref="T:System.Object" /> 的值的 <see cref="T:System.Data.Odbc.OdbcParameter" />。</span><span class="sxs-lookup"><span data-stu-id="68c8e-156">An <see cref="T:System.Object" /> that is the value of the <see cref="T:System.Data.Odbc.OdbcParameter" />.</span></span></param>
        <summary><span data-ttu-id="68c8e-157">初始化 <see cref="T:System.Data.Odbc.OdbcParameter" /> 类的新实例，该类使用参数名称、数据类型、长度、源列名、参数方向、数值精度和其他属性。</span><span class="sxs-lookup"><span data-stu-id="68c8e-157">Initializes a new instance of the <see cref="T:System.Data.Odbc.OdbcParameter" /> class that uses the parameter name, data type, length, source column name, parameter direction, numeric precision, and other properties.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="68c8e-158">下面的示例创建<xref:System.Data.Odbc.OdbcParameter>，并显示<xref:System.Data.Odbc.OdbcParameter.ParameterName%2A>。</span><span class="sxs-lookup"><span data-stu-id="68c8e-158">The following example creates an <xref:System.Data.Odbc.OdbcParameter> and displays the <xref:System.Data.Odbc.OdbcParameter.ParameterName%2A>.</span></span>  
  
 [!code-csharp[Classic WebData OdbcParameter.OdbcParameter4#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OdbcParameter.OdbcParameter4/CS/source.cs#1)]
 [!code-vb[Classic WebData OdbcParameter.OdbcParameter4#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OdbcParameter.OdbcParameter4/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="68c8e-159">参数 <paramref name="type" /> 中提供的值不是有效的后端数据类型。</span><span class="sxs-lookup"><span data-stu-id="68c8e-159">The value supplied in the <paramref name="type" /> parameter is an invalid back-end data type.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md"><span data-ttu-id="68c8e-160">使用命令</span><span class="sxs-lookup"><span data-stu-id="68c8e-160">Working with Commands</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OdbcParameter (string parameterName, System.Data.Odbc.OdbcType odbcType, int size, System.Data.ParameterDirection parameterDirection, byte precision, byte scale, string sourceColumn, System.Data.DataRowVersion sourceVersion, bool sourceColumnNullMapping, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string parameterName, valuetype System.Data.Odbc.OdbcType odbcType, int32 size, valuetype System.Data.ParameterDirection parameterDirection, unsigned int8 precision, unsigned int8 scale, string sourceColumn, valuetype System.Data.DataRowVersion sourceVersion, bool sourceColumnNullMapping, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcParameter.#ctor(System.String,System.Data.Odbc.OdbcType,System.Int32,System.Data.ParameterDirection,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Boolean,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OdbcParameter(System::String ^ parameterName, System::Data::Odbc::OdbcType odbcType, int size, System::Data::ParameterDirection parameterDirection, System::Byte precision, System::Byte scale, System::String ^ sourceColumn, System::Data::DataRowVersion sourceVersion, bool sourceColumnNullMapping, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="new System.Data.Odbc.OdbcParameter : string * System.Data.Odbc.OdbcType * int * System.Data.ParameterDirection * byte * byte * string * System.Data.DataRowVersion * bool * obj -&gt; System.Data.Odbc.OdbcParameter" Usage="new System.Data.Odbc.OdbcParameter (parameterName, odbcType, size, parameterDirection, precision, scale, sourceColumn, sourceVersion, sourceColumnNullMapping, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netframework-2.0;netframework-3.0;netframework-3.5;netcore-2.1;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0;dotnet-plat-ext-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="odbcType" Type="System.Data.Odbc.OdbcType" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="size" Type="System.Int32" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="parameterDirection" Type="System.Data.ParameterDirection" Index="3" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="precision" Type="System.Byte" Index="4" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="scale" Type="System.Byte" Index="5" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="sourceColumn" Type="System.String" Index="6" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="sourceVersion" Type="System.Data.DataRowVersion" Index="7" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="sourceColumnNullMapping" Type="System.Boolean" Index="8" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="value" Type="System.Object" Index="9" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="parameterName"><span data-ttu-id="68c8e-161">参数的名称。</span><span class="sxs-lookup"><span data-stu-id="68c8e-161">The name of the parameter.</span></span></param>
        <param name="odbcType"><span data-ttu-id="68c8e-162"><see cref="P:System.Data.Odbc.OdbcParameter.OdbcType" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="68c8e-162">One of the <see cref="P:System.Data.Odbc.OdbcParameter.OdbcType" /> values.</span></span></param>
        <param name="size"><span data-ttu-id="68c8e-163">参数的长度。</span><span class="sxs-lookup"><span data-stu-id="68c8e-163">The length of the parameter.</span></span></param>
        <param name="parameterDirection"><span data-ttu-id="68c8e-164"><see cref="T:System.Data.ParameterDirection" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="68c8e-164">One of the <see cref="T:System.Data.ParameterDirection" /> values.</span></span></param>
        <param name="precision"><span data-ttu-id="68c8e-165">所解析的 <see cref="P:System.Data.Odbc.OdbcParameter.Value" /> 的小数点左右两侧的总位数。</span><span class="sxs-lookup"><span data-stu-id="68c8e-165">The total number of digits to the left and right of the decimal point to which <see cref="P:System.Data.Odbc.OdbcParameter.Value" /> is resolved.</span></span></param>
        <param name="scale"><span data-ttu-id="68c8e-166">所解析的 <see cref="P:System.Data.Odbc.OdbcParameter.Value" /> 的总小数位数。</span><span class="sxs-lookup"><span data-stu-id="68c8e-166">The total number of decimal places to which <see cref="P:System.Data.Odbc.OdbcParameter.Value" /> is resolved.</span></span></param>
        <param name="sourceColumn"><span data-ttu-id="68c8e-167">源列的名称。</span><span class="sxs-lookup"><span data-stu-id="68c8e-167">The name of the source column.</span></span></param>
        <param name="sourceVersion"><span data-ttu-id="68c8e-168"><see cref="T:System.Data.DataRowVersion" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="68c8e-168">One of the <see cref="T:System.Data.DataRowVersion" /> values.</span></span></param>
        <param name="sourceColumnNullMapping"><span data-ttu-id="68c8e-169">如果对应的源列可为 null，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="68c8e-169"><see langword="true" /> if the corresponding source column is nullable; <see langword="false" /> if it is not.</span></span></param>
        <param name="value"><span data-ttu-id="68c8e-170">作为 <see cref="T:System.Object" /> 的值的 <see cref="T:System.Data.Odbc.OdbcParameter" />。</span><span class="sxs-lookup"><span data-stu-id="68c8e-170">An <see cref="T:System.Object" /> that is the value of the <see cref="T:System.Data.Odbc.OdbcParameter" />.</span></span></param>
        <summary><span data-ttu-id="68c8e-171">初始化 <see cref="T:System.Data.Odbc.OdbcParameter" /> 类的新实例，该类使用参数名称、数据类型、长度、源列名、参数方向、数值精度和其他属性。</span><span class="sxs-lookup"><span data-stu-id="68c8e-171">Initializes a new instance of the <see cref="T:System.Data.Odbc.OdbcParameter" /> class that uses the parameter name, data type, length, source column name, parameter direction, numeric precision, and other properties.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="68c8e-172">下面的示例创建<xref:System.Data.Odbc.OdbcParameter>，并显示<xref:System.Data.Odbc.OdbcParameter.ParameterName%2A>。</span><span class="sxs-lookup"><span data-stu-id="68c8e-172">The following example creates an <xref:System.Data.Odbc.OdbcParameter> and displays the <xref:System.Data.Odbc.OdbcParameter.ParameterName%2A>.</span></span>  
  
```vb  
Public Sub CreateOdbcParameter()  
  Dim parameter As New OdbcParameter("Description", OdbcType.VarChar, 11, ParameterDirection.Output, True, 0, 0, "Description", DataRowVersion.Current, False, "garden hose")  
  MessageBox.Show(parameter.ToString())  
End Sub  
```  
  
```csharp  
public void CreateOdbcParameter()   
{  
  OdbcParameter parameter = new OdbcParameter("Description",OdbcType.VarChar,  
              11,ParameterDirection.Output,true,0,0,"Description",  
              DataRowVersion.Current, false, "garden hose");  
  MessageBox.Show(parameter.ToString());  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="68c8e-173">参数 <paramref name="type" /> 中提供的值不是有效的后端数据类型。</span><span class="sxs-lookup"><span data-stu-id="68c8e-173">The value supplied in the <paramref name="type" /> parameter is an invalid back-end data type.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md"><span data-ttu-id="68c8e-174">使用命令</span><span class="sxs-lookup"><span data-stu-id="68c8e-174">Working with Commands</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DbType">
      <MemberSignature Language="C#" Value="public override System.Data.DbType DbType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.DbType DbType" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcParameter.DbType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property DbType As DbType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::DbType DbType { System::Data::DbType get(); void set(System::Data::DbType value); };" />
      <MemberSignature Language="F#" Value="member this.DbType : System.Data.DbType with get, set" Usage="System.Data.Odbc.OdbcParameter.DbType" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataParameter.DbType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DbType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="68c8e-175">获取或设置参数的 <see cref="T:System.Data.DbType" />。</span><span class="sxs-lookup"><span data-stu-id="68c8e-175">Gets or sets the <see cref="T:System.Data.DbType" /> of the parameter.</span></span></summary>
        <value><span data-ttu-id="68c8e-176"><see cref="T:System.Data.DbType" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="68c8e-176">One of the <see cref="T:System.Data.DbType" /> values.</span></span> <span data-ttu-id="68c8e-177">默认值为 <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="68c8e-177">The default is <see cref="T:System.String" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68c8e-178"><xref:System.Data.Odbc.OdbcParameter.OdbcType%2A>和<xref:System.Data.Odbc.OdbcParameter.DbType%2A>链接。</span><span class="sxs-lookup"><span data-stu-id="68c8e-178">The <xref:System.Data.Odbc.OdbcParameter.OdbcType%2A> and <xref:System.Data.Odbc.OdbcParameter.DbType%2A> are linked.</span></span> <span data-ttu-id="68c8e-179">因此，设置<xref:System.Data.Odbc.OdbcParameter.DbType%2A>更改<xref:System.Data.Odbc.OdbcParameter.OdbcType%2A>为支持<xref:System.Data.Odbc.OdbcParameter.OdbcType%2A>。</span><span class="sxs-lookup"><span data-stu-id="68c8e-179">Therefore, setting the <xref:System.Data.Odbc.OdbcParameter.DbType%2A> changes the <xref:System.Data.Odbc.OdbcParameter.OdbcType%2A> to a supporting <xref:System.Data.Odbc.OdbcParameter.OdbcType%2A>.</span></span>  
  
 <span data-ttu-id="68c8e-180">有关支持的数据类型的列表，请参阅相应<xref:System.Data.Odbc.OdbcParameter.OdbcType%2A>成员。</span><span class="sxs-lookup"><span data-stu-id="68c8e-180">For a list of the supported data types, see the appropriate <xref:System.Data.Odbc.OdbcParameter.OdbcType%2A> member.</span></span> <span data-ttu-id="68c8e-181">有关详细信息，请参阅[DataAdapter 参数](~/docs/framework/data/adonet/dataadapter-parameters.md)。</span><span class="sxs-lookup"><span data-stu-id="68c8e-181">For more information, see [DataAdapter Parameters](~/docs/framework/data/adonet/dataadapter-parameters.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="68c8e-182"><xref:System.Data.DbType.Object> 不受 ODBC Microsoft.NET Framework 数据提供程序。</span><span class="sxs-lookup"><span data-stu-id="68c8e-182"><xref:System.Data.DbType.Object> is not supported by the Microsoft .NET Framework Data Provider for ODBC.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68c8e-183">下面的示例调用**存储过程**带有三个参数使用 ODBC 托管提供程序。</span><span class="sxs-lookup"><span data-stu-id="68c8e-183">The following example calls a **Stored Procedure** with three parameters using the ODBC managed provider.</span></span>  
  
 [!code-csharp[Classic WebData OdbcParameter.DbType#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OdbcParameter.DbType/CS/source.cs#1)]
 [!code-vb[Classic WebData OdbcParameter.DbType#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OdbcParameter.DbType/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="68c8e-184">该属性未设置为有效的 <see cref="T:System.Data.DbType" />。</span><span class="sxs-lookup"><span data-stu-id="68c8e-184">The property was not set to a valid <see cref="T:System.Data.DbType" />.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md"><span data-ttu-id="68c8e-185">使用命令</span><span class="sxs-lookup"><span data-stu-id="68c8e-185">Working with Commands</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Direction">
      <MemberSignature Language="C#" Value="public override System.Data.ParameterDirection Direction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.ParameterDirection Direction" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcParameter.Direction" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Direction As ParameterDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::ParameterDirection Direction { System::Data::ParameterDirection get(); void set(System::Data::ParameterDirection value); };" />
      <MemberSignature Language="F#" Value="member this.Direction : System.Data.ParameterDirection with get, set" Usage="System.Data.Odbc.OdbcParameter.Direction" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataParameter.Direction</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.ParameterDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="68c8e-186">获取或设置一个值，该值指示参数是只可输入的参数、只可输出的参数、双向参数还是存储过程返回值参数。</span><span class="sxs-lookup"><span data-stu-id="68c8e-186">Gets or sets a value that indicates whether the parameter is input-only, output-only, bidirectional, or a stored procedure return value parameter.</span></span></summary>
        <value><span data-ttu-id="68c8e-187"><see cref="T:System.Data.ParameterDirection" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="68c8e-187">One of the <see cref="T:System.Data.ParameterDirection" /> values.</span></span> <span data-ttu-id="68c8e-188">默认值为 <see langword="Input" />。</span><span class="sxs-lookup"><span data-stu-id="68c8e-188">The default is <see langword="Input" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68c8e-189">如果<xref:System.Data.ParameterDirection>是`Output`，和关联的执行<xref:System.Data.Odbc.OdbcCommand>不会返回一个值，<xref:System.Data.Odbc.OdbcParameter>将包含 null 值。</span><span class="sxs-lookup"><span data-stu-id="68c8e-189">If the <xref:System.Data.ParameterDirection> is `Output`, and execution of the associated <xref:System.Data.Odbc.OdbcCommand> does not return a value, the <xref:System.Data.Odbc.OdbcParameter> will contain a null value.</span></span> <span data-ttu-id="68c8e-190">处理 null 值使用<xref:System.DBNull>类。</span><span class="sxs-lookup"><span data-stu-id="68c8e-190">Null values are handled using the <xref:System.DBNull> class.</span></span>  
  
 <span data-ttu-id="68c8e-191">`Output``InputOut`，并`ReturnValue`参数返回通过调用<xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A>直到您调用不能访问<xref:System.Data.Odbc.OdbcDataReader.Close%2A>或`Dispose`上<xref:System.Data.Odbc.OdbcDataReader>。</span><span class="sxs-lookup"><span data-stu-id="68c8e-191">`Output`, `InputOut`, and `ReturnValue` parameters returned by calling <xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A> cannot be accessed until you call <xref:System.Data.Odbc.OdbcDataReader.Close%2A> or `Dispose` on the <xref:System.Data.Odbc.OdbcDataReader>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68c8e-192">下面的示例创建<xref:System.Data.Odbc.OdbcParameter>和设置的某些属性。</span><span class="sxs-lookup"><span data-stu-id="68c8e-192">The following example creates an <xref:System.Data.Odbc.OdbcParameter> and sets some of its properties.</span></span>  
  
```vb  
Public Sub CreateMyProc(connection As OdbcConnection)  
  
   Dim command As OdbcCommand = connection.CreateCommand()  
   command.CommandText = "{ call MyProc(?,?,?) }"  
   command.Parameters.Add("", OdbcType.Int).Value = 1  
   command.Parameters.Add("", OdbcType.Decimal).Value = 2  
   command.Parameters.Add("", OdbcType.Decimal).Value = 3  
  
End Sub  
```  
  
```csharp  
public void CreateMyProc(OdbcConnection connection)   
{  
   OdbcCommand command = connection.CreateCommand();  
   command.CommandText = "{ call MyProc(?,?,?) }";  
   command.Parameters.Add("", OdbcType.Int).Value = 1;  
   command.Parameters.Add("", OdbcType.Decimal).Value = 2;  
   command.Parameters.Add("", OdbcType.Decimal).Value = 3;  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="68c8e-193">属性未设置为有效的 <see cref="T:System.Data.ParameterDirection" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="68c8e-193">The property was not set to one of the valid <see cref="T:System.Data.ParameterDirection" /> values.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md"><span data-ttu-id="68c8e-194">使用命令</span><span class="sxs-lookup"><span data-stu-id="68c8e-194">Working with Commands</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsNullable">
      <MemberSignature Language="C#" Value="public override bool IsNullable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNullable" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcParameter.IsNullable" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property IsNullable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsNullable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsNullable : bool with get, set" Usage="System.Data.Odbc.OdbcParameter.IsNullable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.DesignOnly(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="68c8e-195">获取或设置一个值，该值指示参数是否接受 null 值。</span><span class="sxs-lookup"><span data-stu-id="68c8e-195">Gets or sets a value that indicates whether the parameter accepts null values.</span></span></summary>
        <value><span data-ttu-id="68c8e-196">如果接受 null 值，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="68c8e-196"><see langword="true" /> if null values are accepted; otherwise <see langword="false" />.</span></span> <span data-ttu-id="68c8e-197">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="68c8e-197">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68c8e-198">处理 null 值使用<xref:System.DBNull>类。</span><span class="sxs-lookup"><span data-stu-id="68c8e-198">Null values are handled using the <xref:System.DBNull> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68c8e-199">下面的示例创建<xref:System.Data.Odbc.OdbcParameter>和设置的某些属性。</span><span class="sxs-lookup"><span data-stu-id="68c8e-199">The following example creates an <xref:System.Data.Odbc.OdbcParameter> and sets some of its properties.</span></span>  
  
```vb  
Public Sub CreateOdbcParameter()  
   Dim parameter As New OdbcParameter("Description", OdbcType.VarChar, 88)  
   parameter.IsNullable = True  
   parameter.Direction = ParameterDirection.Output  
End Sub  
```  
  
```csharp  
public void CreateOdbcParameter()   
{  
   OdbcParameter parameter = new OdbcParameter("Description", OdbcType.VarChar, 88);  
   parameter.IsNullable = true;  
   parameter.Direction = ParameterDirection.Output;  
}  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md"><span data-ttu-id="68c8e-200">使用命令</span><span class="sxs-lookup"><span data-stu-id="68c8e-200">Working with Commands</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OdbcType">
      <MemberSignature Language="C#" Value="public System.Data.Odbc.OdbcType OdbcType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.Odbc.OdbcType OdbcType" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcParameter.OdbcType" />
      <MemberSignature Language="VB.NET" Value="Public Property OdbcType As OdbcType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Odbc::OdbcType OdbcType { System::Data::Odbc::OdbcType get(); void set(System::Data::Odbc::OdbcType value); };" />
      <MemberSignature Language="F#" Value="member this.OdbcType : System.Data.Odbc.OdbcType with get, set" Usage="System.Data.Odbc.OdbcParameter.OdbcType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0">
          <AttributeName>System.Data.Common.DbProviderSpecificTypeProperty(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Odbc.OdbcType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="68c8e-201">获取或设置参数的 <see cref="T:System.Data.Odbc.OdbcType" />。</span><span class="sxs-lookup"><span data-stu-id="68c8e-201">Gets or sets the <see cref="T:System.Data.Odbc.OdbcType" /> of the parameter.</span></span></summary>
        <value><span data-ttu-id="68c8e-202"><see cref="T:System.Data.Odbc.OdbcType" /> 值，它是该参数的 <see cref="T:System.Data.Odbc.OdbcType" />。</span><span class="sxs-lookup"><span data-stu-id="68c8e-202">An <see cref="T:System.Data.Odbc.OdbcType" /> value that is the <see cref="T:System.Data.Odbc.OdbcType" /> of the parameter.</span></span> <span data-ttu-id="68c8e-203">默认值为 <see langword="Nchar" />。</span><span class="sxs-lookup"><span data-stu-id="68c8e-203">The default is <see langword="Nchar" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68c8e-204"><xref:System.Data.Odbc.OdbcParameter.OdbcType%2A>和<xref:System.Data.Odbc.OdbcParameter.DbType%2A>链接。</span><span class="sxs-lookup"><span data-stu-id="68c8e-204">The <xref:System.Data.Odbc.OdbcParameter.OdbcType%2A> and <xref:System.Data.Odbc.OdbcParameter.DbType%2A> are linked.</span></span> <span data-ttu-id="68c8e-205">因此，设置<xref:System.Data.Odbc.OdbcParameter.DbType%2A>更改<xref:System.Data.Odbc.OdbcParameter.OdbcType%2A>为支持<xref:System.Data.Odbc.OdbcType>。</span><span class="sxs-lookup"><span data-stu-id="68c8e-205">Therefore, setting the <xref:System.Data.Odbc.OdbcParameter.DbType%2A> changes the <xref:System.Data.Odbc.OdbcParameter.OdbcType%2A> to a supporting <xref:System.Data.Odbc.OdbcType>.</span></span>  
  
 <span data-ttu-id="68c8e-206">有关支持的数据类型的列表，请参阅相应<xref:System.Data.Odbc.OdbcType>成员。</span><span class="sxs-lookup"><span data-stu-id="68c8e-206">For a list of the supported data types, see the appropriate <xref:System.Data.Odbc.OdbcType> member.</span></span> <span data-ttu-id="68c8e-207">有关详细信息，请参阅[DataAdapter 参数](~/docs/framework/data/adonet/dataadapter-parameters.md)。</span><span class="sxs-lookup"><span data-stu-id="68c8e-207">For more information, see [DataAdapter Parameters](~/docs/framework/data/adonet/dataadapter-parameters.md).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md"><span data-ttu-id="68c8e-208">使用命令</span><span class="sxs-lookup"><span data-stu-id="68c8e-208">Working with Commands</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public int Offset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Offset" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcParameter.Offset" />
      <MemberSignature Language="VB.NET" Value="Public Property Offset As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Offset { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Offset : int with get, set" Usage="System.Data.Odbc.OdbcParameter.Offset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParameterName">
      <MemberSignature Language="C#" Value="public override string ParameterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ParameterName" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcParameter.ParameterName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ParameterName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ParameterName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ParameterName : string with get, set" Usage="System.Data.Odbc.OdbcParameter.ParameterName" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataParameter.ParameterName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="68c8e-209">获取或设置 <see cref="T:System.Data.Odbc.OdbcParameter" /> 的名称。</span><span class="sxs-lookup"><span data-stu-id="68c8e-209">Gets or sets the name of the <see cref="T:System.Data.Odbc.OdbcParameter" />.</span></span></summary>
        <value><span data-ttu-id="68c8e-210"><see cref="T:System.Data.Odbc.OdbcParameter" /> 的名称。</span><span class="sxs-lookup"><span data-stu-id="68c8e-210">The name of the <see cref="T:System.Data.Odbc.OdbcParameter" />.</span></span> <span data-ttu-id="68c8e-211">默认值为空字符串("")。</span><span class="sxs-lookup"><span data-stu-id="68c8e-211">The default is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68c8e-212">而不是命名参数，ODBC.NET 提供程序的命令文本语法中使用用问号 （？） 标记的位置参数。</span><span class="sxs-lookup"><span data-stu-id="68c8e-212">Instead of named parameters, the ODBC .NET Provider uses positional parameters that are marked with a question mark (?) in the syntax of the command text.</span></span> <span data-ttu-id="68c8e-213">中的参数对象<xref:System.Data.Odbc.OdbcParameterCollection>和实际参数接受由存储过程或参数化的 SQL 语句对应于每个其他基于依据的顺序<xref:System.Data.Odbc.OdbcParameter>对象插入到集合，而不是由参数名称。</span><span class="sxs-lookup"><span data-stu-id="68c8e-213">Parameter objects in the <xref:System.Data.Odbc.OdbcParameterCollection> and the actual parameters accepted by the stored procedure or parameterized SQL statement correspond to each other based on the order in which the <xref:System.Data.Odbc.OdbcParameter> objects are inserted into the collection instead of by parameter name.</span></span> <span data-ttu-id="68c8e-214">参数名称可以提供，但将参数对象绑定过程中忽略。</span><span class="sxs-lookup"><span data-stu-id="68c8e-214">Parameter names can be supplied, but will be ignored during parameter object binding.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68c8e-215">下面的示例假定数据源具有一个表名**MyTable**和存储的过程名为 MyProc 定义为：</span><span class="sxs-lookup"><span data-stu-id="68c8e-215">The following example assumes that the data source has a table name **MyTable** and a stored procedure named MyProc that is defined as:</span></span>  
  
```  
CREATE TABLE MyTable (col1 int, col2 smallmoney, col3 decimal)  
CREATE PROC MyProc (@p1 int, @p2 smallmoney, @p3 decimal) AS INSERT INTO MyTable VALUES (@p1, @p2, @p3)  
```  
  
 <span data-ttu-id="68c8e-216">以下示例创建参数，并调用 MyProc 存储过程：</span><span class="sxs-lookup"><span data-stu-id="68c8e-216">The following example creates parameters and calls the MyProc stored procedure:</span></span>  
  
```vb  
Public Sub CreateMyProc(connection As OdbcConnection)  
  
   Dim command As OdbcCommand = connection.CreateCommand()  
  
   command.CommandText = "{ call MyProc(?,?,?) }"  
   command.Parameters.Add("", OdbcType.Int).Value = 1  
   command.Parameters.Add("", OdbcType.Decimal).Value = 2  
   command.Parameters.Add("", OdbcType.Decimal).Value = 3  
  
End Sub  
```  
  
```csharp  
public void CreateMyProc(OdbcConnection connection)   
{  
   OdbcCommand command = myConnection.CreateCommand();  
  
   command.CommandText = "{ call MyProc(?,?,?) }";  
   command.Parameters.Add("", OdbcType.Int).Value = 1;  
   command.Parameters.Add("", OdbcType.Decimal).Value = 2;  
   command.Parameters.Add("", OdbcType.Decimal).Value = 3;  
}  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md"><span data-ttu-id="68c8e-217">使用命令</span><span class="sxs-lookup"><span data-stu-id="68c8e-217">Working with Commands</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Precision">
      <MemberSignature Language="C#" Value="public byte Precision { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8 Precision" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcParameter.Precision" />
      <MemberSignature Language="VB.NET" Value="Public Property Precision As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Byte Precision { System::Byte get(); void set(System::Byte value); };" />
      <MemberSignature Language="F#" Value="member this.Precision : byte with get, set" Usage="System.Data.Odbc.OdbcParameter.Precision" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataParameter.Precision</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="68c8e-218">获取或设置用来表示 <see cref="P:System.Data.Odbc.OdbcParameter.Value" /> 属性的最大位数。</span><span class="sxs-lookup"><span data-stu-id="68c8e-218">Gets or sets the number of digits used to represent the <see cref="P:System.Data.Odbc.OdbcParameter.Value" /> property.</span></span></summary>
        <value><span data-ttu-id="68c8e-219">用于表示 <see cref="P:System.Data.Odbc.OdbcParameter.Value" /> 属性的最大位数。</span><span class="sxs-lookup"><span data-stu-id="68c8e-219">The maximum number of digits used to represent the <see cref="P:System.Data.Odbc.OdbcParameter.Value" /> property.</span></span> <span data-ttu-id="68c8e-220">默认值为 0，它表示数据提供程序设置 <see cref="P:System.Data.Odbc.OdbcParameter.Value" /> 的精度。</span><span class="sxs-lookup"><span data-stu-id="68c8e-220">The default value is 0, which indicates that the data provider sets the precision for <see cref="P:System.Data.Odbc.OdbcParameter.Value" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68c8e-221">此属性设置为在数据库中的值以外的值取决于数据访问接口的实现，并可能会返回错误代码，截断或舍入数据。</span><span class="sxs-lookup"><span data-stu-id="68c8e-221">Setting this property to a value other than the value in the database depends on the implementation of the data provider and may return an error code, truncate, or round data.</span></span>  
  
 <span data-ttu-id="68c8e-222"><xref:System.Data.Odbc.OdbcParameter.Precision%2A>属性才影响参数其<xref:System.Data.Odbc.OdbcType>是`Decimal`或`Numeric`。</span><span class="sxs-lookup"><span data-stu-id="68c8e-222">The <xref:System.Data.Odbc.OdbcParameter.Precision%2A> property only affects parameters whose <xref:System.Data.Odbc.OdbcType> is `Decimal` or `Numeric`.</span></span> <span data-ttu-id="68c8e-223">对于其他数据类型，<xref:System.Data.Odbc.OdbcParameter.Precision%2A>将被忽略。</span><span class="sxs-lookup"><span data-stu-id="68c8e-223">For other data types, <xref:System.Data.Odbc.OdbcParameter.Precision%2A> is ignored.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="68c8e-224">不支持此属性将数据传递到数据库强制使用。</span><span class="sxs-lookup"><span data-stu-id="68c8e-224">Use of this property to coerce data passed to the database is not supported.</span></span> <span data-ttu-id="68c8e-225">若要舍入、 截断，或者将其传递到数据库之前强制数据，请使用<xref:System.Math>的一部分，该类`System`之前将值分配给该参数的命名空间`Value`属性。</span><span class="sxs-lookup"><span data-stu-id="68c8e-225">To round, truncate, or otherwise coerce data before passing it to the database, use the <xref:System.Math> class that is part of the `System` namespace prior to assigning a value to the parameter's `Value` property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68c8e-226">下面的示例创建<xref:System.Data.Odbc.OdbcParameter>和设置的某些属性。</span><span class="sxs-lookup"><span data-stu-id="68c8e-226">The following example creates an <xref:System.Data.Odbc.OdbcParameter> and sets some of its properties.</span></span>  
  
```vb  
Public Sub CreateOdbcParameter()  
    Dim parameter As New OdbcParameter("Price", OdbcType.Decimal)  
    parameter.Value = 3.1416  
    parameter.Precision = 8  
    parameter.Scale = 4  
End Sub   
```  
  
```csharp  
public void CreateOdbcParameter()   
 {  
    OdbcParameter parameter = new OdbcParameter("Price", OdbcType.Decimal);  
    parameter.Value = 3.1416;  
    parameter.Precision = 8;  
    parameter.Scale = 4;  
 }  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md"><span data-ttu-id="68c8e-227">使用命令</span><span class="sxs-lookup"><span data-stu-id="68c8e-227">Working with Commands</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ResetDbType">
      <MemberSignature Language="C#" Value="public override void ResetDbType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ResetDbType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcParameter.ResetDbType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ResetDbType ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ResetDbType();" />
      <MemberSignature Language="F#" Value="override this.ResetDbType : unit -&gt; unit" Usage="odbcParameter.ResetDbType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="68c8e-228">重置与此 <see cref="T:System.Data.Odbc.OdbcParameter" /> 关联的类型。</span><span class="sxs-lookup"><span data-stu-id="68c8e-228">Resets the type associated with this <see cref="T:System.Data.Odbc.OdbcParameter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68c8e-229">执行命令时包括参数值，代码可以显式设置参数的类型或参数可以推断其类型从其值。</span><span class="sxs-lookup"><span data-stu-id="68c8e-229">When executing a command that includes parameter values, code can either set the type of a parameter explicitly, or the parameter can infer its type from its value.</span></span> <span data-ttu-id="68c8e-230">调用此方法会重置参数，以便它可以再次推断出它的类型从传递的参数中的值。</span><span class="sxs-lookup"><span data-stu-id="68c8e-230">Calling this method resets the parameter so that it can again infer its type from the value passed in the parameter.</span></span> <span data-ttu-id="68c8e-231">调用此方法对两者的影响<xref:System.Data.Odbc.OdbcParameter.DbType%2A>并<xref:System.Data.Odbc.OdbcParameter.OdbcType%2A>的属性<xref:System.Data.Odbc.OdbcParameter>。</span><span class="sxs-lookup"><span data-stu-id="68c8e-231">Calling this method affects both the <xref:System.Data.Odbc.OdbcParameter.DbType%2A> and <xref:System.Data.Odbc.OdbcParameter.OdbcType%2A> properties of the <xref:System.Data.Odbc.OdbcParameter>.</span></span>  
  
 <span data-ttu-id="68c8e-232">调用<xref:System.Data.Odbc.OdbcParameter.ResetDbType%2A>重置<xref:System.Data.Odbc.OdbcParameter.DbType%2A>为其默认值 （字符串）。</span><span class="sxs-lookup"><span data-stu-id="68c8e-232">Calling <xref:System.Data.Odbc.OdbcParameter.ResetDbType%2A> resets <xref:System.Data.Odbc.OdbcParameter.DbType%2A> to its default value (String).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md"><span data-ttu-id="68c8e-233">使用命令</span><span class="sxs-lookup"><span data-stu-id="68c8e-233">Working with Commands</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ResetOdbcType">
      <MemberSignature Language="C#" Value="public void ResetOdbcType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetOdbcType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcParameter.ResetOdbcType" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetOdbcType ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetOdbcType();" />
      <MemberSignature Language="F#" Value="member this.ResetOdbcType : unit -&gt; unit" Usage="odbcParameter.ResetOdbcType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="68c8e-234">重置与此 <see cref="T:System.Data.Odbc.OdbcParameter" /> 关联的类型。</span><span class="sxs-lookup"><span data-stu-id="68c8e-234">Resets the type associated with this <see cref="T:System.Data.Odbc.OdbcParameter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68c8e-235">执行命令时包括参数值，代码可以显式设置参数的类型或参数可以推断其类型从其值。</span><span class="sxs-lookup"><span data-stu-id="68c8e-235">When executing a command that includes parameter values, code can either set the type of a parameter explicitly, or the parameter can infer its type from its value.</span></span> <span data-ttu-id="68c8e-236">调用此方法会重置参数，以便它可以再次推断出它的类型从传递的参数中的值。</span><span class="sxs-lookup"><span data-stu-id="68c8e-236">Calling this method resets the parameter so that it can again infer its type from the value passed in the parameter.</span></span> <span data-ttu-id="68c8e-237">调用此方法对两者的影响<xref:System.Data.Odbc.OdbcParameter.DbType%2A>并<xref:System.Data.Odbc.OdbcParameter.OdbcType%2A>的属性<xref:System.Data.Odbc.OdbcParameter>。</span><span class="sxs-lookup"><span data-stu-id="68c8e-237">Calling this method affects both the <xref:System.Data.Odbc.OdbcParameter.DbType%2A> and <xref:System.Data.Odbc.OdbcParameter.OdbcType%2A> properties of the <xref:System.Data.Odbc.OdbcParameter>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md"><span data-ttu-id="68c8e-238">使用命令</span><span class="sxs-lookup"><span data-stu-id="68c8e-238">Working with Commands</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Scale">
      <MemberSignature Language="C#" Value="public byte Scale { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8 Scale" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcParameter.Scale" />
      <MemberSignature Language="VB.NET" Value="Public Property Scale As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Byte Scale { System::Byte get(); void set(System::Byte value); };" />
      <MemberSignature Language="F#" Value="member this.Scale : byte with get, set" Usage="System.Data.Odbc.OdbcParameter.Scale" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataParameter.Scale</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="68c8e-239">获取或设置所解析的 <see cref="P:System.Data.Odbc.OdbcParameter.Value" /> 的小数位数。</span><span class="sxs-lookup"><span data-stu-id="68c8e-239">Gets or sets the number of decimal places to which <see cref="P:System.Data.Odbc.OdbcParameter.Value" /> is resolved.</span></span></summary>
        <value><span data-ttu-id="68c8e-240">所解析的 <see cref="P:System.Data.Odbc.OdbcParameter.Value" /> 的小数位数。</span><span class="sxs-lookup"><span data-stu-id="68c8e-240">The number of decimal places to which <see cref="P:System.Data.Odbc.OdbcParameter.Value" /> is resolved.</span></span> <span data-ttu-id="68c8e-241">默认值为 0。</span><span class="sxs-lookup"><span data-stu-id="68c8e-241">The default is 0.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68c8e-242"><xref:System.Data.Odbc.OdbcParameter.Scale%2A>属性仅用于小数和数值输入参数。</span><span class="sxs-lookup"><span data-stu-id="68c8e-242">The <xref:System.Data.Odbc.OdbcParameter.Scale%2A> property is used only for decimal and numeric input parameters.</span></span>  
  
 <span data-ttu-id="68c8e-243">为数据库中的值以外的值设置此属性的效果取决于数据访问接口的实现并可能返回错误代码，或截断或舍入的数据。</span><span class="sxs-lookup"><span data-stu-id="68c8e-243">The effect of setting this property to a value other than the value in the database depends on the implementation of the data provider and may return an error code, or truncate or round data.</span></span>  
  
 <span data-ttu-id="68c8e-244"><xref:System.Data.Odbc.OdbcParameter.Scale%2A>属性才影响参数其<xref:System.Data.Odbc.OdbcType>是`Decimal`或`Numeric`。</span><span class="sxs-lookup"><span data-stu-id="68c8e-244">The <xref:System.Data.Odbc.OdbcParameter.Scale%2A> property only affects parameters whose <xref:System.Data.Odbc.OdbcType> is `Decimal` or `Numeric`.</span></span> <span data-ttu-id="68c8e-245">对于其他数据类型，<xref:System.Data.Odbc.OdbcParameter.Scale%2A>将被忽略。</span><span class="sxs-lookup"><span data-stu-id="68c8e-245">For other data types, <xref:System.Data.Odbc.OdbcParameter.Scale%2A> is ignored.</span></span>  
  
 <span data-ttu-id="68c8e-246">使用 SQL Server 本机客户端时 10 （或更高版本） 参数类型为 Decimal、 Numeric、 VarNumeric、 为 DBDate 或 DBTimeStamp 的绑定，则必须手动指定适当的缩放值。</span><span class="sxs-lookup"><span data-stu-id="68c8e-246">When using SQL Server Native Client 10 (or later) to bind a parameter whose type is Decimal, Numeric, VarNumeric, DBDate, or DBTimeStamp, you must manually specify an appropriate Scale value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="68c8e-247">不支持此属性将数据传递到数据库强制使用。</span><span class="sxs-lookup"><span data-stu-id="68c8e-247">Use of this property to coerce data passed to the database is not supported.</span></span> <span data-ttu-id="68c8e-248">若要舍入、 截断，或者将其传递到数据库之前强制数据，请使用<xref:System.Math>的一部分，该类`System`之前将值分配给该参数的命名空间`Value`属性。</span><span class="sxs-lookup"><span data-stu-id="68c8e-248">To round, truncate, or otherwise coerce data before passing it to the database, use the <xref:System.Math> class that is part of the `System` namespace prior to assigning a value to the parameter's `Value` property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="68c8e-249">随.NET Framework 1.0 版的.NET framework 数据提供程序不会验证`scale`的<xref:System.Decimal>参数值。</span><span class="sxs-lookup"><span data-stu-id="68c8e-249">.NET Framework data providers that are included with the .NET Framework version 1.0 do not verify the `scale` of <xref:System.Decimal> parameter values.</span></span> <span data-ttu-id="68c8e-250">这会导致修改的数据源中插入的数据。</span><span class="sxs-lookup"><span data-stu-id="68c8e-250">This can cause modified data being inserted at the data source.</span></span> <span data-ttu-id="68c8e-251">如果使用.NET Framework 1.0 版，验证`scale`的`decimal`之前设置参数值的值。</span><span class="sxs-lookup"><span data-stu-id="68c8e-251">If you are using .NET Framework version 1.0, validate the `scale` of `decimal` values before setting the parameter value.</span></span> <span data-ttu-id="68c8e-252">使用.NET Framework 1.1 版或更高版本时`scale`值超出了`decimal`参数的小数位数可能仅会被截断规模，如果这是基础 ODBC 驱动程序的行为。</span><span class="sxs-lookup"><span data-stu-id="68c8e-252">When you use .NET Framework version 1.1 or later versions, `scale` values that exceed the `decimal` parameter scale might only be truncated in scale, if that is the behavior of the underlying ODBC driver.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68c8e-253">下面的示例创建<xref:System.Data.Odbc.OdbcParameter>和设置的某些属性。</span><span class="sxs-lookup"><span data-stu-id="68c8e-253">The following example creates an <xref:System.Data.Odbc.OdbcParameter> and sets some of its properties.</span></span>  
  
```vb  
Public Sub CreateOdbcParameter()  
    Dim parameter As New OdbcParameter("Price", OdbcType.Decimal)  
    parameter.Value = 3.1416  
    parameter.Precision = 8  
    parameter.Scale = 4  
End Sub   
```  
  
```csharp  
public void CreateOdbcParameter()   
 {  
    OdbcParameter parameter = new OdbcParameter("Price", OdbcType.Decimal);  
    parameter.Value = 3.1416;  
    parameter.Precision = 8;  
    parameter.Scale = 4;  
 }  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md"><span data-ttu-id="68c8e-254">使用命令</span><span class="sxs-lookup"><span data-stu-id="68c8e-254">Working with Commands</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public override int Size { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Size" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcParameter.Size" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Size As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Size { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Size : int with get, set" Usage="System.Data.Odbc.OdbcParameter.Size" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataParameter.Size</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="68c8e-255">获取或设置列内数据的最大大小。</span><span class="sxs-lookup"><span data-stu-id="68c8e-255">Gets or sets the maximum size of the data within the column.</span></span></summary>
        <value><span data-ttu-id="68c8e-256">列内数据的最大大小。</span><span class="sxs-lookup"><span data-stu-id="68c8e-256">The maximum size of the data within the column.</span></span> <span data-ttu-id="68c8e-257">默认值将根据参数值进行推断。</span><span class="sxs-lookup"><span data-stu-id="68c8e-257">The default value is inferred from the parameter value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68c8e-258"><xref:System.Data.Odbc.OdbcParameter.Size%2A>属性用于二进制和字符串类型。</span><span class="sxs-lookup"><span data-stu-id="68c8e-258">The <xref:System.Data.Odbc.OdbcParameter.Size%2A> property is used for binary and string types.</span></span>  
  
 <span data-ttu-id="68c8e-259">对于非字符串数据类型和 ANSI 字符串数据，<xref:System.Data.Odbc.OdbcParameter.Size%2A>属性引用的字节数。</span><span class="sxs-lookup"><span data-stu-id="68c8e-259">For nonstring data types and ANSI string data, the <xref:System.Data.Odbc.OdbcParameter.Size%2A> property refers to the number of bytes.</span></span> <span data-ttu-id="68c8e-260">对于 Unicode 字符串数据，<xref:System.Data.Odbc.OdbcParameter.Size%2A>指的是字符数。</span><span class="sxs-lookup"><span data-stu-id="68c8e-260">For Unicode string data, <xref:System.Data.Odbc.OdbcParameter.Size%2A> refers to the number of characters.</span></span> <span data-ttu-id="68c8e-261">字符串的计数不包括终止字符。</span><span class="sxs-lookup"><span data-stu-id="68c8e-261">The count for strings does not include the terminating character.</span></span>  
  
 <span data-ttu-id="68c8e-262">对于可变长度数据类型，`Size`描述的最大传输到服务器的数据量。</span><span class="sxs-lookup"><span data-stu-id="68c8e-262">For variable-length data types, `Size` describes the maximum amount of data to transmit to the server.</span></span> <span data-ttu-id="68c8e-263">例如，对于 Unicode 字符串值，`Size`无法用于限制发送到服务器的前 100 个字符的数据量。</span><span class="sxs-lookup"><span data-stu-id="68c8e-263">For example, for a Unicode string value, `Size` could be used to limit the amount of data sent to the server to the first one hundred characters.</span></span>  
  
 <span data-ttu-id="68c8e-264">必须为双向参数、 输出参数和返回值，设置的值`Size`。</span><span class="sxs-lookup"><span data-stu-id="68c8e-264">For bidirectional and output parameters, and return values, you must set the value of `Size`.</span></span> <span data-ttu-id="68c8e-265">这不是必需的输入参数，如果未显式设置时的值会从指定的参数的实际大小时推断执行参数化的语句。</span><span class="sxs-lookup"><span data-stu-id="68c8e-265">This is not required for input parameters, and if not explicitly set, the value of is inferred from the actual size of the specified parameter when a parameterized statement is executed.</span></span>  
  
 <span data-ttu-id="68c8e-266"><xref:System.Data.Common.DbParameter.DbType%2A>， <xref:System.Data.Odbc.OdbcParameter.OdbcType%2A>，并<xref:System.Data.Odbc.OdbcParameter.Size%2A>参数的属性，可以通过设置推断出<xref:System.Data.Odbc.OdbcParameter.Value%2A>。</span><span class="sxs-lookup"><span data-stu-id="68c8e-266">The <xref:System.Data.Common.DbParameter.DbType%2A>, <xref:System.Data.Odbc.OdbcParameter.OdbcType%2A>, and <xref:System.Data.Odbc.OdbcParameter.Size%2A> properties of a parameter can be inferred by setting <xref:System.Data.Odbc.OdbcParameter.Value%2A>.</span></span> <span data-ttu-id="68c8e-267">因此，不需要指定它们。</span><span class="sxs-lookup"><span data-stu-id="68c8e-267">Therefore, you are not required to specify them.</span></span> <span data-ttu-id="68c8e-268">但是，它们不会暴露在<xref:System.Data.Odbc.OdbcParameter>属性设置。</span><span class="sxs-lookup"><span data-stu-id="68c8e-268">However, they are not exposed in <xref:System.Data.Odbc.OdbcParameter> property settings.</span></span> <span data-ttu-id="68c8e-269">例如，如果已推断出参数的大小，`Size`语句执行后，不包含推断的值。</span><span class="sxs-lookup"><span data-stu-id="68c8e-269">For example, if the size of the parameter has been inferred, `Size` does not contain inferred value after statement execution.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="68c8e-270">有关`OdbcParameter`与<xref:System.Data.Odbc.OdbcParameter.Direction%2A>的`ParameterDirection.Output`， `ParameterDirection.InputOutput`，或`ParameterDirection.ReturnValue`，如果数据源返回的值的大小超过指定执行命令时，将引发异常`Size`的<xref:System.Data.Odbc.OdbcParameter>.</span><span class="sxs-lookup"><span data-stu-id="68c8e-270">For an `OdbcParameter` with a <xref:System.Data.Odbc.OdbcParameter.Direction%2A> of `ParameterDirection.Output`, `ParameterDirection.InputOutput`, or `ParameterDirection.ReturnValue`, an exception is thrown when the command is executed if the size of the value returned by the data source exceeds the specified `Size` of the <xref:System.Data.Odbc.OdbcParameter>.</span></span>  
  
 <span data-ttu-id="68c8e-271">对于固定长度的数据类型，值`Size`将被忽略。</span><span class="sxs-lookup"><span data-stu-id="68c8e-271">For fixed-length data types, the value of `Size` is ignored.</span></span> <span data-ttu-id="68c8e-272">它可以检索用于信息说明，并返回最大传输到服务器参数的值时，提供程序使用的字节数。</span><span class="sxs-lookup"><span data-stu-id="68c8e-272">It can be retrieved for informational purposes, and returns the maximum amount of bytes the provider uses when transmitting the value of the parameter to the server.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68c8e-273">下面的示例创建<xref:System.Data.Odbc.OdbcParameter>和设置的某些属性。</span><span class="sxs-lookup"><span data-stu-id="68c8e-273">The following example creates an <xref:System.Data.Odbc.OdbcParameter> and sets some of its properties.</span></span>  
  
```vb  
Public Sub CreateOdbcParameter()  
    Dim myValue As String = "12 foot scarf - multiple colors, one previous owner"  
    Dim parameter As New OdbcParameter("Description", OdbcType.VarChar)  
    parameter.Direction = ParameterDirection.Output  
    parameter.Size = myValue.Length  
    parameter.Value = myValue  
End Sub   
```  
  
```csharp  
public void CreateOdbcParameter()   
 {  
    string myValue = "12 foot scarf - multiple colors, one previous owner";  
    OdbcParameter parameter = new OdbcParameter("Description", OdbcType.VarChar);  
    parameter.Direction = ParameterDirection.Output;  
    parameter.Size = myValue.Length;  
    parameter.Value = myValue;  
 }  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md"><span data-ttu-id="68c8e-274">使用命令</span><span class="sxs-lookup"><span data-stu-id="68c8e-274">Working with Commands</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SourceColumn">
      <MemberSignature Language="C#" Value="public override string SourceColumn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SourceColumn" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcParameter.SourceColumn" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SourceColumn As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SourceColumn { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SourceColumn : string with get, set" Usage="System.Data.Odbc.OdbcParameter.SourceColumn" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataParameter.SourceColumn</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="68c8e-275">获取或设置源列的名称，该源列映射到 <see cref="T:System.Data.DataSet" /> 并用于加载或返回 <see cref="P:System.Data.Odbc.OdbcParameter.Value" />。</span><span class="sxs-lookup"><span data-stu-id="68c8e-275">Gets or sets the name of the source column mapped to the <see cref="T:System.Data.DataSet" /> and used for loading or returning the <see cref="P:System.Data.Odbc.OdbcParameter.Value" />.</span></span></summary>
        <value><span data-ttu-id="68c8e-276">将用于设置此参数值的源列的名称。</span><span class="sxs-lookup"><span data-stu-id="68c8e-276">The name of the source column that will be used to set the value of this parameter.</span></span> <span data-ttu-id="68c8e-277">默认值为空字符串("")。</span><span class="sxs-lookup"><span data-stu-id="68c8e-277">The default is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68c8e-278">当<xref:System.Data.Odbc.OdbcParameter.SourceColumn%2A>设置为非空字符串，参数的值从与列中检索的任何`SourceColumn`名称。</span><span class="sxs-lookup"><span data-stu-id="68c8e-278">When <xref:System.Data.Odbc.OdbcParameter.SourceColumn%2A> is set to anything other than an empty string, the value of the parameter is retrieved from the column with the `SourceColumn` name.</span></span> <span data-ttu-id="68c8e-279">如果<xref:System.Data.Odbc.OdbcParameter.Direction%2A>设置为`Input`，获取的值是<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="68c8e-279">If <xref:System.Data.Odbc.OdbcParameter.Direction%2A> is set to `Input`, the value is taken from the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="68c8e-280">如果`Direction`设置为`Output`，从数据源中获取的值。</span><span class="sxs-lookup"><span data-stu-id="68c8e-280">If `Direction` is set to `Output`, the value is taken from the data source.</span></span> <span data-ttu-id="68c8e-281">一个`Direction`的`InputOutput`是这两者的组合。</span><span class="sxs-lookup"><span data-stu-id="68c8e-281">A `Direction` of `InputOutput` is a combination of both.</span></span>  
  
 <span data-ttu-id="68c8e-282">有关如何使用详细信息<xref:System.Data.Odbc.OdbcParameter.SourceColumn%2A>属性，请参阅[DataAdapter 参数](~/docs/framework/data/adonet/dataadapter-parameters.md)并[使用 Dataadapter 更新数据源](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md)。</span><span class="sxs-lookup"><span data-stu-id="68c8e-282">For more information about how to use the <xref:System.Data.Odbc.OdbcParameter.SourceColumn%2A> property, see [DataAdapter Parameters](~/docs/framework/data/adonet/dataadapter-parameters.md) and [Updating Data Sources with DataAdapters](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68c8e-283">下面的示例创建<xref:System.Data.Odbc.OdbcParameter>和设置的某些属性。</span><span class="sxs-lookup"><span data-stu-id="68c8e-283">The following example creates an <xref:System.Data.Odbc.OdbcParameter> and sets some of its properties.</span></span>  
  
```vb  
Public Sub CreateOdbcParameter()  
    Dim parameter As New OdbcParameter("Description", OdbcType.VarChar, 88)  
    parameter.SourceColumn = "Description"  
End Sub   
```  
  
```csharp  
public void CreateOdbcParameter()   
 {  
    OdbcParameter parameter = new OdbcParameter("Description", OdbcType.VarChar, 88);  
    parameter.SourceColumn = "Description";  
 }  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md"><span data-ttu-id="68c8e-284">使用命令</span><span class="sxs-lookup"><span data-stu-id="68c8e-284">Working with Commands</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SourceColumnNullMapping">
      <MemberSignature Language="C#" Value="public override bool SourceColumnNullMapping { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SourceColumnNullMapping" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcParameter.SourceColumnNullMapping" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SourceColumnNullMapping As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SourceColumnNullMapping { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SourceColumnNullMapping : bool with get, set" Usage="System.Data.Odbc.OdbcParameter.SourceColumnNullMapping" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="68c8e-285">设置或获取一个值，该值指示源列是否可以为 null。</span><span class="sxs-lookup"><span data-stu-id="68c8e-285">Sets or gets a value which indicates whether the source column is nullable.</span></span> <span data-ttu-id="68c8e-286">这使 <see cref="T:System.Data.Common.DbCommandBuilder" /> 能够正确地为可为 null 的列生成 Update 语句。</span><span class="sxs-lookup"><span data-stu-id="68c8e-286">This lets <see cref="T:System.Data.Common.DbCommandBuilder" /> correctly generate Update statements for nullable columns.</span></span></summary>
        <value><span data-ttu-id="68c8e-287">如果源列可以为 null，则为 <see langword="true" />；如果不可以为 null，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="68c8e-287"><see langword="true" /> if the source column is nullable; <see langword="false" /> if it is not.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68c8e-288"><xref:System.Data.Odbc.OdbcParameter.SourceColumnNullMapping%2A> 由<xref:System.Data.Common.DbCommandBuilder>来正确处理为 null 的列时生成更新命令。</span><span class="sxs-lookup"><span data-stu-id="68c8e-288"><xref:System.Data.Odbc.OdbcParameter.SourceColumnNullMapping%2A> is used by the <xref:System.Data.Common.DbCommandBuilder> to correctly generate update commands when dealing with nullable columns.</span></span> <span data-ttu-id="68c8e-289">通常情况下，使用<xref:System.Data.Odbc.OdbcParameter.SourceColumnNullMapping%2A>继承的开发人员仅限于<xref:System.Data.Common.DbCommandBuilder>。</span><span class="sxs-lookup"><span data-stu-id="68c8e-289">Generally, use of <xref:System.Data.Odbc.OdbcParameter.SourceColumnNullMapping%2A> is limited to developers inheriting from <xref:System.Data.Common.DbCommandBuilder>.</span></span>  
  
 <span data-ttu-id="68c8e-290"><xref:System.Data.Common.DbCommandBuilder> 使用此属性来确定源列是否可以为 null，并将此属性设置为`true`是否可以为 null，和`false`如果不是。</span><span class="sxs-lookup"><span data-stu-id="68c8e-290"><xref:System.Data.Common.DbCommandBuilder> uses this property to determine whether the source column is nullable, and sets this property to `true` if it is nullable, and `false` if it is not.</span></span> <span data-ttu-id="68c8e-291">当<xref:System.Data.Common.DbCommandBuilder>是生成其 Update 语句，它将检查<xref:System.Data.Odbc.OdbcParameter.SourceColumnNullMapping%2A>为每个参数。</span><span class="sxs-lookup"><span data-stu-id="68c8e-291">When <xref:System.Data.Common.DbCommandBuilder> is generating its Update statement, it examines the <xref:System.Data.Odbc.OdbcParameter.SourceColumnNullMapping%2A> for each parameter.</span></span> <span data-ttu-id="68c8e-292">如果该属性是`true`，<xref:System.Data.Common.DbCommandBuilder>生成 WHERE 子句，如下例所示。</span><span class="sxs-lookup"><span data-stu-id="68c8e-292">If the property is `true`, <xref:System.Data.Common.DbCommandBuilder> generates a WHERE clauses like the following example.</span></span> <span data-ttu-id="68c8e-293">在此查询表达式中，"FieldName"表示的字段的名称：</span><span class="sxs-lookup"><span data-stu-id="68c8e-293">In this query expression, "FieldName" represents the name of the field:</span></span>  
  
```  
((@IsNull_FieldName = 1 AND FieldName IS NULL) OR   
  (FieldName = @Original_FieldName))  
```  
  
 <span data-ttu-id="68c8e-294">如果<xref:System.Data.Odbc.OdbcParameter.SourceColumnNullMapping%2A>为 false，该字段为<xref:System.Data.Common.DbCommandBuilder>生成以下 WHERE 子句：</span><span class="sxs-lookup"><span data-stu-id="68c8e-294">If <xref:System.Data.Odbc.OdbcParameter.SourceColumnNullMapping%2A> for the field is false, <xref:System.Data.Common.DbCommandBuilder> generates the following WHERE clause:</span></span>  
  
```  
FieldName = @OriginalFieldName  
```  
  
 <span data-ttu-id="68c8e-295">此外，@IsNull_FieldName如果源字段包含 null 值和 0，如果它不包含 1。</span><span class="sxs-lookup"><span data-stu-id="68c8e-295">In addition, @IsNull_FieldName contains 1 if the source field contains null, and 0 if it does not.</span></span> <span data-ttu-id="68c8e-296">此机制可以优化 SQL Server 中的性能，并提供的跨多个提供程序的通用代码。</span><span class="sxs-lookup"><span data-stu-id="68c8e-296">This mechanism allows for a performance optimization in SQL Server, and provides for common code that works across multiple providers.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md"><span data-ttu-id="68c8e-297">使用命令</span><span class="sxs-lookup"><span data-stu-id="68c8e-297">Working with Commands</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SourceVersion">
      <MemberSignature Language="C#" Value="public override System.Data.DataRowVersion SourceVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.DataRowVersion SourceVersion" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcParameter.SourceVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SourceVersion As DataRowVersion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::DataRowVersion SourceVersion { System::Data::DataRowVersion get(); void set(System::Data::DataRowVersion value); };" />
      <MemberSignature Language="F#" Value="member this.SourceVersion : System.Data.DataRowVersion with get, set" Usage="System.Data.Odbc.OdbcParameter.SourceVersion" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataParameter.SourceVersion</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataRowVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="68c8e-298">获取或设置在加载 <see cref="T:System.Data.DataRowVersion" /> 时使用的 <see cref="P:System.Data.Odbc.OdbcParameter.Value" />。</span><span class="sxs-lookup"><span data-stu-id="68c8e-298">Gets or sets the <see cref="T:System.Data.DataRowVersion" /> to use when you load <see cref="P:System.Data.Odbc.OdbcParameter.Value" />.</span></span></summary>
        <value><span data-ttu-id="68c8e-299"><see cref="T:System.Data.DataRowVersion" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="68c8e-299">One of the <see cref="T:System.Data.DataRowVersion" /> values.</span></span> <span data-ttu-id="68c8e-300">默认值为 Current。</span><span class="sxs-lookup"><span data-stu-id="68c8e-300">The default is Current.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68c8e-301">`SourceVersion`由<xref:System.Data.Odbc.OdbcDataAdapter.UpdateCommand%2A>期间<xref:System.Data.Common.DbDataAdapter.Update*>运算来确定是否将参数值设置为当前或原始。</span><span class="sxs-lookup"><span data-stu-id="68c8e-301">The `SourceVersion` is used by <xref:System.Data.Odbc.OdbcDataAdapter.UpdateCommand%2A> during an <xref:System.Data.Common.DbDataAdapter.Update*> operation to determine whether the parameter value is set to Current or Original.</span></span> <span data-ttu-id="68c8e-302">这样，要更新的主键。</span><span class="sxs-lookup"><span data-stu-id="68c8e-302">This allows primary keys to be updated.</span></span>  
  
 <span data-ttu-id="68c8e-303">此属性设置为的新版<xref:System.Data.DataRow>通过以下任一方法使用`Item`属性 (`DataRow`索引器)，或<xref:System.Data.DataRow.GetChildRows%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="68c8e-303">This property is set to the version of the <xref:System.Data.DataRow> used by either the `Item` property (`DataRow` indexer), or the <xref:System.Data.DataRow.GetChildRows%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68c8e-304">下面的示例创建<xref:System.Data.Odbc.OdbcParameter>和设置的某些属性。</span><span class="sxs-lookup"><span data-stu-id="68c8e-304">The following example creates an <xref:System.Data.Odbc.OdbcParameter> and sets some of its properties.</span></span>  
  
```vb  
Public Sub CreateOdbcParameter()  
    Dim parameter As New OdbcParameter("Description", OdbcType.VarChar, 88)  
    parameter.SourceColumn = "Description"  
    parameter.SourceVersion = DataRowVersion.Current  
End Sub   
```  
  
```csharp  
public void CreateOdbcParameter()   
 {  
    OdbcParameter parameter = new OdbcParameter("Description", OdbcType.VarChar, 88);  
    parameter.SourceColumn = "Description";  
    parameter.SourceVersion = DataRowVersion.Current;  
 }  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md"><span data-ttu-id="68c8e-305">使用命令</span><span class="sxs-lookup"><span data-stu-id="68c8e-305">Working with Commands</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcParameter.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="68c8e-306">有关此成员的说明，请参见 <see cref="M:System.ICloneable.Clone" />。</span><span class="sxs-lookup"><span data-stu-id="68c8e-306">For a description of this member, see <see cref="M:System.ICloneable.Clone" />.</span></span></summary>
        <returns><span data-ttu-id="68c8e-307">新的 <see cref="T:System.Object" /> 对象，是此实例的副本。</span><span class="sxs-lookup"><span data-stu-id="68c8e-307">A new <see cref="T:System.Object" /> that is a copy of this instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68c8e-308">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="68c8e-308">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="68c8e-309">它只能在 <xref:System.Data.Odbc.OdbcParameter> 实例强制转换为 <xref:System.ICloneable> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="68c8e-309">It can be used only when the <xref:System.Data.Odbc.OdbcParameter> instance is cast to an <xref:System.ICloneable> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcParameter.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="odbcParameter.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="68c8e-310">获取一个包含 <see cref="P:System.Data.Odbc.OdbcParameter.ParameterName" /> 的字符串。</span><span class="sxs-lookup"><span data-stu-id="68c8e-310">Gets a string that contains the <see cref="P:System.Data.Odbc.OdbcParameter.ParameterName" />.</span></span></summary>
        <returns><span data-ttu-id="68c8e-311">一个包含 <see cref="P:System.Data.Odbc.OdbcParameter.ParameterName" /> 的字符串。</span><span class="sxs-lookup"><span data-stu-id="68c8e-311">A string that contains the <see cref="P:System.Data.Odbc.OdbcParameter.ParameterName" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md"><span data-ttu-id="68c8e-312">使用命令</span><span class="sxs-lookup"><span data-stu-id="68c8e-312">Working with Commands</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public override object Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcParameter.Value" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ Value { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Value : obj with get, set" Usage="System.Data.Odbc.OdbcParameter.Value" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataParameter.Value</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.StringConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="68c8e-313">获取或设置参数的值。</span><span class="sxs-lookup"><span data-stu-id="68c8e-313">Gets or sets the value of the parameter.</span></span></summary>
        <value><span data-ttu-id="68c8e-314">充当参数值的 <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="68c8e-314">An <see cref="T:System.Object" /> that is the value of the parameter.</span></span> <span data-ttu-id="68c8e-315">默认值为 null。</span><span class="sxs-lookup"><span data-stu-id="68c8e-315">The default value is null.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68c8e-316">用于输入参数的值绑定到<xref:System.Data.Odbc.OdbcCommand>，发送到服务器。</span><span class="sxs-lookup"><span data-stu-id="68c8e-316">For input parameters, the value is bound to the <xref:System.Data.Odbc.OdbcCommand> that is sent to the server.</span></span> <span data-ttu-id="68c8e-317">对于输出参数和返回值参数，该数值将在完成<xref:System.Data.Odbc.OdbcCommand>前后<xref:System.Data.Odbc.OdbcDataReader>已关闭。</span><span class="sxs-lookup"><span data-stu-id="68c8e-317">For output and return-value parameters, the value is set on completion of the <xref:System.Data.Odbc.OdbcCommand> and after the <xref:System.Data.Odbc.OdbcDataReader> is closed.</span></span>  
  
 <span data-ttu-id="68c8e-318">如果向服务器发送 null 参数值，用户必须指定<xref:System.DBNull>，而不是 null。</span><span class="sxs-lookup"><span data-stu-id="68c8e-318">When you send a null parameter value to the server, the user must specify <xref:System.DBNull>, not null.</span></span> <span data-ttu-id="68c8e-319">在系统中的 null 值是一个没有值的空对象。</span><span class="sxs-lookup"><span data-stu-id="68c8e-319">A null value in the system is an empty object that has no value.</span></span> <span data-ttu-id="68c8e-320"><xref:System.DBNull> 用于表示 null 值。</span><span class="sxs-lookup"><span data-stu-id="68c8e-320"><xref:System.DBNull> is used to represent null values.</span></span> <span data-ttu-id="68c8e-321">如果使用参数来调用存储的过程参数具有默认值，设置<xref:System.Data.Odbc.OdbcParameter.Value%2A>为 null 的默认值要使用的原因。</span><span class="sxs-lookup"><span data-stu-id="68c8e-321">If the parameter is used to call a stored procedure with parameters that have default values, setting <xref:System.Data.Odbc.OdbcParameter.Value%2A> to null causes the default value to be used.</span></span>  
  
 <span data-ttu-id="68c8e-322">如果应用程序指定的数据库类型，绑定的值转换为该类型时提供程序将数据发送到服务器。</span><span class="sxs-lookup"><span data-stu-id="68c8e-322">If the application specifies the database type, the bound value is converted to that type when the provider sends the data to the server.</span></span> <span data-ttu-id="68c8e-323">提供程序尝试转换任何类型的值，如果它支持<xref:System.IConvertible>接口。</span><span class="sxs-lookup"><span data-stu-id="68c8e-323">The provider tries to convert any type of value if it supports the <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="68c8e-324">如果指定的类型不兼容的值，可能会导致转换错误。</span><span class="sxs-lookup"><span data-stu-id="68c8e-324">Conversion errors may result if the specified type is not compatible with the value.</span></span>  
  
 <span data-ttu-id="68c8e-325">同时<xref:System.Data.Odbc.OdbcParameter.DbType%2A>并<xref:System.Data.Odbc.OdbcParameter.OdbcType%2A>属性可以通过设置推断出<xref:System.Data.Odbc.OdbcParameter.Value%2A>。</span><span class="sxs-lookup"><span data-stu-id="68c8e-325">Both the <xref:System.Data.Odbc.OdbcParameter.DbType%2A> and <xref:System.Data.Odbc.OdbcParameter.OdbcType%2A> properties can be inferred by setting <xref:System.Data.Odbc.OdbcParameter.Value%2A>.</span></span> <span data-ttu-id="68c8e-326">如果适用，大小、 精度和小数位数也将从推断<xref:System.Data.Odbc.OdbcParameter.Value%2A>执行参数化的语句时。</span><span class="sxs-lookup"><span data-stu-id="68c8e-326">If applicable, the size, precision, and scale is also inferred from <xref:System.Data.Odbc.OdbcParameter.Value%2A> when the parameterized statement is executed.</span></span> <span data-ttu-id="68c8e-327">但是，推断出的值不向用户公开。</span><span class="sxs-lookup"><span data-stu-id="68c8e-327">However, inferred values are not exposed to the user.</span></span>  
  
 <span data-ttu-id="68c8e-328"><xref:System.Data.Odbc.OdbcParameter.Value%2A>属性会被覆盖`Update`方法。</span><span class="sxs-lookup"><span data-stu-id="68c8e-328">The <xref:System.Data.Odbc.OdbcParameter.Value%2A> property is overwritten by the `Update` method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68c8e-329">下面的示例创建<xref:System.Data.Odbc.OdbcParameter>和设置的某些属性。</span><span class="sxs-lookup"><span data-stu-id="68c8e-329">The following example creates an <xref:System.Data.Odbc.OdbcParameter> and sets some of its properties.</span></span>  
  
```vb  
Public Sub CreateOdbcParameter()  
    Dim parameter As New OdbcParameter("Description", OdbcType.VarChar, 88)  
    parameter.Value = "garden hose"  
End Sub   
```  
  
```csharp  
public void CreateOdbcParameter()   
 {  
    OdbcParameter parameter = new OdbcParameter("Description", OdbcType.VarChar, 88);  
    parameter.Value = "garden hose";  
 }  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md"><span data-ttu-id="68c8e-330">使用命令</span><span class="sxs-lookup"><span data-stu-id="68c8e-330">Working with Commands</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>