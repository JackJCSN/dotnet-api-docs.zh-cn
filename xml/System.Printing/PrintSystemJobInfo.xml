<Type Name="PrintSystemJobInfo" FullName="System.Printing.PrintSystemJobInfo">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fc306981fec47997ce14bd66ecb9eca0d50d6ddf" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="64057018" /></Metadata><TypeSignature Language="C#" Value="public class PrintSystemJobInfo : System.Printing.PrintSystemObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi PrintSystemJobInfo extends System.Printing.PrintSystemObject" />
  <TypeSignature Language="DocId" Value="T:System.Printing.PrintSystemJobInfo" />
  <TypeSignature Language="VB.NET" Value="Public Class PrintSystemJobInfo&#xA;Inherits PrintSystemObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class PrintSystemJobInfo : System::Printing::PrintSystemObject" />
  <TypeSignature Language="F#" Value="type PrintSystemJobInfo = class&#xA;    inherit PrintSystemObject" />
  <AssemblyInfo>
    <AssemblyName>System.Printing</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Printing.PrintSystemObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="1cdc7-101">详细定义打印作业。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-101">Defines a print job in detail.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1cdc7-102">此类有没有公共构造函数。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-102">This class has no public constructor.</span></span> <span data-ttu-id="1cdc7-103">若要获取对的引用<xref:System.Printing.PrintSystemJobInfo>对象，请使用静态<xref:System.Printing.PrintSystemJobInfo.Get%2A?displayProperty=nameWithType>方法或下列任一<xref:System.Printing.PrintQueue>实例方法： <xref:System.Printing.PrintQueue.GetJob%2A>， <xref:System.Printing.PrintQueue.GetPrintJobInfoCollection%2A>，或<xref:System.Printing.PrintQueue.AddJob%2A>。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-103">To get a reference to a <xref:System.Printing.PrintSystemJobInfo> object, use the static <xref:System.Printing.PrintSystemJobInfo.Get%2A?displayProperty=nameWithType> method or one of the following <xref:System.Printing.PrintQueue> instance methods: <xref:System.Printing.PrintQueue.GetJob%2A>, <xref:System.Printing.PrintQueue.GetPrintJobInfoCollection%2A>, or <xref:System.Printing.PrintQueue.AddJob%2A>.</span></span>  
  
 <span data-ttu-id="1cdc7-104">多个打印作业属性，如是否完成作业后，必须从的打印机的传递<xref:System.Printing.PrintSystemJobInfo>对象，然后应用程序读取相应的属性 (<xref:System.Printing.PrintSystemJobInfo.IsCompleted%2A>)。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-104">Many print job properties, such as whether a job is completed, must be passed from the printer to the <xref:System.Printing.PrintSystemJobInfo> object before your application reads the corresponding property (<xref:System.Printing.PrintSystemJobInfo.IsCompleted%2A>).</span></span> <span data-ttu-id="1cdc7-105"><xref:System.Printing.PrintSystemJobInfo.Refresh%2A>方法提供了此功能。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-105">The <xref:System.Printing.PrintSystemJobInfo.Refresh%2A> method provides this functionality.</span></span>  
  
 <span data-ttu-id="1cdc7-106">同样，当你的应用程序的值更改<xref:System.Printing.PrintSystemJobInfo.JobName%2A>属性，必须将更改写入的打印队列实用工具的计算机上。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-106">Similarly, when your application changes the value of the <xref:System.Printing.PrintSystemJobInfo.JobName%2A> property, the change must be written to the print queue utility on the computer.</span></span> <span data-ttu-id="1cdc7-107"><xref:System.Printing.PrintSystemJobInfo.Commit%2A>方法提供了此功能。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-107">The <xref:System.Printing.PrintSystemJobInfo.Commit%2A> method provides this functionality.</span></span>  
  
 <span data-ttu-id="1cdc7-108">如果派生的类从<xref:System.Printing.PrintSystemJobInfo>具有其他可写属性，则必须实现的重写<xref:System.Printing.PrintSystemJobInfo.Refresh%2A>和<xref:System.Printing.PrintSystemJobInfo.Commit%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-108">If you derive a class from <xref:System.Printing.PrintSystemJobInfo> that has additional writable properties, then you must implement an override of the <xref:System.Printing.PrintSystemJobInfo.Refresh%2A> and <xref:System.Printing.PrintSystemJobInfo.Commit%2A> methods.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="1cdc7-109">类中<xref:System.Printing>命名空间不支持的 Windows 服务或 ASP.NET 应用程序或服务中的使用。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-109">Classes within the <xref:System.Printing> namespace are not supported for use within a Windows service or ASP.NET application or service.</span></span> <span data-ttu-id="1cdc7-110">尝试使用在这些应用程序类型之一中的这些类可能会产生意外的问题，如降低服务性能和运行时异常。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-110">Attempting to use these classes from within one of these application types may produce unexpected problems, such as diminished service performance and run-time exceptions.</span></span>  
  
 <span data-ttu-id="1cdc7-111">如果你想要从 Windows 窗体应用程序打印，请参阅<xref:System.Drawing.Printing>命名空间。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-111">If you want to print from a Windows Forms application, see the <xref:System.Drawing.Printing> namespace.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public void Cancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Cancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintSystemJobInfo.Cancel" />
      <MemberSignature Language="VB.NET" Value="Public Sub Cancel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Cancel();" />
      <MemberSignature Language="F#" Value="member this.Cancel : unit -&gt; unit" Usage="printSystemJobInfo.Cancel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1cdc7-112">取消打印作业。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-112">Cancels the print job.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1cdc7-113">下面的示例演示如何使用此方法来取消打印作业。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-113">The following example shows how to use this method to cancel print job.</span></span>  
  
 [!code-cpp[DiagnoseProblematicPrintJob#HandlePausedJob](~/samples/snippets/cpp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CPP/Program.cpp#handlepausedjob)]
 [!code-csharp[DiagnoseProblematicPrintJob#HandlePausedJob](~/samples/snippets/csharp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CSharp/Program.cs#handlepausedjob)]
 [!code-vb[DiagnoseProblematicPrintJob#HandlePausedJob](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/visualbasic/program.vb#handlepausedjob)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Commit">
      <MemberSignature Language="C#" Value="public override void Commit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Commit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintSystemJobInfo.Commit" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Commit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Commit();" />
      <MemberSignature Language="F#" Value="override this.Commit : unit -&gt; unit" Usage="printSystemJobInfo.Commit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1cdc7-114">将 <see cref="T:System.Printing.PrintSystemJobInfo" /> 对象属性的任何更改写入该对象所代表的实际打印作业中。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-114">Writes any changes to the properties of the <see cref="T:System.Printing.PrintSystemJobInfo" /> object to the actual print job that the object represents.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1cdc7-115">仅<xref:System.Printing.PrintSystemJobInfo.JobName%2A>属性是可写。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-115">Only the <xref:System.Printing.PrintSystemJobInfo.JobName%2A> property is writable.</span></span> <span data-ttu-id="1cdc7-116">如果派生的类从<xref:System.Printing.PrintSystemJobInfo>具有其他可写属性，必须重写<xref:System.Printing.PrintSystemJobInfo.Commit%2A>和<xref:System.Printing.PrintSystemJobInfo.Refresh%2A>方法使用你自己的实现。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-116">If you derive a class from <xref:System.Printing.PrintSystemJobInfo> that has additional writable properties, you must override the <xref:System.Printing.PrintSystemJobInfo.Commit%2A> and <xref:System.Printing.PrintSystemJobInfo.Refresh%2A> methods with implementations of your own.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Printing.PrintSystemJobInfo.Refresh" />
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public static System.Printing.PrintSystemJobInfo Get (System.Printing.PrintQueue printQueue, int jobIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Printing.PrintSystemJobInfo Get(class System.Printing.PrintQueue printQueue, int32 jobIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintSystemJobInfo.Get(System.Printing.PrintQueue,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Printing::PrintSystemJobInfo ^ Get(System::Printing::PrintQueue ^ printQueue, int jobIdentifier);" />
      <MemberSignature Language="F#" Value="static member Get : System.Printing.PrintQueue * int -&gt; System.Printing.PrintSystemJobInfo" Usage="System.Printing.PrintSystemJobInfo.Get (printQueue, jobIdentifier)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Printing.PrintSystemJobInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="printQueue" Type="System.Printing.PrintQueue" />
        <Parameter Name="jobIdentifier" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="printQueue"><span data-ttu-id="1cdc7-117">承载打印作业的打印队列。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-117">The print queue hosting the print job.</span></span></param>
        <param name="jobIdentifier"><span data-ttu-id="1cdc7-118">打印作业的数字 ID。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-118">A numerical ID for the print job.</span></span></param>
        <summary><span data-ttu-id="1cdc7-119">在指定的 <see cref="T:System.Printing.PrintSystemJobInfo" /> 中获取指定作业的 <see cref="T:System.Printing.PrintQueue" />。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-119">Gets the <see cref="T:System.Printing.PrintSystemJobInfo" /> for the specified job in the specified <see cref="T:System.Printing.PrintQueue" />.</span></span></summary>
        <returns><span data-ttu-id="1cdc7-120">与 <see cref="T:System.Printing.PrintSystemJobInfo" /> 对应的 <paramref name="jobIdentifier" />。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-120">The <see cref="T:System.Printing.PrintSystemJobInfo" /> that corresponds to the <paramref name="jobIdentifier" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1cdc7-121">此外可以使用<xref:System.Printing.PrintQueue.GetJob%2A?displayProperty=nameWithType>实现同一目的的方法。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-121">You can also use the <xref:System.Printing.PrintQueue.GetJob%2A?displayProperty=nameWithType> method for the same purpose.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Printing.PrintQueue.GetJob(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="HostingPrintQueue">
      <MemberSignature Language="C#" Value="public System.Printing.PrintQueue HostingPrintQueue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Printing.PrintQueue HostingPrintQueue" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.HostingPrintQueue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HostingPrintQueue As PrintQueue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Printing::PrintQueue ^ HostingPrintQueue { System::Printing::PrintQueue ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HostingPrintQueue : System.Printing.PrintQueue" Usage="System.Printing.PrintSystemJobInfo.HostingPrintQueue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Printing.PrintQueue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1cdc7-122">获取承载打印作业的打印队列。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-122">Gets the print queue that is hosting the print job.</span></span></summary>
        <value><span data-ttu-id="1cdc7-123">一个 <see cref="T:System.Printing.PrintQueue" /> 值，表示拥有打印作业的打印队列。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-123">A <see cref="T:System.Printing.PrintQueue" /> value that represents the print queue that owns the print job.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1cdc7-124">下面的示例演示如何诊断问题的打印作业时使用此属性。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-124">The following example shows how to use this property when diagnosing a problem with a print job.</span></span>  
  
 [!code-cpp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/cpp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CPP/Program.cpp#spottroubleusingjobproperties)]
 [!code-csharp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CSharp/Program.cs#spottroubleusingjobproperties)]
 [!code-vb[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/visualbasic/program.vb#spottroubleusingjobproperties)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HostingPrintServer">
      <MemberSignature Language="C#" Value="public System.Printing.PrintServer HostingPrintServer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Printing.PrintServer HostingPrintServer" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.HostingPrintServer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HostingPrintServer As PrintServer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Printing::PrintServer ^ HostingPrintServer { System::Printing::PrintServer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HostingPrintServer : System.Printing.PrintServer" Usage="System.Printing.PrintSystemJobInfo.HostingPrintServer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Printing.PrintServer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1cdc7-125">获取承载打印作业的打印队列的打印服务器。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-125">Gets the print server that is hosting the print queue for the print job.</span></span></summary>
        <value><span data-ttu-id="1cdc7-126">一个 <see cref="T:System.Printing.PrintServer" /> 值，表示拥有打印作业的 <see cref="T:System.Printing.PrintQueue" /> 的宿主打印服务器（通常是一台计算机）。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-126">A <see cref="T:System.Printing.PrintServer" /> value that represents the hosting print server (usually a computer) for the <see cref="T:System.Printing.PrintQueue" /> that owns the print job.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InternalDispose">
      <MemberSignature Language="C#" Value="protected override sealed void InternalDispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InternalDispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintSystemJobInfo.InternalDispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Sub InternalDispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InternalDispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.InternalDispose : bool -&gt; unit" Usage="printSystemJobInfo.InternalDispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptions</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="1cdc7-127">若要释放托管资源和非托管资源，则为 <see langword="true" />；若仅释放非托管资源，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-127"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="1cdc7-128">释放由 <see cref="T:System.Printing.PrintSystemJobInfo" /> 占用的非托管资源，还可以选择释放托管资源。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-128">Releases the unmanaged resources that are used by the <see cref="T:System.Printing.PrintSystemJobInfo" /> and optionally, releases the managed resources.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBlocked">
      <MemberSignature Language="C#" Value="public bool IsBlocked { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBlocked" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.IsBlocked" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsBlocked As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsBlocked { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsBlocked : bool" Usage="System.Printing.PrintSystemJobInfo.IsBlocked" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1cdc7-129">获取一个值，该值指示打印作业是否因被阻止而没有打印。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-129">Gets a value that indicates whether the print job is blocked and therefore, not printing.</span></span></summary>
        <value><span data-ttu-id="1cdc7-130">如果已阻止打印作业，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-130"><see langword="true" /> if the print job is blocked; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1cdc7-131">下面的示例演示如何诊断问题的打印作业时使用此属性。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-131">The following example shows how to use this property when diagnosing a problem with a print job.</span></span>  
  
 [!code-cpp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/cpp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CPP/Program.cpp#spottroubleusingjobproperties)]
 [!code-csharp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CSharp/Program.cs#spottroubleusingjobproperties)]
 [!code-vb[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/visualbasic/program.vb#spottroubleusingjobproperties)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCompleted">
      <MemberSignature Language="C#" Value="public bool IsCompleted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCompleted" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.IsCompleted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCompleted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCompleted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCompleted : bool" Usage="System.Printing.PrintSystemJobInfo.IsCompleted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1cdc7-132">获取一个值，该值指示打印作业是否已完成。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-132">Gets a value that indicates whether the print job is finished.</span></span></summary>
        <value><span data-ttu-id="1cdc7-133">如果已完成打印作业，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-133"><see langword="true" /> if the print job is finished; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1cdc7-134">下面的示例演示如何诊断问题的打印作业时使用此属性。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-134">The following example shows how to use this property when diagnosing a problem with a print job.</span></span>  
  
 [!code-cpp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/cpp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CPP/Program.cpp#spottroubleusingjobproperties)]
 [!code-csharp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CSharp/Program.cs#spottroubleusingjobproperties)]
 [!code-vb[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/visualbasic/program.vb#spottroubleusingjobproperties)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDeleted">
      <MemberSignature Language="C#" Value="public bool IsDeleted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDeleted" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.IsDeleted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDeleted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDeleted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDeleted : bool" Usage="System.Printing.PrintSystemJobInfo.IsDeleted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1cdc7-135">获取一个值，该值指示打印作业（由 <see cref="T:System.Printing.PrintSystemJobInfo" /> 对象表示）是否已从打印队列中删除。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-135">Gets a value that indicates whether the print job, which is represented by the <see cref="T:System.Printing.PrintSystemJobInfo" /> object, was deleted from the print queue.</span></span></summary>
        <value><span data-ttu-id="1cdc7-136">如果已删除打印作业，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-136"><see langword="true" /> if the print job was deleted; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1cdc7-137">它可能看起来很矛盾在第一个对象可以报告其自己的状态为已删除，但请记住<xref:System.Printing.PrintSystemJobInfo>对象仅*表示*实际的打印作业。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-137">It may seem paradoxical at first that an object can report its own status as deleted, but keep in mind that the <xref:System.Printing.PrintSystemJobInfo> object only *represents* a real print job.</span></span> <span data-ttu-id="1cdc7-138">从其打印队列中删除打印并不会不会自动释放的<xref:System.Printing.PrintSystemJobInfo>在应用程序中的对象。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-138">Deleting the latter from its print queue does not automatically dispose of the <xref:System.Printing.PrintSystemJobInfo> object in your application.</span></span> <span data-ttu-id="1cdc7-139">同样，该对象不会从任何<xref:System.Printing.PrintJobInfoCollection>删除它所代表的打印作业之前创建。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-139">Similarly, the object is not removed from any <xref:System.Printing.PrintJobInfoCollection> that was created before the print job it represents was deleted.</span></span> <span data-ttu-id="1cdc7-140">例如，如果<xref:System.Printing.PrintQueue.GetPrintJobInfoCollection%2A>方法运行之前已删除打印作业时，返回的集合将包含<xref:System.Printing.PrintSystemJobInfo>对象，表示打印作业。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-140">For example, if the <xref:System.Printing.PrintQueue.GetPrintJobInfoCollection%2A> method is run before the print job was deleted, the returned collection will include a <xref:System.Printing.PrintSystemJobInfo> object that represents the print job.</span></span> <span data-ttu-id="1cdc7-141">删除打印作业时，此对象不从集合中删除。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-141">This object is not removed from the collection when the print job is deleted.</span></span> <span data-ttu-id="1cdc7-142">但是，如果<xref:System.Printing.PrintQueue.GetPrintJobInfoCollection%2A>然后再次运行，返回集合将会有任何成员表示已删除打印作业。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-142">But if <xref:System.Printing.PrintQueue.GetPrintJobInfoCollection%2A> is then run again, the returned collection will have no members that represent the deleted print jobs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1cdc7-143">下面的示例演示如何诊断问题的打印作业时使用此属性。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-143">The following example shows how to use this property when diagnosing a problem with a print job.</span></span>  
  
 [!code-cpp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/cpp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CPP/Program.cpp#spottroubleusingjobproperties)]
 [!code-csharp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CSharp/Program.cs#spottroubleusingjobproperties)]
 [!code-vb[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/visualbasic/program.vb#spottroubleusingjobproperties)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDeleting">
      <MemberSignature Language="C#" Value="public bool IsDeleting { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDeleting" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.IsDeleting" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDeleting As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDeleting { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDeleting : bool" Usage="System.Printing.PrintSystemJobInfo.IsDeleting" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1cdc7-144">获取一个值，该值指示是否正在从打印队列中删除打印作业。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-144">Gets a value that indicates whether the print job is being deleted from the print queue.</span></span></summary>
        <value><span data-ttu-id="1cdc7-145">如果正在删除打印作业，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-145"><see langword="true" /> if the print job is being deleted; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1cdc7-146">下面的示例演示如何诊断问题的打印作业时使用此属性。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-146">The following example shows how to use this property when diagnosing a problem with a print job.</span></span>  
  
 [!code-cpp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/cpp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CPP/Program.cpp#spottroubleusingjobproperties)]
 [!code-csharp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CSharp/Program.cs#spottroubleusingjobproperties)]
 [!code-vb[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/visualbasic/program.vb#spottroubleusingjobproperties)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInError">
      <MemberSignature Language="C#" Value="public bool IsInError { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInError" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.IsInError" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsInError As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInError { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsInError : bool" Usage="System.Printing.PrintSystemJobInfo.IsInError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1cdc7-147">获取一个值，该值指示错误条件是否与打印作业相关联。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-147">Gets a value that indicates whether an error condition is associated with the print job.</span></span></summary>
        <value><span data-ttu-id="1cdc7-148">如果错误条件与打印作业相关联，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-148"><see langword="true" /> if an error condition is associated with the print job; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1cdc7-149">下面的示例演示如何诊断问题的打印作业时使用此属性。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-149">The following example shows how to use this property when diagnosing a problem with a print job.</span></span>  
  
 [!code-cpp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/cpp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CPP/Program.cpp#spottroubleusingjobproperties)]
 [!code-csharp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CSharp/Program.cs#spottroubleusingjobproperties)]
 [!code-vb[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/visualbasic/program.vb#spottroubleusingjobproperties)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOffline">
      <MemberSignature Language="C#" Value="public bool IsOffline { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOffline" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.IsOffline" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsOffline As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsOffline { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsOffline : bool" Usage="System.Printing.PrintSystemJobInfo.IsOffline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1cdc7-150">获取一个值，该值指示打印机是否脱机。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-150">Gets a value that indicates whether the printer is offline.</span></span></summary>
        <value><span data-ttu-id="1cdc7-151">如果打印机脱机，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-151"><see langword="true" /> if the printer is offline; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1cdc7-152">此值将传播到所有<xref:System.Printing.PrintSystemJobInfo>中的对象<xref:System.Printing.PrintQueue.IsOffline%2A>的托管属性<xref:System.Printing.PrintQueue>。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-152">This value is propagated to all the <xref:System.Printing.PrintSystemJobInfo> objects from the <xref:System.Printing.PrintQueue.IsOffline%2A> property of the hosting <xref:System.Printing.PrintQueue>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1cdc7-153">下面的示例演示如何诊断问题的打印作业时使用此属性。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-153">The following example shows how to use this property when diagnosing a problem with a print job.</span></span>  
  
 [!code-cpp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/cpp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CPP/Program.cpp#spottroubleusingjobproperties)]
 [!code-csharp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CSharp/Program.cs#spottroubleusingjobproperties)]
 [!code-vb[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/visualbasic/program.vb#spottroubleusingjobproperties)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPaperOut">
      <MemberSignature Language="C#" Value="public bool IsPaperOut { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPaperOut" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.IsPaperOut" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPaperOut As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPaperOut { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPaperOut : bool" Usage="System.Printing.PrintSystemJobInfo.IsPaperOut" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1cdc7-154">获取一个值，该值指示打印机是否已用完打印作业所需的纸张大小和类型。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-154">Gets a value that indicates whether the printer has run out of the paper size and type that the print job requires.</span></span></summary>
        <value><span data-ttu-id="1cdc7-155">如果打印机已用完所需的纸张，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-155"><see langword="true" /> if the printer has run out of the required paper; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1cdc7-156">下面的示例演示如何诊断问题的打印作业时使用此属性。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-156">The following example shows how to use this property when diagnosing a problem with a print job.</span></span>  
  
 [!code-cpp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/cpp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CPP/Program.cpp#spottroubleusingjobproperties)]
 [!code-csharp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CSharp/Program.cs#spottroubleusingjobproperties)]
 [!code-vb[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/visualbasic/program.vb#spottroubleusingjobproperties)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPaused">
      <MemberSignature Language="C#" Value="public bool IsPaused { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPaused" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.IsPaused" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPaused As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPaused { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPaused : bool" Usage="System.Printing.PrintSystemJobInfo.IsPaused" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1cdc7-157">获取一个值，该值指示打印作业是否已暂停。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-157">Gets a value that indicates whether the print job is paused.</span></span></summary>
        <value><span data-ttu-id="1cdc7-158">如果打印作业已暂停，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-158"><see langword="true" /> if the print job is paused; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1cdc7-159">也可以暂停整个打印队列。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-159">The entire print queue can also be paused.</span></span> <span data-ttu-id="1cdc7-160">例如，值<xref:System.Printing.PrintSystemJobInfo.IsPaused%2A?displayProperty=nameWithType>可以是`false`即使的值<xref:System.Printing.PrintQueue.IsPaused%2A?displayProperty=nameWithType>属性是`true`。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-160">For example, the value of <xref:System.Printing.PrintSystemJobInfo.IsPaused%2A?displayProperty=nameWithType> can be `false` even when the value of the <xref:System.Printing.PrintQueue.IsPaused%2A?displayProperty=nameWithType> property is `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1cdc7-161">下面的示例演示如何诊断问题的打印作业时使用此属性。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-161">The following example shows how to use this property when diagnosing a problem with a print job.</span></span>  
  
 [!code-cpp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/cpp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CPP/Program.cpp#spottroubleusingjobproperties)]
 [!code-csharp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CSharp/Program.cs#spottroubleusingjobproperties)]
 [!code-vb[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/visualbasic/program.vb#spottroubleusingjobproperties)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Printing.PrintSystemJobInfo.Pause" />
        <altmember cref="M:System.Printing.PrintSystemJobInfo.Resume" />
      </Docs>
    </Member>
    <Member MemberName="IsPrinted">
      <MemberSignature Language="C#" Value="public bool IsPrinted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPrinted" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.IsPrinted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPrinted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPrinted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPrinted : bool" Usage="System.Printing.PrintSystemJobInfo.IsPrinted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1cdc7-162">获取一个值，该值指示打印作业是否已打印。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-162">Gets a value that indicates whether the print job printed.</span></span></summary>
        <value><span data-ttu-id="1cdc7-163">如果打印作业已打印，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-163"><see langword="true" /> if the print job has printed; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1cdc7-164">下面的示例演示如何诊断问题的打印作业时使用此属性。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-164">The following example shows how to use this property when diagnosing a problem with a print job.</span></span>  
  
 [!code-cpp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/cpp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CPP/Program.cpp#spottroubleusingjobproperties)]
 [!code-csharp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CSharp/Program.cs#spottroubleusingjobproperties)]
 [!code-vb[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/visualbasic/program.vb#spottroubleusingjobproperties)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPrinting">
      <MemberSignature Language="C#" Value="public bool IsPrinting { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPrinting" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.IsPrinting" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPrinting As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPrinting { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPrinting : bool" Usage="System.Printing.PrintSystemJobInfo.IsPrinting" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1cdc7-165">获取一个值，该值指示打印作业是否正在被打印。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-165">Gets a value that indicates whether the print job is being printed.</span></span></summary>
        <value><span data-ttu-id="1cdc7-166">如果打印机正在打印，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-166"><see langword="true" /> if the printer is printing; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1cdc7-167">下面的示例演示如何诊断问题的打印作业时使用此属性。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-167">The following example shows how to use this property when diagnosing a problem with a print job.</span></span>  
  
 [!code-cpp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/cpp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CPP/Program.cpp#spottroubleusingjobproperties)]
 [!code-csharp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CSharp/Program.cs#spottroubleusingjobproperties)]
 [!code-vb[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/visualbasic/program.vb#spottroubleusingjobproperties)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRestarted">
      <MemberSignature Language="C#" Value="public bool IsRestarted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRestarted" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.IsRestarted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsRestarted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsRestarted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsRestarted : bool" Usage="System.Printing.PrintSystemJobInfo.IsRestarted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1cdc7-168">获取一个值，该值指示打印作业是否已重新启动。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-168">Gets a value that indicates whether the print job has been restarted.</span></span></summary>
        <value><span data-ttu-id="1cdc7-169">如果打印机正在打印，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-169"><see langword="true" /> if the printer is printing; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1cdc7-170">重新启动作业时，它将打印整个作业。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-170">When a job is restarted, it prints in its entirety.</span></span> <span data-ttu-id="1cdc7-171">重新启动与使用的对比度<xref:System.Printing.PrintSystemJobInfo.Resume%2A>方法，后者将恢复点已暂停的作业。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-171">Contrast restarting with using the <xref:System.Printing.PrintSystemJobInfo.Resume%2A> method, which resumes a job at the point it was paused.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Printing.PrintSystemJobInfo.Pause" />
        <altmember cref="M:System.Printing.PrintSystemJobInfo.Resume" />
        <altmember cref="P:System.Printing.PrintSystemJobInfo.IsPaused" />
      </Docs>
    </Member>
    <Member MemberName="IsRetained">
      <MemberSignature Language="C#" Value="public bool IsRetained { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRetained" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.IsRetained" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsRetained As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsRetained { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsRetained : bool" Usage="System.Printing.PrintSystemJobInfo.IsRetained" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1cdc7-172">获取一个值，该值指示打印作业在被打印后是否已保存到队列中。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-172">Gets a value that indicates whether the print job was saved in the queue after it printed.</span></span></summary>
        <value><span data-ttu-id="1cdc7-173">如果已保存打印作业，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-173"><see langword="true" /> if the print job was saved; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1cdc7-174">打印队列保留打印的作业，如果<xref:System.Printing.PrintQueue.KeepPrintedJobs%2A>的属性<xref:System.Printing.PrintQueue>对象设置为`true`如果队列的属性已使用提交<xref:System.Printing.PrintQueue.Commit%2A>方法<xref:System.Printing.PrintQueue>。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-174">A print queue retains printed jobs if the <xref:System.Printing.PrintQueue.KeepPrintedJobs%2A> property of the <xref:System.Printing.PrintQueue> object is set to `true` and if the properties of the queue have been committed with the <xref:System.Printing.PrintQueue.Commit%2A> method of the <xref:System.Printing.PrintQueue>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSpooling">
      <MemberSignature Language="C#" Value="public bool IsSpooling { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSpooling" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.IsSpooling" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSpooling As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSpooling { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSpooling : bool" Usage="System.Printing.PrintSystemJobInfo.IsSpooling" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1cdc7-175">获取一个值，该值指示打印作业是否正在进行后台处理。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-175">Gets a value that indicates whether the print job is being spooled.</span></span></summary>
        <value><span data-ttu-id="1cdc7-176">如果打印作业正在进行后台处理，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-176"><see langword="true" /> if the print job is being spooled; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1cdc7-177">下面的示例演示如何诊断问题的打印作业时使用此属性。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-177">The following example shows how to use this property when diagnosing a problem with a print job.</span></span>  
  
 [!code-cpp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/cpp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CPP/Program.cpp#spottroubleusingjobproperties)]
 [!code-csharp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CSharp/Program.cs#spottroubleusingjobproperties)]
 [!code-vb[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/visualbasic/program.vb#spottroubleusingjobproperties)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUserInterventionRequired">
      <MemberSignature Language="C#" Value="public bool IsUserInterventionRequired { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUserInterventionRequired" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.IsUserInterventionRequired" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsUserInterventionRequired As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsUserInterventionRequired { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsUserInterventionRequired : bool" Usage="System.Printing.PrintSystemJobInfo.IsUserInterventionRequired" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1cdc7-178">获取一个值，该值指示打印机是否需要用户干预。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-178">Gets a value that indicates whether the printer needs user intervention.</span></span></summary>
        <value><span data-ttu-id="1cdc7-179">如果需要用户干预，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-179"><see langword="true" /> if user intervention is needed; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1cdc7-180">此值会传播到所有<xref:System.Printing.PrintSystemJobInfo>中的对象<xref:System.Printing.PrintQueue.NeedUserIntervention%2A>的托管属性<xref:System.Printing.PrintQueue>。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-180">This value propagates to all <xref:System.Printing.PrintSystemJobInfo> objects from the <xref:System.Printing.PrintQueue.NeedUserIntervention%2A> property of the hosting <xref:System.Printing.PrintQueue>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1cdc7-181">下面的示例演示如何诊断问题的打印作业时使用此属性。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-181">The following example shows how to use this property when diagnosing a problem with a print job.</span></span>  
  
 [!code-cpp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/cpp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CPP/Program.cpp#spottroubleusingjobproperties)]
 [!code-csharp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CSharp/Program.cs#spottroubleusingjobproperties)]
 [!code-vb[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/visualbasic/program.vb#spottroubleusingjobproperties)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JobIdentifier">
      <MemberSignature Language="C#" Value="public int JobIdentifier { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 JobIdentifier" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.JobIdentifier" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property JobIdentifier As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int JobIdentifier { int get(); };" />
      <MemberSignature Language="F#" Value="member this.JobIdentifier : int" Usage="System.Printing.PrintSystemJobInfo.JobIdentifier" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1cdc7-182">获取打印作业的标识号。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-182">Gets the identification number for the print job.</span></span></summary>
        <value><span data-ttu-id="1cdc7-183">一个标识打印作业的 <see cref="T:System.Int32" />。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-183">An <see cref="T:System.Int32" /> that identifies the print job.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1cdc7-184">使用哪种编号系统已确定的打印服务器和打印服务器是一台计算机或打印服务器设备的操作系统。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-184">Which numbering system is used is determined by the operating system of the print server and whether the print server is a computer or a print server appliance.</span></span> <span data-ttu-id="1cdc7-185">例如，适用于 Microsoft Windows XP 的操作系统决定以这种方式编号： 第一个服务器上由任何用户提交到任何队列的打印作业打印服务器打开时，如果所有打印队列为空，被分配 ID 号 2。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-185">For example, the operating system for Microsoft Windows XP determines the numbering in this way: when a print server is turned on, if all its print queues are empty, the first print job submitted on the server by any user and to any queue is assigned ID number 2.</span></span> <span data-ttu-id="1cdc7-186">在服务器上的每个后续作业分配一个数字大于该服务器上的上一个打印作业。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-186">Each subsequent job on the server is assigned a number that is one greater than the previous print job on that server.</span></span>  
  
 <span data-ttu-id="1cdc7-187">打印作业的打印队列没有任何影响它的数字： 如果作业发送到队列 a，队列 b 和 QueueA，按该顺序，则队列 a 将拥有 2 和 4，作业和队列 b 将拥有作业 3。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-187">The print queue for the print job has no effect on its number: if jobs are sent to QueueA, QueueB, and QueueA, in that order, then QueueA has jobs 2 and 4, and QueueB has job 3.</span></span>  
  
 <span data-ttu-id="1cdc7-188">作业分配一个数字之后，数永远不会更改，即使其他作业完成打印，或被取消或重新启动服务器。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-188">After a job is assigned a number, the number never changes, even if other jobs finish printing or are canceled, or if the server is restarted.</span></span> <span data-ttu-id="1cdc7-189">如果已作业队列中有一个或多个服务器重新启动时，第一个新的作业分配一个数字，是一个大于最大作业编号，在服务器启动时处于队列中。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-189">If there are already jobs in one or more queues when the server is restarted, the first new job is assigned a number that is one greater than the highest numbered job that was in the queue when the server started.</span></span> <span data-ttu-id="1cdc7-190">但是，直到它重新启动，打印服务器不会重复使用一个数字。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-190">However, until it restarts, a print server does not reuse a number.</span></span> <span data-ttu-id="1cdc7-191">即使在打印之前，最高编号的作业已取消下, 一步作业获取一个数字，是一个更高版本。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-191">Even if the highest numbered job is canceled before it is printed, the next job gets a number that is one higher.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1cdc7-192">下面的示例演示如何诊断问题的打印作业时使用此属性。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-192">The following example shows how to use this property when diagnosing a problem with a print job.</span></span>  
  
 [!code-cpp[DiagnoseProblematicPrintJob#EnumerateJobsInQueues](~/samples/snippets/cpp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CPP/Program.cpp#enumeratejobsinqueues)]
 [!code-csharp[DiagnoseProblematicPrintJob#EnumerateJobsInQueues](~/samples/snippets/csharp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CSharp/Program.cs#enumeratejobsinqueues)]
 [!code-vb[DiagnoseProblematicPrintJob#EnumerateJobsInQueues](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/visualbasic/program.vb#enumeratejobsinqueues)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JobName">
      <MemberSignature Language="C#" Value="public string JobName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string JobName" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.JobName" />
      <MemberSignature Language="VB.NET" Value="Public Property JobName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ JobName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.JobName : string with get, set" Usage="System.Printing.PrintSystemJobInfo.JobName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1cdc7-193">获取或设置打印作业的名称。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-193">Gets or sets a name for the print job.</span></span></summary>
        <value><span data-ttu-id="1cdc7-194">打印作业的 <see cref="T:System.String" /> 名称。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-194">A <see cref="T:System.String" /> name for the print job.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1cdc7-195">下面的示例演示如何诊断问题的打印作业时使用此属性。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-195">The following example shows how to use this property when diagnosing a problem with a print job.</span></span>  
  
 [!code-cpp[DiagnoseProblematicPrintJob#EnumerateJobsInQueues](~/samples/snippets/cpp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CPP/Program.cpp#enumeratejobsinqueues)]
 [!code-csharp[DiagnoseProblematicPrintJob#EnumerateJobsInQueues](~/samples/snippets/csharp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CSharp/Program.cs#enumeratejobsinqueues)]
 [!code-vb[DiagnoseProblematicPrintJob#EnumerateJobsInQueues](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/visualbasic/program.vb#enumeratejobsinqueues)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JobSize">
      <MemberSignature Language="C#" Value="public int JobSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 JobSize" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.JobSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property JobSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int JobSize { int get(); };" />
      <MemberSignature Language="F#" Value="member this.JobSize : int" Usage="System.Printing.PrintSystemJobInfo.JobSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1cdc7-196">获取打印作业的大小（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-196">Get the size, in bytes, of the print job.</span></span></summary>
        <value><span data-ttu-id="1cdc7-197">一个 <see cref="T:System.Int32" />，它指示打印作业的大小（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-197">An <see cref="T:System.Int32" /> that states the size, in bytes, of the print job.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="JobStatus">
      <MemberSignature Language="C#" Value="public System.Printing.PrintJobStatus JobStatus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Printing.PrintJobStatus JobStatus" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.JobStatus" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property JobStatus As PrintJobStatus" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Printing::PrintJobStatus JobStatus { System::Printing::PrintJobStatus get(); };" />
      <MemberSignature Language="F#" Value="member this.JobStatus : System.Printing.PrintJobStatus" Usage="System.Printing.PrintSystemJobInfo.JobStatus" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Printing.PrintJobStatus</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1cdc7-198">获取打印作业的当前状态。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-198">Gets the current status of the print job.</span></span></summary>
        <value><span data-ttu-id="1cdc7-199">一个 <see cref="T:System.Printing.PrintJobStatus" /> 值。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-199">A <see cref="T:System.Printing.PrintJobStatus" /> value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1cdc7-200">此方法提供一种方法，以避免分别检查每个状态的属性，如<xref:System.Printing.PrintSystemJobInfo.IsPrinting%2A>和<xref:System.Printing.PrintSystemJobInfo.IsPaused%2A>。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-200">This method gives you a means to avoid individually checking each of the status properties, such as <xref:System.Printing.PrintSystemJobInfo.IsPrinting%2A> and <xref:System.Printing.PrintSystemJobInfo.IsPaused%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1cdc7-201">下面的示例演示如何诊断问题的打印作业时使用此属性。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-201">The following example shows how to use this property when diagnosing a problem with a print job.</span></span>  
  
 [!code-cpp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobAttributes](~/samples/snippets/cpp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CPP/Program.cpp#spottroubleusingjobattributes)]
 [!code-csharp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobAttributes](~/samples/snippets/csharp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CSharp/Program.cs#spottroubleusingjobattributes)]
 [!code-vb[DiagnoseProblematicPrintJob#SpotTroubleUsingJobAttributes](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/visualbasic/program.vb#spottroubleusingjobattributes)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JobStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream JobStream { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream JobStream" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.JobStream" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property JobStream As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Stream ^ JobStream { System::IO::Stream ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.JobStream : System.IO.Stream" Usage="System.Printing.PrintSystemJobInfo.JobStream" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1cdc7-202">获取对打印作业的 <see cref="T:System.IO.Stream" /> 的引用。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-202">Gets a reference to the <see cref="T:System.IO.Stream" /> of the print job.</span></span></summary>
        <value><span data-ttu-id="1cdc7-203">一个包含打印作业的 <see cref="T:System.IO.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-203">A <see cref="T:System.IO.Stream" /> that contains the print job.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1cdc7-204">从 Windows 8 和更高版本的操作系统上的.NET Framework 4.5 开始，写入此流的数据必须采用 XPS 格式作为包流。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-204">Starting with the .NET Framework 4.5 on Windows 8 and later versions of the operating system, data written to this stream must be in XPS format as a package stream.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberOfPages">
      <MemberSignature Language="C#" Value="public int NumberOfPages { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NumberOfPages" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.NumberOfPages" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NumberOfPages As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int NumberOfPages { int get(); };" />
      <MemberSignature Language="F#" Value="member this.NumberOfPages : int" Usage="System.Printing.PrintSystemJobInfo.NumberOfPages" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1cdc7-205">获取打印作业中的页数。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-205">Gets the number of pages in the print job.</span></span></summary>
        <value><span data-ttu-id="1cdc7-206">一个 <see cref="T:System.Int32" />，它指示打印作业的页数。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-206">An <see cref="T:System.Int32" /> that states the number of pages in the print job.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1cdc7-207">一页是一张纸的纸张或其他打印介质的一侧。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-207">A page is one side of a sheet of paper or other print media.</span></span>  
  
 <span data-ttu-id="1cdc7-208">下表显示了此属性，并使用的表数的值影响打印作业是否为双面打印 （双面打印） 调用、 它是否为多个页面-每版，调用或它是否同时调用。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-208">The following table shows how the value of this property, and the number of sheets used, is affected by whether the print job calls for two-sided printing (duplexing), whether it calls for multiple pages-per-sheet, or whether it calls for both.</span></span>  
  
### <a name="how-duplexing-and-multipage-printing-affect-printing"></a><span data-ttu-id="1cdc7-209">双面打印设置和多页打印如何影响打印</span><span class="sxs-lookup"><span data-stu-id="1cdc7-209">How duplexing and multipage printing affect printing</span></span>  
  
|<span data-ttu-id="1cdc7-210">双面打印</span><span class="sxs-lookup"><span data-stu-id="1cdc7-210">Duplexing</span></span>|<span data-ttu-id="1cdc7-211">每张纸打印的页</span><span class="sxs-lookup"><span data-stu-id="1cdc7-211">Pages per sheet</span></span>|<span data-ttu-id="1cdc7-212">页数的值</span><span class="sxs-lookup"><span data-stu-id="1cdc7-212">Value of NumberOfPages</span></span>|<span data-ttu-id="1cdc7-213">纸张的物理表数</span><span class="sxs-lookup"><span data-stu-id="1cdc7-213">Number of physical sheets of paper</span></span>|  
|---------------|---------------------|----------------------------|----------------------------------------|  
|<span data-ttu-id="1cdc7-214">No</span><span class="sxs-lookup"><span data-stu-id="1cdc7-214">No</span></span>|<span data-ttu-id="1cdc7-215">1</span><span class="sxs-lookup"><span data-stu-id="1cdc7-215">1</span></span>|<span data-ttu-id="1cdc7-216">相同的文档中的页数。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-216">Identical to the number of pages in the document.</span></span>|<span data-ttu-id="1cdc7-217">相同的文档中的页数。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-217">Identical to the number of pages in the document.</span></span>|  
|<span data-ttu-id="1cdc7-218">是</span><span class="sxs-lookup"><span data-stu-id="1cdc7-218">Yes</span></span>|<span data-ttu-id="1cdc7-219">1</span><span class="sxs-lookup"><span data-stu-id="1cdc7-219">1</span></span>|<span data-ttu-id="1cdc7-220">相同的文档中的页数。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-220">Identical to the number of pages in the document.</span></span>|<span data-ttu-id="1cdc7-221">文档页 ÷ 2 （向上舍入）。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-221">Document pages ÷ 2 (rounded up).</span></span>|  
|<span data-ttu-id="1cdc7-222">No</span><span class="sxs-lookup"><span data-stu-id="1cdc7-222">No</span></span>|<span data-ttu-id="1cdc7-223">多页</span><span class="sxs-lookup"><span data-stu-id="1cdc7-223">Multiple</span></span>|<span data-ttu-id="1cdc7-224">文档页面 ÷ 页面每张纸打印 （向上舍入）。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-224">Document pages ÷ Pages per sheet (rounded up).</span></span>|<span data-ttu-id="1cdc7-225">文档页面 ÷ 页面每张纸打印 （向上舍入）。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-225">Document pages ÷ Pages per sheet (rounded up).</span></span>|  
|<span data-ttu-id="1cdc7-226">是</span><span class="sxs-lookup"><span data-stu-id="1cdc7-226">Yes</span></span>|<span data-ttu-id="1cdc7-227">多页</span><span class="sxs-lookup"><span data-stu-id="1cdc7-227">Multiple</span></span>|<span data-ttu-id="1cdc7-228">文档页面 ÷ 页面每张纸打印 （向上舍入）。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-228">Document pages ÷ Pages per sheet (rounded up).</span></span>|<span data-ttu-id="1cdc7-229">[文档页 ÷ 每张纸打印的页面] ÷ 2 （向上舍入）。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-229">[Document pages ÷ Pages per sheet] ÷ 2 (rounded up).</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Printing.PrintTicket.Duplexing" />
        <altmember cref="P:System.Printing.PrintTicket.PagesPerSheet" />
      </Docs>
    </Member>
    <Member MemberName="NumberOfPagesPrinted">
      <MemberSignature Language="C#" Value="public int NumberOfPagesPrinted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NumberOfPagesPrinted" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.NumberOfPagesPrinted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NumberOfPagesPrinted As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int NumberOfPagesPrinted { int get(); };" />
      <MemberSignature Language="F#" Value="member this.NumberOfPagesPrinted : int" Usage="System.Printing.PrintSystemJobInfo.NumberOfPagesPrinted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1cdc7-230">获取已打印的页数。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-230">Gets the number of pages that have already printed.</span></span></summary>
        <value><span data-ttu-id="1cdc7-231">一个 <see cref="T:System.Int32" />，它指示已打印的页数。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-231">An <see cref="T:System.Int32" /> that states the number of pages that have already printed.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Pause">
      <MemberSignature Language="C#" Value="public void Pause ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Pause() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintSystemJobInfo.Pause" />
      <MemberSignature Language="VB.NET" Value="Public Sub Pause ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Pause();" />
      <MemberSignature Language="F#" Value="member this.Pause : unit -&gt; unit" Usage="printSystemJobInfo.Pause " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1cdc7-232">暂停打印作业，直到 <see cref="M:System.Printing.PrintSystemJobInfo.Resume" /> 运行。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-232">Halts printing of the job until <see cref="M:System.Printing.PrintSystemJobInfo.Resume" /> runs.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1cdc7-233">如果队列中有另一个作业，它将暂停当前作业时开始打印。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-233">If another job is in the queue, it begins printing when the current job is paused.</span></span>  
  
 <span data-ttu-id="1cdc7-234">承载<xref:System.Printing.PrintQueue>还有<xref:System.Printing.PrintQueue.Pause%2A>和<xref:System.Printing.PrintQueue.Resume%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-234">The hosting <xref:System.Printing.PrintQueue> also has <xref:System.Printing.PrintQueue.Pause%2A> and <xref:System.Printing.PrintQueue.Resume%2A> methods.</span></span> <span data-ttu-id="1cdc7-235">如果打印队列已暂停，继续单个作业不会导致以继续打印该作业。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-235">If the print queue is paused, resuming an individual job does not cause that job to resume printing.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Printing.PrintSystemJobInfo.IsPaused" />
        <altmember cref="M:System.Printing.PrintSystemJobInfo.Resume" />
      </Docs>
    </Member>
    <Member MemberName="PositionInPrintQueue">
      <MemberSignature Language="C#" Value="public int PositionInPrintQueue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PositionInPrintQueue" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.PositionInPrintQueue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PositionInPrintQueue As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PositionInPrintQueue { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PositionInPrintQueue : int" Usage="System.Printing.PrintSystemJobInfo.PositionInPrintQueue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1cdc7-236">获取打印作业在打印队列中的位置。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-236">Gets the print job's place in the print queue.</span></span></summary>
        <value><span data-ttu-id="1cdc7-237">一个 <see cref="T:System.Int32" />，它指示打印作业在打印队列中的位置。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-237">An <see cref="T:System.Int32" /> that states the print job's place in the queue.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Priority">
      <MemberSignature Language="C#" Value="public System.Printing.PrintJobPriority Priority { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Printing.PrintJobPriority Priority" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.Priority" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Priority As PrintJobPriority" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Printing::PrintJobPriority Priority { System::Printing::PrintJobPriority get(); };" />
      <MemberSignature Language="F#" Value="member this.Priority : System.Printing.PrintJobPriority" Usage="System.Printing.PrintSystemJobInfo.Priority" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Printing.PrintJobPriority</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1cdc7-238">获取一个非数字表达式，该表达式表示打印作业相对于打印队列中其他作业的优先级。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-238">Gets a non-numerical expression that represents the priority of the print job relative to other jobs in the print queue.</span></span></summary>
        <value><span data-ttu-id="1cdc7-239">一个 <see cref="T:System.Printing.PrintJobPriority" />，表示打印作业的优先级，如 <see cref="F:System.Printing.PrintJobPriority.Maximum" />、<see cref="F:System.Printing.PrintJobPriority.Minimum" />、<see cref="F:System.Printing.PrintJobPriority.Default" /> 或 <see cref="F:System.Printing.PrintJobPriority.None" />。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-239">A <see cref="T:System.Printing.PrintJobPriority" /> that represents the priority of the print job as <see cref="F:System.Printing.PrintJobPriority.Maximum" />, <see cref="F:System.Printing.PrintJobPriority.Minimum" />, <see cref="F:System.Printing.PrintJobPriority.Default" />, or <see cref="F:System.Printing.PrintJobPriority.None" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public override void Refresh ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Refresh() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintSystemJobInfo.Refresh" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Refresh ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Refresh();" />
      <MemberSignature Language="F#" Value="override this.Refresh : unit -&gt; unit" Usage="printSystemJobInfo.Refresh " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1cdc7-240">更新 <see cref="T:System.Printing.PrintSystemJobInfo" /> 对象的属性，以便它们的值与该对象所代表的实际打印作业的值相匹配。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-240">Updates the properties of the <see cref="T:System.Printing.PrintSystemJobInfo" /> object so that their values match the values of the actual print job that the object represents.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1cdc7-241">对的属性所做的任何更改<xref:System.Printing.PrintSystemJobInfo>对象必须通过使用写入到的实际打印作业<xref:System.Printing.PrintSystemJobInfo.Commit%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-241">Any changes that you make to the properties of a <xref:System.Printing.PrintSystemJobInfo> object must be written to the actual print job by using the <xref:System.Printing.PrintSystemJobInfo.Commit%2A> method.</span></span> <span data-ttu-id="1cdc7-242">你尚未提交任何更改会丢失时<xref:System.Printing.PrintSystemJobInfo.Refresh%2A>方法运行。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-242">Any changes that you have not committed are lost when the <xref:System.Printing.PrintSystemJobInfo.Refresh%2A> method runs.</span></span>  
  
 <span data-ttu-id="1cdc7-243">如果派生的类从<xref:System.Printing.PrintSystemJobInfo>具有其他属性，则必须重写<xref:System.Printing.PrintSystemJobInfo.Refresh%2A>与你自己的实现方法。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-243">If you derive a class from <xref:System.Printing.PrintSystemJobInfo> that has additional properties, then you must override the <xref:System.Printing.PrintSystemJobInfo.Refresh%2A> method with an implementation of your own.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Printing.PrintSystemJobInfo.Commit" />
      </Docs>
    </Member>
    <Member MemberName="Restart">
      <MemberSignature Language="C#" Value="public void Restart ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Restart() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintSystemJobInfo.Restart" />
      <MemberSignature Language="VB.NET" Value="Public Sub Restart ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Restart();" />
      <MemberSignature Language="F#" Value="member this.Restart : unit -&gt; unit" Usage="printSystemJobInfo.Restart " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1cdc7-244">从头开始重新启动打印作业。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-244">Restarts a print job from the beginning.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1cdc7-245">（可选） 可以使用<xref:System.Printing.PrintSystemJobInfo.Resume%2A>方法，后者将重新启动暂停的打印作业，从已暂停的点开始。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-245">Optionally, you can use the <xref:System.Printing.PrintSystemJobInfo.Resume%2A> method, which restarts a paused print job, starting at the point it was paused.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Resume">
      <MemberSignature Language="C#" Value="public void Resume ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Resume() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintSystemJobInfo.Resume" />
      <MemberSignature Language="VB.NET" Value="Public Sub Resume ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Resume();" />
      <MemberSignature Language="F#" Value="member this.Resume : unit -&gt; unit" Usage="printSystemJobInfo.Resume " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1cdc7-246">继续打印暂停的打印作业。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-246">Resumes the printing of a paused print job.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1cdc7-247">承载<xref:System.Printing.PrintQueue>还有<xref:System.Printing.PrintQueue.Pause%2A>和<xref:System.Printing.PrintQueue.Resume%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-247">The hosting <xref:System.Printing.PrintQueue> also has <xref:System.Printing.PrintQueue.Pause%2A> and <xref:System.Printing.PrintQueue.Resume%2A> methods.</span></span> <span data-ttu-id="1cdc7-248">如果打印队列已暂停，继续单个作业不会继续打印打印作业。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-248">If the print queue is paused, resuming an individual job does not resume the printing of the print job.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1cdc7-249">下面的示例演示如何使用此方法来恢复暂停的打印作业。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-249">The following example shows how to use this method to resume a paused print job.</span></span>  
  
 [!code-cpp[DiagnoseProblematicPrintJob#HandlePausedJob](~/samples/snippets/cpp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CPP/Program.cpp#handlepausedjob)]
 [!code-csharp[DiagnoseProblematicPrintJob#HandlePausedJob](~/samples/snippets/csharp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CSharp/Program.cs#handlepausedjob)]
 [!code-vb[DiagnoseProblematicPrintJob#HandlePausedJob](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/visualbasic/program.vb#handlepausedjob)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Printing.PrintSystemJobInfo.IsPaused" />
        <altmember cref="M:System.Printing.PrintSystemJobInfo.Pause" />
      </Docs>
    </Member>
    <Member MemberName="StartTimeOfDay">
      <MemberSignature Language="C#" Value="public int StartTimeOfDay { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 StartTimeOfDay" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.StartTimeOfDay" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StartTimeOfDay As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int StartTimeOfDay { int get(); };" />
      <MemberSignature Language="F#" Value="member this.StartTimeOfDay : int" Usage="System.Printing.PrintSystemJobInfo.StartTimeOfDay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1cdc7-250">获取一天中打印作业可以开始打印的最早时间，用协调世界时 (UTC)（也称为格林尼治标准时间 [GMT]）午夜过后的分钟数表示。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-250">Gets the earliest time of day, expressed as the number of minutes after midnight Coordinated Universal Time (UTC) (also called Greenwich Mean Time [GMT]), that the print job can begin printing.</span></span></summary>
        <value><span data-ttu-id="1cdc7-251">一个 <see cref="T:System.Int32" />，指定打印作业可能的最早开始时间，用 (UTC) 午夜过后的分钟数表示。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-251">An <see cref="T:System.Int32" /> specifying the earliest possible start time for the print job, expressed as the number of minutes after midnight (UTC).</span></span> <span data-ttu-id="1cdc7-252">最大值为 1439。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-252">The maximum value is 1439.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1cdc7-253">此值会传播到每个<xref:System.Printing.PrintSystemJobInfo>对象从<xref:System.Printing.PrintQueue.StartTimeOfDay%2A?displayProperty=nameWithType>的托管属性<xref:System.Printing.PrintQueue>时，作业将进入队列。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-253">This value is propagated to each <xref:System.Printing.PrintSystemJobInfo> object from the <xref:System.Printing.PrintQueue.StartTimeOfDay%2A?displayProperty=nameWithType> property of the hosting <xref:System.Printing.PrintQueue> at the time the job enters the queue.</span></span> <span data-ttu-id="1cdc7-254">如果<xref:System.Printing.PrintQueue.StartTimeOfDay%2A?displayProperty=nameWithType>发生更改，那么任何<xref:System.Printing.PrintSystemJobInfo.StartTimeOfDay%2A?displayProperty=nameWithType>值早于<xref:System.Printing.PrintQueue.StartTimeOfDay%2A?displayProperty=nameWithType>更改为的值<xref:System.Printing.PrintQueue.StartTimeOfDay%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-254">If <xref:System.Printing.PrintQueue.StartTimeOfDay%2A?displayProperty=nameWithType> is changed, then any <xref:System.Printing.PrintSystemJobInfo.StartTimeOfDay%2A?displayProperty=nameWithType> value that is earlier than <xref:System.Printing.PrintQueue.StartTimeOfDay%2A?displayProperty=nameWithType> is changed to the value of <xref:System.Printing.PrintQueue.StartTimeOfDay%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="1cdc7-255">该作业已添加到队列后，它可以提供一个新<xref:System.Printing.PrintSystemJobInfo.StartTimeOfDay%2A>值通过[!INCLUDE[TLA#tla_win](~/includes/tlasharptla-win-md.md)] [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]，前提是不早于<xref:System.Printing.PrintQueue.StartTimeOfDay%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-255">After the job is added to the queue, it can be given a new <xref:System.Printing.PrintSystemJobInfo.StartTimeOfDay%2A> value through the [!INCLUDE[TLA#tla_win](~/includes/tlasharptla-win-md.md)] [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)], provided that it is not earlier than <xref:System.Printing.PrintQueue.StartTimeOfDay%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="1cdc7-256">如果你不在 UTC 时区，必须添加或减去 60 以获得有关你所在的时区正确的时间的倍数。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-256">If you are not in the UTC time zone, you must add or subtract multiples of 60 to get the correct time for your time zone.</span></span> <span data-ttu-id="1cdc7-257">例如，如果您处于北美太平洋时区的并且夏时制不起作用，则您的本地时间是比 UTC 早 8 小时。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-257">For example, if you are in the Pacific Time Zone of North America and daylight savings time is not in effect, then your local time is 8 hours earlier than UTC.</span></span> <span data-ttu-id="1cdc7-258">如果<xref:System.Printing.PrintSystemJobInfo.StartTimeOfDay%2A>返回 960，这意味着 16:00 （下午 4:00） 以 UTC (因为 960/60 = 16)。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-258">If <xref:System.Printing.PrintSystemJobInfo.StartTimeOfDay%2A> returns 960, that means 16:00 (4:00 PM) in UTC (because 960/60 = 16).</span></span> <span data-ttu-id="1cdc7-259">若要将其转换为太平洋时间，您必须减去 （= 8 \* 60） 480 分钟。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-259">To convert this to Pacific Time, you must subtract 480 (= 8 \* 60) minutes.</span></span>  
  
 <span data-ttu-id="1cdc7-260">您还必须记住的时间升级到零后 24 小时 (即; 1439 分后)。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-260">You also must remember that time rolls over to zero after 24 hours (that is; after the 1439th minute).</span></span> <span data-ttu-id="1cdc7-261">如果<xref:System.Printing.PrintSystemJobInfo.StartTimeOfDay%2A>返回 120，这意味着凌晨 2:00 utc 格式。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-261">If <xref:System.Printing.PrintSystemJobInfo.StartTimeOfDay%2A> returns 120, that means 2:00 AM in UTC.</span></span> <span data-ttu-id="1cdc7-262">若要将其转换为太平洋时间，必须减去 480 分钟，这会导致-360。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-262">To convert this to Pacific Time, you must subtract 480 minutes, which results in -360.</span></span> <span data-ttu-id="1cdc7-263">若要获取有意义的正值，请将负号添加到一天，1440，得出 1080 （下午 6:00） 太平洋时间的最终值中的总分钟数。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-263">To get a positive value that has meaning, add the negative number to the total minutes in a day, 1440, resulting in a final value of 1080 (6:00 PM) Pacific Time.</span></span>  
  
 <span data-ttu-id="1cdc7-264">请参阅<xref:System.TimeZone>， <xref:System.TimeSpan>，和<xref:System.DateTime>帮助进行时区调整的方法。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-264">See <xref:System.TimeZone>, <xref:System.TimeSpan>, and <xref:System.DateTime> for methods that help make time-zone adjustments.</span></span>  
  
 <span data-ttu-id="1cdc7-265">如果打印机始终可用，此属性对在所有时区返回 0。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-265">If the printer is always available, then this property returns 0 in all time zones.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1cdc7-266">下面的示例演示如何使用此属性作为诊断有问题的打印作业的过程的一部分。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-266">The following example shows how to use this property as part of the process of diagnosing a problematic print job.</span></span>  
  
 [!code-cpp[DiagnoseProblematicPrintJob#UsingJobStartAndUntilTimes](~/samples/snippets/cpp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CPP/Program.cpp#usingjobstartanduntiltimes)]
 [!code-csharp[DiagnoseProblematicPrintJob#UsingJobStartAndUntilTimes](~/samples/snippets/csharp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CSharp/Program.cs#usingjobstartanduntiltimes)]
 [!code-vb[DiagnoseProblematicPrintJob#UsingJobStartAndUntilTimes](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/visualbasic/program.vb#usingjobstartanduntiltimes)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.TimeZone" />
        <altmember cref="T:System.TimeSpan" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="P:System.Printing.PrintQueue.StartTimeOfDay" />
        <altmember cref="P:System.Printing.PrintQueue.UntilTimeOfDay" />
        <altmember cref="P:System.Printing.PrintSystemJobInfo.UntilTimeOfDay" />
      </Docs>
    </Member>
    <Member MemberName="Submitter">
      <MemberSignature Language="C#" Value="public string Submitter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Submitter" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.Submitter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Submitter As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Submitter { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Submitter : string" Usage="System.Printing.PrintSystemJobInfo.Submitter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1cdc7-267">获取提交打印作业的用户的名称。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-267">Gets the name of the user who submitted the print job.</span></span></summary>
        <value><span data-ttu-id="1cdc7-268">一个 <see cref="T:System.String" />，它标识提交打印作业的用户。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-268">A <see cref="T:System.String" /> that identifies the user who submitted the print job.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1cdc7-269">下面的示例演示如何诊断问题的打印作业时使用此属性。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-269">The following example shows how to use this property when diagnosing a problem with a print job.</span></span>  
  
 [!code-cpp[DiagnoseProblematicPrintJob#EnumerateJobsInQueues](~/samples/snippets/cpp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CPP/Program.cpp#enumeratejobsinqueues)]
 [!code-csharp[DiagnoseProblematicPrintJob#EnumerateJobsInQueues](~/samples/snippets/csharp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CSharp/Program.cs#enumeratejobsinqueues)]
 [!code-vb[DiagnoseProblematicPrintJob#EnumerateJobsInQueues](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/visualbasic/program.vb#enumeratejobsinqueues)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TimeJobSubmitted">
      <MemberSignature Language="C#" Value="public DateTime TimeJobSubmitted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime TimeJobSubmitted" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.TimeJobSubmitted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TimeJobSubmitted As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime TimeJobSubmitted { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.TimeJobSubmitted : DateTime" Usage="System.Printing.PrintSystemJobInfo.TimeJobSubmitted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1cdc7-270">获取提交打印作业的日期和时间。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-270">Gets the date and time that the print job is submitted.</span></span></summary>
        <value><span data-ttu-id="1cdc7-271">一个 <see cref="T:System.DateTime" /> 对象，它包含提交打印作业的日期和时间。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-271">A <see cref="T:System.DateTime" /> object containing the date and time that the print job is submitted.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TimeSinceStartedPrinting">
      <MemberSignature Language="C#" Value="public int TimeSinceStartedPrinting { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TimeSinceStartedPrinting" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.TimeSinceStartedPrinting" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TimeSinceStartedPrinting As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int TimeSinceStartedPrinting { int get(); };" />
      <MemberSignature Language="F#" Value="member this.TimeSinceStartedPrinting : int" Usage="System.Printing.PrintSystemJobInfo.TimeSinceStartedPrinting" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1cdc7-272">获取自打印作业开始打印后已过去的时间（以毫秒为单位）。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-272">Gets the time, in milliseconds, since the print job started printing.</span></span></summary>
        <value><span data-ttu-id="1cdc7-273">一个 <see cref="T:System.Int32" />，它表示打印作业开始后已过去的时间（以毫秒为单位）。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-273">An <see cref="T:System.Int32" /> that represents the time, in milliseconds, since the print job started.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UntilTimeOfDay">
      <MemberSignature Language="C#" Value="public int UntilTimeOfDay { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 UntilTimeOfDay" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.UntilTimeOfDay" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UntilTimeOfDay As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int UntilTimeOfDay { int get(); };" />
      <MemberSignature Language="F#" Value="member this.UntilTimeOfDay : int" Usage="System.Printing.PrintSystemJobInfo.UntilTimeOfDay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1cdc7-274">获取一天中打印作业可以开始打印的最晚时间，用协调世界时 (UTC)（也称为格林尼治标准时间 [GMT]）午夜过后的分钟数表示。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-274">Gets the last time of day, expressed as the number of minutes after midnight Coordinated Universal Time (UTC) (also called Greenwich Mean Time [GMT]), that the print job can begin printing.</span></span></summary>
        <value><span data-ttu-id="1cdc7-275">一个 <see cref="T:System.Int32" />，指定作业可以打印的最晚时间，用 (UTC) 午夜过后的分钟数表示。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-275">An <see cref="T:System.Int32" /> that specifies the last time that the job can print, expressed as the number of minutes after midnight (UTC).</span></span> <span data-ttu-id="1cdc7-276">最大值为 1439。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-276">The maximum value is 1439.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1cdc7-277">此值会传播到每个<xref:System.Printing.PrintSystemJobInfo>对象从<xref:System.Printing.PrintQueue.UntilTimeOfDay%2A?displayProperty=nameWithType>的托管属性<xref:System.Printing.PrintQueue>时，作业将进入队列。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-277">This value is propagated to each <xref:System.Printing.PrintSystemJobInfo> object from the <xref:System.Printing.PrintQueue.UntilTimeOfDay%2A?displayProperty=nameWithType> property of the hosting <xref:System.Printing.PrintQueue> at the time the job enters the queue.</span></span> <span data-ttu-id="1cdc7-278">如果<xref:System.Printing.PrintQueue.UntilTimeOfDay%2A?displayProperty=nameWithType>发生更改，那么任何<xref:System.Printing.PrintSystemJobInfo.UntilTimeOfDay%2A?displayProperty=nameWithType>值晚于<xref:System.Printing.PrintQueue.UntilTimeOfDay%2A?displayProperty=nameWithType>更改为的值<xref:System.Printing.PrintQueue.UntilTimeOfDay%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-278">If <xref:System.Printing.PrintQueue.UntilTimeOfDay%2A?displayProperty=nameWithType> is changed, then any <xref:System.Printing.PrintSystemJobInfo.UntilTimeOfDay%2A?displayProperty=nameWithType> value that is later than <xref:System.Printing.PrintQueue.UntilTimeOfDay%2A?displayProperty=nameWithType> is changed to the value of <xref:System.Printing.PrintQueue.UntilTimeOfDay%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="1cdc7-279">该作业已添加到队列后，它可以提供一个新<xref:System.Printing.PrintSystemJobInfo.UntilTimeOfDay%2A>值通过[!INCLUDE[TLA#tla_win](~/includes/tlasharptla-win-md.md)] [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]，前提是不晚于<xref:System.Printing.PrintQueue.UntilTimeOfDay%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-279">After the job is added to the queue, it can be given a new <xref:System.Printing.PrintSystemJobInfo.UntilTimeOfDay%2A> value through the [!INCLUDE[TLA#tla_win](~/includes/tlasharptla-win-md.md)] [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)], provided that it is not later than <xref:System.Printing.PrintQueue.UntilTimeOfDay%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="1cdc7-280">如果你不在 UTC 时区，必须添加或减去 60 以获得有关你所在的时区正确的时间的倍数。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-280">If you are not in the UTC time zone, you must add or subtract multiples of 60 to get the correct time for your time zone.</span></span> <span data-ttu-id="1cdc7-281">例如，如果您处于北美太平洋时区的并且夏时制不起作用，则您的本地时间是比 UTC 早 8 小时。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-281">For example, if you are in the Pacific Time Zone of North America and daylight savings time is not in effect, then your local time is 8 hours earlier than UTC.</span></span> <span data-ttu-id="1cdc7-282">如果<xref:System.Printing.PrintSystemJobInfo.UntilTimeOfDay%2A>返回 960，这意味着 16:00 （下午 4:00） 以 UTC (因为 960/60 = 16)。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-282">If <xref:System.Printing.PrintSystemJobInfo.UntilTimeOfDay%2A> returns 960, that means 16:00 (4:00 PM) in UTC (because 960/60 = 16).</span></span> <span data-ttu-id="1cdc7-283">若要将其转换为太平洋时间，您必须减去 （= 8 \* 60） 480 分钟。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-283">To convert this to Pacific Time, you must subtract 480 (= 8 \* 60) minutes.</span></span>  
  
 <span data-ttu-id="1cdc7-284">您还必须记住的时间升级到零后 24 小时 (即; 1439 分后)。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-284">You also must remember that time rolls over to zero after 24 hours (that is; after the 1439th minute).</span></span> <span data-ttu-id="1cdc7-285">如果<xref:System.Printing.PrintSystemJobInfo.UntilTimeOfDay%2A>返回 120，这意味着凌晨 2:00 utc 格式。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-285">If <xref:System.Printing.PrintSystemJobInfo.UntilTimeOfDay%2A> returns 120, that means 2:00 AM in UTC.</span></span> <span data-ttu-id="1cdc7-286">若要将其转换为太平洋时间，必须减去 480 分钟，这会导致-360。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-286">To convert this to Pacific Time, you must subtract 480 minutes, which results in -360.</span></span> <span data-ttu-id="1cdc7-287">若要获取有意义的正值，请将负号添加到一天，1440，得出 1080 （下午 6:00） 太平洋时间的最终值中的总分钟数。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-287">To get a positive value that has meaning, add the negative number to the total minutes in a day, 1440, resulting in a final value of 1080 (6:00 PM) Pacific Time.</span></span>  
  
 <span data-ttu-id="1cdc7-288">请参阅<xref:System.TimeZone>， <xref:System.TimeSpan>，和<xref:System.DateTime>帮助进行时区调整的方法。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-288">See <xref:System.TimeZone>, <xref:System.TimeSpan>, and <xref:System.DateTime> for methods that help make time-zone adjustments.</span></span>  
  
 <span data-ttu-id="1cdc7-289">如果打印机始终可用，此属性对在所有时区返回 0。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-289">If the printer is always available, then this property returns 0 in all time zones.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1cdc7-290">下面的示例演示如何使用此属性作为诊断有问题的打印作业的过程的一部分。</span><span class="sxs-lookup"><span data-stu-id="1cdc7-290">The following example shows how to use this property as part of the process of diagnosing a problematic print job.</span></span>  
  
 [!code-cpp[DiagnoseProblematicPrintJob#UsingJobStartAndUntilTimes](~/samples/snippets/cpp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CPP/Program.cpp#usingjobstartanduntiltimes)]
 [!code-csharp[DiagnoseProblematicPrintJob#UsingJobStartAndUntilTimes](~/samples/snippets/csharp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CSharp/Program.cs#usingjobstartanduntiltimes)]
 [!code-vb[DiagnoseProblematicPrintJob#UsingJobStartAndUntilTimes](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/visualbasic/program.vb#usingjobstartanduntiltimes)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.TimeZone" />
        <altmember cref="T:System.TimeSpan" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="P:System.Printing.PrintQueue.StartTimeOfDay" />
        <altmember cref="P:System.Printing.PrintQueue.UntilTimeOfDay" />
        <altmember cref="P:System.Printing.PrintSystemJobInfo.StartTimeOfDay" />
      </Docs>
    </Member>
  </Members>
</Type>