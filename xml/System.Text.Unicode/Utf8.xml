<Type Name="Utf8" FullName="System.Text.Unicode.Utf8">
  <Metadata><Meta Name="ms.openlocfilehash" Value="33237e25e2292e543bc5e780f50fecc9883cb67e" /><Meta Name="ms.sourcegitcommit" Value="cfc0e4215fd0d259582ada2141878befd7c3c8c6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/12/2019" /><Meta Name="ms.locfileid" Value="67855509" /></Metadata><TypeSignature Language="C#" Value="public static class Utf8" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Utf8 extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Text.Unicode.Utf8" />
  <TypeSignature Language="VB.NET" Value="Public Class Utf8" />
  <TypeSignature Language="C++ CLI" Value="public ref class Utf8 abstract sealed" />
  <TypeSignature Language="F#" Value="type Utf8 = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>提供用于将分块数据在 UTF-8 和 UTF-16 编码之间转换的静态方法。</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="FromUtf16">
      <MemberSignature Language="C#" Value="public static System.Buffers.OperationStatus FromUtf16 (ReadOnlySpan&lt;char&gt; source, Span&lt;byte&gt; destination, out int charsRead, out int bytesWritten, bool replaceInvalidSequences = true, bool isFinalBlock = true);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Buffers.OperationStatus FromUtf16(valuetype System.ReadOnlySpan`1&lt;char&gt; source, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; charsRead, [out] int32&amp; bytesWritten, bool replaceInvalidSequences, bool isFinalBlock) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Unicode.Utf8.FromUtf16(System.ReadOnlySpan{System.Char},System.Span{System.Byte},System.Int32@,System.Int32@,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromUtf16 (source As ReadOnlySpan(Of Char), destination As Span(Of Byte), ByRef charsRead As Integer, ByRef bytesWritten As Integer, Optional replaceInvalidSequences As Boolean = true, Optional isFinalBlock As Boolean = true) As OperationStatus" />
      <MemberSignature Language="F#" Value="static member FromUtf16 : ReadOnlySpan&lt;char&gt; * Span&lt;byte&gt; *  *  * bool * bool -&gt; System.Buffers.OperationStatus" Usage="System.Text.Unicode.Utf8.FromUtf16 (source, destination, charsRead, bytesWritten, replaceInvalidSequences, isFinalBlock)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Buffers.OperationStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="charsRead" Type="System.Int32" RefType="out" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="replaceInvalidSequences" Type="System.Boolean" />
        <Parameter Name="isFinalBlock" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="source">UTF-16 编码只读字符范围。</param>
        <param name="destination">UTF-8 编码字节范围。</param>
        <param name="charsRead">方法返回时，从 <paramref name="source" /> 中读取的字符数。</param>
        <param name="bytesWritten">方法返回时，写入 <paramref name="destination" /> 的字符数。</param>
        <param name="replaceInvalidSequences">若要将 <paramref name="source" /> 中的无效 UTF-16 序列替换为 U+FFFD，则为 <see langword="true" />；若要返回 <see cref="F:System.Buffers.OperationStatus.InvalidData" />（如果在 <paramref name="source" /> 中发现了无效字符），则为 <see langword="false" />。</param>
        <param name="isFinalBlock">如果方法不应返回 <see cref="F:System.Buffers.OperationStatus.InvalidData" />，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <summary>将 UTF-16 字符范围转换为 UTF-8 编码字节范围。</summary>
        <returns>一个指示转换状态的值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

### Remarks

此方法对应于[UTFEncoding.GetBytes](xref:System.Text.UTF8Encoding.GetBytes%2A)方法，但它具有不同的调用约定、 不同的错误处理机制和不同的性能特征。 

ReplaceInvalidSequences 是否`true`，该方法将替换中任何格式错误的子序列`source`U + FFFD 中与`destination`并继续处理的缓冲区的其余部分。 否则，该方法返回<xref:System.Buffers.OperationStatus.InvalidData?displayProperty=nameWithType>如果遇到任何格式不正确的序列。

如果该方法返回一个错误代码，out 参数指示的数据已成功转换代码，并可以从这些值中推导出的格式不正确的子序列的位置。

如果 replaceInvalidSequences' `true`，该方法永不返回<xref:System.Buffers.OperationStatus.InvalidData?displayProperty=nameWithType>。 如果 isFinalBlock' `true`，该方法不返回<xref:System.Buffers.OperationStatus.NeedMoreData?displayProperty=nameWithType>。

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUtf16">
      <MemberSignature Language="C#" Value="public static System.Buffers.OperationStatus ToUtf16 (ReadOnlySpan&lt;byte&gt; source, Span&lt;char&gt; destination, out int bytesRead, out int charsWritten, bool replaceInvalidSequences = true, bool isFinalBlock = true);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Buffers.OperationStatus ToUtf16(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, valuetype System.Span`1&lt;char&gt; destination, [out] int32&amp; bytesRead, [out] int32&amp; charsWritten, bool replaceInvalidSequences, bool isFinalBlock) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Unicode.Utf8.ToUtf16(System.ReadOnlySpan{System.Byte},System.Span{System.Char},System.Int32@,System.Int32@,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUtf16 (source As ReadOnlySpan(Of Byte), destination As Span(Of Char), ByRef bytesRead As Integer, ByRef charsWritten As Integer, Optional replaceInvalidSequences As Boolean = true, Optional isFinalBlock As Boolean = true) As OperationStatus" />
      <MemberSignature Language="F#" Value="static member ToUtf16 : ReadOnlySpan&lt;byte&gt; * Span&lt;char&gt; *  *  * bool * bool -&gt; System.Buffers.OperationStatus" Usage="System.Text.Unicode.Utf8.ToUtf16 (source, destination, bytesRead, charsWritten, replaceInvalidSequences, isFinalBlock)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Buffers.OperationStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" />
        <Parameter Name="bytesRead" Type="System.Int32" RefType="out" />
        <Parameter Name="charsWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="replaceInvalidSequences" Type="System.Boolean" />
        <Parameter Name="isFinalBlock" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="source">UTF-8 编码只读字符范围。</param>
        <param name="destination">UTF-8 编码字节范围。</param>
        <param name="bytesRead">方法返回时，从 <paramref name="source" /> 中读取的字节数。</param>
        <param name="charsWritten">方法返回时，写入 <paramref name="destination" /> 的字符数。</param>
        <param name="replaceInvalidSequences">若要将 <paramref name="source" /> 中的无效 UTF-8 序列替换为 U+FFFD，则为 <see langword="true" />；若要返回 <see cref="F:System.Buffers.OperationStatus.InvalidData" />（如果在 <paramref name="source" /> 中发现了无效字符），则为 <see langword="false" />。</param>
        <param name="isFinalBlock">如果方法不应返回 <see cref="F:System.Buffers.OperationStatus.InvalidData" />，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <summary>将 UTF-8 编码只读字节范围转换为 UTF-16 编码字符范围。</summary>
        <returns>一个指示转换状态的值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

### Remarks

此方法对应于[UTFEncoding.GetChars](xref:System.Text.UTF8Encoding.GetChars%2A)方法，但它具有不同的调用约定、 不同的错误处理机制和不同的性能特征。 

ReplaceInvalidSequences 是否`true`，该方法将替换中任何格式错误的子序列`source`U + FFFD 中与`destination`并继续处理的缓冲区的其余部分。 否则，该方法返回<xref:System.Buffers.OperationStatus.InvalidData?displayProperty=nameWithType>如果遇到任何格式不正确的序列。

如果该方法返回一个错误代码，out 参数指示的数据已成功转换代码，并可以从这些值中推导出的格式不正确的子序列的位置。

如果 replaceInvalidSequences' `true`，该方法永不返回<xref:System.Buffers.OperationStatus.InvalidData?displayProperty=nameWithType>。 如果 isFinalBlock' `true`，该方法不返回<xref:System.Buffers.OperationStatus.NeedMoreData?displayProperty=nameWithType>。

          ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
