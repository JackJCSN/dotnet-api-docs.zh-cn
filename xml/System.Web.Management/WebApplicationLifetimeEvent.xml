<Type Name="WebApplicationLifetimeEvent" FullName="System.Web.Management.WebApplicationLifetimeEvent">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9dec4539e083e1e13543ddc121a16aea14f5417d" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70442843" /></Metadata><TypeSignature Language="C#" Value="public class WebApplicationLifetimeEvent : System.Web.Management.WebManagementEvent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebApplicationLifetimeEvent extends System.Web.Management.WebManagementEvent" />
  <TypeSignature Language="DocId" Value="T:System.Web.Management.WebApplicationLifetimeEvent" />
  <TypeSignature Language="VB.NET" Value="Public Class WebApplicationLifetimeEvent&#xA;Inherits WebManagementEvent" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebApplicationLifetimeEvent : System::Web::Management::WebManagementEvent" />
  <TypeSignature Language="F#" Value="type WebApplicationLifetimeEvent = class&#xA;    inherit WebManagementEvent" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Management.WebManagementEvent</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>表示应用程序的生存期中重要的事件。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET health monitoring 允许生产和运营人员管理已部署的 Web 应用程序。 <xref:System.Web.Management>命名空间包含的运行状况事件类型负责打包应用程序运行状况数据，以及负责处理此数据的提供程序类型。 它还包含在运行状况事件的管理过程中可帮助的支持类型。  
  
 应用程序生存期事件包含事件，例如应用程序启动和关闭事件。 如果应用程序已终止，则可以通过查看相关事件消息字段来确定原因。  
  
 <xref:System.Web.Management.WebApplicationLifetimeEvent>实例发生时，ASP.NET 运行状况监视将更新应用程序生存期 Events 性能计数器。 可以通过将<xref:System.Web.Management.WebApplicationLifetimeEvent>对象添加`rules`到配置文件的`healthMonitoring`节的子节来记录这些事件，如下面的示例中所示。  
  
```  
<rules>  
  <add name="Application Events"  
    eventName="Application Lifetime Events"  
    provider="EventLogProvider"  
    profile="Default"  
    minInterval="00:01:00" />  
</rules>  
  
```  
  
 Application Lifetime Events 性能计数器包含所有 ASP.NET 生存期事件的总和。 若要在系统监视器（PerfMon）中查看此性能计数器，请在 "**添加计数器**" 窗口中，从 "**性能对象**" 下拉列表中选择 " **ASP.NET** "。 选择 "**应用程序生存期事件**" 性能计数器，然后单击 "**添加**" 按钮。 有关详细信息，请参阅[MSDN](https://go.microsoft.com/fwlink/?linkid=37118)上的 "将系统监视器用于 ASP.NET 应用程序"。 如果允许标准<xref:System.Web.Management.EventLogWebEventProvider>记录事件，可以通过选择**应用程序**日志在[事件查看器](https://docs.microsoft.com/previous-versions/windows/it-pro/windows-server-2003/cc756915\(v=ws.10\))中查看事件。
  
> [!CAUTION]
>  <xref:System.Web.Management.WebApplicationLifetimeEvent>由于对象是一个大容量事件，因此记录它会占用大量资源，并且可能会降低系统的速度。 这也可能会导致在<xref:System.Web.Management.EventLogWebEventProvider>类发生时，由于事件量过大以及事件日志记录的工作方式而导致其他事件被覆盖。  
  
> [!NOTE]
>  在大多数情况下，你将能够使用已实现的 ASP.NET health 监视类型，并且将通过在 "配置" `healthMonitoring`部分中指定值来控制运行状况监视系统。 还可以从运行状况监视类型派生，以创建自己的自定义事件和提供程序。 有关从<xref:System.Web.Management.WebApplicationLifetimeEvent>类派生的示例，请参阅本主题中提供的示例。  
  
   
  
## Examples  
 下面的代码示例演示如何从<xref:System.Web.Management.WebApplicationLifetimeEvent>类派生以创建自定义事件。  
  
 [!code-csharp[System.Web.Management.WebApplicationLifetimeEvent#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.management.WebApplicationLifetimeEvent/CS/webapplicationlifetimeevent.cs#1)]
 [!code-vb[System.Web.Management.WebApplicationLifetimeEvent#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.management.WebApplicationLifetimeEvent/VB/webapplicationlifetimeevent.vb#1)]  
  
 以下配置文件节选显示了如何配置配置文件的`healthMonitoring`部分，以将上面定义的`SampleWebApplicationLifetimeEvent`代码添加到 ASP.NET health 监视系统。 若要将事件添加到系统中，必须通过将新条目添加到`eventMappings`部分来定义事件，并通过将新条目添加`rules`到部分来将事件映射到提供程序。  
  
```  
<healthMonitoring  
  enabled="true"  
  heartBeatInterval="0">  
  
    <eventMappings>  
       <clear />  
       <!-- Configure the application lifetime event -->  
       <!-- object to handle the Web application events. -->  
       <add name="SampleApplicationLifetimeEvents"  
         type="System.Web.Management.SampleWebApplicationLifetimeEvent,  
         System.Web,Version=2.0.3600.0,  
         Culture=neutral,PublicKeyToken=b03f5f7f11d50a3a" />  
     </eventMappings>  
  
    <rules>  
      <clear/>  
       // Configure the connection between the   
       // application lifetime event object   
       // and the provider that must process it.  
       <add name="Custom Application Events"  
         eventName="SampleApplicationLifetimeEvents"  
         provider="EventLogProvider"  
         profile="Default"  
         minInterval="00:01:00" />  
    </rules>  
  
</healthMonitoring>  
```  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>格式化要显示的自定义事件信息时，请<see cref="M:System.Web.Management.WebBaseEvent.FormatCustomEventDetails(System.Web.Management.WebEventFormatter)" />重写方法而<see cref="Overload:System.Web.Management.WebBaseEvent.ToString" />不是方法。 这将避免覆盖或篡改敏感系统信息。</para></block>
    <related type="Article" href="https://msdn.microsoft.com/library/e003f224-70fe-4cd8-a71a-2dc81e2d7e4c">ASP.NET 运行状况监视概述</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Web.Management.WebApplicationLifetimeEvent" /> 类的新实例。</summary>
        <related type="Article" href="https://msdn.microsoft.com/library/e003f224-70fe-4cd8-a71a-2dc81e2d7e4c">ASP.NET 运行状况监视概述</related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal WebApplicationLifetimeEvent (string message, object eventSource, int eventCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(string message, object eventSource, int32 eventCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebApplicationLifetimeEvent.#ctor(System.String,System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (message As String, eventSource As Object, eventCode As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; WebApplicationLifetimeEvent(System::String ^ message, System::Object ^ eventSource, int eventCode);" />
      <MemberSignature Language="F#" Value="new System.Web.Management.WebApplicationLifetimeEvent : string * obj * int -&gt; System.Web.Management.WebApplicationLifetimeEvent" Usage="new System.Web.Management.WebApplicationLifetimeEvent (message, eventSource, eventCode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="eventSource" Type="System.Object" />
        <Parameter Name="eventCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="message">与该事件关联的消息。</param>
        <param name="eventSource">作为事件源的对象。</param>
        <param name="eventCode">与该事件关联的代码。 实现自定义事件时，事件代码必须大于 <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" />。</param>
        <summary>使用所提供的参数初始化 <see cref="T:System.Web.Management.WebApplicationLifetimeEvent" /> 类。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此构造函数由 ASP.NET health 监视系统在内部使用。 你永远不会使用它来创建<xref:System.Web.Management.WebApplicationLifetimeEvent>类的实例，但可以在实现继承自此类的事件类型时调用此构造函数。  
  
> [!NOTE]
>  <xref:System.Web.Management.WebApplicationLifetimeEvent.%23ctor%2A>构造函数不应在代码中直接使用。 它由 ASP.NET 调用。 从类派生时<xref:System.Web.Management.WebApplicationLifetimeEvent.%23ctor%2A> ，可以调用构造函数。 <xref:System.Web.Management.WebApplicationLifetimeEvent>  
  
   
  
## Examples  
 下面的代码示例演示如何<xref:System.Web.Management.WebApplicationLifetimeEvent.%23ctor%2A>在 ASP.NET 自定义运行状况事件中使用。 此代码示例主要用于显示要使用的正确语法。  
  
 [!code-csharp[System.Web.Management.WebApplicationLifetimeEvent#2](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.management.WebApplicationLifetimeEvent/CS/webapplicationlifetimeevent.cs#2)]
 [!code-vb[System.Web.Management.WebApplicationLifetimeEvent#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.management.WebApplicationLifetimeEvent/VB/webapplicationlifetimeevent.vb#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/e003f224-70fe-4cd8-a71a-2dc81e2d7e4c">ASP.NET 运行状况监视概述</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal WebApplicationLifetimeEvent (string message, object eventSource, int eventCode, int eventDetailCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(string message, object eventSource, int32 eventCode, int32 eventDetailCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebApplicationLifetimeEvent.#ctor(System.String,System.Object,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (message As String, eventSource As Object, eventCode As Integer, eventDetailCode As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; WebApplicationLifetimeEvent(System::String ^ message, System::Object ^ eventSource, int eventCode, int eventDetailCode);" />
      <MemberSignature Language="F#" Value="new System.Web.Management.WebApplicationLifetimeEvent : string * obj * int * int -&gt; System.Web.Management.WebApplicationLifetimeEvent" Usage="new System.Web.Management.WebApplicationLifetimeEvent (message, eventSource, eventCode, eventDetailCode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="eventSource" Type="System.Object" />
        <Parameter Name="eventCode" Type="System.Int32" />
        <Parameter Name="eventDetailCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="message">与该事件关联的消息。</param>
        <param name="eventSource">作为事件源的对象。</param>
        <param name="eventCode">与该事件关联的代码。 实现自定义事件时，事件代码必须大于 <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" />。</param>
        <param name="eventDetailCode">用于指定事件的详细标识符的 <see cref="T:System.Web.Management.WebEventCodes" /> 值。</param>
        <summary>使用所提供的参数初始化 <see cref="T:System.Web.Management.WebApplicationLifetimeEvent" /> 类。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此构造函数由 ASP.NET health 监视系统在内部使用。 你永远不会使用它来创建<xref:System.Web.Management.WebApplicationLifetimeEvent>类的实例，但可以在实现继承自此类的事件类型时调用此构造函数。  
  
> [!NOTE]
>  <xref:System.Web.Management.WebApplicationLifetimeEvent.%23ctor%2A>构造函数不应在代码中直接使用。 它由 ASP.NET 调用。 从类派生时<xref:System.Web.Management.WebApplicationLifetimeEvent.%23ctor%2A> ，可以调用构造函数。 <xref:System.Web.Management.WebApplicationLifetimeEvent>  
  
   
  
## Examples  
 下面的代码示例演示如何<xref:System.Web.Management.WebApplicationLifetimeEvent.%23ctor%2A>在 ASP.NET 自定义运行状况事件中使用。 此代码示例主要用于显示要使用的正确语法。  
  
 [!code-csharp[System.Web.Management.WebApplicationLifetimeEvent#3](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.management.WebApplicationLifetimeEvent/CS/webapplicationlifetimeevent.cs#3)]
 [!code-vb[System.Web.Management.WebApplicationLifetimeEvent#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.management.WebApplicationLifetimeEvent/VB/webapplicationlifetimeevent.vb#3)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/e003f224-70fe-4cd8-a71a-2dc81e2d7e4c">ASP.NET 运行状况监视概述</related>
      </Docs>
    </Member>
    <Member MemberName="IncrementPerfCounters">
      <MemberSignature Language="C#" Value="protected internal override void IncrementPerfCounters ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void IncrementPerfCounters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebApplicationLifetimeEvent.IncrementPerfCounters" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub IncrementPerfCounters ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void IncrementPerfCounters();" />
      <MemberSignature Language="F#" Value="override this.IncrementPerfCounters : unit -&gt; unit" Usage="webApplicationLifetimeEvent.IncrementPerfCounters " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在内部使用，用于递增性能计数器。</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/e003f224-70fe-4cd8-a71a-2dc81e2d7e4c">ASP.NET 运行状况监视概述</related>
      </Docs>
    </Member>
  </Members>
</Type>
