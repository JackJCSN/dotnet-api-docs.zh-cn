<Type Name="IContract" FullName="System.AddIn.Contract.IContract">
  <Metadata><Meta Name="ms.openlocfilehash" Value="22c1de483e863d4f8d873f5f3159a66d52420e86" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="63915290" /></Metadata><TypeSignature Language="C#" Value="public interface IContract" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IContract" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Contract.IContract" />
  <TypeSignature Language="VB.NET" Value="Public Interface IContract" />
  <TypeSignature Language="C++ CLI" Value="public interface class IContract" />
  <TypeSignature Language="F#" Value="type IContract = interface" />
  <AssemblyInfo>
    <AssemblyName>System.AddIn.Contract</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="4e7a3-101">表示用于在单独更新的组件之间进行通信的所有协定的基接口。</span><span class="sxs-lookup"><span data-stu-id="4e7a3-101">Represents the base interface for all contracts that are used for communication between components that are updated independently.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4e7a3-102"><xref:System.AddIn.Contract.IContract>接口定义一个协定，独立更新的组件，如应用程序和外接程序时，可以使用它进行通信。</span><span class="sxs-lookup"><span data-stu-id="4e7a3-102">The <xref:System.AddIn.Contract.IContract> interface defines a contract that independently updated components, such as an application and an add-in, can use to communicate.</span></span> <span data-ttu-id="4e7a3-103">组件可使用<xref:System.AddIn.Contract.IContract>跨进程进行通信或应用程序域边界或与同一个进程或应用程序域中的其他组件进行通信。</span><span class="sxs-lookup"><span data-stu-id="4e7a3-103">Components can use <xref:System.AddIn.Contract.IContract> to communicate across process or application domain boundaries, or to communicate with other components in the same process or application domain.</span></span> <span data-ttu-id="4e7a3-104"><xref:System.AddIn.Contract.IContract> 用于创建使用作为.NET Framework 的组件的类似用途`IUnknown`接口可用于为组件创建使用 com。</span><span class="sxs-lookup"><span data-stu-id="4e7a3-104"><xref:System.AddIn.Contract.IContract> serves a similar purpose for components created using the .NET Framework as the `IUnknown` interface serves for components created using COM.</span></span> <span data-ttu-id="4e7a3-105">若要确定对象是否实现特定协定，请使用<xref:System.AddIn.Contract.IContract.QueryContract%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="4e7a3-105">To determine whether an object implements a particular contract, use the <xref:System.AddIn.Contract.IContract.QueryContract%2A> method.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AcquireLifetimeToken">
      <MemberSignature Language="C#" Value="public int AcquireLifetimeToken ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 AcquireLifetimeToken() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IContract.AcquireLifetimeToken" />
      <MemberSignature Language="VB.NET" Value="Public Function AcquireLifetimeToken () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int AcquireLifetimeToken();" />
      <MemberSignature Language="F#" Value="abstract member AcquireLifetimeToken : unit -&gt; int" Usage="iContract.AcquireLifetimeToken " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4e7a3-106">指定客户端在撤消此协定之前一直可以访问它。</span><span class="sxs-lookup"><span data-stu-id="4e7a3-106">Specifies that the contract is accessible to a client until the client revokes the contract.</span></span></summary>
        <returns><span data-ttu-id="4e7a3-107">一个值（也称作生存期标记），用于标识已获取协定的客户端。</span><span class="sxs-lookup"><span data-stu-id="4e7a3-107">A value, also known as a lifetime token, that identifies the client that has acquired the contract.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4e7a3-108">实现的对象的客户端<xref:System.AddIn.Contract.IContract>调用<xref:System.AddIn.Contract.IContract.AcquireLifetimeToken%2A>方法以通知客户端需要的对象访问该协定。</span><span class="sxs-lookup"><span data-stu-id="4e7a3-108">Clients of an object that implements <xref:System.AddIn.Contract.IContract> call the <xref:System.AddIn.Contract.IContract.AcquireLifetimeToken%2A> method to notify the object that the client requires access to the contract.</span></span> <span data-ttu-id="4e7a3-109"><xref:System.AddIn.Contract.IContract>保证，只要尚未吊销它传递到客户端的至少一个生存期标记才可用。</span><span class="sxs-lookup"><span data-stu-id="4e7a3-109">An <xref:System.AddIn.Contract.IContract> is guaranteed to be usable as long as at least one lifetime token that it passed to a client has not been revoked.</span></span>  
  
 <span data-ttu-id="4e7a3-110">若要吊销的协定，客户端调用<xref:System.AddIn.Contract.IContract.RevokeLifetimeToken%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="4e7a3-110">To revoke a contract, clients call the <xref:System.AddIn.Contract.IContract.RevokeLifetimeToken%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRemoteHashCode">
      <MemberSignature Language="C#" Value="public int GetRemoteHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetRemoteHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IContract.GetRemoteHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRemoteHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetRemoteHashCode();" />
      <MemberSignature Language="F#" Value="abstract member GetRemoteHashCode : unit -&gt; int" Usage="iContract.GetRemoteHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4e7a3-111">返回 <see cref="T:System.AddIn.Contract.IContract" /> 的哈希代码。</span><span class="sxs-lookup"><span data-stu-id="4e7a3-111">Returns a hash code for the <see cref="T:System.AddIn.Contract.IContract" />.</span></span></summary>
        <returns><span data-ttu-id="4e7a3-112"><see cref="T:System.AddIn.Contract.IContract" /> 的哈希代码。</span><span class="sxs-lookup"><span data-stu-id="4e7a3-112">A hash code for the <see cref="T:System.AddIn.Contract.IContract" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryContract">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.IContract QueryContract (string contractIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.AddIn.Contract.IContract QueryContract(string contractIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IContract.QueryContract(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function QueryContract (contractIdentifier As String) As IContract" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::AddIn::Contract::IContract ^ QueryContract(System::String ^ contractIdentifier);" />
      <MemberSignature Language="F#" Value="abstract member QueryContract : string -&gt; System.AddIn.Contract.IContract" Usage="iContract.QueryContract contractIdentifier" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.IContract</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contractIdentifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="contractIdentifier"><span data-ttu-id="4e7a3-113">一个字符串，用于标识所请求的协定。</span><span class="sxs-lookup"><span data-stu-id="4e7a3-113">A string that identifies the contract that is being requested.</span></span></param>
        <summary><span data-ttu-id="4e7a3-114">返回由此协定实现的协定。</span><span class="sxs-lookup"><span data-stu-id="4e7a3-114">Returns a contract that is implemented by this contract.</span></span></summary>
        <returns><span data-ttu-id="4e7a3-115">一个 <see cref="T:System.AddIn.Contract.IContract" />，它表示客户端从当前协定请求的协定；如果当前协定不支持所请求的协定，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4e7a3-115">An <see cref="T:System.AddIn.Contract.IContract" /> that represents a contract that a client is requesting from the current contract; <see langword="null" /> if the current contract does not support the contract that is requested.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4e7a3-116"><xref:System.AddIn.Contract.IContract.QueryContract%2A>方法使<xref:System.AddIn.Contract.IContract>对象来公开其他协定。</span><span class="sxs-lookup"><span data-stu-id="4e7a3-116">The <xref:System.AddIn.Contract.IContract.QueryContract%2A> method enables <xref:System.AddIn.Contract.IContract> objects to expose other contracts.</span></span> <span data-ttu-id="4e7a3-117"><xref:System.AddIn.Contract.IContract.QueryContract%2A> 用途类似于`IUnknown.QueryInterface`com 方法</span><span class="sxs-lookup"><span data-stu-id="4e7a3-117"><xref:System.AddIn.Contract.IContract.QueryContract%2A> serves a purpose similar to that of the `IUnknown.QueryInterface` method in COM.</span></span>  
  
 <span data-ttu-id="4e7a3-118">用于标识约定的字符串的格式定义由<xref:System.AddIn.Contract.IContract>实现。</span><span class="sxs-lookup"><span data-stu-id="4e7a3-118">The format of the strings used to identify contracts is defined by the <xref:System.AddIn.Contract.IContract> implementation.</span></span> <span data-ttu-id="4e7a3-119">建议你使用<xref:System.Type.AssemblyQualifiedName%2A>正被查询的协定。</span><span class="sxs-lookup"><span data-stu-id="4e7a3-119">It is recommended that you use the <xref:System.Type.AssemblyQualifiedName%2A> of the contract that is being queried.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoteEquals">
      <MemberSignature Language="C#" Value="public bool RemoteEquals (System.AddIn.Contract.IContract contract);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RemoteEquals(class System.AddIn.Contract.IContract contract) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IContract.RemoteEquals(System.AddIn.Contract.IContract)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoteEquals (contract As IContract) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoteEquals(System::AddIn::Contract::IContract ^ contract);" />
      <MemberSignature Language="F#" Value="abstract member RemoteEquals : System.AddIn.Contract.IContract -&gt; bool" Usage="iContract.RemoteEquals contract" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contract" Type="System.AddIn.Contract.IContract" />
      </Parameters>
      <Docs>
        <param name="contract"><span data-ttu-id="4e7a3-120">要与此 <see cref="T:System.AddIn.Contract.IContract" /> 进行比较的协定。</span><span class="sxs-lookup"><span data-stu-id="4e7a3-120">The contract to compare with this <see cref="T:System.AddIn.Contract.IContract" />.</span></span></param>
        <summary><span data-ttu-id="4e7a3-121">指示指定的协定是否与此 <see cref="T:System.AddIn.Contract.IContract" /> 相等。</span><span class="sxs-lookup"><span data-stu-id="4e7a3-121">Indicates whether the specified contract is equal to this <see cref="T:System.AddIn.Contract.IContract" />.</span></span></summary>
        <returns><span data-ttu-id="4e7a3-122">如果 <paramref name="contract" /> 等于此 <see cref="T:System.AddIn.Contract.IContract" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4e7a3-122"><see langword="true" /> if <paramref name="contract" /> is equal to this <see cref="T:System.AddIn.Contract.IContract" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoteToString">
      <MemberSignature Language="C#" Value="public string RemoteToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string RemoteToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IContract.RemoteToString" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoteToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ RemoteToString();" />
      <MemberSignature Language="F#" Value="abstract member RemoteToString : unit -&gt; string" Usage="iContract.RemoteToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4e7a3-123">返回当前 <see cref="T:System.AddIn.Contract.IContract" /> 的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="4e7a3-123">Returns a string representation of the current <see cref="T:System.AddIn.Contract.IContract" />.</span></span></summary>
        <returns><span data-ttu-id="4e7a3-124">当前 <see cref="T:System.AddIn.Contract.IContract" /> 的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="4e7a3-124">A string representation of the current <see cref="T:System.AddIn.Contract.IContract" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RevokeLifetimeToken">
      <MemberSignature Language="C#" Value="public void RevokeLifetimeToken (int token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RevokeLifetimeToken(int32 token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IContract.RevokeLifetimeToken(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RevokeLifetimeToken (token As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RevokeLifetimeToken(int token);" />
      <MemberSignature Language="F#" Value="abstract member RevokeLifetimeToken : int -&gt; unit" Usage="iContract.RevokeLifetimeToken token" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="token"><span data-ttu-id="4e7a3-125">一个值（也称作生存期标记），用于标识正在调用协定的客户端。</span><span class="sxs-lookup"><span data-stu-id="4e7a3-125">A value, also known as a lifetime token, that identifies the client that is revoking the contract.</span></span></param>
        <summary><span data-ttu-id="4e7a3-126">指定客户端不再能够访问该协定。</span><span class="sxs-lookup"><span data-stu-id="4e7a3-126">Specifies that the contract is no longer accessible to a client.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4e7a3-127">实现的对象的客户端<xref:System.AddIn.Contract.IContract>调用<xref:System.AddIn.Contract.IContract.RevokeLifetimeToken%2A>方法以通知该对象在客户端不再需要该协定。</span><span class="sxs-lookup"><span data-stu-id="4e7a3-127">Clients of an object that implements <xref:System.AddIn.Contract.IContract> call the <xref:System.AddIn.Contract.IContract.RevokeLifetimeToken%2A> method to notify the object that the client no longer needs the contract.</span></span> <span data-ttu-id="4e7a3-128"><xref:System.AddIn.Contract.IContract>保证，只要尚未吊销它传递到客户端的至少一个生存期标记才可用。</span><span class="sxs-lookup"><span data-stu-id="4e7a3-128">An <xref:System.AddIn.Contract.IContract> is guaranteed to be usable as long as at least one lifetime token that it passed to a client has not been revoked.</span></span>  
  
 <span data-ttu-id="4e7a3-129">获取一个协定，客户端调用<xref:System.AddIn.Contract.IContract.AcquireLifetimeToken%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="4e7a3-129">To acquire a contract, clients call the <xref:System.AddIn.Contract.IContract.AcquireLifetimeToken%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>