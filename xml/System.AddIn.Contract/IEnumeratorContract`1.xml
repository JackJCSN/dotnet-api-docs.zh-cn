<Type Name="IEnumeratorContract&lt;T&gt;" FullName="System.AddIn.Contract.IEnumeratorContract&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1a0469e9583ab4dd08b4aa289708122b7135e89b" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="63915247" /></Metadata><TypeSignature Language="C#" Value="public interface IEnumeratorContract&lt;T&gt; : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEnumeratorContract`1&lt;T&gt; implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Contract.IEnumeratorContract`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEnumeratorContract(Of T)&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public interface class IEnumeratorContract : IDisposable" />
  <TypeSignature Language="F#" Value="type IEnumeratorContract&lt;'T&gt; = interface&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.AddIn.Contract</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T">要枚举的对象的类型。</typeparam>
    <summary>枚举 <see cref="T:System.AddIn.Contract.IListContract`1" /> 集合中的元素。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 枚举器可以用于读取集合中的数据，但它们不能用于修改集合。  
  
 最初，枚举数定位在集合中第一个元素的前面。 在此位置上，返回值的<xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A>是不确定的。 因此，您必须调用<xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A>将枚举数前移到集合之前调用的第一个元素<xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A>。  
  
 在调用 <xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A> 之前，<xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> 返回相同的对象。 <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> 设置返回值<xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A>到下一个元素。  
  
 如果<xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A>越过集合，枚举器的末尾放置在集合中的最后一个元素的后面和<xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A>返回`false`。 当枚举数位于此位置上，对后续调用<xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A>还返回`false`。 如果最后一次调用到<xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A>返回`false`，返回值的<xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A>是不确定的。  
  
 只要集合保持不变，枚举数就保持有效。 如果对集合进行更改（如添加、修改或删除元素），则枚举数将失效且不可恢复，而且其行为是不确定的。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetCurrent">
      <MemberSignature Language="C#" Value="public T GetCurrent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !T GetCurrent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IEnumeratorContract`1.GetCurrent" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrent () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; T GetCurrent();" />
      <MemberSignature Language="F#" Value="abstract member GetCurrent : unit -&gt; 'T" Usage="iEnumeratorContract.GetCurrent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回集合中位于枚举数当前位置的对象。</summary>
        <returns>集合中位于枚举数当前位置的 <see cref="T:System.AddIn.Contract.IContract" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 返回值<xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A>任何以下情况下未定义：  
  
-   枚举数位于集合中的第一个元素之前立即创建枚举器或<xref:System.AddIn.Contract.IEnumeratorContract%601.Reset%2A>调用。 <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> 必须调用以枚举器前进到集合之前调用的第一个元素<xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A>。  
  
-   上次调用<xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A>返回`false`，指示集合的末尾。  
  
-   枚举器无效，由于在集合中，如添加、 修改或删除元素所做的更改。  
  
 在调用 <xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A> 之前，<xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> 返回相同的对象。 <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> 设置返回值<xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A>到下一个元素。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IEnumeratorContract`1.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveNext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool MoveNext();" />
      <MemberSignature Language="F#" Value="abstract member MoveNext : unit -&gt; bool" Usage="iEnumeratorContract.MoveNext " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>将枚举数推进到集合的下一个元素。</summary>
        <returns>如果枚举数已成功地推进到下一个元素，则为 <see langword="true" />；如果枚举数传递到集合的末尾，则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 创建一个枚举器或<xref:System.AddIn.Contract.IEnumeratorContract%601.Reset%2A>方法调用时，枚举数位于集合中的第一个元素之前。 首次调用<xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A>方法将枚举器移动到集合的第一个元素。  
  
 如果<xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A>越过集合，枚举器的末尾放置在集合中的最后一个元素的后面和<xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A>返回`false`。 当枚举数位于此位置上，对后续调用<xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A>也会返回`false`直到<xref:System.AddIn.Contract.IEnumeratorContract%601.Reset%2A>调用。  
  
 只要集合保持不变，枚举数就保持有效。 如果进行了更改到集合中，例如添加、 修改或删除元素，该枚举数将失效且不可恢复，并且下次调用<xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A>或<xref:System.AddIn.Contract.IEnumeratorContract%601.Reset%2A>引发<xref:System.InvalidOperationException>。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">集合在枚举器创建后被修改。</exception>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IEnumeratorContract`1.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberSignature Language="F#" Value="abstract member Reset : unit -&gt; unit" Usage="iEnumeratorContract.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>将枚举数设置为其初始位置，该位置位于集合中第一个元素之前。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 只要集合保持不变，枚举数就保持有效。 如果进行了更改到集合中，例如添加、 修改或删除元素，该枚举数将失效且不可恢复，并且下次调用<xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A>或<xref:System.AddIn.Contract.IEnumeratorContract%601.Reset%2A>引发<xref:System.InvalidOperationException>。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">集合在枚举器创建后被修改。</exception>
      </Docs>
    </Member>
  </Members>
</Type>