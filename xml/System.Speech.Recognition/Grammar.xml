<Type Name="Grammar" FullName="System.Speech.Recognition.Grammar">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1e8a7757cdbb2cd463dcccaa8ce68a6de2defeec" /><Meta Name="ms.sourcegitcommit" Value="c573d537afba2d4c1463538f1095f2f155025464" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="10/16/2019" /><Meta Name="ms.locfileid" Value="72408061" /></Metadata><TypeSignature Language="C#" Value="public class Grammar" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Grammar extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Recognition.Grammar" />
  <TypeSignature Language="VB.NET" Value="Public Class Grammar" />
  <TypeSignature Language="C++ CLI" Value="public ref class Grammar" />
  <TypeSignature Language="F#" Value="type Grammar = class" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("Grammar: {(_uri != null ? "uri=" + _uri.ToString () + " " : "") + "rule=" + _ruleName }")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="8ada8-101">引用语音识别语法的运行时对象，应用程序可以用之来定义语音识别的约束。</span><span class="sxs-lookup"><span data-stu-id="8ada8-101">A runtime object that references a speech recognition grammar, which an application can use to define the constraints for speech recognition.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ada8-102">语音识别语法是一组规则或约束，用于定义语音识别引擎可识别为有意义的输入的内容。</span><span class="sxs-lookup"><span data-stu-id="8ada8-102">A speech recognition grammar is a set of rules or constraints that define what a speech recognition engine can recognize as meaningful input.</span></span> <span data-ttu-id="8ada8-103">有关创建和使用语音识别语法的详细信息，请参阅[语音识别](https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361633(v=office.14))，[使用 XML 创建](https://msdn.microsoft.com/library/2d799487-49c6-4cc9-b42f-f71cd3824fe1)语法，[使用 GrammarBuilder 创建语法](https://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae)，以及[使用 SrgsGrammar 创建语法](https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361680(v%3doffice.14))。</span><span class="sxs-lookup"><span data-stu-id="8ada8-103">For more information about creating and using speech recognition grammars, see [Speech Recognition](https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361633(v=office.14)),  [Create Grammars Using XML](https://msdn.microsoft.com/library/2d799487-49c6-4cc9-b42f-f71cd3824fe1), [Create Grammars Using GrammarBuilder](https://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae), and [Create Grammars Using SrgsGrammar](https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361680(v%3doffice.14)).</span></span>  
  
 <span data-ttu-id="8ada8-104">创作语法之后，必须将其生成到语音识别引擎可以加载的 @no__t 0 对象中，并且应用程序可以在运行时使用它来管理语音识别。</span><span class="sxs-lookup"><span data-stu-id="8ada8-104">After you author a grammar, you must build it into a <xref:System.Speech.Recognition.Grammar> object that a speech recognition engine can load and that your application can use at runtime to manage speech recognition.</span></span> <span data-ttu-id="8ada8-105">您可以使用 @no__t 0 构造函数从 <xref:System.Speech.Recognition.GrammarBuilder> 或 <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> 对象，或从包含支持的语法的语法说明的文件或 <xref:System.IO.Stream> 创建 @no__t 实例。</span><span class="sxs-lookup"><span data-stu-id="8ada8-105">You can use a <xref:System.Speech.Recognition.Grammar.%23ctor%2A> constructor to create a <xref:System.Speech.Recognition.Grammar> instance from a <xref:System.Speech.Recognition.GrammarBuilder> or a <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> object, or from a file or a <xref:System.IO.Stream> that contains a description of a grammar in a supported format.</span></span> <span data-ttu-id="8ada8-106">支持的格式包括：</span><span class="sxs-lookup"><span data-stu-id="8ada8-106">Supported formats include the following:</span></span>  
  
-   <span data-ttu-id="8ada8-107">符合 W3C[语音识别语法规范（SRGS）版本 1.0](https://go.microsoft.com/fwlink/?LinkId=201761)的 XML 格式文件</span><span class="sxs-lookup"><span data-stu-id="8ada8-107">XML-format files that conform to the W3C [Speech Recognition Grammar Specification (SRGS) Version 1.0](https://go.microsoft.com/fwlink/?LinkId=201761)</span></span>  
  
-   <span data-ttu-id="8ada8-108">已编译为带有 cfg 文件扩展名的二进制文件的语法</span><span class="sxs-lookup"><span data-stu-id="8ada8-108">Grammars that have been compiled to a binary file with a .cfg file extension</span></span>  
  
 <span data-ttu-id="8ada8-109">在其参数中接受 XML 格式语法文件的语法构造函数将 XML 语法编译为二进制格式，以优化语音识别引擎的加载和使用。</span><span class="sxs-lookup"><span data-stu-id="8ada8-109">Grammar constructors that accept XML-format grammar files in their arguments compile the XML grammars to a binary format to optimize them for loading and consumption by a speech recognition engine.</span></span> <span data-ttu-id="8ada8-110">您可以通过使用 @no__t 1 方法之一，缩短从 XML 格式的语法构造 <xref:System.Speech.Recognition.Grammar> 对象所需的时间量。</span><span class="sxs-lookup"><span data-stu-id="8ada8-110">You can reduce the amount of time required to construct a <xref:System.Speech.Recognition.Grammar> object from an XML-format grammar by compiling the grammar in advance, using one of the <xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A> methods.</span></span>  
  
 <span data-ttu-id="8ada8-111">应用程序的语音识别引擎由 @no__t 0 或 @no__t 的对象管理，可以加载多个语音识别语法。</span><span class="sxs-lookup"><span data-stu-id="8ada8-111">An application's speech recognition engine, as managed by a <xref:System.Speech.Recognition.SpeechRecognizer> or <xref:System.Speech.Recognition.SpeechRecognitionEngine> object, can load multiple speech recognition grammars.</span></span> <span data-ttu-id="8ada8-112">应用程序可以通过设置 <xref:System.Speech.Recognition.Grammar.Enabled%2A> 属性来独立地启用或禁用单个语法，并通过 @no__t 属性（如 <xref:System.Speech.Recognition.Grammar.Priority%2A> 和 <xref:System.Speech.Recognition.Grammar.Weight%2A> 属性）修改识别行为。</span><span class="sxs-lookup"><span data-stu-id="8ada8-112">The application can independently enable or disable individual grammars by setting the <xref:System.Speech.Recognition.Grammar.Enabled%2A> property, and modify recognition behavior through <xref:System.Speech.Recognition.Grammar> properties, such as the <xref:System.Speech.Recognition.Grammar.Priority%2A> and <xref:System.Speech.Recognition.Grammar.Weight%2A> properties.</span></span>  
  
 <span data-ttu-id="8ada8-113">当输入与语法中的路径相匹配时，将引发语法的 @no__t 0 事件。</span><span class="sxs-lookup"><span data-stu-id="8ada8-113">The grammar's <xref:System.Speech.Recognition.Grammar.SpeechRecognized> event is raised when input matches a path through the grammar.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8ada8-114">最佳做法是验证用于构建 <xref:System.Speech.Recognition.Grammar> 对象的任何 URI 或 DLL 的安全性。</span><span class="sxs-lookup"><span data-stu-id="8ada8-114">It is a best practice to verify the safety of any URI or DLL used to build a <xref:System.Speech.Recognition.Grammar> object.</span></span>  
>   
>  <span data-ttu-id="8ada8-115">Windows 和语音平台为从 DLL 或支持脚本编写的语法构造 <xref:System.Speech.Recognition.Grammar> 实例的应用程序提供安全性。</span><span class="sxs-lookup"><span data-stu-id="8ada8-115">Windows and the Speech platform provide security for applications constructing a <xref:System.Speech.Recognition.Grammar> instance from a DLL or from a grammar that supports scripting.</span></span>  
>   
>  <span data-ttu-id="8ada8-116">@No__t-0 对象中的脚本始终按从 @no__t 中的网页下载的方式运行。</span><span class="sxs-lookup"><span data-stu-id="8ada8-116">Scripts in <xref:System.Speech.Recognition.Grammar> objects are always run as if downloaded from a web page in the `Internet Zone`.</span></span> <span data-ttu-id="8ada8-117">公共语言运行时（CLR）隔离加载的任何 DLL 以获取语法定义。</span><span class="sxs-lookup"><span data-stu-id="8ada8-117">The Common Language Runtime (CLR) isolates any DLL loaded to obtain a grammar definition.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8ada8-118">下面的示例从 XML 文件（城市）中定义的语音识别语法构造 <xref:System.Speech.Recognition.Grammar> 对象。</span><span class="sxs-lookup"><span data-stu-id="8ada8-118">The following example constructs a <xref:System.Speech.Recognition.Grammar> object from a speech recognition grammar defined in a XML file (cities.xml).</span></span> <span data-ttu-id="8ada8-119">下面的 XML 示例显示了市县文件的内容。</span><span class="sxs-lookup"><span data-stu-id="8ada8-119">The content of the cities.xml file appears in the following XML example.</span></span>  
  
```csharp  
// Load a cities grammar from a local file and return the grammar object.   
private static Grammar CreateGrammarFromFile()  
{  
  Grammar citiesGrammar = new Grammar(@"c:\temp\cities.xml");  
  citiesGrammar.Name = "SRGS File Cities Grammar";  
  return citiesGrammar;  
}  
  
```  
  
```xml  
  
<?xml version="1.0" encoding="UTF-8" ?>  
<grammar version="1.0" xml:lang="en-US"  
         xmlns="http://www.w3.org/2001/06/grammar"  
         tag-format="semantics/1.0" root="Main">  
  
  <!-- cities.xml:   
    Defines an SRGS grammar for requesting a flight. This grammar includes  
    a Cities rule that lists the cities that can be used for departures  
    and destinations. -->  
  
  <rule id="Main">  
    <item>  
      I would like to fly from <ruleref uri="#Cities"/>  
      to <ruleref uri="#Cities"/>  
    </item>  
  </rule>  
  
  <rule id="Cities" scope="public">  
    <one-of>  
      <item> Seattle </item>  
      <item> Los Angeles </item>  
      <item> New York </item>  
      <item> Miami </item>  
    </one-of>  
  </rule>  
</grammar>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" />
    <altmember cref="T:System.Speech.Recognition.GrammarBuilder" />
    <altmember cref="T:System.Speech.Recognition.SpeechRecognitionEngine" />
    <altmember cref="T:System.Speech.Recognition.SpeechRecognizer" />
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=15143"><span data-ttu-id="8ada8-120">语音识别语法规范</span><span class="sxs-lookup"><span data-stu-id="8ada8-120">Speech Recognition Grammar Specification</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8ada8-121">初始化 <see cref="T:System.Speech.Recognition.Grammar" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="8ada8-121">Initializes a new instance of the <see cref="T:System.Speech.Recognition.Grammar" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ada8-122">你可以使用 @no__t 0 构造函数从 <xref:System.Speech.Recognition.GrammarBuilder> 或 <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> 对象，或从包含支持的语法的语法说明的文件或 <xref:System.IO.Stream> 创建 @no__t 实例。</span><span class="sxs-lookup"><span data-stu-id="8ada8-122">You can use a <xref:System.Speech.Recognition.Grammar.%23ctor%2A> constructor to create a <xref:System.Speech.Recognition.Grammar> instance from a <xref:System.Speech.Recognition.GrammarBuilder> or <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> object, or from a file or a <xref:System.IO.Stream> that contains a description of a grammar in a supported format.</span></span> <span data-ttu-id="8ada8-123">支持的格式包括：</span><span class="sxs-lookup"><span data-stu-id="8ada8-123">Supported formats include the following:</span></span>  
  
-   <span data-ttu-id="8ada8-124">符合 W3C[语音识别语法规范（SRGS）版本 1.0](https://go.microsoft.com/fwlink/?LinkId=201761)的 XML 格式文件</span><span class="sxs-lookup"><span data-stu-id="8ada8-124">XML-format files that conform to the W3C [Speech Recognition Grammar Specification (SRGS) Version 1.0](https://go.microsoft.com/fwlink/?LinkId=201761)</span></span>  
  
-   <span data-ttu-id="8ada8-125">已编译为带有 cfg 文件扩展名的二进制文件的语法</span><span class="sxs-lookup"><span data-stu-id="8ada8-125">Grammars that have been compiled to a binary file with a .cfg file extension</span></span>  
  
 <span data-ttu-id="8ada8-126">在其参数中接受 XML 格式语法文件的语法构造函数将 XML 语法编译为二进制格式，以优化语音识别引擎的加载和使用。</span><span class="sxs-lookup"><span data-stu-id="8ada8-126">Grammar constructors that accept XML-format grammar files in their arguments compile the XML grammars to a binary format to optimize them for loading and consumption by a speech recognition engine.</span></span> <span data-ttu-id="8ada8-127">您可以通过使用 @no__t 1 方法之一，缩短从 XML 格式的语法构造 <xref:System.Speech.Recognition.Grammar> 对象所需的时间量。</span><span class="sxs-lookup"><span data-stu-id="8ada8-127">You can reduce the amount of time required to construct a <xref:System.Speech.Recognition.Grammar> object from an XML-format grammar by compiling the grammar in advance, using one of the <xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A> methods.</span></span>  
  
 <span data-ttu-id="8ada8-128">语音识别语法可以定义根规则。</span><span class="sxs-lookup"><span data-stu-id="8ada8-128">A speech recognition grammar can define a root rule.</span></span> <span data-ttu-id="8ada8-129">若要创建一个指定要用作其根规则的规则的 @no__t 0 对象，请使用接受 @no__t 参数的构造函数。</span><span class="sxs-lookup"><span data-stu-id="8ada8-129">To create a <xref:System.Speech.Recognition.Grammar> object that specifies which rule to use as its root rule, use a constructor that accepts the `ruleName` parameter.</span></span>  
  
 <span data-ttu-id="8ada8-130">若要创建一个指定基 URI 以解析相对规则引用的 @no__t 0 对象，请使用采用 `baseUri` 参数的构造函数。</span><span class="sxs-lookup"><span data-stu-id="8ada8-130">To create a <xref:System.Speech.Recognition.Grammar> object that specifies a base URI to resolve relative rule references, use a constructor that takes the `baseUri` parameter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Grammar ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.Grammar.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Grammar();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8ada8-131">初始化 <see cref="T:System.Speech.Recognition.Grammar" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="8ada8-131">Initializes a new instance of the <see cref="T:System.Speech.Recognition.Grammar" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Grammar (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.Grammar.#ctor(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Grammar(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.Grammar : System.IO.Stream -&gt; System.Speech.Recognition.Grammar" Usage="new System.Speech.Recognition.Grammar stream" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="8ada8-132">以受支持的格式描述语音识别语法的流。</span><span class="sxs-lookup"><span data-stu-id="8ada8-132">A stream that describes a speech recognition grammar in a supported format.</span></span></param>
        <summary><span data-ttu-id="8ada8-133">从 <see cref="T:System.Speech.Recognition.Grammar" /> 初始化 <see cref="T:System.IO.Stream" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="8ada8-133">Initializes a new instance of the <see cref="T:System.Speech.Recognition.Grammar" /> class from a <see cref="T:System.IO.Stream" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ada8-134">此构造函数不会将任何参数传递给初始化处理程序，并且说明不应定义需要参数的初始化处理程序。</span><span class="sxs-lookup"><span data-stu-id="8ada8-134">This constructor does not pass any parameters to the initialization handler, and the description should not define an initialization handler that requires arguments.</span></span>  
  
 <span data-ttu-id="8ada8-135">此构造函数可以使用以下格式创建 <xref:System.Speech.Recognition.Grammar> 实例：</span><span class="sxs-lookup"><span data-stu-id="8ada8-135">This constructor can create a <xref:System.Speech.Recognition.Grammar> instance from the following formats:</span></span>  
  
-   <span data-ttu-id="8ada8-136">符合 W3C[语音识别语法规范（SRGS）版本 1.0](https://go.microsoft.com/fwlink/?LinkId=201761)的 XML 格式文件</span><span class="sxs-lookup"><span data-stu-id="8ada8-136">XML-format files that conform to the W3C [Speech Recognition Grammar Specification (SRGS) Version 1.0](https://go.microsoft.com/fwlink/?LinkId=201761)</span></span>  
  
-   <span data-ttu-id="8ada8-137">已编译为带有 cfg 文件扩展名的二进制文件的语法</span><span class="sxs-lookup"><span data-stu-id="8ada8-137">Grammars that have been compiled to a binary file with a .cfg file extension</span></span>  
  
 <span data-ttu-id="8ada8-138">此构造函数将 XML 格式语法文件编译为二进制格式，以优化语音识别引擎的加载和使用。</span><span class="sxs-lookup"><span data-stu-id="8ada8-138">This constructor compiles XML-format grammar files to a binary format to optimize them for loading and consumption by a speech recognition engine.</span></span> <span data-ttu-id="8ada8-139">您可以通过使用 @no__t 1 方法之一，缩短从 XML 格式的语法构造 <xref:System.Speech.Recognition.Grammar> 对象所需的时间量。</span><span class="sxs-lookup"><span data-stu-id="8ada8-139">You can reduce the amount of time required to construct a <xref:System.Speech.Recognition.Grammar> object from an XML-format grammar by compiling the grammar in advance, using one of the <xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A> methods.</span></span>  
  
 <span data-ttu-id="8ada8-140">SRGS 语法可以定义根规则。</span><span class="sxs-lookup"><span data-stu-id="8ada8-140">An SRGS grammar can define a root rule.</span></span> <span data-ttu-id="8ada8-141">若要从流创建 @no__t 0 对象并指定根规则，请使用 @no__t 或 <xref:System.Speech.Recognition.Grammar.%23ctor%2A> 构造函数。</span><span class="sxs-lookup"><span data-stu-id="8ada8-141">To create a <xref:System.Speech.Recognition.Grammar> object from a stream and specify a root rule, use the <xref:System.Speech.Recognition.Grammar.%23ctor%2A> or <xref:System.Speech.Recognition.Grammar.%23ctor%2A> constructor.</span></span>  
  
 <span data-ttu-id="8ada8-142">若要从流创建 @no__t 0 对象，并指定要用于解析相对规则引用的基 URI，请使用 @no__t 构造函数。</span><span class="sxs-lookup"><span data-stu-id="8ada8-142">To create a <xref:System.Speech.Recognition.Grammar> object from a stream and specify a base URI to use to resolve relative rule references, use the <xref:System.Speech.Recognition.Grammar.%23ctor%2A> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8ada8-143">下面的示例使用文件流从本地 SRGS 文件（城市）创建语音识别语法。</span><span class="sxs-lookup"><span data-stu-id="8ada8-143">The following example creates a speech recognition grammar from a local SRGS file (cities.xml) using a file stream.</span></span> <span data-ttu-id="8ada8-144">下面C#的示例显示了市县文件的内容。</span><span class="sxs-lookup"><span data-stu-id="8ada8-144">The content of the cities.xml file appears following C# example.</span></span>  
  
```csharp  
  
// Load a cities grammar from an I/O stream and    
// return the new grammar.   
private static Grammar CreateGrammarFromStream()  
{  
  string fileName = @"c:\temp\cities.xml";  
  Grammar citiesGrammar =  
    new Grammar(new FileStream(fileName, FileMode.Open));  
  citiesGrammar.Name = "Stream Cities Grammar";  
  return citiesGrammar;  
}  
```  
  
```xml  
  
<?xml version="1.0" encoding="UTF-8" ?>  
<grammar version="1.0" xml:lang="en-US"  
         xmlns="http://www.w3.org/2001/06/grammar"  
         tag-format="semantics/1.0" root="Main">  
  
  <!-- cities.xml:   
    Defines an SRGS grammar for requesting a flight. This grammar includes  
    a Cities rule that lists the cities that can be used for departures  
    and destinations. -->  
  
  <rule id="Main">  
    <item>  
      I would like to fly from <ruleref uri="#Cities"/>  
      to <ruleref uri="#Cities"/>  
    </item>  
  </rule>  
  
  <rule id="Cities" scope="public">  
    <one-of>  
      <item>Seattle</item>  
      <item>Los Angeles</item>  
      <item>New York</item>  
      <item>Miami</item>  
    </one-of>  
  </rule>  
</grammar>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8ada8-145"><paramref name="stream" /> 描述未包含根规则的语法。</span><span class="sxs-lookup"><span data-stu-id="8ada8-145"><paramref name="stream" /> describes a grammar that does not contain a root rule.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8ada8-146"><paramref name="stream" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="8ada8-146"><paramref name="stream" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="8ada8-147">流不包含有效的语法说明,也不描述包含一个规则引用无法解析的语法。</span><span class="sxs-lookup"><span data-stu-id="8ada8-147">The stream does not contain a valid description of a grammar, or describes a grammar that contains a rule reference that cannot be resolved.</span></span></exception>
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognitionEngine" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognizer" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=15143"><span data-ttu-id="8ada8-148">语音识别语法规范</span><span class="sxs-lookup"><span data-stu-id="8ada8-148">Speech Recognition Grammar Specification</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Grammar (System.Speech.Recognition.GrammarBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Speech.Recognition.GrammarBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.GrammarBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (builder As GrammarBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Grammar(System::Speech::Recognition::GrammarBuilder ^ builder);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.Grammar : System.Speech.Recognition.GrammarBuilder -&gt; System.Speech.Recognition.Grammar" Usage="new System.Speech.Recognition.Grammar builder" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
      </Parameters>
      <Docs>
        <param name="builder"><span data-ttu-id="8ada8-149">包含语音识别语法的约束的 <see cref="T:System.Speech.Recognition.GrammarBuilder" /> 的实例。</span><span class="sxs-lookup"><span data-stu-id="8ada8-149">An instance of <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains the constraints for the speech recognition grammar.</span></span></param>
        <summary><span data-ttu-id="8ada8-150">从 <see cref="T:System.Speech.Recognition.Grammar" /> 对象初始化 <see cref="T:System.Speech.Recognition.GrammarBuilder" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="8ada8-150">Initializes a new instance of the <see cref="T:System.Speech.Recognition.Grammar" /> class from a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ada8-151">有关使用 <xref:System.Speech.Recognition.GrammarBuilder> 类定义语法的详细信息，请参阅[使用 GrammarBuilder 创建语法](https://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae)。</span><span class="sxs-lookup"><span data-stu-id="8ada8-151">For more information about using the <xref:System.Speech.Recognition.GrammarBuilder> class to define a grammar, see [Create Grammars Using GrammarBuilder](https://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8ada8-152">下面的示例使用 @no__t 0 和 @no__t 1 对象创建语音识别语法。</span><span class="sxs-lookup"><span data-stu-id="8ada8-152">The following example creates a speech recognition grammar using <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects.</span></span> <span data-ttu-id="8ada8-153">@No__t 构造函数从 <xref:System.Speech.Recognition.GrammarBuilder> 对象创建一个 @no__t 的对象。</span><span class="sxs-lookup"><span data-stu-id="8ada8-153">The <xref:System.Speech.Recognition.Grammar.%23ctor%2A> constructor creates a <xref:System.Speech.Recognition.Grammar> object from the <xref:System.Speech.Recognition.GrammarBuilder> object.</span></span>  
  
```csharp  
  
// Create a grammar using a GrammarBuilder and return the new grammar.   
private static Grammar CreateGrammarBuilderGrammar()  
{  
  GrammarBuilder builder = new GrammarBuilder();  
  
  Choices cityChoice = new Choices (new string[]   
  {"Seattle", "New York", "Miami", "Los Angeles"});  
  
  builder.Append("I would like to fly from");  
  builder.Append(cityChoice);  
  builder.Append("to");  
  builder.Append(cityChoice);  
  
  Grammar citiesGrammar = new Grammar(builder);  
  citiesGrammar.Name = "GrammarBuilder Cities Grammar";  
  
  return citiesGrammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.GrammarBuilder" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognitionEngine" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognizer" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Grammar (System.Speech.Recognition.SrgsGrammar.SrgsDocument srgsDocument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Speech.Recognition.SrgsGrammar.SrgsDocument srgsDocument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Grammar(System::Speech::Recognition::SrgsGrammar::SrgsDocument ^ srgsDocument);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.Grammar : System.Speech.Recognition.SrgsGrammar.SrgsDocument -&gt; System.Speech.Recognition.Grammar" Usage="new System.Speech.Recognition.Grammar srgsDocument" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="srgsDocument" Type="System.Speech.Recognition.SrgsGrammar.SrgsDocument" />
      </Parameters>
      <Docs>
        <param name="srgsDocument"><span data-ttu-id="8ada8-154">语音识别语法的约束。</span><span class="sxs-lookup"><span data-stu-id="8ada8-154">The constraints for the speech recognition grammar.</span></span></param>
        <summary><span data-ttu-id="8ada8-155">从 <see cref="T:System.Speech.Recognition.Grammar" /> 对象初始化 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="8ada8-155">Initializes a new instance of a <see cref="T:System.Speech.Recognition.Grammar" /> class from an <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ada8-156">此构造函数不会将任何参数传递给初始化处理程序，@no__t 0 不应包含需要参数的初始化处理程序。</span><span class="sxs-lookup"><span data-stu-id="8ada8-156">This constructor does not pass any parameters to the initialization handler, and the <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> should not contain an initialization handler that requires arguments.</span></span>  
  
 <span data-ttu-id="8ada8-157">@No__t-0 可以包含根规则。</span><span class="sxs-lookup"><span data-stu-id="8ada8-157">A <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> can have a root rule.</span></span> <span data-ttu-id="8ada8-158">若要创建指定根规则 @no__t 0 对象，请使用 @no__t 或 <xref:System.Speech.Recognition.Grammar.%23ctor%2A> 构造函数。</span><span class="sxs-lookup"><span data-stu-id="8ada8-158">To create a <xref:System.Speech.Recognition.Grammar> object that specifies a root rule, use the <xref:System.Speech.Recognition.Grammar.%23ctor%2A> or <xref:System.Speech.Recognition.Grammar.%23ctor%2A> constructor.</span></span>  
  
 <span data-ttu-id="8ada8-159">若要从 @no__t 中创建语音识别 <xref:System.Speech.Recognition.Grammar>，并指定要用于解析相对规则引用的基本 URI，请使用 @no__t 2 构造函数。</span><span class="sxs-lookup"><span data-stu-id="8ada8-159">To create a speech recognition <xref:System.Speech.Recognition.Grammar> from an <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> and specify a base URI to use to resolve relative rule references, use the <xref:System.Speech.Recognition.Grammar.%23ctor%2A> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8ada8-160">下面的示例在 <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> 实例中创建语音识别语法，然后使用该语法构造 @no__t 的对象。</span><span class="sxs-lookup"><span data-stu-id="8ada8-160">The following example creates a speech recognition grammar in an <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> instance, which is then used to construct a <xref:System.Speech.Recognition.Grammar> object.</span></span>  
  
```csharp  
private static Grammar CreateSrgsDocumentGrammar()  
{  
  // Create the SrgsDocument.  
  SrgsDocument document = new SrgsDocument();  
  
  // Create the Cities rule and add it to the document.  
  SrgsRule citiesRule = new SrgsRule("Cities");  
  
  SrgsOneOf cityChoice = new SrgsOneOf();  
  cityChoice.Add(new SrgsItem("Seattle"));  
  cityChoice.Add(new SrgsItem("Los Angeles"));  
  cityChoice.Add(new SrgsItem("New York"));  
  cityChoice.Add(new SrgsItem("Miami"));  
  
  citiesRule.Add(cityChoice);  
  document.Rules.Add(citiesRule);  
  
  // Create the Main rule and add it to the document.  
  SrgsRule mainRule = new SrgsRule("Main");  
  mainRule.Scope = SrgsRuleScope.Public;  
  
  SrgsItem item = new SrgsItem("I would like to fly from");  
  item.Add(new SrgsRuleRef(citiesRule));  
  item.Add(new SrgsText("to"));  
  item.Add(new SrgsRuleRef(citiesRule));  
  
  mainRule.Add(item);  
  document.Rules.Add(mainRule);  
  
  // Set the root rule.  
  document.Root = mainRule;  
  
  // Create the Grammar object.  
  Grammar citiesGrammar = new Grammar(document);  
  citiesGrammar.Name = "SrgsDocument Cities Grammar";  
  
  return citiesGrammar;  
}  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8ada8-161"><paramref name="srgsDocument" /> 不包含根规则。</span><span class="sxs-lookup"><span data-stu-id="8ada8-161"><paramref name="srgsDocument" /> does not contain a root rule.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8ada8-162"><paramref name="srgsDocument" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="8ada8-162"><paramref name="srgsDocument" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="8ada8-163"><paramref name="srgsDocument" /> 包含无法解析的规则引用。</span><span class="sxs-lookup"><span data-stu-id="8ada8-163"><paramref name="srgsDocument" /> contains a rule reference that cannot be resolved.</span></span></exception>
        <altmember cref="N:System.Speech.Recognition.SrgsGrammar" />
        <altmember cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognizer" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognitionEngine" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=15143"><span data-ttu-id="8ada8-164">语音识别语法规范</span><span class="sxs-lookup"><span data-stu-id="8ada8-164">Speech Recognition Grammar Specification</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Grammar (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.Grammar.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Grammar(System::String ^ path);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.Grammar : string -&gt; System.Speech.Recognition.Grammar" Usage="new System.Speech.Recognition.Grammar path" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="8ada8-165">以受支持的格式描述语音识别语法的文件路径。</span><span class="sxs-lookup"><span data-stu-id="8ada8-165">The path of the file that describes a speech recognition grammar in a supported format.</span></span></param>
        <summary><span data-ttu-id="8ada8-166">从文件中初始化 <see cref="T:System.Speech.Recognition.Grammar" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="8ada8-166">Initializes a new instance of the <see cref="T:System.Speech.Recognition.Grammar" /> class from a file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ada8-167">此构造函数不会将任何参数传递给初始化处理程序，并且说明不应定义需要参数的初始化处理程序。</span><span class="sxs-lookup"><span data-stu-id="8ada8-167">This constructor does not pass any parameters to the initialization handler, and the description should not define an initialization handler that requires arguments.</span></span>  
  
 <span data-ttu-id="8ada8-168">此构造函数可以使用以下格式创建 <xref:System.Speech.Recognition.Grammar> 实例：</span><span class="sxs-lookup"><span data-stu-id="8ada8-168">This constructor can create a <xref:System.Speech.Recognition.Grammar> instance from the following formats:</span></span>  
  
-   <span data-ttu-id="8ada8-169">符合 W3C[语音识别语法规范（SRGS）版本 1.0](https://go.microsoft.com/fwlink/?LinkId=201761)的 XML 格式文件</span><span class="sxs-lookup"><span data-stu-id="8ada8-169">XML-format files that conform to the W3C [Speech Recognition Grammar Specification (SRGS) Version 1.0](https://go.microsoft.com/fwlink/?LinkId=201761)</span></span>  
  
-   <span data-ttu-id="8ada8-170">已编译为带有 cfg 文件扩展名的二进制文件的语法</span><span class="sxs-lookup"><span data-stu-id="8ada8-170">Grammars that have been compiled to a binary file with a .cfg file extension</span></span>  
  
 <span data-ttu-id="8ada8-171">此构造函数将 XML 格式语法文件编译为二进制格式，以优化语音识别引擎的加载和使用。</span><span class="sxs-lookup"><span data-stu-id="8ada8-171">This constructor compiles XML-format grammar files to a binary format to optimize them for loading and consumption by a speech recognition engine.</span></span> <span data-ttu-id="8ada8-172">您可以通过使用 @no__t 1 方法之一，缩短从 XML 格式的语法构造 <xref:System.Speech.Recognition.Grammar> 对象所需的时间量。</span><span class="sxs-lookup"><span data-stu-id="8ada8-172">You can reduce the amount of time required to construct a <xref:System.Speech.Recognition.Grammar> object from an XML-format grammar by compiling the grammar in advance, using one of the <xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A> methods.</span></span>  
  
 <span data-ttu-id="8ada8-173">SRGS 语法可以定义根规则。</span><span class="sxs-lookup"><span data-stu-id="8ada8-173">An SRGS grammar can define a root rule.</span></span> <span data-ttu-id="8ada8-174">若要从字符串创建 @no__t 0 对象并指定根规则，请使用 @no__t 构造函数。</span><span class="sxs-lookup"><span data-stu-id="8ada8-174">To create a <xref:System.Speech.Recognition.Grammar> object from a string and specify a root rule, use the <xref:System.Speech.Recognition.Grammar.%23ctor%2A> constructor.</span></span>  
  
 <span data-ttu-id="8ada8-175">若要创建一个 @no__t 0 对象，该对象指定用于解析相对规则引用的基本 URI，请在文件流中打开该文件，并使用 @no__t 构造函数。</span><span class="sxs-lookup"><span data-stu-id="8ada8-175">To create a <xref:System.Speech.Recognition.Grammar> object that specifies a base URI to use to resolve relative rule references, open the file in a file stream and use the <xref:System.Speech.Recognition.Grammar.%23ctor%2A?displayProperty=nameWithType> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8ada8-176">下面的示例从本地 SRGS 文件加载语音识别语法，以生成 @no__t 为0的对象。</span><span class="sxs-lookup"><span data-stu-id="8ada8-176">The following example loads a speech recognition grammar from a local SRGS file to build a <xref:System.Speech.Recognition.Grammar> object.</span></span> <span data-ttu-id="8ada8-177">城市 .xml 文件的内容将显示在本C#示例后面的 xml 示例中。</span><span class="sxs-lookup"><span data-stu-id="8ada8-177">The content of the cities.xml file appears in the XML example that follows the C# example.</span></span>  
  
```csharp  
// Load a cities grammar from a local file and  
// return the new grammar.   
private static Grammar CreateGrammarFromFile()  
{  
  Grammar citiesGrammar = new Grammar(@"c:\temp\cities.xml");  
  citiesGrammar.Name = "SRGS File Cities Grammar";  
  return citiesGrammar;  
}  
  
```  
  
```xml  
  
<?xml version="1.0" encoding="UTF-8" ?>  
<grammar version="1.0" xml:lang="en-US"  
         xmlns="http://www.w3.org/2001/06/grammar"  
         tag-format="semantics/1.0" root="Main">  
  
  <!-- cities.xml:   
    Defines an SRGS grammar for requesting a flight. This grammar includes  
    a Cities rule that lists the cities that can be used for departures  
    and destinations. -->  
  
  <rule id="Main">  
    <item>  
      I would like to fly from <ruleref uri="#Cities"/>  
      to <ruleref uri="#Cities"/>  
    </item>  
  </rule>  
  
  <rule id="Cities" scope="public">  
    <one-of>  
      <item>Seattle</item>  
      <item>Los Angeles</item>  
      <item>New York</item>  
      <item>Miami</item>  
    </one-of>  
  </rule>  
</grammar>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8ada8-178"><paramref name="path" /> 包含了空字符串 ("")，或该文件对不包含根规则的语法进行了介绍。</span><span class="sxs-lookup"><span data-stu-id="8ada8-178"><paramref name="path" /> contains the empty string (""), or the file describes a grammar that does not contain a root rule.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8ada8-179"><paramref name="path" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="8ada8-179"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="8ada8-180">文件不包含有效的说明,也不描述包含一个规则引用无法解析的语法。</span><span class="sxs-lookup"><span data-stu-id="8ada8-180">The file does not contain a valid description, or describes a grammar that contains a rule reference that cannot be resolved.</span></span></exception>
        <altmember cref="T:System.Speech.Recognition.SpeechRecognitionEngine" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognizer" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=15143"><span data-ttu-id="8ada8-181">语音识别语法规范</span><span class="sxs-lookup"><span data-stu-id="8ada8-181">Speech Recognition Grammar Specification</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Grammar (System.IO.Stream stream, string ruleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, string ruleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Grammar(System::IO::Stream ^ stream, System::String ^ ruleName);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.Grammar : System.IO.Stream * string -&gt; System.Speech.Recognition.Grammar" Usage="new System.Speech.Recognition.Grammar (stream, ruleName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="ruleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="8ada8-182">以受支持的格式描述语音识别语法的流。</span><span class="sxs-lookup"><span data-stu-id="8ada8-182">A stream that describes a speech recognition grammar in a supported format.</span></span></param>
        <param name="ruleName"><span data-ttu-id="8ada8-183">用作语音识别语法的入口点的规则标识符，或以使用语法说明的默认根规则 <see langword="null" /> 。</span><span class="sxs-lookup"><span data-stu-id="8ada8-183">The identifier of the rule to use as the entry point of the speech recognition grammar, or <see langword="null" /> to use the default root rule of the grammar description.</span></span></param>
        <summary><span data-ttu-id="8ada8-184">从 <see cref="T:System.Speech.Recognition.Grammar" /> 和指定根规则中来初始化 <see cref="T:System.IO.Stream" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="8ada8-184">Initializes a new instance of the <see cref="T:System.Speech.Recognition.Grammar" /> class from a <see cref="T:System.IO.Stream" /> and specifies a root rule.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ada8-185">此构造函数不会将任何参数传递给初始化处理程序，并且说明不应定义需要参数的初始化处理程序。</span><span class="sxs-lookup"><span data-stu-id="8ada8-185">This constructor does not pass any parameters to the initialization handler, and the description should not define an initialization handler that requires arguments.</span></span>  
  
 <span data-ttu-id="8ada8-186">此构造函数可以使用以下格式创建 <xref:System.Speech.Recognition.Grammar> 实例：</span><span class="sxs-lookup"><span data-stu-id="8ada8-186">This constructor can create a  <xref:System.Speech.Recognition.Grammar> instance from the following formats:</span></span>  
  
-   <span data-ttu-id="8ada8-187">符合 W3C[语音识别语法规范（SRGS）版本 1.0](https://go.microsoft.com/fwlink/?LinkId=201761)的 XML 格式文件</span><span class="sxs-lookup"><span data-stu-id="8ada8-187">XML-format files that conform to the W3C [Speech Recognition Grammar Specification (SRGS) Version 1.0](https://go.microsoft.com/fwlink/?LinkId=201761)</span></span>  
  
-   <span data-ttu-id="8ada8-188">已编译为带有 cfg 文件扩展名的二进制文件的语法</span><span class="sxs-lookup"><span data-stu-id="8ada8-188">Grammars that have been compiled to a binary file with a .cfg file extension</span></span>  
  
 <span data-ttu-id="8ada8-189">此构造函数将 XML 格式语法文件编译为二进制格式，以优化语音识别引擎的加载和使用。</span><span class="sxs-lookup"><span data-stu-id="8ada8-189">This constructor compiles XML-format grammar files to a binary format to optimize them for loading and consumption by a speech recognition engine.</span></span> <span data-ttu-id="8ada8-190">您可以通过使用 @no__t 1 方法之一，缩短从 XML 格式的语法构造 <xref:System.Speech.Recognition.Grammar> 对象所需的时间量。</span><span class="sxs-lookup"><span data-stu-id="8ada8-190">You can reduce the amount of time required to construct a <xref:System.Speech.Recognition.Grammar> object from an XML-format grammar by compiling the grammar in advance, using one of the <xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A> methods.</span></span>  
  
 <span data-ttu-id="8ada8-191">若要从流创建 @no__t 0，并指定要用于解析相对规则引用的基 URI，请使用 @no__t 构造函数。</span><span class="sxs-lookup"><span data-stu-id="8ada8-191">To create a <xref:System.Speech.Recognition.Grammar> from a stream and specify a base URI to use to resolve relative rule references, use the <xref:System.Speech.Recognition.Grammar.%23ctor%2A> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8ada8-192">下面的示例从文件流加载本地 SRGS 文件（node.js），并指定要用作语法的根的规则。</span><span class="sxs-lookup"><span data-stu-id="8ada8-192">The following example loads a local SRGS file (cities.xml) from a file stream and specifies a rule to use as the root of the grammar.</span></span> <span data-ttu-id="8ada8-193">城市 .xml 文件的内容将显示在本C#示例后面的 xml 示例中。</span><span class="sxs-lookup"><span data-stu-id="8ada8-193">The content of the cities.xml file appears in the XML example that follows the C# example.</span></span>  
  
```csharp  
  
// Load a cities grammar from an I/O stream, use a specific  
// rule as the root of the grammar, and return the new grammar.   
private static Grammar CreateGrammarFromStream2()  
{  
  FileInfo file = new FileInfo(@"c:\temp\cities.xml");  
  Grammar citiesGrammar = new Grammar(file.OpenRead(), "Main");  
  citiesGrammar.Name = "Stream Cities Grammar 2";  
  return citiesGrammar;  
}  
```  
  
```xml  
  
<?xml version="1.0" encoding="UTF-8" ?>  
<grammar version="1.0" xml:lang="en-US"  
         xmlns="http://www.w3.org/2001/06/grammar"  
         tag-format="semantics/1.0" root="Main">  
  
  <!-- cities.xml:   
    Defines an SRGS grammar for requesting a flight. This grammar includes  
    a Cities rule that lists the cities that can be used for departures  
    and destinations. -->  
  
  <rule id="Main">  
    <item>  
      I would like to fly from <ruleref uri="#Cities"/>  
      to <ruleref uri="#Cities"/>  
    </item>  
  </rule>  
  
  <rule id="Cities" scope="public">  
    <one-of>  
      <item>Seattle</item>  
      <item>Los Angeles</item>  
      <item>New York</item>  
      <item>Miami</item>  
    </one-of>  
  </rule>  
</grammar>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8ada8-194"><paramref name="ruleName" /> 无法解析或非公共，或者 <paramref name="ruleName" /> 为 <see langword="null" />，并且语法说明不定义根规则。</span><span class="sxs-lookup"><span data-stu-id="8ada8-194"><paramref name="ruleName" /> cannot be resolved or is not public, or <paramref name="ruleName" /> is <see langword="null" /> and the grammar description does not define a root rule.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8ada8-195"><paramref name="stream" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="8ada8-195"><paramref name="stream" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="8ada8-196">流不包含有效的说明,也不描述包含一个规则引用无法解析的语法。</span><span class="sxs-lookup"><span data-stu-id="8ada8-196">The stream does not contain a valid description or describes a grammar that contains a rule reference that cannot be resolved.</span></span></exception>
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognitionEngine" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognizer" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=15143"><span data-ttu-id="8ada8-197">语音识别语法规范</span><span class="sxs-lookup"><span data-stu-id="8ada8-197">Speech Recognition Grammar Specification</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Grammar (System.Speech.Recognition.SrgsGrammar.SrgsDocument srgsDocument, string ruleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Speech.Recognition.SrgsGrammar.SrgsDocument srgsDocument, string ruleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Grammar(System::Speech::Recognition::SrgsGrammar::SrgsDocument ^ srgsDocument, System::String ^ ruleName);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.Grammar : System.Speech.Recognition.SrgsGrammar.SrgsDocument * string -&gt; System.Speech.Recognition.Grammar" Usage="new System.Speech.Recognition.Grammar (srgsDocument, ruleName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="srgsDocument" Type="System.Speech.Recognition.SrgsGrammar.SrgsDocument" />
        <Parameter Name="ruleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="srgsDocument"><span data-ttu-id="8ada8-198">语音识别语法的约束。</span><span class="sxs-lookup"><span data-stu-id="8ada8-198">The constraints for the speech recognition grammar.</span></span></param>
        <param name="ruleName"><span data-ttu-id="8ada8-199">规则标识符作为语音识别语法的入口点，按 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" />默认根规则使用 <see langword="null" /> 。</span><span class="sxs-lookup"><span data-stu-id="8ada8-199">The identifier of the rule to use as the entry point of the speech recognition grammar, or <see langword="null" /> to use the default root rule of the <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" />.</span></span></param>
        <summary><span data-ttu-id="8ada8-200">初始化来自 <see cref="T:System.Speech.Recognition.Grammar" /> 对象的 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> 类的新实例并指定一个根规则。</span><span class="sxs-lookup"><span data-stu-id="8ada8-200">Initializes a new instance of a <see cref="T:System.Speech.Recognition.Grammar" /> class from an <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> object and specifies a root rule.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ada8-201">此构造函数不会将任何参数传递给初始化处理程序，@no__t 0 不应包含需要参数的初始化处理程序。</span><span class="sxs-lookup"><span data-stu-id="8ada8-201">This constructor does not pass any parameters to the initialization handler, and the <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> should not contain an initialization handler that requires arguments.</span></span>  
  
 <span data-ttu-id="8ada8-202">若要创建一个 @no__t 的 @no__t 0 对象，并指定要使用的基 URI 来解析相对规则引用，请使用 @no__t 2 构造函数。</span><span class="sxs-lookup"><span data-stu-id="8ada8-202">To create a <xref:System.Speech.Recognition.Grammar> object from a <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> and specify a base URI to use to resolve relative rule references, use the <xref:System.Speech.Recognition.Grammar.%23ctor%2A> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8ada8-203">下面的示例在 <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> 实例中创建语音识别语法，并指定要用作语法的根规则的规则。</span><span class="sxs-lookup"><span data-stu-id="8ada8-203">The following example creates a speech recognition grammar in an <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> instance and specifies a rule to use as the root rule of the grammar.</span></span> <span data-ttu-id="8ada8-204">该示例构造 @no__t 实例中的 @no__t 0 对象，并将其加载到语音识别引擎。</span><span class="sxs-lookup"><span data-stu-id="8ada8-204">The example constructs a <xref:System.Speech.Recognition.Grammar> object from the <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> instance and loads it into the speech recognition engine.</span></span>  
  
```csharp  
using System;  
using System.Speech.Recognition;  
using System.Speech.Recognition.SrgsGrammar;  
  
namespace SampleRecognition  
{  
  class Program  
  {  
    static void Main(string[] args)  
  
    // Initialize an in-process speech recognition engine.  
    {  
      using (SpeechRecognitionEngine recognizer =  
         new SpeechRecognitionEngine())  
      {  
  
        // Create the SrgsDocument.  
        SrgsDocument document = new SrgsDocument();  
  
        // Create the Cities rule and add it to the document.  
        SrgsRule citiesRule = new SrgsRule("Cities");  
        citiesRule.Scope = SrgsRuleScope.Public;  
  
        SrgsOneOf cityChoice = new SrgsOneOf();  
        cityChoice.Add(new SrgsItem("Seattle"));  
        cityChoice.Add(new SrgsItem("Los Angeles"));  
        cityChoice.Add(new SrgsItem("New York"));  
        cityChoice.Add(new SrgsItem("Miami"));  
  
        citiesRule.Add(cityChoice);  
        document.Rules.Add(citiesRule);  
  
        // Create the Main rule and add it to the document.  
        SrgsRule mainRule = new SrgsRule("Main");  
        mainRule.Scope = SrgsRuleScope.Public;  
  
        mainRule.Add(new SrgsItem("I would like to fly from"));  
        mainRule.Add(new SrgsRuleRef(citiesRule));  
        mainRule.Add(new SrgsItem("to"));  
        mainRule.Add(new SrgsRuleRef(citiesRule));  
  
        document.Rules.Add(mainRule);  
  
        // Create the Grammar object and specify which rule to use as the root.  
        Grammar citiesGrammar = new Grammar(document,"Main");  
  
        // Load the grammar object to the recognizer.  
        recognizer.LoadGrammarAsync(citiesGrammar);  
  
        // Attach a handler for the SpeechRecognized event.  
        recognizer.SpeechRecognized +=  
          new EventHandler<SpeechRecognizedEventArgs>(recognizer_SpeechRecognized);  
  
        // Set the input to the recognizer.  
        recognizer.SetInputToDefaultAudioDevice();  
  
        // Start recognition.  
        recognizer.RecognizeAsync();  
        Console.WriteLine("Starting asynchronous recognition...");  
  
        // Keep the console window open.  
        Console.ReadLine();  
      }  
    }  
  
    // Handle the SpeechRecognized event.  
    static void recognizer_SpeechRecognized(object sender, SpeechRecognizedEventArgs e)  
    {  
      Console.WriteLine("  Speech recognized: " + e.Result.Text);  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8ada8-205"><paramref name="ruleName" /> 无法解析或非公共，或者 <paramref name="ruleName" /> 为 <see langword="null" />，并且 <paramref name="srgsDocument" /> 不包含根规则。</span><span class="sxs-lookup"><span data-stu-id="8ada8-205"><paramref name="ruleName" /> cannot be resolved or is not public, or <paramref name="ruleName" /> is <see langword="null" /> and <paramref name="srgsDocument" /> does not contain a root rule.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8ada8-206"><paramref name="srgsDocument" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="8ada8-206"><paramref name="srgsDocument" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="8ada8-207"><paramref name="srgsDocument" /> 包含无法解析的规则引用。</span><span class="sxs-lookup"><span data-stu-id="8ada8-207"><paramref name="srgsDocument" /> contains a rule reference that cannot be resolved.</span></span></exception>
        <altmember cref="N:System.Speech.Recognition.SrgsGrammar" />
        <altmember cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognizer" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognitionEngine" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=15143"><span data-ttu-id="8ada8-208">语音识别语法规范</span><span class="sxs-lookup"><span data-stu-id="8ada8-208">Speech Recognition Grammar Specification</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Grammar (string path, string ruleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, string ruleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.Grammar.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, ruleName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Grammar(System::String ^ path, System::String ^ ruleName);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.Grammar : string * string -&gt; System.Speech.Recognition.Grammar" Usage="new System.Speech.Recognition.Grammar (path, ruleName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="ruleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="8ada8-209">以受支持的格式描述语音识别语法的文件路径。</span><span class="sxs-lookup"><span data-stu-id="8ada8-209">The path of the file that describes a speech recognition grammar in a supported format.</span></span></param>
        <param name="ruleName"><span data-ttu-id="8ada8-210">用作语音识别语法的入口点的规则标识符，或以使用语法说明的默认根规则 <see langword="null" /> 。</span><span class="sxs-lookup"><span data-stu-id="8ada8-210">The identifier of the rule to use as the entry point of the speech recognition grammar, or <see langword="null" /> to use the default root rule of the grammar description.</span></span></param>
        <summary><span data-ttu-id="8ada8-211">初始化 <see cref="T:System.Speech.Recognition.Grammar" /> 类的新实例并指定根规则。</span><span class="sxs-lookup"><span data-stu-id="8ada8-211">Initializes a new instance of the <see cref="T:System.Speech.Recognition.Grammar" /> class from a file and specifies a root rule.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ada8-212">此构造函数不会将任何参数传递给初始化处理程序，并且说明不应定义需要参数的初始化处理程序。</span><span class="sxs-lookup"><span data-stu-id="8ada8-212">This constructor does not pass any parameters to the initialization handler, and the description should not define an initialization handler that requires arguments.</span></span>  
  
 <span data-ttu-id="8ada8-213">此构造函数可以使用以下格式创建 <xref:System.Speech.Recognition.Grammar> 实例：</span><span class="sxs-lookup"><span data-stu-id="8ada8-213">This constructor can create a <xref:System.Speech.Recognition.Grammar> instance from the following formats:</span></span>  
  
-   <span data-ttu-id="8ada8-214">符合 W3C[语音识别语法规范（SRGS）版本 1.0](https://go.microsoft.com/fwlink/?LinkId=201761)的 XML 格式文件</span><span class="sxs-lookup"><span data-stu-id="8ada8-214">XML-format files that conform to the W3C [Speech Recognition Grammar Specification (SRGS) Version 1.0](https://go.microsoft.com/fwlink/?LinkId=201761)</span></span>  
  
-   <span data-ttu-id="8ada8-215">已编译为带有 cfg 文件扩展名的二进制文件的语法</span><span class="sxs-lookup"><span data-stu-id="8ada8-215">Grammars that have been compiled to a binary file with a .cfg file extension</span></span>  
  
 <span data-ttu-id="8ada8-216">此构造函数将 XML 格式语法文件编译为二进制格式，以优化语音识别引擎的加载和使用。</span><span class="sxs-lookup"><span data-stu-id="8ada8-216">This constructor compiles XML-format grammar files to a binary format to optimize them for loading and consumption by a speech recognition engine.</span></span> <span data-ttu-id="8ada8-217">您可以通过使用 @no__t 1 方法之一，缩短从 XML 格式的语法构造 <xref:System.Speech.Recognition.Grammar> 对象所需的时间量。</span><span class="sxs-lookup"><span data-stu-id="8ada8-217">You can reduce the amount of time required to construct a <xref:System.Speech.Recognition.Grammar> object from an XML-format grammar by compiling the grammar in advance, using one of the <xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A> methods.</span></span>  
  
 <span data-ttu-id="8ada8-218">若要创建一个 @no__t 0 来指定用于解析相对规则引用的基本 URI，请打开该文件的文件流并使用 @no__t 构造函数。</span><span class="sxs-lookup"><span data-stu-id="8ada8-218">To create a <xref:System.Speech.Recognition.Grammar> that specifies a base URI to use to resolve relative rule references, open a file stream for the file and use the <xref:System.Speech.Recognition.Grammar.%23ctor%2A> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8ada8-219">下面的示例从文件中加载本地 SRGS 文件（node.js），并指定要用作语法的根的规则。</span><span class="sxs-lookup"><span data-stu-id="8ada8-219">The following example loads a local SRGS file (cities.xml) from a file and specifies a rule to use as the root of the grammar.</span></span> <span data-ttu-id="8ada8-220">城市 .xml 文件的内容将显示在本C#示例后面的 xml 示例中。</span><span class="sxs-lookup"><span data-stu-id="8ada8-220">The content of the cities.xml file appears in the XML example that follows the C# example.</span></span>  
  
```csharp  
  
// Load a cities grammar from a local file, use a specific  
// rule as the root of the grammar, and return the new grammar.  
private static Grammar CreateGrammarFromFile2()  
{  
  Grammar citiesGrammar = new Grammar(@"c:\temp\cities.xml", "Main");  
  citiesGrammar.Name = "SRGS File Cities Grammar 2";  
  return citiesGrammar;  
}  
```  
  
```xml  
  
<?xml version="1.0" encoding="UTF-8" ?>  
<grammar version="1.0" xml:lang="en-US"  
         xmlns="http://www.w3.org/2001/06/grammar"  
         tag-format="semantics/1.0" root="Main">  
  
  <!-- cities.xml:   
    Defines an SRGS grammar for requesting a flight. This grammar includes  
    a Cities rule that lists the cities that can be used for departures  
    and destinations. -->  
  
  <rule id="Main">  
    <item>  
      I would like to fly from <ruleref uri="#Cities"/>  
      to <ruleref uri="#Cities"/>  
    </item>  
  </rule>  
  
  <rule id="Cities" scope="public">  
    <one-of>  
      <item>Seattle</item>  
      <item>Los Angeles</item>  
      <item>New York</item>  
      <item>Miami</item>  
    </one-of>  
  </rule>  
</grammar>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8ada8-221"><paramref name="ruleName" /> 无法解析或非公共，<paramref name="path" /> 为空字符串 ("")，或者 <paramref name="ruleName" /> 为 <see langword="null" />，并且语法说明不定义根规则。</span><span class="sxs-lookup"><span data-stu-id="8ada8-221"><paramref name="ruleName" /> cannot be resolved or is not public, <paramref name="path" /> is the empty string (""), or <paramref name="ruleName" /> is <see langword="null" /> and the grammar description does not define a root rule.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8ada8-222"><paramref name="path" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="8ada8-222"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="8ada8-223">文件不包含有效的说明,也不描述包含一个规则引用无法解析的语法。</span><span class="sxs-lookup"><span data-stu-id="8ada8-223">The file does not contain a valid description or describes a grammar that contains a rule reference that cannot be resolved.</span></span></exception>
        <altmember cref="T:System.Speech.Recognition.SpeechRecognitionEngine" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognizer" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=15143"><span data-ttu-id="8ada8-224">语音识别语法规范</span><span class="sxs-lookup"><span data-stu-id="8ada8-224">Speech Recognition Grammar Specification</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Grammar (System.IO.Stream stream, string ruleName, object[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, string ruleName, object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Grammar(System::IO::Stream ^ stream, System::String ^ ruleName, cli::array &lt;System::Object ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.Grammar : System.IO.Stream * string * obj[] -&gt; System.Speech.Recognition.Grammar" Usage="new System.Speech.Recognition.Grammar (stream, ruleName, parameters)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="ruleName" Type="System.String" />
        <Parameter Name="parameters" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="8ada8-225">连接到包含语法规范的输入 / 输出对象（包括文件、VisualStudio 资源和 DLL）的 <see cref="T:System.IO.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="8ada8-225">A <see cref="T:System.IO.Stream" /> connected to an input/output object (including files, VisualStudio Resources, and DLLs) that contains a grammar specification.</span></span></param>
        <param name="ruleName"><span data-ttu-id="8ada8-226">用作语音识别语法的入口点的规则标识符，或以使用语法说明的默认根规则 <see langword="null" /> 。</span><span class="sxs-lookup"><span data-stu-id="8ada8-226">The identifier of the rule to use as the entry point of the speech recognition grammar, or <see langword="null" /> to use the default root rule of the grammar description.</span></span></param>
        <param name="parameters"><span data-ttu-id="8ada8-227">通过入口点或创建的根规则的属性指定设置为指定的 <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit" /> 参数要传递至的 <see cref="T:System.Speech.Recognition.Grammar" /> 初始化处理程序。</span><span class="sxs-lookup"><span data-stu-id="8ada8-227">Parameters to be passed to the initialization handler specified by the <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit" /> property for the entry point or the root rule of the <see cref="T:System.Speech.Recognition.Grammar" /> to be created.</span></span> <span data-ttu-id="8ada8-228">此参数可以为 null。</span><span class="sxs-lookup"><span data-stu-id="8ada8-228">This parameter may be null.</span></span></param>
        <summary><span data-ttu-id="8ada8-229">从 <see cref="T:System.Speech.Recognition.Grammar" /> 和指定根规则中来初始化 <see cref="T:System.IO.Stream" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="8ada8-229">Initializes a new instance of the <see cref="T:System.Speech.Recognition.Grammar" /> class from a <see cref="T:System.IO.Stream" /> and specifies a root rule.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ada8-230">还可以指定初始化处理程序的参数。</span><span class="sxs-lookup"><span data-stu-id="8ada8-230">Parameters for an initialization handler may also be specified.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8ada8-231"><paramref name="stream" /> 连接到该语法:</span><span class="sxs-lookup"><span data-stu-id="8ada8-231"><paramref name="stream" /> is connected to a grammar that:</span></span> 
<span data-ttu-id="8ada8-232">-   不包含 <paramref name="ruleName" /> 中指定的规则</span><span class="sxs-lookup"><span data-stu-id="8ada8-232">-   Does not contain the rule specified in <paramref name="ruleName" /></span></span>  
  
<span data-ttu-id="8ada8-233">-   需要与 <paramref name="parameters" /> 中指定的那些不同的初始化参数</span><span class="sxs-lookup"><span data-stu-id="8ada8-233">-   Requires initialization parameters different from those specified in <paramref name="parameters" /></span></span>  
  
<span data-ttu-id="8ada8-234">-   包含无法由语法的默认基 <see cref="T:System.Uri" /> 规则解决的相对规则引用</span><span class="sxs-lookup"><span data-stu-id="8ada8-234">-   Contains a relative rule reference that cannot be resolved by the default base <see cref="T:System.Uri" /> rule for grammars</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Grammar (System.IO.Stream stream, string ruleName, Uri baseUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, string ruleName, class System.Uri baseUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String,System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Grammar(System::IO::Stream ^ stream, System::String ^ ruleName, Uri ^ baseUri);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.Grammar : System.IO.Stream * string * Uri -&gt; System.Speech.Recognition.Grammar" Usage="new System.Speech.Recognition.Grammar (stream, ruleName, baseUri)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="ruleName" Type="System.String" />
        <Parameter Name="baseUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="8ada8-235">以受支持的格式描述语音识别语法的流。</span><span class="sxs-lookup"><span data-stu-id="8ada8-235">A stream that describes a speech recognition grammar in a supported format.</span></span></param>
        <param name="ruleName"><span data-ttu-id="8ada8-236">用作语音识别语法的入口点的规则标识符，或以使用语法说明的默认根规则 <see langword="null" /> 。</span><span class="sxs-lookup"><span data-stu-id="8ada8-236">The identifier of the rule to use as the entry point of the speech recognition grammar, or <see langword="null" /> to use the default root rule of the grammar description.</span></span></param>
        <param name="baseUri"><span data-ttu-id="8ada8-237">使用的基 URI 解决所有在语法描述中的任何相关规则 <see langword="null" />引用，或</span><span class="sxs-lookup"><span data-stu-id="8ada8-237">The base URI to use to resolve any relative rule reference in the grammar description, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="8ada8-238">初始化来自流的 <see cref="T:System.Speech.Recognition.Grammar" /> 类的新实例，指定根规则并定义一个基统一资源字符识别（URI）来解析相对规则引用。</span><span class="sxs-lookup"><span data-stu-id="8ada8-238">Initializes a new instance of the <see cref="T:System.Speech.Recognition.Grammar" /> class from a stream, specifies a root rule, and defines a base Uniform Resource Identifier (URI) to resolve relative rule references.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ada8-239">此构造函数不会将任何参数传递给初始化处理程序，并且说明不应定义需要参数的初始化处理程序。</span><span class="sxs-lookup"><span data-stu-id="8ada8-239">This constructor does not pass any parameters to the initialization handler, and the description should not define an initialization handler that requires arguments.</span></span>  
  
 <span data-ttu-id="8ada8-240">此构造函数可以使用以下格式创建 <xref:System.Speech.Recognition.Grammar> 实例：</span><span class="sxs-lookup"><span data-stu-id="8ada8-240">This constructor can create a <xref:System.Speech.Recognition.Grammar> instance from the following formats:</span></span>  
  
-   <span data-ttu-id="8ada8-241">符合 W3C[语音识别语法规范（SRGS）版本 1.0](https://go.microsoft.com/fwlink/?LinkId=201761)的 XML 格式文件</span><span class="sxs-lookup"><span data-stu-id="8ada8-241">XML-format files that conform to the W3C [Speech Recognition Grammar Specification (SRGS) Version 1.0](https://go.microsoft.com/fwlink/?LinkId=201761)</span></span>  
  
-   <span data-ttu-id="8ada8-242">已编译为带有 cfg 文件扩展名的二进制文件的语法</span><span class="sxs-lookup"><span data-stu-id="8ada8-242">Grammars that have been compiled to a binary file with a .cfg file extension</span></span>  
  
 <span data-ttu-id="8ada8-243">此构造函数将 XML 格式语法文件编译为二进制格式，以优化语音识别引擎的加载和使用。</span><span class="sxs-lookup"><span data-stu-id="8ada8-243">This constructor compiles XML-format grammar files to a binary format to optimize them for loading and consumption by a speech recognition engine.</span></span> <span data-ttu-id="8ada8-244">您可以通过使用 @no__t 1 方法之一，缩短从 XML 格式的语法构造 <xref:System.Speech.Recognition.Grammar> 对象所需的时间量。</span><span class="sxs-lookup"><span data-stu-id="8ada8-244">You can reduce the amount of time required to construct a <xref:System.Speech.Recognition.Grammar> object from an XML-format grammar by compiling the grammar in advance, using one of the <xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A> methods.</span></span>  
  
 <span data-ttu-id="8ada8-245">此构造函数不验证 `baseUri`。</span><span class="sxs-lookup"><span data-stu-id="8ada8-245">This constructor does not validate `baseUri`.</span></span> <span data-ttu-id="8ada8-246">但是，如果 @no__t 或 @no__t 2 对象的 @no__t 0 方法无法解析语法说明中的所有规则引用，则会引发异常。</span><span class="sxs-lookup"><span data-stu-id="8ada8-246">However, the `LoadGrammar` method of a <xref:System.Speech.Recognition.SpeechRecognitionEngine> or <xref:System.Speech.Recognition.SpeechRecognizer> object throws an exception if it cannot resolve all of the rule references in the grammar description.</span></span> <span data-ttu-id="8ada8-247">如果 `baseUri` 不 `null`，则 `LoadGrammar` 方法将使用 URI 来解析不能以其他方式解析的规则引用。</span><span class="sxs-lookup"><span data-stu-id="8ada8-247">If `baseUri` is not `null`, the `LoadGrammar` method uses the URI to resolve any rule references that it cannot otherwise resolve.</span></span> <span data-ttu-id="8ada8-248">如果 `baseUri` 表示文件，则在尝试解析相对规则引用时，`LoadGrammar` 将使用指定的文件和文件的目录。</span><span class="sxs-lookup"><span data-stu-id="8ada8-248">If `baseUri` represents a file, then the `LoadGrammar` uses both the designated file and the file's directory when it attempts to resolve relative rule references.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8ada8-249">下面的示例从文件流加载本地 SRGS 文件（往复 .xml）。</span><span class="sxs-lookup"><span data-stu-id="8ada8-249">The following example loads a local SRGS file (shuttle.xml) from a file stream.</span></span> <span data-ttu-id="8ada8-250">文件包含对市县文件中规则的相对规则引用，并指定要用于解析规则引用的基 URI。</span><span class="sxs-lookup"><span data-stu-id="8ada8-250">The file contains a relative rule reference to a rule in the cities.xml file, and specifies a base URI to use to resolve the rule reference.</span></span> <span data-ttu-id="8ada8-251">"快速 xml" 和 "城市" 文件的内容将显示在以下C#示例的 xml 示例中。</span><span class="sxs-lookup"><span data-stu-id="8ada8-251">The content of the shuttle.xml and cities.xml files appears in the XML examples that follow the C# example.</span></span>  
  
```csharp  
  
private static Grammar CreateGrammarFromStream3()  
{  
  FileInfo file = new FileInfo(@".\shuttle.xml");  
  Uri baseUri = new Uri(@"file://c:\temp\");  
  Grammar citiesGrammar = new Grammar(file.OpenRead(), null, baseUri);  
  citiesGrammar.Name = "Stream Cities Grammar 3";  
  return citiesGrammar;  
}  
```  
  
```xml  
  
<?xml version="1.0" encoding="UTF-8" ?>  
<grammar version="1.0" xml:lang="en-US"  
         xmlns="http://www.w3.org/2001/06/grammar"  
         tag-format="semantics/1.0" root="Main">  
  
  <!-- shuttle.xml:   
    Defines an SRGS grammar for asking about a shuttle service. This grammar  
    references a Cities rule that is defined in the cities.xml grammar. -->  
  
  <rule id="Main">  
    <item>  
      Can I get a shuttle in  
      <ruleref uri="cities.xml#Cities"/>  
    </item>  
  </rule>  
</grammar>  
```  
  
```xml  
  
<?xml version="1.0" encoding="UTF-8" ?>  
<grammar version="1.0" xml:lang="en-US"  
         xmlns="http://www.w3.org/2001/06/grammar"  
         tag-format="semantics/1.0" root="Main">  
  
  <!-- cities.xml:   
    Defines an SRGS grammar for requesting a flight. This grammar includes  
    a Cities rule that lists the cities that can be used for departures  
    and destinations. -->  
  
  <rule id="Main">  
    <item>  
      I would like to fly from <ruleref uri="#Cities"/>  
      to <ruleref uri="#Cities"/>  
    </item>  
  </rule>  
  
  <rule id="Cities" scope="public">  
    <one-of>  
      <item>Seattle</item>  
      <item>Los Angeles</item>  
      <item>New York</item>  
      <item>Miami</item>  
    </one-of>  
  </rule>  
</grammar>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8ada8-252"><paramref name="ruleName" /> 无法解析或非公共，或者 <paramref name="ruleName" /> 为 <see langword="null" />，并且语法说明不定义根规则。</span><span class="sxs-lookup"><span data-stu-id="8ada8-252"><paramref name="ruleName" /> cannot be resolved or is not public, or <paramref name="ruleName" /> is <see langword="null" /> and the grammar description does not define a root rule.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8ada8-253"><paramref name="stream" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="8ada8-253"><paramref name="stream" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="8ada8-254">流不包含有效的说明,也不描述包含一个规则引用无法解析的语法。</span><span class="sxs-lookup"><span data-stu-id="8ada8-254">The stream does not contain a valid description or describes a grammar that contains a rule reference that cannot be resolved.</span></span></exception>
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognizer" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognitionEngine" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=15143"><span data-ttu-id="8ada8-255">语音识别语法规范</span><span class="sxs-lookup"><span data-stu-id="8ada8-255">Speech Recognition Grammar Specification</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Grammar (System.Speech.Recognition.SrgsGrammar.SrgsDocument srgsDocument, string ruleName, object[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Speech.Recognition.SrgsGrammar.SrgsDocument srgsDocument, string ruleName, object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Grammar(System::Speech::Recognition::SrgsGrammar::SrgsDocument ^ srgsDocument, System::String ^ ruleName, cli::array &lt;System::Object ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.Grammar : System.Speech.Recognition.SrgsGrammar.SrgsDocument * string * obj[] -&gt; System.Speech.Recognition.Grammar" Usage="new System.Speech.Recognition.Grammar (srgsDocument, ruleName, parameters)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="srgsDocument" Type="System.Speech.Recognition.SrgsGrammar.SrgsDocument" />
        <Parameter Name="ruleName" Type="System.String" />
        <Parameter Name="parameters" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="srgsDocument"><span data-ttu-id="8ada8-256">包含语音识别语法的约束的 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> 的实例。</span><span class="sxs-lookup"><span data-stu-id="8ada8-256">An instance of <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> that contains the constraints for the speech recognition grammar.</span></span></param>
        <param name="ruleName"><span data-ttu-id="8ada8-257">用作语音识别语法的入口点的规则标识符，或以使用语法说明的默认根规则 <see langword="null" /> 。</span><span class="sxs-lookup"><span data-stu-id="8ada8-257">The identifier of the rule to use as the entry point of the speech recognition grammar, or <see langword="null" /> to use the default root rule of the grammar description.</span></span></param>
        <param name="parameters"><span data-ttu-id="8ada8-258">通过入口点或创建的根规则的属性指定设置为指定的 <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit" /> 参数要传递至的 <see cref="T:System.Speech.Recognition.Grammar" /> 初始化处理程序。</span><span class="sxs-lookup"><span data-stu-id="8ada8-258">Parameters to be passed to the initialization handler specified by the <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit" /> property for the entry point or the root rule of the <see cref="T:System.Speech.Recognition.Grammar" /> to be created.</span></span> <span data-ttu-id="8ada8-259">此参数可以为 null。</span><span class="sxs-lookup"><span data-stu-id="8ada8-259">This parameter may be null.</span></span></param>
        <summary><span data-ttu-id="8ada8-260">初始化来自 <see cref="T:System.Speech.Recognition.Grammar" /> 的实例的 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> 类的新实例，并指定成为语法入口点的规则的名称。</span><span class="sxs-lookup"><span data-stu-id="8ada8-260">Initializes a new instance of the <see cref="T:System.Speech.Recognition.Grammar" /> class from an instance of <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" />, and specifies the name of a rule to be the entry point to the grammar.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ada8-261">还可以指定初始化处理程序的参数。</span><span class="sxs-lookup"><span data-stu-id="8ada8-261">Parameters for an initialization handler may also be specified.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8ada8-262">-   包含无效值的任何参数。</span><span class="sxs-lookup"><span data-stu-id="8ada8-262">-   Any of the parameters contain an invalid value.</span></span>  
  
<span data-ttu-id="8ada8-263">-   <paramref name="srgsDocument" /> 指定的 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> 不包含 <paramref name="ruleName" /> 指定的规则。</span><span class="sxs-lookup"><span data-stu-id="8ada8-263">-   The <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> specified by <paramref name="srgsDocument" /> does not contain the rule specified by <paramref name="ruleName" />.</span></span>  
  
<span data-ttu-id="8ada8-264">-   数组参数的内容与初始化处理程序的任何规则的参数不匹配。</span><span class="sxs-lookup"><span data-stu-id="8ada8-264">-   The contents of the array parameters do not match the arguments of any of the rule's initialization handlers.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Grammar (System.Speech.Recognition.SrgsGrammar.SrgsDocument srgsDocument, string ruleName, Uri baseUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Speech.Recognition.SrgsGrammar.SrgsDocument srgsDocument, string ruleName, class System.Uri baseUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Grammar(System::Speech::Recognition::SrgsGrammar::SrgsDocument ^ srgsDocument, System::String ^ ruleName, Uri ^ baseUri);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.Grammar : System.Speech.Recognition.SrgsGrammar.SrgsDocument * string * Uri -&gt; System.Speech.Recognition.Grammar" Usage="new System.Speech.Recognition.Grammar (srgsDocument, ruleName, baseUri)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="srgsDocument" Type="System.Speech.Recognition.SrgsGrammar.SrgsDocument" />
        <Parameter Name="ruleName" Type="System.String" />
        <Parameter Name="baseUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="srgsDocument"><span data-ttu-id="8ada8-265">语音识别语法的约束。</span><span class="sxs-lookup"><span data-stu-id="8ada8-265">The constraints for the speech recognition grammar.</span></span></param>
        <param name="ruleName"><span data-ttu-id="8ada8-266">规则标识符作为语音识别语法的入口点，按 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" />默认根规则使用 <see langword="null" /> 。</span><span class="sxs-lookup"><span data-stu-id="8ada8-266">The identifier of the rule to use as the entry point of the speech recognition grammar, or <see langword="null" /> to use the default root rule of the <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" />.</span></span></param>
        <param name="baseUri"><span data-ttu-id="8ada8-267"><see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" />或者 <see langword="null" />中使用的基 URI 解决所有在语法描述中的任何相关规则引用，或</span><span class="sxs-lookup"><span data-stu-id="8ada8-267">The base URI to use to resolve any relative rule reference in the <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" />, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="8ada8-268">初始化来自 <see cref="T:System.Speech.Recognition.Grammar" /> 对象的 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> 类的新实例，指定一个根规则，并定义一个基统一资源标识符（URI）来解析相对规则引用。</span><span class="sxs-lookup"><span data-stu-id="8ada8-268">Initializes a new instance of a <see cref="T:System.Speech.Recognition.Grammar" /> class from an <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> object, specifies a root rule, and defines a base Uniform Resource Identifier (URI) to resolve relative rule references.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ada8-269">此构造函数不会将任何参数传递给初始化处理程序，@no__t 0 不应包含需要参数的初始化处理程序。</span><span class="sxs-lookup"><span data-stu-id="8ada8-269">This constructor does not pass any parameters to the initialization handler, and the <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> should not contain an initialization handler that requires arguments.</span></span>  
  
 <span data-ttu-id="8ada8-270">此构造函数不验证 `baseUri`。</span><span class="sxs-lookup"><span data-stu-id="8ada8-270">This constructor does not validate `baseUri`.</span></span> <span data-ttu-id="8ada8-271">但是，如果 @no__t 或 @no__t 2 对象的 @no__t 0 方法无法解析语法说明中的所有规则引用，则会引发异常。</span><span class="sxs-lookup"><span data-stu-id="8ada8-271">However, the `LoadGrammar` method of a <xref:System.Speech.Recognition.SpeechRecognitionEngine> or <xref:System.Speech.Recognition.SpeechRecognizer> object throws an exception if it cannot resolve all of the rule references in the grammar description.</span></span> <span data-ttu-id="8ada8-272">如果 `baseUri` 不 `null`，则 `LoadGrammar` 方法将使用 URI 来解析不能以其他方式解析的规则引用。</span><span class="sxs-lookup"><span data-stu-id="8ada8-272">If `baseUri` is not `null`, the `LoadGrammar` method uses the URI to resolve any rule references that it cannot otherwise resolve.</span></span> <span data-ttu-id="8ada8-273">如果 `baseUri` 表示文件，则 @no__t 方法在尝试解析相对规则引用时使用指定的文件和文件的目录。</span><span class="sxs-lookup"><span data-stu-id="8ada8-273">If `baseUri` represents a file, then the `LoadGrammar` method uses both the designated file and the file's directory when it attempts to resolve relative rule references.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8ada8-274">下面的示例在 <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> 中创建语音识别语法，其中包含对市县文件的相对规则引用，并指定要用于解析规则引用的 URI。</span><span class="sxs-lookup"><span data-stu-id="8ada8-274">The following example creates a speech recognition grammar in an <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> that contains a relative rule reference to the cities.xml file, and specifies a URI to use to resolve the rule reference.</span></span> <span data-ttu-id="8ada8-275">城市 .xml 文件的内容将显示在本C#示例后面的 xml 示例中。</span><span class="sxs-lookup"><span data-stu-id="8ada8-275">The content of the cities.xml file appears in the XML example that follows the C# example.</span></span>  
  
```csharp  
  
private static Grammar CreateSrgsDocumentGrammar3()  
{  
  // Create the SrgsDocument.  
  SrgsDocument document = new SrgsDocument();  
  
  // Create the Main rule and add it to the document.  
  SrgsRule mainRule = new SrgsRule("Main");  
  mainRule.Scope = SrgsRuleScope.Public;  
  
  SrgsItem item = new SrgsItem("Can I get a shuttle in");  
  
  // Create a relative URI for the cities rule.  
  Uri ruleUri = new Uri("cities.xml#Cities", UriKind.Relative);  
  
  item.Add(new SrgsRuleRef(ruleUri));  
  
  mainRule.Add(item);  
  document.Rules.Add(mainRule);  
  
  // Set the root rule.  
  document.Root = mainRule;  
  
  // Create the grammar.  
  Uri baseUri = new Uri(@"file://c:\temp\");  
  Grammar citiesGrammar = new Grammar(document, null, baseUri);  
  citiesGrammar.Name = "SrgsDocument Cities Grammar 3";  
  
  return citiesGrammar;  
}  
  
```  
  
```xml  
  
<?xml version="1.0" encoding="UTF-8" ?>  
<grammar version="1.0" xml:lang="en-US"  
         xmlns="http://www.w3.org/2001/06/grammar"  
         tag-format="semantics/1.0" root="Main">  
  
  <!-- cities.xml:   
    Defines an SRGS grammar for requesting a flight. This grammar includes  
    a Cities rule that lists the cities that can be used for departures  
    and destinations. -->  
  
  <rule id="Main">  
    <item>  
      I would like to fly from <ruleref uri="#Cities"/>  
      to <ruleref uri="#Cities"/>  
    </item>  
  </rule>  
  
  <rule id="Cities" scope="public">  
    <one-of>  
      <item>Seattle</item>  
      <item>Los Angeles</item>  
      <item>New York</item>  
      <item>Miami</item>  
    </one-of>  
  </rule>  
</grammar>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8ada8-276"><paramref name="ruleName" /> 无法解析或非公共，或者 <paramref name="ruleName" /> 为 <see langword="null" />，并且 <paramref name="srgsDocument" /> 不包含根规则。</span><span class="sxs-lookup"><span data-stu-id="8ada8-276"><paramref name="ruleName" /> cannot be resolved or is not public, or <paramref name="ruleName" /> is <see langword="null" /> and <paramref name="srgsDocument" /> does not contain a root rule.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8ada8-277"><paramref name="srgsDocument" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="8ada8-277"><paramref name="srgsDocument" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="8ada8-278"><paramref name="srgsDocument" /> 包含无法解析的规则引用。</span><span class="sxs-lookup"><span data-stu-id="8ada8-278"><paramref name="srgsDocument" /> contains a rule reference that cannot be resolved.</span></span></exception>
        <altmember cref="N:System.Speech.Recognition.SrgsGrammar" />
        <altmember cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognitionEngine" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognizer" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=15143"><span data-ttu-id="8ada8-279">语音识别语法规范</span><span class="sxs-lookup"><span data-stu-id="8ada8-279">Speech Recognition Grammar Specification</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Grammar (string path, string ruleName, object[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, string ruleName, object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.Grammar.#ctor(System.String,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, ruleName As String, parameters As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Grammar(System::String ^ path, System::String ^ ruleName, cli::array &lt;System::Object ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.Grammar : string * string * obj[] -&gt; System.Speech.Recognition.Grammar" Usage="new System.Speech.Recognition.Grammar (path, ruleName, parameters)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="ruleName" Type="System.String" />
        <Parameter Name="parameters" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="8ada8-280">一个文件的路径，包括 DLL，包含语法规范。</span><span class="sxs-lookup"><span data-stu-id="8ada8-280">The path to a file, including DLLs, that contains a grammar specification.</span></span></param>
        <param name="ruleName"><span data-ttu-id="8ada8-281">用作语音识别语法的入口点的规则标识符，或以使用语法说明的默认根规则 <see langword="null" /> 。</span><span class="sxs-lookup"><span data-stu-id="8ada8-281">The identifier of the rule to use as the entry point of the speech recognition grammar, or <see langword="null" /> to use the default root rule of the grammar description.</span></span></param>
        <param name="parameters"><span data-ttu-id="8ada8-282">通过入口点或创建的根规则的属性指定设置为指定的 <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit" /> 参数要传递至的 <see cref="T:System.Speech.Recognition.Grammar" /> 初始化处理程序。</span><span class="sxs-lookup"><span data-stu-id="8ada8-282">Parameters to be passed to the initialization handler specified by the <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit" /> property for the entry point or the root rule of the <see cref="T:System.Speech.Recognition.Grammar" /> to be created.</span></span> <span data-ttu-id="8ada8-283">此参数可以为 null。</span><span class="sxs-lookup"><span data-stu-id="8ada8-283">This parameter may be null.</span></span></param>
        <summary><span data-ttu-id="8ada8-284">初始化来自包含语法定义的文件的 <see cref="T:System.Speech.Recognition.Grammar" /> 类的新实例并指定成为语法入口的规则的名称。</span><span class="sxs-lookup"><span data-stu-id="8ada8-284">Initializes a new instance of the <see cref="T:System.Speech.Recognition.Grammar" /> class from a file that contains a grammar definition, and specifies the name of a rule to be the entry point to the grammar.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ada8-285">还可以指定初始化处理程序的参数。</span><span class="sxs-lookup"><span data-stu-id="8ada8-285">Parameters for an initialization handler may also be specified.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8ada8-286">-   包含无效值的任何参数。</span><span class="sxs-lookup"><span data-stu-id="8ada8-286">-   Any of the parameters contain an invalid value.</span></span>  
  
<span data-ttu-id="8ada8-287">-   <paramref name="path" /> 指定的文件不包含在 <paramref name="ruleName" /> 有效语法或规则指定的。</span><span class="sxs-lookup"><span data-stu-id="8ada8-287">-   The file specified by <paramref name="path" /> does not contain a valid grammar or the rule specified in <paramref name="ruleName" />.</span></span>  
  
<span data-ttu-id="8ada8-288">-   数组参数的内容与初始化处理程序的任何规则的参数不匹配。</span><span class="sxs-lookup"><span data-stu-id="8ada8-288">-   The contents of the array parameters do not match the arguments of any of the rule's initialization handlers.</span></span>  
  
<span data-ttu-id="8ada8-289">-   语法具有无法由语法的默认基 <see cref="T:System.Uri" /> 规则解决的相对规则引用。</span><span class="sxs-lookup"><span data-stu-id="8ada8-289">-   The grammar has a relative rule reference that cannot be resolved by the default base <see cref="T:System.Uri" /> rule for grammars.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Grammar (System.IO.Stream stream, string ruleName, Uri baseUri, object[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, string ruleName, class System.Uri baseUri, object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String,System.Uri,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Grammar(System::IO::Stream ^ stream, System::String ^ ruleName, Uri ^ baseUri, cli::array &lt;System::Object ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.Grammar : System.IO.Stream * string * Uri * obj[] -&gt; System.Speech.Recognition.Grammar" Usage="new System.Speech.Recognition.Grammar (stream, ruleName, baseUri, parameters)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="ruleName" Type="System.String" />
        <Parameter Name="baseUri" Type="System.Uri" />
        <Parameter Name="parameters" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="8ada8-290">连接到包含语法规范的输入 / 输出对象（包括文件、VisualStudio 资源和 DLL）的 <see cref="T:System.IO.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="8ada8-290">A <see cref="T:System.IO.Stream" /> connected to an input/output object (including files, VisualStudio Resources, and DLLs) that contains a grammar specification.</span></span></param>
        <param name="ruleName"><span data-ttu-id="8ada8-291">用作语音识别语法的入口点的规则标识符，或以使用语法说明的默认根规则 <see langword="null" /> 。</span><span class="sxs-lookup"><span data-stu-id="8ada8-291">The identifier of the rule to use as the entry point of the speech recognition grammar, or <see langword="null" /> to use the default root rule of the grammar description.</span></span></param>
        <param name="baseUri"><span data-ttu-id="8ada8-292">使用的基 URI 解决所有在语法描述中的任何相关规则 <see langword="null" />引用，或</span><span class="sxs-lookup"><span data-stu-id="8ada8-292">The base URI to use to resolve any relative rule reference in the grammar description, or <see langword="null" />.</span></span></param>
        <param name="parameters"><span data-ttu-id="8ada8-293">通过入口点或创建的根规则的属性指定设置为指定的 <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit" /> 参数要传递至的 <see cref="T:System.Speech.Recognition.Grammar" /> 初始化处理程序。</span><span class="sxs-lookup"><span data-stu-id="8ada8-293">Parameters to be passed to the initialization handler specified by the <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit" /> property for the entry point or the root rule of the <see cref="T:System.Speech.Recognition.Grammar" /> to be created.</span></span> <span data-ttu-id="8ada8-294">此参数可以为 null。</span><span class="sxs-lookup"><span data-stu-id="8ada8-294">This parameter may be null.</span></span></param>
        <summary><span data-ttu-id="8ada8-295">初始化 <see cref="T:System.Speech.Recognition.Grammar" /> 类的新实例 <see cref="T:System.IO.Stream" /> 并指定根规则和基 URI 来解析相对引用。</span><span class="sxs-lookup"><span data-stu-id="8ada8-295">Initializes a new instance of the <see cref="T:System.Speech.Recognition.Grammar" /> class a <see cref="T:System.IO.Stream" /> and specifies a root rule and a base URI to resolve relative references.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ada8-296">还可以指定初始化处理程序的参数。</span><span class="sxs-lookup"><span data-stu-id="8ada8-296">Parameters for an initialization handler may also be specified.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8ada8-297">-   包含无效值的任何参数。</span><span class="sxs-lookup"><span data-stu-id="8ada8-297">-   Any of the parameters contain an invalid value.</span></span>  
  
<span data-ttu-id="8ada8-298">-   <paramref name="stream" /> 连接到不包含 <paramref name="ruleName" /> 指定规则的语法。</span><span class="sxs-lookup"><span data-stu-id="8ada8-298">-   The <paramref name="stream" /> is connected to a grammar that does not contain the rule specified by <paramref name="ruleName" />.</span></span>  
  
<span data-ttu-id="8ada8-299">-   数组参数的内容与初始化处理程序的任何规则的参数不匹配。</span><span class="sxs-lookup"><span data-stu-id="8ada8-299">-   The contents of the array parameters do not match the arguments of any of the rule's initialization handlers.</span></span>  
  
<span data-ttu-id="8ada8-300">-   语法包含无法由语法的默认基或 <paramref name="baseUri" />提供的 URI <see cref="T:System.Uri" /> 解决的相对规则引用。</span><span class="sxs-lookup"><span data-stu-id="8ada8-300">-   The grammar contains a relative rule reference that cannot be resolved by the default base <see cref="T:System.Uri" /> rule for grammars or the URI supplied by <paramref name="baseUri" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Grammar (System.Speech.Recognition.SrgsGrammar.SrgsDocument srgsDocument, string ruleName, Uri baseUri, object[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Speech.Recognition.SrgsGrammar.SrgsDocument srgsDocument, string ruleName, class System.Uri baseUri, object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Uri,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Grammar(System::Speech::Recognition::SrgsGrammar::SrgsDocument ^ srgsDocument, System::String ^ ruleName, Uri ^ baseUri, cli::array &lt;System::Object ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.Grammar : System.Speech.Recognition.SrgsGrammar.SrgsDocument * string * Uri * obj[] -&gt; System.Speech.Recognition.Grammar" Usage="new System.Speech.Recognition.Grammar (srgsDocument, ruleName, baseUri, parameters)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="srgsDocument" Type="System.Speech.Recognition.SrgsGrammar.SrgsDocument" />
        <Parameter Name="ruleName" Type="System.String" />
        <Parameter Name="baseUri" Type="System.Uri" />
        <Parameter Name="parameters" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="srgsDocument"><span data-ttu-id="8ada8-301">包含语音识别语法的约束的 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> 的实例。</span><span class="sxs-lookup"><span data-stu-id="8ada8-301">An instance of <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> that contains the constraints for the speech recognition grammar.</span></span></param>
        <param name="ruleName"><span data-ttu-id="8ada8-302">用作语音识别语法的入口点的规则标识符，或以使用语法说明的默认根规则 <see langword="null" /> 。</span><span class="sxs-lookup"><span data-stu-id="8ada8-302">The identifier of the rule to use as the entry point of the speech recognition grammar, or <see langword="null" /> to use the default root rule of the grammar description.</span></span></param>
        <param name="baseUri"><span data-ttu-id="8ada8-303">使用的基 URI 解决所有在语法描述中的任何相关规则 <see langword="null" />引用，或</span><span class="sxs-lookup"><span data-stu-id="8ada8-303">The base URI to use to resolve any relative rule reference in the grammar description, or <see langword="null" />.</span></span></param>
        <param name="parameters"><span data-ttu-id="8ada8-304">为项点或要创建的 <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit" /> 的根规则传递到 <see cref="T:System.Speech.Recognition.Grammar" /> 属性指定的初始化处理程序的参数。此参数可能为 Null。</span><span class="sxs-lookup"><span data-stu-id="8ada8-304">Parameters to be passed to the initialization handler specified by the <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit" /> property for the entry point or the root rule of the <see cref="T:System.Speech.Recognition.Grammar" /> to be created.This parameter may be null.</span></span></param>
        <summary><span data-ttu-id="8ada8-305">初始化来自 <see cref="T:System.Speech.Recognition.Grammar" /> 的实例的 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> 类的新实例，并指定成为语法入口的规则的名称及一个基 URI 来解析相对引用。</span><span class="sxs-lookup"><span data-stu-id="8ada8-305">Initializes a new instance of the <see cref="T:System.Speech.Recognition.Grammar" /> class from an instance of <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" />, and specifies the name of a rule to be the entry point to the grammar and a base URI to resolve relative references.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ada8-306">还可以指定初始化处理程序的参数。</span><span class="sxs-lookup"><span data-stu-id="8ada8-306">Parameters for an initialization handler may also be specified.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8ada8-307">-   包含无效值的任何参数。</span><span class="sxs-lookup"><span data-stu-id="8ada8-307">-   Any of the parameters contain an invalid value.</span></span>  
  
<span data-ttu-id="8ada8-308">-   <paramref name="srgsDocument" /> 不包含 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> 指定的规则 <paramref name="ruleName" /> 的指定中。</span><span class="sxs-lookup"><span data-stu-id="8ada8-308">-   The <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> specified by <paramref name="srgsDocument" /> does not contain the rule specified in <paramref name="ruleName" />.</span></span>  
  
<span data-ttu-id="8ada8-309">-   数组参数的内容与初始化处理程序的任何规则的参数不匹配。</span><span class="sxs-lookup"><span data-stu-id="8ada8-309">-   The contents of the array parameters do not match the arguments of any of the rule's initialization handlers.</span></span>  
  
<span data-ttu-id="8ada8-310">-   语法具有无法由语法的默认基或<paramref name="baseUri" />提供的 URI <see cref="T:System.Uri" /> 解决的相对规则引用。</span><span class="sxs-lookup"><span data-stu-id="8ada8-310">-   The grammar has a relative rule reference that cannot be resolved by the default base <see cref="T:System.Uri" /> rule for grammars or the URI supplied by <paramref name="baseUri" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.Grammar.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool with get, set" Usage="System.Speech.Recognition.Grammar.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8ada8-311">获取或设置一个值，此值控制语音识别器是否可以使用 <see cref="T:System.Speech.Recognition.Grammar" /> 来进行识别。</span><span class="sxs-lookup"><span data-stu-id="8ada8-311">Gets or sets a value that controls whether a <see cref="T:System.Speech.Recognition.Grammar" /> can be used by a speech recognizer to perform recognition.</span></span></summary>
        <value><span data-ttu-id="8ada8-312">如果引用的语音识别语法在语音识别器当前加载， <see langword="Enabled" /> 属性返回 <see langword="true" />；否则该属性返回 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8ada8-312">The  <see langword="Enabled" /> property returns <see langword="true" /> if a speech recognizer can perform recognition using the speech recognition grammar; otherwise the property returns <see langword="false" />.</span></span> <span data-ttu-id="8ada8-313">默认值为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="8ada8-313">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ada8-314">可以启用或禁用 <xref:System.Speech.Recognition.Grammar> 的实例，而不是由语音识别引擎加载。</span><span class="sxs-lookup"><span data-stu-id="8ada8-314">An instance of <xref:System.Speech.Recognition.Grammar> may be enabled or disabled independently of being loaded by a speech recognition engine.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8ada8-315">下面的示例将有关 @no__t 0 对象的信息写入[控制台](https://go.microsoft.com/fwlink/?LinkId=159613)。</span><span class="sxs-lookup"><span data-stu-id="8ada8-315">The following example writes information about a <xref:System.Speech.Recognition.Grammar> object to the [console](https://go.microsoft.com/fwlink/?LinkId=159613).</span></span>  
  
```csharp  
  
private static void DumpGrammarStatus(Grammar item)  
{  
  Console.WriteLine("Grammar name is {0}:", item.Name);  
  Console.WriteLine("  The Grammar {0} loaded.",  
    item.Loaded ? "is" : "is not");  
  Console.WriteLine("  The Grammar {0} enabled.",  
    item.Enabled ? "is" : "is not");  
  if (item.RuleName != null)  
  {  
    Console.WriteLine("  The root rule is {0}.", item.RuleName);  
  }  
  else  
  {  
    Console.WriteLine("  The Grammar does not specify a root rule.");  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Speech.Recognition.Grammar.Loaded" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognizer" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognitionEngine" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=15143"><span data-ttu-id="8ada8-316">语音识别语法规范</span><span class="sxs-lookup"><span data-stu-id="8ada8-316">Speech Recognition Grammar Specification</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsStg">
      <MemberSignature Language="C#" Value="protected internal virtual bool IsStg { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStg" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.Grammar.IsStg" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable ReadOnly Property IsStg As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property bool IsStg { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsStg : bool" Usage="System.Speech.Recognition.Grammar.IsStg" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8ada8-317">获取语法是否是强类型的。</span><span class="sxs-lookup"><span data-stu-id="8ada8-317">Gets whether a grammar is strongly typed.</span></span></summary>
        <value><span data-ttu-id="8ada8-318">如果语法是强类型；<see langword="IsStg" /> 属性返回 <see langword="true" />，否则属性返回 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8ada8-318">The <see langword="IsStg" /> property returns <see langword="true" /> if the grammar is strongly-typed; otherwise the property returns <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ada8-319">强类型 @no__t 0 对象（`IsStg` 等于 `true`）可以将强类型结果（对象，而不是原始文本）返回到客户端应用程序。</span><span class="sxs-lookup"><span data-stu-id="8ada8-319">A strongly-typed <xref:System.Speech.Recognition.Grammar> object (`IsStg` equals `true`) can return strongly-typed results (objects, rather than raw text) to a client application.</span></span> <span data-ttu-id="8ada8-320">例如，强类型语法可能返回 @no__t 0 对象，而不是原始识别的输入。</span><span class="sxs-lookup"><span data-stu-id="8ada8-320">For example, a strongly-typed grammar might return <xref:System.DateTime> objects rather than raw recognized input.</span></span>  
  
 <span data-ttu-id="8ada8-321">可以通过将代码附加到语法规则来实现强类型的语法。</span><span class="sxs-lookup"><span data-stu-id="8ada8-321">You can implement strongly-typed grammars by attaching code to the rules of a grammar.</span></span> <span data-ttu-id="8ada8-322">当识别引擎处理任何给定的规则时，以输入当前部分结果作为输入，将执行关联的代码，并且文本信息成为丰富的类型对象。</span><span class="sxs-lookup"><span data-stu-id="8ada8-322">As a recognition engine processes any given rule, taking as input the current partial results, the associated code is executed and the textual information becomes rich type objects.</span></span> <span data-ttu-id="8ada8-323">这使客户端能够更轻松地使用增强的语义检查、对多个区域性的支持和内部语法逻辑。</span><span class="sxs-lookup"><span data-stu-id="8ada8-323">This allows a client to more easily make use of enhanced semantic checking, support for multiple cultures, and internal grammar logic.</span></span>  
  
 <span data-ttu-id="8ada8-324">强类型 <xref:System.Speech.Recognition.Grammar> 对象的实例通常从程序集中的资源作为公共语言运行时（CLR）的 @no__t。</span><span class="sxs-lookup"><span data-stu-id="8ada8-324">Instances of strongly-typed <xref:System.Speech.Recognition.Grammar> objects are typically obtained from resources in an assembly as a <xref:System.Type> of the Common Language Runtime (CLR).</span></span> <span data-ttu-id="8ada8-325">用于支持不同语言的本地化类型是这类 <xref:System.Speech.Recognition.Grammar> 对象的示例。</span><span class="sxs-lookup"><span data-stu-id="8ada8-325">The localized types used to support different languages are examples of such <xref:System.Speech.Recognition.Grammar> objects.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8ada8-326">继承自 @no__t 0 的强类型语法需要重写 <see langword="IsStg" /> 的默认行为，这会返回 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8ada8-326">Strongly-typed grammars inheriting from <see cref="T:System.Speech.Recognition.Grammar" /> need to override the default behavior of <see langword="IsStg" />, which is to return <see langword="false" />.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Loaded">
      <MemberSignature Language="C#" Value="public bool Loaded { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Loaded" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.Grammar.Loaded" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Loaded As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Loaded { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Loaded : bool" Usage="System.Speech.Recognition.Grammar.Loaded" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8ada8-327">获取 <see cref="T:System.Speech.Recognition.Grammar" /> 是否已经由语音识别器加载。</span><span class="sxs-lookup"><span data-stu-id="8ada8-327">Gets whether a <see cref="T:System.Speech.Recognition.Grammar" /> has been loaded by a speech recognizer.</span></span></summary>
        <value><span data-ttu-id="8ada8-328">如果引用的语音识别语法在语音识别器当前加载， <see langword="Loaded" /> 属性返回 <see langword="true" /> ;否则该属性返回 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8ada8-328">The <see langword="Loaded" /> property returns <see langword="true" /> if the referenced speech recognition grammar is currently loaded in a speech recognizer; otherwise the property returns <see langword="false" />.</span></span> <span data-ttu-id="8ada8-329">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8ada8-329">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ada8-330">加载 @no__t 0 后，不能更改 <xref:System.Speech.Recognition.Grammar.Weight%2A> 和 <xref:System.Speech.Recognition.Grammar.Priority%2A> 的值。</span><span class="sxs-lookup"><span data-stu-id="8ada8-330">Once a <xref:System.Speech.Recognition.Grammar> has been loaded, the values of <xref:System.Speech.Recognition.Grammar.Weight%2A>, and <xref:System.Speech.Recognition.Grammar.Priority%2A> cannot be changed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8ada8-331">下面的示例将有关 @no__t 0 对象的信息写入[控制台](https://go.microsoft.com/fwlink/?LinkId=159613)。</span><span class="sxs-lookup"><span data-stu-id="8ada8-331">The following example writes information about a <xref:System.Speech.Recognition.Grammar> object to the [console](https://go.microsoft.com/fwlink/?LinkId=159613).</span></span>  
  
```csharp  
  
private static void DumpGrammarStatus(Grammar item)  
{  
  Console.WriteLine("Grammar name is {0}:", item.Name);  
  Console.WriteLine("  The Grammar {0} loaded.",  
    item.Loaded ? "is" : "is not");  
  Console.WriteLine("  The Grammar {0} enabled.",  
    item.Enabled ? "is" : "is not");  
  if (item.RuleName != null)  
  {  
    Console.WriteLine("  The root rule is {0}.", item.RuleName);  
  }  
  else  
  {  
    Console.WriteLine("  The Grammar does not specify a root rule.");  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Speech.Recognition.Grammar.Enabled" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognizer" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognitionEngine" />
      </Docs>
    </Member>
    <Member MemberName="LoadLocalizedGrammarFromType">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.Grammar LoadLocalizedGrammarFromType (Type type, params object[] onInitParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Speech.Recognition.Grammar LoadLocalizedGrammarFromType(class System.Type type, object[] onInitParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.Grammar.LoadLocalizedGrammarFromType(System.Type,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::Grammar ^ LoadLocalizedGrammarFromType(Type ^ type, ... cli::array &lt;System::Object ^&gt; ^ onInitParameters);" />
      <MemberSignature Language="F#" Value="static member LoadLocalizedGrammarFromType : Type * obj[] -&gt; System.Speech.Recognition.Grammar" Usage="System.Speech.Recognition.Grammar.LoadLocalizedGrammarFromType (type, onInitParameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.Grammar</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="onInitParameters" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="8ada8-332">在程序集中，基于 <see cref="T:System.Type" /> 对象的 <see cref="T:System.Speech.Recognition.Grammar" />。</span><span class="sxs-lookup"><span data-stu-id="8ada8-332">In an assembly, the <see cref="T:System.Type" /> of an object based on <see cref="T:System.Speech.Recognition.Grammar" />.</span></span></param>
        <param name="onInitParameters"><span data-ttu-id="8ada8-333">要基于 <see cref="T:System.Speech.Recognition.Grammar" /> 传递给本地化对象的初始化方法的参数。</span><span class="sxs-lookup"><span data-stu-id="8ada8-333">Parameters to be passed to an initialization method of the localized object based on <see cref="T:System.Speech.Recognition.Grammar" />.</span></span> <span data-ttu-id="8ada8-334">此参数可以为 null。</span><span class="sxs-lookup"><span data-stu-id="8ada8-334">This parameter may be null.</span></span></param>
        <summary><span data-ttu-id="8ada8-335"><see langword="LoadLocalizedGrammarFromType" /> 方法返回从 <see cref="T:System.Speech.Recognition.Grammar" />派生的 <see cref="T:System.Type" /> 对象的本地化的实例。</span><span class="sxs-lookup"><span data-stu-id="8ada8-335">The <see langword="LoadLocalizedGrammarFromType" /> method returns a localized instance of a <see cref="T:System.Speech.Recognition.Grammar" /> object derived from <see cref="T:System.Type" />.</span></span></summary>
        <returns><span data-ttu-id="8ada8-336">如果存在错误， <see langword="LoadLocalizedGrammarFromType" /> 方法返回 <see cref="T:System.Speech.Recognition.Grammar" />的有效对象基于 <see langword="null" /> 。</span><span class="sxs-lookup"><span data-stu-id="8ada8-336">The <see langword="LoadLocalizedGrammarFromType" /> method returns a valid object based on <see cref="T:System.Speech.Recognition.Grammar" />, or <see langword="null" /> if there has been an error.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ada8-337">通过 @no__t 获取的本地化语法通常是强类型的（有关强类型语法的详细信息，请参阅 <xref:System.Speech.Recognition.Grammar.IsStg%2A>）。</span><span class="sxs-lookup"><span data-stu-id="8ada8-337">Localized grammars obtained with `LoadLocalizedGrammarFromType` are typically strongly-typed (see <xref:System.Speech.Recognition.Grammar.IsStg%2A> for more information on strongly typed grammars).</span></span> <span data-ttu-id="8ada8-338">如果 @no__t 为空引用（在 Visual Basic 中为 Nothing），则本地化语法不应具有任何初始化方法或不带参数的方法。</span><span class="sxs-lookup"><span data-stu-id="8ada8-338">If `onInitParameters` is a null reference (Nothing in Visual Basic) the localized grammar should have either no initialization method, or a method that takes no arguments.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.Grammar.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Speech.Recognition.Grammar.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8ada8-339">获取或设置 <see cref="T:System.Speech.Recognition.Grammar" /> 对象的名称。</span><span class="sxs-lookup"><span data-stu-id="8ada8-339">Gets or sets the name of a <see cref="T:System.Speech.Recognition.Grammar" /> object.</span></span></summary>
        <value><span data-ttu-id="8ada8-340"><see langword="Name" /> 属性返回 <see cref="T:System.Speech.Recognition.Grammar" /> 对象的名称。</span><span class="sxs-lookup"><span data-stu-id="8ada8-340">The <see langword="Name" /> property returns the name of the <see cref="T:System.Speech.Recognition.Grammar" /> object.</span></span> <span data-ttu-id="8ada8-341">默认值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="8ada8-341">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8ada8-342">下面的示例创建两个 <xref:System.Speech.Recognition.Grammar> 对象，一个用于数字，另一个用于分数。</span><span class="sxs-lookup"><span data-stu-id="8ada8-342">The following example creates two <xref:System.Speech.Recognition.Grammar> objects, one for digits and one for fractions.</span></span> <span data-ttu-id="8ada8-343">为语法对象分配名称、相对权重和优先级，并由进程内语音识别器加载。</span><span class="sxs-lookup"><span data-stu-id="8ada8-343">The Grammar objects are assigned names and relative weights and priorities, and loaded by an in-process speech recognizer.</span></span> <span data-ttu-id="8ada8-344">此处未显示 `CreateDigitsGrammar`、`CreateFractionsGrammar` 和 `recognizer_SpeechRecognized` 方法。</span><span class="sxs-lookup"><span data-stu-id="8ada8-344">The `CreateDigitsGrammar`, `CreateFractionsGrammar`, and `recognizer_SpeechRecognized` methods are not shown here.</span></span>  
  
```csharp  
  
// Create a Grammar for recognizing numeric digits.  
Grammar digitsGrammar = CreateDigitsGrammar();  
digitsGrammar.Name = "Digits Grammar";  
digitsGrammar.Priority = 2;  
digitsGrammar.Weight = 0.6f;  
  
// Create a Grammar for recognizing fractions.  
Grammar fractionsGrammar = CreateFractionsGrammar();  
fractionsGrammar.Name = "Fractions Grammar";  
fractionsGrammar.Priority = 1;  
fractionsGrammar.Weight = 1f;  
  
// Create an in-process speech recognizer.  
SpeechRecognitionEngine recognizer = new SpeechRecognitionEngine();  
  
recognizer.SpeechRecognized +=  
  new EventHandler<SpeechRecognizedEventArgs>(  
    recognizer_SpeechRecognized);  
  
// Load the digits and fractions Grammar objects.  
recognizer.LoadGrammar(digitsGrammar);  
recognizer.LoadGrammar(fractionsGrammar);  
  
// Start recognition.  
recognizer.SetInputToDefaultAudioDevice();  
recognizer.RecognizeAsync(RecognizeMode.Multiple);  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.SpeechRecognizer" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognitionEngine" />
      </Docs>
    </Member>
    <Member MemberName="Priority">
      <MemberSignature Language="C#" Value="public int Priority { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Priority" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.Grammar.Priority" />
      <MemberSignature Language="VB.NET" Value="Public Property Priority As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Priority { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Priority : int with get, set" Usage="System.Speech.Recognition.Grammar.Priority" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8ada8-345">获取或设置 <see cref="T:System.Speech.Recognition.Grammar" /> 对象的优先级别值。</span><span class="sxs-lookup"><span data-stu-id="8ada8-345">Gets or sets the priority value of a <see cref="T:System.Speech.Recognition.Grammar" /> object.</span></span></summary>
        <value><span data-ttu-id="8ada8-346"><see langword="Priority" /> 属性返回表示特定 <see cref="T:System.Speech.Recognition.Grammar" />的相对优先级的整数值。</span><span class="sxs-lookup"><span data-stu-id="8ada8-346">The <see langword="Priority" /> property returns an integer value that represents the relative priority of a specific <see cref="T:System.Speech.Recognition.Grammar" />.</span></span> <span data-ttu-id="8ada8-347">该范围包含从 -128 到 127。</span><span class="sxs-lookup"><span data-stu-id="8ada8-347">The range is from -128 to 127 inclusive.</span></span> <span data-ttu-id="8ada8-348">默认值为 0。</span><span class="sxs-lookup"><span data-stu-id="8ada8-348">The default is 0.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ada8-349">如果有多个语法生成相同的识别结果，则使用 `Priority` 属性来选择语法。</span><span class="sxs-lookup"><span data-stu-id="8ada8-349">The `Priority` property is used to select a grammar when more than one grammar will produce an identical recognition result.</span></span> <span data-ttu-id="8ada8-350">如果语音识别器加载并启用了多个与输入匹配的语音识别语法，并且匹配项是识别器的最佳结果，则识别器使用最高 `Priority` 的语法。</span><span class="sxs-lookup"><span data-stu-id="8ada8-350">If a speech recognizer has more than one speech recognition grammar loaded and enabled that match the input, and the match is the best result from the recognizer, then the recognizer uses the grammar that has the highest `Priority`.</span></span> <span data-ttu-id="8ada8-351">如果生成相同识别结果的语法还具有相同的 `Priority` 值，则识别器使用的语法不确定。</span><span class="sxs-lookup"><span data-stu-id="8ada8-351">If the grammars that produce the identical recognition result also have the same `Priority` value, then the grammar that the recognizer uses is undefined.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8ada8-352">下面的示例创建两个 <xref:System.Speech.Recognition.Grammar> 对象，一个用于数字，另一个用于分数。</span><span class="sxs-lookup"><span data-stu-id="8ada8-352">The following example creates two <xref:System.Speech.Recognition.Grammar> objects, one for digits and one for fractions.</span></span> <span data-ttu-id="8ada8-353">@No__t 为0的对象分配名称、相对权重和优先级，并由进程内语音识别器加载。</span><span class="sxs-lookup"><span data-stu-id="8ada8-353">The <xref:System.Speech.Recognition.Grammar> objects are assigned names and relative weights and priorities, and loaded by an in-process speech recognizer.</span></span> <span data-ttu-id="8ada8-354">此处未显示 `CreateDigitsGrammar`、`CreateFractionsGrammar` 和 `recognizer_SpeechRecognized` 方法。</span><span class="sxs-lookup"><span data-stu-id="8ada8-354">The `CreateDigitsGrammar`, `CreateFractionsGrammar`, and `recognizer_SpeechRecognized` methods are not shown here.</span></span>  
  
```csharp  
  
// Create a Grammar for recognizing numeric digits.  
Grammar digitsGrammar = CreateDigitsGrammar();  
digitsGrammar.Name = "Digits Grammar";  
digitsGrammar.Priority = 2;  
digitsGrammar.Weight = 0.6f;  
  
// Create a Grammar for recognizing fractions.  
Grammar fractionsGrammar = CreateFractionsGrammar();  
fractionsGrammar.Name = "Fractions Grammar";  
fractionsGrammar.Priority = 1;  
fractionsGrammar.Weight = 1f;  
  
// Create an in-process speech recognizer.  
SpeechRecognitionEngine recognizer = new SpeechRecognitionEngine();  
  
recognizer.SpeechRecognized +=  
  new EventHandler<SpeechRecognizedEventArgs>(  
    recognizer_SpeechRecognized);  
  
// Load the digits and fractions Grammar objects.  
recognizer.LoadGrammar(digitsGrammar);  
recognizer.LoadGrammar(fractionsGrammar);  
  
// Start recognition.  
recognizer.SetInputToDefaultAudioDevice();  
recognizer.RecognizeAsync(RecognizeMode.Multiple);  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Speech.Recognition.Grammar.Loaded" />
        <altmember cref="P:System.Speech.Recognition.Grammar.Enabled" />
        <altmember cref="P:System.Speech.Recognition.Grammar.Weight" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognizer" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognitionEngine" />
      </Docs>
    </Member>
    <Member MemberName="ResourceName">
      <MemberSignature Language="C#" Value="protected string ResourceName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ResourceName" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.Grammar.ResourceName" />
      <MemberSignature Language="VB.NET" Value="Protected Property ResourceName As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::String ^ ResourceName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ResourceName : string with get, set" Usage="System.Speech.Recognition.Grammar.ResourceName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8ada8-355">使用用于加载当前 <see cref="T:System.Speech.Recognition.Grammar" /> 的二进制资源名称获取或设置值。</span><span class="sxs-lookup"><span data-stu-id="8ada8-355">Gets or sets a value with the name of a binary resource that was used to load the current <see cref="T:System.Speech.Recognition.Grammar" />.</span></span></summary>
        <value><span data-ttu-id="8ada8-356"><see langword="ResourceName" /> 属性返回强类型的语法，使用该 <see cref="T:System.Speech.Recognition.Grammar" />，加载二进制资源的名称。</span><span class="sxs-lookup"><span data-stu-id="8ada8-356">The <see langword="ResourceName" /> property returns the name of the binary resource from which the strongly-typed grammar, used by <see cref="T:System.Speech.Recognition.Grammar" />, was loaded.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RuleName">
      <MemberSignature Language="C#" Value="public string RuleName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RuleName" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.Grammar.RuleName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RuleName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RuleName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RuleName : string" Usage="System.Speech.Recognition.Grammar.RuleName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8ada8-357">获取根规则或 <see cref="T:System.Speech.Recognition.Grammar" /> 对象入口点的名称。</span><span class="sxs-lookup"><span data-stu-id="8ada8-357">Gets the name of the root rule or entry point of a <see cref="T:System.Speech.Recognition.Grammar" /> object.</span></span></summary>
        <value><span data-ttu-id="8ada8-358"><see langword="RuleName" /> 属性返回识别引用的语音语法的根规则的标识符。</span><span class="sxs-lookup"><span data-stu-id="8ada8-358">The <see langword="RuleName" /> property returns the identifier for the root rule of the referenced speech recognition grammar.</span></span> <span data-ttu-id="8ada8-359">默认值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="8ada8-359">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ada8-360">若要构造 @no__t 0 对象并设置其根规则的名称，请使用采用 `ruleName` 参数的 @no__t 1 构造函数之一。</span><span class="sxs-lookup"><span data-stu-id="8ada8-360">To construct a <xref:System.Speech.Recognition.Grammar> object and set the name for its root rule, use one of the <xref:System.Speech.Recognition.Grammar.%23ctor%2A> constructors that takes the `ruleName` parameter.</span></span>  
  
 <span data-ttu-id="8ada8-361">如果 @no__t 的根规则没有名称，属性将返回 `null`。</span><span class="sxs-lookup"><span data-stu-id="8ada8-361">If the root rule of a <xref:System.Speech.Recognition.Grammar> has no name, the property returns `null`.</span></span>  
  
 <span data-ttu-id="8ada8-362">从 @no__t 对象构造的 @no__t 0 实例的根规则通常没有名称，因此 <xref:System.Speech.Recognition.Grammar.RuleName%2A> 返回 `null`。</span><span class="sxs-lookup"><span data-stu-id="8ada8-362">The root rules of <xref:System.Speech.Recognition.Grammar> instances constructed from <xref:System.Speech.Recognition.GrammarBuilder> objects typically have no name, so <xref:System.Speech.Recognition.Grammar.RuleName%2A> returns `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8ada8-363">下面的示例将有关 @no__t 0 对象的信息写入[控制台](https://go.microsoft.com/fwlink/?LinkId=159613)。</span><span class="sxs-lookup"><span data-stu-id="8ada8-363">The following example writes information about a <xref:System.Speech.Recognition.Grammar> object to the [console](https://go.microsoft.com/fwlink/?LinkId=159613).</span></span>  
  
```csharp  
  
private static void DumpGrammarStatus(Grammar item)  
{  
  Console.WriteLine("Grammar name is {0}:", item.Name);  
  Console.WriteLine("  The Grammar {0} loaded.",  
    item.Loaded ? "is" : "is not");  
  Console.WriteLine("  The Grammar {0} enabled.",  
    item.Enabled ? "is" : "is not");  
  if (item.RuleName != null)  
  {  
    Console.WriteLine("  The root rule is {0}.", item.RuleName);  
  }  
  else  
  {  
    Console.WriteLine("  The Grammar does not specify a root rule.");  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.Grammar.#ctor(System.IO.Stream)" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognizer" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognitionEngine" />
      </Docs>
    </Member>
    <Member MemberName="SpeechRecognized">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Recognition.SpeechRecognizedEventArgs&gt; SpeechRecognized;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Recognition.SpeechRecognizedEventArgs&gt; SpeechRecognized" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Recognition.Grammar.SpeechRecognized" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SpeechRecognized As EventHandler(Of SpeechRecognizedEventArgs) " FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Recognition::SpeechRecognizedEventArgs ^&gt; ^ SpeechRecognized;" />
      <MemberSignature Language="F#" Value="member this.SpeechRecognized : EventHandler&lt;System.Speech.Recognition.SpeechRecognizedEventArgs&gt; " Usage="member this.SpeechRecognized : System.EventHandler&lt;System.Speech.Recognition.SpeechRecognizedEventArgs&gt; " />
      <MemberSignature Language="VB.NET" Value="Public Event SpeechRecognized As EventHandler(Of SpeechRecognizedEventArgs) " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Recognition.SpeechRecognizedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8ada8-364">当语音识别器执行使用 <see cref="T:System.Speech.Recognition.Grammar" /> 对象的标识时引发。</span><span class="sxs-lookup"><span data-stu-id="8ada8-364">Raised when a speech recognizer performs recognition using the <see cref="T:System.Speech.Recognition.Grammar" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ada8-365">语音识别器还会在识别输入时引发 @no__t 0 事件。</span><span class="sxs-lookup"><span data-stu-id="8ada8-365">The speech recognizer also raises a `SpeechRecognized`  event when it recognizes input.</span></span> <span data-ttu-id="8ada8-366">在语音识别器 @no__t 2 事件之前，将引发 <xref:System.Speech.Recognition.Grammar> 对象的 @no__t。</span><span class="sxs-lookup"><span data-stu-id="8ada8-366">The <xref:System.Speech.Recognition.Grammar> object's <xref:System.Speech.Recognition.Grammar.SpeechRecognized> event is raised prior to the speech recognizer's `SpeechRecognized` event .</span></span> <span data-ttu-id="8ada8-367">有关详细信息，请参阅 <xref:System.Speech.Recognition.SpeechRecognizer.SpeechRecognized?displayProperty=nameWithType>、<xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized?displayProperty=nameWithType> 和 @no__t 2 事件。</span><span class="sxs-lookup"><span data-stu-id="8ada8-367">For more information, see the <xref:System.Speech.Recognition.SpeechRecognizer.SpeechRecognized?displayProperty=nameWithType>, <xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized?displayProperty=nameWithType>, and <xref:System.Speech.Recognition.SpeechRecognitionEngine.RecognizeCompleted> events.</span></span>  
  
 <span data-ttu-id="8ada8-368">特定于特定语法的任何任务应始终由 <xref:System.Speech.Recognition.Grammar> 对象的 @no__t 1 事件的处理程序处理。</span><span class="sxs-lookup"><span data-stu-id="8ada8-368">Any tasks specific to a particular grammar should always be handled by handlers for the <xref:System.Speech.Recognition.Grammar> object's <xref:System.Speech.Recognition.Grammar.SpeechRecognized> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8ada8-369">下面的示例演示如何将事件处理程序用于 @no__t 0 对象的 @no__t 1 事件。</span><span class="sxs-lookup"><span data-stu-id="8ada8-369">The following example shows the use of an event handler for the <xref:System.Speech.Recognition.Grammar> object's <xref:System.Speech.Recognition.Grammar.SpeechRecognized> event.</span></span> <span data-ttu-id="8ada8-370">它会将识别结果输出到[控制台](https://go.microsoft.com/fwlink/?LinkId=159613)。</span><span class="sxs-lookup"><span data-stu-id="8ada8-370">It outputs the recognition results to the [console](https://go.microsoft.com/fwlink/?LinkId=159613).</span></span>  
  
```csharp  
public partial class Form1 : Form  
{  
  SpeechRecognitionEngine sre;  
  
  public Form1()  
  {  
  InitializeComponent();  
  
  // Create an in-process speech recognizer.  
  sre = new SpeechRecognitionEngine();  
  
  // Configure input to the speech recognizer.  
  sre.SetInputToDefaultAudioDevice();  
  
  // Create a simple grammar and load it.  
  Grammar testGrammar = new Grammar(new GrammarBuilder("testing"));  
  sre.LoadGrammarAsync(testGrammar);  
  
  // Add a handler for the grammar's speech recognized event.  
  testGrammar.SpeechRecognized += new EventHandler<SpeechRecognizedEventArgs>(testGrammar_SpeechRecognized);  
  
  // Start asynchronous speech recognition.  
  sre.RecognizeAsync();  
  }  
  
  // Handle the grammar's SpeechRecognized event, output the recognized text.  
  void testGrammar_SpeechRecognized(object sender, SpeechRecognizedEventArgs e)  
  {  
    Console.WriteLine("Recognized text: " + e.Result.Text);  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.SpeechRecognizer" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognitionEngine" />
      </Docs>
    </Member>
    <Member MemberName="StgInit">
      <MemberSignature Language="C#" Value="protected void StgInit (object[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void StgInit(object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.Grammar.StgInit(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Protected Sub StgInit (parameters As Object())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void StgInit(cli::array &lt;System::Object ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.StgInit : obj[] -&gt; unit" Usage="grammar.StgInit parameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="parameters"><span data-ttu-id="8ada8-371">将被传递以初始化强类型语法的参数。此参数可能为 Null。</span><span class="sxs-lookup"><span data-stu-id="8ada8-371">Parameters to be passed to initialize the strongly-typed grammar.This parameter may be null.</span></span></param>
        <summary><span data-ttu-id="8ada8-372"><see langword="StgInit" /> 方法初始的强类型语法。</span><span class="sxs-lookup"><span data-stu-id="8ada8-372">The <see langword="StgInit" /> method initializes a strongly-typed grammar.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ada8-373">强类型 @no__t 0 对象（`IsStg` 等于 `true`）可以将强类型结果（对象，而不是原始文本）返回到客户端应用程序。</span><span class="sxs-lookup"><span data-stu-id="8ada8-373">A strongly-typed <xref:System.Speech.Recognition.Grammar> object (`IsStg` equals `true`) can return strongly-typed results (objects, rather than raw text) to a client application.</span></span> <span data-ttu-id="8ada8-374">例如，强类型语法可能返回 @no__t 0 对象，而不是原始识别的输入。</span><span class="sxs-lookup"><span data-stu-id="8ada8-374">For example, a strongly-typed grammar might return <xref:System.DateTime> objects rather than raw recognized input.</span></span>  
  
 <span data-ttu-id="8ada8-375">可以通过将代码附加到语法规则来实现强类型的语法。</span><span class="sxs-lookup"><span data-stu-id="8ada8-375">You can implement strongly-typed grammars by attaching code to the rules of a grammar.</span></span> <span data-ttu-id="8ada8-376">当识别引擎处理任何给定的规则时，以输入当前部分结果作为输入，将执行关联的代码，并且文本信息成为丰富的类型对象。</span><span class="sxs-lookup"><span data-stu-id="8ada8-376">As a recognition engine processes any given rule, taking as input the current partial results, the associated code is executed and the textual information becomes rich type objects.</span></span> <span data-ttu-id="8ada8-377">这使客户端能够更轻松地使用增强的语义检查、对多个区域性的支持和内部语法逻辑。</span><span class="sxs-lookup"><span data-stu-id="8ada8-377">This allows a client to more easily make use of enhanced semantic checking, support for multiple cultures, and internal grammar logic.</span></span>  
  
 <span data-ttu-id="8ada8-378">强类型 <xref:System.Speech.Recognition.Grammar> 对象的实例通常从程序集中的资源作为公共语言运行时（CLR）的 @no__t。</span><span class="sxs-lookup"><span data-stu-id="8ada8-378">Instances of strongly-typed <xref:System.Speech.Recognition.Grammar> objects are typically obtained from resources in an assembly as a <xref:System.Type> of the Common Language Runtime (CLR).</span></span> <span data-ttu-id="8ada8-379">用于支持不同语言的本地化类型是这类 <xref:System.Speech.Recognition.Grammar> 对象的示例。</span><span class="sxs-lookup"><span data-stu-id="8ada8-379">The localized types used to support different languages are examples of such <xref:System.Speech.Recognition.Grammar> objects.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8ada8-380">如果强类型语法需要初始化，应在构造函数或初始化方法中调用 <see langword="StgInit" />。</span><span class="sxs-lookup"><span data-stu-id="8ada8-380">If a strongly-typed grammar requires initialization, <see langword="StgInit" /> should be called in a constructor or an initialization method.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Weight">
      <MemberSignature Language="C#" Value="public float Weight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Weight" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.Grammar.Weight" />
      <MemberSignature Language="VB.NET" Value="Public Property Weight As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float Weight { float get(); void set(float value); };" />
      <MemberSignature Language="F#" Value="member this.Weight : single with get, set" Usage="System.Speech.Recognition.Grammar.Weight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8ada8-381">获取或设置 <see cref="T:System.Speech.Recognition.Grammar" /> 对象的宽度值。</span><span class="sxs-lookup"><span data-stu-id="8ada8-381">Gets or sets the weight value of a <see cref="T:System.Speech.Recognition.Grammar" /> object.</span></span></summary>
        <value><span data-ttu-id="8ada8-382"><see langword="Weight" /> 返回一个表明标识引擎实例当处理语音输入时应分配给语法的相对权重的浮点值的属性。</span><span class="sxs-lookup"><span data-stu-id="8ada8-382">The <see langword="Weight" /> property returns a floating point value indicating the relative weight that a recognition engine  instance should assign to the grammar when processing speech input.</span></span> <span data-ttu-id="8ada8-383">范围为0.0 到1.0 （含）。</span><span class="sxs-lookup"><span data-stu-id="8ada8-383">The range is from 0.0 to 1.0 inclusive.</span></span> <span data-ttu-id="8ada8-384">默认值为1.0。</span><span class="sxs-lookup"><span data-stu-id="8ada8-384">The default is 1.0.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ada8-385">由于识别引擎使用**权重**，其对特定语法性能的影响并不像 <xref:System.Speech.Recognition.Grammar.Priority%2A> 一样直接预测。</span><span class="sxs-lookup"><span data-stu-id="8ada8-385">Because of the complexity of a recognition engine's use of **Weight**, its effect on a particular grammar's performance is not as directly predictable as that of <xref:System.Speech.Recognition.Grammar.Priority%2A>.</span></span>  
  
 <span data-ttu-id="8ada8-386">语音识别是加权系统。</span><span class="sxs-lookup"><span data-stu-id="8ada8-386">Speech recognition is a weighted system.</span></span> <span data-ttu-id="8ada8-387">它基于语法权重的组合、为语法中的替代项定义的权重以及语音模型定义的概率，计算所有可能的识别路径。</span><span class="sxs-lookup"><span data-stu-id="8ada8-387">It evaluates all possible recognition paths based on a combination of the weight of the grammar, the weights defined for alternatives within the grammar, and the probabilities defined by speech models.</span></span> <span data-ttu-id="8ada8-388">语音识别引擎使用这些权重和概率的组合来对可能的备用识别进行排名。</span><span class="sxs-lookup"><span data-stu-id="8ada8-388">The speech recognition engine uses the combination of these weights and probabilities to rank potential alternative recognitions.</span></span> <span data-ttu-id="8ada8-389">具有更高权重的语法将更多地提供识别替代方法（而不是具有较低权重的语法）的排名。</span><span class="sxs-lookup"><span data-stu-id="8ada8-389">Grammars with higher weights will contribute more to the ranking of recognition alternatives than grammars with lower weights.</span></span>  
  
 <span data-ttu-id="8ada8-390">语音识别器上 <xref:System.Speech.Recognition.Grammar.Weight%2A> 属性的影响取决于识别器的实现。</span><span class="sxs-lookup"><span data-stu-id="8ada8-390">The effect of the <xref:System.Speech.Recognition.Grammar.Weight%2A> property on a speech recognizer is dependent on the implementation of the recognizer.</span></span> <span data-ttu-id="8ada8-391">尽管 <xref:System.Speech.Recognition.Grammar.Weight%2A> 属性可用于调整应用程序的语音识别的准确性，但仅应在对特定识别环境进行了控制的诊断研究后使用，并在用法.</span><span class="sxs-lookup"><span data-stu-id="8ada8-391">Although the <xref:System.Speech.Recognition.Grammar.Weight%2A> property can be used to tune the accuracy of speech recognition for an application, it should be used only after controlled diagnostic study of a particular recognition environment and with full information about the recognition engine under use.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8ada8-392">下面的示例创建两个 <xref:System.Speech.Recognition.Grammar> 对象，一个用于数字，另一个用于分数。</span><span class="sxs-lookup"><span data-stu-id="8ada8-392">The following example creates two <xref:System.Speech.Recognition.Grammar> objects, one for digits and one for fractions.</span></span> <span data-ttu-id="8ada8-393">@No__t 为0的对象分配名称、相对权重和优先级，并由进程内语音识别器加载。</span><span class="sxs-lookup"><span data-stu-id="8ada8-393">The <xref:System.Speech.Recognition.Grammar> objects are assigned names and relative weights and priorities, and loaded by an in-process speech recognizer.</span></span> <span data-ttu-id="8ada8-394">此处未显示 `CreateDigitsGrammar`、`CreateFractionsGrammar` 和 `recognizer_SpeechRecognized` 方法。</span><span class="sxs-lookup"><span data-stu-id="8ada8-394">The `CreateDigitsGrammar`, `CreateFractionsGrammar`, and `recognizer_SpeechRecognized` methods are not shown here.</span></span>  
  
```csharp  
  
// Create a Grammar for recognizing numeric digits.  
Grammar digitsGrammar = CreateDigitsGrammar();  
digitsGrammar.Name = "Digits Grammar";  
digitsGrammar.Priority = 2;  
digitsGrammar.Weight = 0.6f;  
  
// Create a Grammar for recognizing fractions.  
Grammar fractionsGrammar = CreateFractionsGrammar();  
fractionsGrammar.Name = "Fractions Grammar";  
fractionsGrammar.Priority = 1;  
fractionsGrammar.Weight = 1f;  
  
// Create an in-process speech recognizer.  
SpeechRecognitionEngine recognizer = new SpeechRecognitionEngine();  
  
recognizer.SpeechRecognized +=  
  new EventHandler<SpeechRecognizedEventArgs>(  
    recognizer_SpeechRecognized);  
  
// Load the digits and fractions Grammar objects.  
recognizer.LoadGrammar(digitsGrammar);  
recognizer.LoadGrammar(fractionsGrammar);  
  
// Start recognition.  
recognizer.SetInputToDefaultAudioDevice();  
recognizer.RecognizeAsync(RecognizeMode.Multiple);  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Speech.Recognition.Grammar.Loaded" />
        <altmember cref="P:System.Speech.Recognition.Grammar.Enabled" />
        <altmember cref="P:System.Speech.Recognition.Grammar.Priority" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognizer" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognitionEngine" />
      </Docs>
    </Member>
  </Members>
</Type>
