<Type Name="SubsetMatchingMode" FullName="System.Speech.Recognition.SubsetMatchingMode">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e8c41a4e84219ee4a81194fd55080dc64a837fc5" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="64095310" /></Metadata><TypeSignature Language="C#" Value="public enum SubsetMatchingMode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed SubsetMatchingMode extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Recognition.SubsetMatchingMode" />
  <TypeSignature Language="VB.NET" Value="Public Enum SubsetMatchingMode" />
  <TypeSignature Language="C++ CLI" Value="public enum class SubsetMatchingMode" />
  <TypeSignature Language="F#" Value="type SubsetMatchingMode = " />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>枚举匹配模式的子集值。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以在 System.Speech，构造成功识别短语，即使其内容的一个子集的音频输入中找到的语法。  
  
 默认情况下，识别引擎要求整个短语的完全匹配项。 识别引擎还可以匹配根据定义的参数部分短语<xref:System.Speech.Recognition.SubsetMatchingMode>用作参数的成员<xref:System.Speech.Recognition.GrammarBuilder.%23ctor%2A>或<xref:System.Speech.Recognition.SrgsGrammar.SrgsSubset.%23ctor%2A>构造函数，或<xref:System.Speech.Recognition.GrammarBuilder.Append%2A>方法。  
  
 以下展示了如何每个的<xref:System.Speech.Recognition.SubsetMatchingMode>成员影响在包含该短语的语法中使用"car 的平面的船舶卡车"时识别。  
  
 **OrderedSubset**  
  
 此模式将指示的短语子集将用于成功识别整个短语，如果满足以下条件：  
  
-   音频输入中识别的短语中的一个或多个单词。  
  
-   这些已识别单词的相对顺序是短语相同。  
  
-   匹配的单词可能包含仅介词和文章。  
  
 将短语添加到使用 OrderedSubset 语法"一辆汽车的平面的船舶卡车"模式下生成上识别以下结果：  
  
|**输入的短语**|**结果**|  
|----------------------|----------------|  
|"汽车的平面的船舶卡车"|识别整个短语"一个平面的船舶卡车的 car"。|  
|"汽车的小船卡车"|识别整个短语"一个平面的船舶卡车的 car"。|  
|"一辆汽车的平面"|识别整个短语"一个平面的船舶卡车的 car"。 已识别的子集不需要为一系列的原始字符串。|  
|"汽车的平面的卡车船"|识别不成功。 单词是无序。|  
|""|识别整个短语"一个平面的船舶卡车的 car"。 用于识别使用介词和文章。|  
  
 **OrderedSubsetContentRequired**  
  
 此模式将指示的短语子集将用于成功识别整个短语，如果满足以下条件：  
  
-   短语中的一个或多个单词被识别的音频输入中和  
  
-   这些已识别单词的相对顺序是短语相同。  
  
-   匹配的单词不能包含仅介词和文章。  
  
 将短语添加到使用 OrderedSubsetContentRequired 语法"一辆汽车的平面的船舶卡车"模式下生成上识别以下结果：  
  
|**输入的短语**|**结果**|  
|----------------------|----------------|  
|"汽车的平面的船舶卡车"|识别整个短语"一个平面的船舶卡车的 car"。|  
|"汽车的小船卡车"|识别整个短语"一个平面的船舶卡车的 car"。|  
|"一辆汽车的平面"|识别整个短语"一个平面的船舶卡车的 car"。 已识别的子集不需要为一系列的原始字符串。|  
|"汽车的平面的卡车船"|识别不成功。 单词是无序。|  
|""|识别不成功。  语音输入必须包含文章和介词以外的单词。|  
  
 **子序列：**  
  
 此模式将指示的短语子集将用于成功识别整个短语，如果满足以下条件：  
  
-   短语中的一个或多个单词的音频输入中被识别为一系列短语，并  
  
-   这些已识别单词的相对顺序是短语相同。  
  
-   匹配的单词可能包含仅介词和文章。  
  
 将短语"car 的平面的船舶卡车"添加到使用子序列模式的语法生成在识别以下结果：  
  
|**输入的短语**|**结果**|  
|----------------------|----------------|  
|"汽车的平面的船舶卡车"|识别整个短语"一个平面的船舶卡车的 car"。|  
|"汽车的小船卡车"|识别整个短语"一个平面的船舶卡车的 car"。|  
|"一辆汽车的平面"|识别不成功。 已识别的子集必须是原始字符串的序列。|  
|"汽车的平面的卡车船"|识别不成功。 单词是无序。|  
|""|识别整个短语"一个平面的船舶卡车的 car"。 用于识别使用介词和文章。|  
  
 **SubsequenceContentRequired**  
  
 此模式将指示的短语子集将用于成功识别整个短语，如果满足以下条件：  
  
-   匹配字符串中的一个或多个单词的音频输入中被识别为一系列短语。  
  
-   匹配的单词不能包含仅介词和文章。  
  
 将短语添加到使用 SubsequenceContentRequired 语法"一辆汽车的平面的船舶卡车"模式下生成上识别以下结果：  
  
|**输入的短语**|**结果**|  
|----------------------|----------------|  
|"汽车的平面的船舶卡车"|识别整个短语"一个平面的船舶卡车的 car"。|  
|"汽车的小船卡车"|识别整个短语"一个平面的船舶卡车的 car"。|  
|"一辆汽车的平面"|识别不成功。 已识别的子集必须是原始字符串的序列。|  
|"汽车的平面的卡车船"|识别不成功。 单词是无序。|  
|""|识别不成功。 语音输入必须包含文章和介词以外的单词。|  
  
   
  
## Examples  
 下面是用于生成四个测试例程<xref:System.Speech.Recognition.Grammar>对象，对每个使用相同的短语， `SubsetMatchingModes`。 这些<xref:System.Speech.Recognition.Grammar>对象然后可以进行测试。  
  
```  
private void CreateSubsetMatchTest()   
{  
  foreach ( System.Speech.Recognition.SubsetMatchingMode mode   
              in Enum.GetValues(typeof(System.Speech.Recognition.SubsetMatchingMode)))  
  {  
    GrammarBuilder gb = new GrammarBuilder("a car the truck a boat that plane",mode);  
    Grammar grammar = new Grammar(gb);  
    grammar.Name = mode.ToString();  
    grammar.Enabled=true;  
    _recognizer.LoadGrammar(grammar);  
  }  
}  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Speech.Recognition.GrammarBuilder" />
    <altmember cref="T:System.Speech.Recognition.SrgsGrammar.SrgsSubset" />
    <altmember cref="N:System.Speech.Recognition.SrgsGrammar" />
  </Docs>
  <Members>
    <Member MemberName="OrderedSubset">
      <MemberSignature Language="C#" Value="OrderedSubset" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Speech.Recognition.SubsetMatchingMode OrderedSubset = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Speech.Recognition.SubsetMatchingMode.OrderedSubset" />
      <MemberSignature Language="VB.NET" Value="OrderedSubset" />
      <MemberSignature Language="C++ CLI" Value="OrderedSubset" />
      <MemberSignature Language="F#" Value="OrderedSubset = 1" Usage="System.Speech.Recognition.SubsetMatchingMode.OrderedSubset" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.SubsetMatchingMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>指示子集匹配模式是 OrderedSubset。</summary>
      </Docs>
    </Member>
    <Member MemberName="OrderedSubsetContentRequired">
      <MemberSignature Language="C#" Value="OrderedSubsetContentRequired" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Speech.Recognition.SubsetMatchingMode OrderedSubsetContentRequired = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.Speech.Recognition.SubsetMatchingMode.OrderedSubsetContentRequired" />
      <MemberSignature Language="VB.NET" Value="OrderedSubsetContentRequired" />
      <MemberSignature Language="C++ CLI" Value="OrderedSubsetContentRequired" />
      <MemberSignature Language="F#" Value="OrderedSubsetContentRequired = 3" Usage="System.Speech.Recognition.SubsetMatchingMode.OrderedSubsetContentRequired" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.SubsetMatchingMode</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>指示子集匹配模式是 OrderedSubsetContentRequired。</summary>
      </Docs>
    </Member>
    <Member MemberName="Subsequence">
      <MemberSignature Language="C#" Value="Subsequence" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Speech.Recognition.SubsetMatchingMode Subsequence = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Speech.Recognition.SubsetMatchingMode.Subsequence" />
      <MemberSignature Language="VB.NET" Value="Subsequence" />
      <MemberSignature Language="C++ CLI" Value="Subsequence" />
      <MemberSignature Language="F#" Value="Subsequence = 0" Usage="System.Speech.Recognition.SubsetMatchingMode.Subsequence" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.SubsetMatchingMode</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>指示子集匹配模式是 Subsequence。</summary>
      </Docs>
    </Member>
    <Member MemberName="SubsequenceContentRequired">
      <MemberSignature Language="C#" Value="SubsequenceContentRequired" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Speech.Recognition.SubsetMatchingMode SubsequenceContentRequired = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Speech.Recognition.SubsetMatchingMode.SubsequenceContentRequired" />
      <MemberSignature Language="VB.NET" Value="SubsequenceContentRequired" />
      <MemberSignature Language="C++ CLI" Value="SubsequenceContentRequired" />
      <MemberSignature Language="F#" Value="SubsequenceContentRequired = 2" Usage="System.Speech.Recognition.SubsetMatchingMode.SubsequenceContentRequired" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.SubsetMatchingMode</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>指示子集匹配模式是 SubsequenceContentRequired。</summary>
      </Docs>
    </Member>
  </Members>
</Type>