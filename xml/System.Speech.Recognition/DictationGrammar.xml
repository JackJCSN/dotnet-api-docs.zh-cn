<Type Name="DictationGrammar" FullName="System.Speech.Recognition.DictationGrammar">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8a9e1eaa194231c8436fba54e4f887133b57bdd0" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="64097741" /></Metadata><TypeSignature Language="C#" Value="public class DictationGrammar : System.Speech.Recognition.Grammar" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DictationGrammar extends System.Speech.Recognition.Grammar" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Recognition.DictationGrammar" />
  <TypeSignature Language="VB.NET" Value="Public Class DictationGrammar&#xA;Inherits Grammar" />
  <TypeSignature Language="C++ CLI" Value="public ref class DictationGrammar : System::Speech::Recognition::Grammar" />
  <TypeSignature Language="F#" Value="type DictationGrammar = class&#xA;    inherit Grammar" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Speech.Recognition.Grammar</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="c19fc-101">表示用于自由文本口述的语音识别语法。</span><span class="sxs-lookup"><span data-stu-id="c19fc-101">Represents a speech recognition grammar used for free text dictation.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19fc-102">此类提供预定义的语言模型可以处理文本到语音的用户输入的应用的程序。</span><span class="sxs-lookup"><span data-stu-id="c19fc-102">This class provides applications with a predefined language model that can process spoken user input into text.</span></span> <span data-ttu-id="c19fc-103">此类支持默认和自定义<xref:System.Speech.Recognition.DictationGrammar>对象。</span><span class="sxs-lookup"><span data-stu-id="c19fc-103">This class supports both default and custom <xref:System.Speech.Recognition.DictationGrammar> objects.</span></span> <span data-ttu-id="c19fc-104">有关选择听写语法的信息，请参阅<xref:System.Speech.Recognition.DictationGrammar.%23ctor%28System.String%29>构造函数。</span><span class="sxs-lookup"><span data-stu-id="c19fc-104">For information about selecting a dictation grammar, see the <xref:System.Speech.Recognition.DictationGrammar.%23ctor%28System.String%29> constructor.</span></span>  
  
 <span data-ttu-id="c19fc-105">默认情况下，<xref:System.Speech.Recognition.DictationGrammar>语言模型是免费的上下文。</span><span class="sxs-lookup"><span data-stu-id="c19fc-105">By default, the <xref:System.Speech.Recognition.DictationGrammar> language model is context free.</span></span> <span data-ttu-id="c19fc-106">它不会使用特定的词或 word 顺序来标识和解释音频输入。</span><span class="sxs-lookup"><span data-stu-id="c19fc-106">It does not make use of specific words or word order to identify and interpret audio input.</span></span> <span data-ttu-id="c19fc-107">若要将上下文添加到听写语法，请使用<xref:System.Speech.Recognition.DictationGrammar.SetDictationContext%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c19fc-107">To add context to the dictation grammar, use the <xref:System.Speech.Recognition.DictationGrammar.SetDictationContext%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c19fc-108"><xref:System.Speech.Recognition.DictationGrammar> 对象不支持<xref:System.Speech.Recognition.Grammar.Priority%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="c19fc-108"><xref:System.Speech.Recognition.DictationGrammar> objects do not support the <xref:System.Speech.Recognition.Grammar.Priority%2A> property.</span></span> <span data-ttu-id="c19fc-109"><xref:System.Speech.Recognition.DictationGrammar> 将引发<xref:System.NotSupportedException>如果<xref:System.Speech.Recognition.Grammar.Priority%2A>设置。</span><span class="sxs-lookup"><span data-stu-id="c19fc-109"><xref:System.Speech.Recognition.DictationGrammar> throws a <xref:System.NotSupportedException> if <xref:System.Speech.Recognition.Grammar.Priority%2A> is set.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c19fc-110">以下示例创建三个听写语法、 将它们添加到新<xref:System.Speech.Recognition.SpeechRecognitionEngine>对象，并返回新的对象。</span><span class="sxs-lookup"><span data-stu-id="c19fc-110">The following example creates three dictation grammars, adds them to a new <xref:System.Speech.Recognition.SpeechRecognitionEngine> object, and returns the new object.</span></span> <span data-ttu-id="c19fc-111">第一个语法是默认的听写语法。</span><span class="sxs-lookup"><span data-stu-id="c19fc-111">The first grammar is the default dictation grammar.</span></span> <span data-ttu-id="c19fc-112">第二个语法是拼写听写语法。</span><span class="sxs-lookup"><span data-stu-id="c19fc-112">The second grammar is the spelling dictation grammar.</span></span> <span data-ttu-id="c19fc-113">第三个语法是默认的听写语法，包括上下文短语。</span><span class="sxs-lookup"><span data-stu-id="c19fc-113">The third grammar is the default dictation grammar that includes a context phrase.</span></span> <span data-ttu-id="c19fc-114"><xref:System.Speech.Recognition.DictationGrammar.SetDictationContext%2A>方法用于将上下文短语听写语法与相关联后加载到<xref:System.Speech.Recognition.SpeechRecognitionEngine>对象。</span><span class="sxs-lookup"><span data-stu-id="c19fc-114">The <xref:System.Speech.Recognition.DictationGrammar.SetDictationContext%2A> method is used to associate the context phrase with the dictation grammar after it is loaded to the <xref:System.Speech.Recognition.SpeechRecognitionEngine> object.</span></span>  
  
```csharp  
  
private SpeechRecognitionEngine LoadDictationGrammars()  
{  
  
  // Create a default dictation grammar.  
  DictationGrammar defaultDictationGrammar = new DictationGrammar();  
  defaultDictationGrammar.Name = "default dictation";  
  defaultDictationGrammar.Enabled = true;  
  
  // Create the spelling dictation grammar.  
  DictationGrammar spellingDictationGrammar =  
    new DictationGrammar("grammar:dictation#spelling");  
  spellingDictationGrammar.Name = "spelling dictation";  
  spellingDictationGrammar.Enabled = true;  
  
  // Create the question dictation grammar.  
  DictationGrammar customDictationGrammar =  
    new DictationGrammar("grammar:dictation");  
  customDictationGrammar.Name = "question dictation";  
  customDictationGrammar.Enabled = true;  
  
  // Create a SpeechRecognitionEngine object and add the grammars to it.  
  SpeechRecognitionEngine recoEngine = new SpeechRecognitionEngine();  
  recoEngine.LoadGrammar(defaultDictationGrammar);  
  recoEngine.LoadGrammar(spellingDictationGrammar);  
  recoEngine.LoadGrammar(customDictationGrammar);  
  
  // Add a context to customDictationGrammar.  
  customDictationGrammar.SetDictationContext("How do you", null);  
  
  return recoEngine;  
}  
  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Speech.Recognition.Grammar" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c19fc-115">初始化 <see cref="T:System.Speech.Recognition.DictationGrammar" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="c19fc-115">Initializes a new instance of the <see cref="T:System.Speech.Recognition.DictationGrammar" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DictationGrammar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.DictationGrammar.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DictationGrammar();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c19fc-116">初始化 <see cref="T:System.Speech.Recognition.DictationGrammar" /> 类的新实例用于 Windows 桌面语音技术提供的默认命令语法。</span><span class="sxs-lookup"><span data-stu-id="c19fc-116">Initializes a new instance of the <see cref="T:System.Speech.Recognition.DictationGrammar" /> class for the default dictation grammar provided by Windows Desktop Speech Technology.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19fc-117">默认的听写语法来模拟标准听写实践，包括标点。</span><span class="sxs-lookup"><span data-stu-id="c19fc-117">The default dictation grammar emulates standard dictation practices, including punctuation.</span></span> <span data-ttu-id="c19fc-118">它不支持某个单词的拼写。</span><span class="sxs-lookup"><span data-stu-id="c19fc-118">It does not support the spelling of a word.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DictationGrammar (string topic);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string topic) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.DictationGrammar.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (topic As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DictationGrammar(System::String ^ topic);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.DictationGrammar : string -&gt; System.Speech.Recognition.DictationGrammar" Usage="new System.Speech.Recognition.DictationGrammar topic" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="topic" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="topic"><span data-ttu-id="c19fc-119">一个符合 XML 的统一资源标识符 (URI)，指定听写语法（<c>grammar:dictation</c> 或 <c>grammar:dictation#spelling</c>）。</span><span class="sxs-lookup"><span data-stu-id="c19fc-119">An XML-compliant Universal Resource Identifier (URI) that specifies the dictation grammar, either <c>grammar:dictation</c> or <c>grammar:dictation#spelling</c>.</span></span></param>
        <summary><span data-ttu-id="c19fc-120">用特定的口述语法初始化 <see cref="T:System.Speech.Recognition.DictationGrammar" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="c19fc-120">Initializes a new instance of the <see cref="T:System.Speech.Recognition.DictationGrammar" /> class with a specific dictation grammar.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19fc-121">语音平台使用专用的 URI 语法来定义自定义的听写语法。</span><span class="sxs-lookup"><span data-stu-id="c19fc-121">The Speech platform uses a specialized URI syntax to define the custom dictation grammar.</span></span> <span data-ttu-id="c19fc-122">值`grammar:dictation`指示默认的听写语法。</span><span class="sxs-lookup"><span data-stu-id="c19fc-122">The value `grammar:dictation` indicates the default dictation grammar.</span></span> <span data-ttu-id="c19fc-123">值`grammar:dictation#spelling`指示拼写听写语法。</span><span class="sxs-lookup"><span data-stu-id="c19fc-123">The value `grammar:dictation#spelling` indicates the spelling dictation grammar.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDictationContext">
      <MemberSignature Language="C#" Value="public void SetDictationContext (string precedingText, string subsequentText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetDictationContext(string precedingText, string subsequentText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.DictationGrammar.SetDictationContext(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetDictationContext (precedingText As String, subsequentText As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetDictationContext(System::String ^ precedingText, System::String ^ subsequentText);" />
      <MemberSignature Language="F#" Value="member this.SetDictationContext : string * string -&gt; unit" Usage="dictationGrammar.SetDictationContext (precedingText, subsequentText)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="precedingText" Type="System.String" />
        <Parameter Name="subsequentText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="precedingText"><span data-ttu-id="c19fc-124">文本指示口述上下文的开端。</span><span class="sxs-lookup"><span data-stu-id="c19fc-124">Text that indicates the start of a dictation context.</span></span></param>
        <param name="subsequentText"><span data-ttu-id="c19fc-125">文本指示口述上下文的末尾。</span><span class="sxs-lookup"><span data-stu-id="c19fc-125">Text that indicates the end of a dictation context.</span></span></param>
        <summary><span data-ttu-id="c19fc-126">添加上下文到由 <see cref="T:System.Speech.Recognition.SpeechRecognizer" /> 或 <see cref="T:System.Speech.Recognition.SpeechRecognitionEngine" /> 对象加载的听写语法。</span><span class="sxs-lookup"><span data-stu-id="c19fc-126">Adds a context to a dictation grammar that has been loaded by a <see cref="T:System.Speech.Recognition.SpeechRecognizer" /> or a <see cref="T:System.Speech.Recognition.SpeechRecognitionEngine" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19fc-127">默认情况下，听写语法不会使用特定的词或 word 顺序来标识和解释音频输入。</span><span class="sxs-lookup"><span data-stu-id="c19fc-127">By default, the dictation grammar does not make use of specific words or word order to identify and interpret audio input.</span></span> <span data-ttu-id="c19fc-128">识别引擎上下文添加到听写语法，使用`precedingText`和`subsequentText`来确定何时将解释为听写的语音。</span><span class="sxs-lookup"><span data-stu-id="c19fc-128">When a context is added to a dictation grammar, the recognition engine uses the `precedingText` and `subsequentText` to identify when to interpret speech as dictation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c19fc-129">必须由加载的听写语法<xref:System.Speech.Recognition.SpeechRecognizer>或<xref:System.Speech.Recognition.SpeechRecognitionEngine>对象，然后可以使用<xref:System.Speech.Recognition.DictationGrammar.SetDictationContext%2A>若要添加的上下文。</span><span class="sxs-lookup"><span data-stu-id="c19fc-129">A dictation grammar must be loaded by a <xref:System.Speech.Recognition.SpeechRecognizer> or <xref:System.Speech.Recognition.SpeechRecognitionEngine> object before you can use <xref:System.Speech.Recognition.DictationGrammar.SetDictationContext%2A> to add a context.</span></span>  
  
 <span data-ttu-id="c19fc-130">下表描述识别引擎如何使用两个参数来确定何时使用听写语法。</span><span class="sxs-lookup"><span data-stu-id="c19fc-130">The following table describes how the recognition engine uses the two parameters to determine when to use the dictation grammar.</span></span>  
  
|`precedingText`|`subsequentText`|<span data-ttu-id="c19fc-131">描述</span><span class="sxs-lookup"><span data-stu-id="c19fc-131">Description</span></span>|  
|---------------------|----------------------|-----------------|  
|<span data-ttu-id="c19fc-132">非 `null`</span><span class="sxs-lookup"><span data-stu-id="c19fc-132">not `null`</span></span>|<span data-ttu-id="c19fc-133">非 `null`</span><span class="sxs-lookup"><span data-stu-id="c19fc-133">not `null`</span></span>|<span data-ttu-id="c19fc-134">识别引擎使用的术语来进行分类可能候选短语。</span><span class="sxs-lookup"><span data-stu-id="c19fc-134">The recognition engine uses the terms to bracket possible candidate phrases.</span></span>|  
|`null`|<span data-ttu-id="c19fc-135">非 `null`</span><span class="sxs-lookup"><span data-stu-id="c19fc-135">not `null`</span></span>|<span data-ttu-id="c19fc-136">识别引擎使用`subsequentText`完成听写。</span><span class="sxs-lookup"><span data-stu-id="c19fc-136">The recognition engine uses the `subsequentText` to finish dictation.</span></span>|  
|<span data-ttu-id="c19fc-137">非 `null`</span><span class="sxs-lookup"><span data-stu-id="c19fc-137">not `null`</span></span>|`null`|<span data-ttu-id="c19fc-138">识别引擎使用`precedingText`启动听写。</span><span class="sxs-lookup"><span data-stu-id="c19fc-138">The recognition engine uses the `precedingText` to start dictation.</span></span>|  
|`null`|`null`|<span data-ttu-id="c19fc-139">识别引擎不使用上下文时使用听写语法。</span><span class="sxs-lookup"><span data-stu-id="c19fc-139">The recognition engine does not use a context when using the dictation grammar.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Grammar" />
      </Docs>
    </Member>
  </Members>
</Type>