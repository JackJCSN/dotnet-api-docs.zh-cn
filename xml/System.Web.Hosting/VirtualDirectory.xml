<Type Name="VirtualDirectory" FullName="System.Web.Hosting.VirtualDirectory">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1da6cc154ca44fca08b83bf38cea8dc07168ce38" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="64029032" /></Metadata><TypeSignature Language="C#" Value="public abstract class VirtualDirectory : System.Web.Hosting.VirtualFileBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit VirtualDirectory extends System.Web.Hosting.VirtualFileBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.Hosting.VirtualDirectory" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class VirtualDirectory&#xA;Inherits VirtualFileBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class VirtualDirectory abstract : System::Web::Hosting::VirtualFileBase" />
  <TypeSignature Language="F#" Value="type VirtualDirectory = class&#xA;    inherit VirtualFileBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Hosting.VirtualFileBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>表示虚拟文件或资源空间中的一个目录对象。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Hosting.VirtualDirectory>类是表示虚拟文件系统中的目录对象的基类。 通常情况下，你会实施的后代<xref:System.Web.Hosting.VirtualDirectory>为每个类<xref:System.Web.Hosting.VirtualPathProvider>后代在 Web 应用程序中的类。  
  
   
  
## Examples  
 下面的代码示例是<xref:System.Web.Hosting.VirtualDirectory>返回存储在中的虚拟目录信息的类实现<xref:System.Data.DataSet>对象。 此代码适用于的代码示例<xref:System.Web.Hosting.VirtualPathProvider>并<xref:System.Web.Hosting.VirtualFile>类来提供虚拟资源从数据存储区加载到<xref:System.Data.DataSet>对象。 有关完整的编译和运行示例，说明，请参阅示例部分<xref:System.Web.Hosting.VirtualPathProvider>类概述。  
  
 此示例包含两个部分<xref:System.Web.Hosting.VirtualDirectory>类的实现和 XML 数据文件用于填充<xref:System.Data.DataSet>对象。  
  
 第一个代码示例是实现<xref:System.Web.Hosting.VirtualDirectory>类。 在构造函数中，它使用方法的自定义<xref:System.Web.Hosting.VirtualPathProvider>对象返回<xref:System.Data.DataSet>对象。 然后搜索<xref:System.Data.DataSet>对象来检索与提供的虚拟路径关联的目录信息。  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#30](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SampleVirtualDirectory.cs#30)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#30](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SampleVirtualDirectory.vb#30)]  
  
 第二个示例是用来填充 XML 数据文件<xref:System.Data.DataSet>返回由自定义对象<xref:System.Web.Hosting.VirtualPathProvider>对象。 此 XML 数据用于演示如何使用<xref:System.Web.Hosting.VirtualPathProvider>， <xref:System.Web.Hosting.VirtualFile>，和<xref:System.Web.Hosting.VirtualDirectory>类从外部数据，检索数据并不是为代表生产质量的数据存储区。  
  
```  
<?xml version="1.0" encoding="utf-8" ?>  
  <resource type="dir"   
    path="/vrDir"   
    parentPath=""   
    content="">  
    <resource type="file"   
      path="/vrDir/Level1FileA.vrf"  
      parentPath="/vrDir"   
      content="This is the content of file Level1FileA." >  
    </resource>  
    <resource type="file"   
      path="/vrDir/Level1FileB.vrf"  
      parentPath="/vrDir"   
      content="This is the content of file Level1FileB.">  
    </resource>  
    <resource type="dir"   
      path="/vrDir/Level2DirA"   
      parentPath="/vrDir"   
      content="">  
        <resource type="file"   
          path="/vrDir/Level2DirA/Level2FileA.vrf"   
          parentPath="/vrDir/Level2DirA"   
          content="This is the content of file Level2FileA." >  
        </resource>  
        <resource type="file"   
          path="/vrDir/Level2DirA/Level2FileB.vrf"  
          parentPath="/vrDir/Level2DirA"   
          content="This is the content of file Level2FileB.">  
        </resource>  
    </resource>  
    <resource type="dir"   
      path="/vrDir/Level2DirB"   
      parentPath="/vrDir"   
      content="">  
      <resource type="file"   
        path="/vrDir/Level2DirB/Level2FileA.vrf"   
        parentPath="/vrDir/Level2DirB"   
        content="This is the content of file Level2FileA." >  
      </resource>  
      <resource type="file"   
        path="/vrDir/Level2DirB/Level2FileB.vrf"  
        parentPath="/vrDir/Level2DirB"   
        content="This is the content of file Level2FileB.">  
       </resource>  
    </resource>  
  </resource>  
```  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>继承自<see cref="T:System.Web.Hosting.VirtualDirectory" />类，必须重写<see cref="P:System.Web.Hosting.VirtualDirectory.Children" />， <see cref="P:System.Web.Hosting.VirtualDirectory.Directories" />，和<see cref="P:System.Web.Hosting.VirtualDirectory.Files" />属性返回一个对象，实现<see cref="T:System.Collections.IEnumerable" />接口。  
  
如果虚拟目录结构中包含到大型规模适中数量的虚拟资源，您应采取措施尽量减少使用通过调用在枚举虚拟目录的系统资源<see cref="P:System.Web.Hosting.VirtualDirectory.Children" />， <see cref="P:System.Web.Hosting.VirtualDirectory.Directories" />，或<see cref="P:System.Web.Hosting.VirtualDirectory.Files" />属性。</para></block>
    <altmember cref="T:System.Web.Hosting.VirtualFile" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected VirtualDirectory (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualDirectory.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (virtualPath As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; VirtualDirectory(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="new System.Web.Hosting.VirtualDirectory : string -&gt; System.Web.Hosting.VirtualDirectory" Usage="new System.Web.Hosting.VirtualDirectory virtualPath" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">此实例所表示资源的虚拟路径。</param>
        <summary>初始化 <see cref="T:System.Web.Hosting.VirtualDirectory" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例是实现<xref:System.Web.Hosting.VirtualDirectory.%23ctor%2A>检索从虚拟文件信息的构造函数<xref:System.Data.DataSet>提供的自定义对象<xref:System.Web.Hosting.VirtualPathProvider>对象。 它包括`GetData`方法用来填充<xref:System.Web.Hosting.VirtualDirectory>实例。 运行该示例所需的完整代码，请参阅示例部分<xref:System.Web.Hosting.VirtualDirectory>类概述。  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#31](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SampleVirtualDirectory.cs#31)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#31](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SampleVirtualDirectory.vb#31)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Hosting.VirtualFile" />
      </Docs>
    </Member>
    <Member MemberName="Children">
      <MemberSignature Language="C#" Value="public abstract System.Collections.IEnumerable Children { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerable Children" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.VirtualDirectory.Children" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Children As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Collections::IEnumerable ^ Children { System::Collections::IEnumerable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Children : System.Collections.IEnumerable" Usage="System.Web.Hosting.VirtualDirectory.Children" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取此虚拟目录中包含的文件和子目录的列表。</summary>
        <value>实现包含 <see cref="T:System.Collections.IEnumerable" /> 和 <see cref="T:System.Web.Hosting.VirtualFile" /> 对象的 <see cref="T:System.Web.Hosting.VirtualDirectory" /> 接口的对象。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Hosting.VirtualDirectory.Children%2A>属性包含这两<xref:System.Web.Hosting.VirtualFile>和<xref:System.Web.Hosting.VirtualDirectory>对象表示的文件和目录包含在此虚拟目录中。 若要只返回<xref:System.Web.Hosting.VirtualFile>对象，请使用<xref:System.Web.Hosting.VirtualDirectory.Files%2A>属性。 若要只返回<xref:System.Web.Hosting.VirtualDirectory>对象，请使用<xref:System.Web.Hosting.VirtualDirectory.Directories%2A>属性。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>如果虚拟目录结构中包含到大型规模适中数量的虚拟资源，您应采取措施尽量减少使用枚举虚拟目录的系统资源。</para></block>
        <altmember cref="T:System.Web.Hosting.VirtualFile" />
      </Docs>
    </Member>
    <Member MemberName="Directories">
      <MemberSignature Language="C#" Value="public abstract System.Collections.IEnumerable Directories { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerable Directories" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.VirtualDirectory.Directories" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Directories As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Collections::IEnumerable ^ Directories { System::Collections::IEnumerable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Directories : System.Collections.IEnumerable" Usage="System.Web.Hosting.VirtualDirectory.Directories" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取此目录中包含的所有子目录的列表。</summary>
        <value>实现 <see cref="T:System.Collections.IEnumerable" /> 接口的对象，此对象包含 <see cref="T:System.Web.Hosting.VirtualDirectory" /> 对象。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Hosting.VirtualDirectory.Directories%2A>属性包含<xref:System.Web.Hosting.VirtualDirectory>对象表示包含在此虚拟目录的目录。 若要返回<xref:System.Web.Hosting.VirtualFile>对象，请使用<xref:System.Web.Hosting.VirtualDirectory.Files%2A>属性。 若要同时返回<xref:System.Web.Hosting.VirtualFile>并<xref:System.Web.Hosting.VirtualDirectory>对象，请使用<xref:System.Web.Hosting.VirtualDirectory.Children%2A>属性。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>如果虚拟目录结构中包含到大型规模适中数量的虚拟资源，您应采取措施尽量减少使用枚举虚拟目录的系统资源。</para></block>
        <altmember cref="T:System.Web.Hosting.VirtualFile" />
      </Docs>
    </Member>
    <Member MemberName="Files">
      <MemberSignature Language="C#" Value="public abstract System.Collections.IEnumerable Files { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerable Files" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.VirtualDirectory.Files" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Files As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Collections::IEnumerable ^ Files { System::Collections::IEnumerable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Files : System.Collections.IEnumerable" Usage="System.Web.Hosting.VirtualDirectory.Files" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取此目录中包含的所有文件的列表。</summary>
        <value>实现 <see cref="T:System.Collections.IEnumerable" /> 接口的对象，此对象包含 <see cref="T:System.Web.Hosting.VirtualFile" /> 对象。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Hosting.VirtualDirectory.Files%2A>属性包含<xref:System.Web.Hosting.VirtualFile>对象表示包含此虚拟目录中的文件。 若要返回<xref:System.Web.Hosting.VirtualDirectory>对象，请使用<xref:System.Web.Hosting.VirtualDirectory.Directories%2A>属性。 若要同时返回<xref:System.Web.Hosting.VirtualFile>并<xref:System.Web.Hosting.VirtualDirectory>对象，请使用<xref:System.Web.Hosting.VirtualDirectory.Children%2A>属性。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>如果虚拟目录结构中包含到大型规模适中数量的虚拟资源，您应采取措施尽量减少使用枚举虚拟目录的系统资源。</para></block>
        <altmember cref="T:System.Web.Hosting.VirtualFile" />
      </Docs>
    </Member>
    <Member MemberName="IsDirectory">
      <MemberSignature Language="C#" Value="public override bool IsDirectory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDirectory" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.VirtualDirectory.IsDirectory" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsDirectory As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsDirectory { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDirectory : bool" Usage="System.Web.Hosting.VirtualDirectory.IsDirectory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值表明这是应作为目录处理的虚拟资源。</summary>
        <value>总是为 <see langword="true" />。</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Hosting.VirtualFile" />
      </Docs>
    </Member>
  </Members>
</Type>