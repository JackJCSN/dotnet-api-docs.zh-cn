<Type Name="IRegisteredObject" FullName="System.Web.Hosting.IRegisteredObject">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a4975aff48cd6465d30e18ca68433f95fbf95961" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="64029509" /></Metadata><TypeSignature Language="C#" Value="public interface IRegisteredObject" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IRegisteredObject" />
  <TypeSignature Language="DocId" Value="T:System.Web.Hosting.IRegisteredObject" />
  <TypeSignature Language="VB.NET" Value="Public Interface IRegisteredObject" />
  <TypeSignature Language="C++ CLI" Value="public interface class IRegisteredObject" />
  <TypeSignature Language="F#" Value="type IRegisteredObject = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>为宿主环境所管理的对象定义方法。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 对象必须实现<xref:System.Web.Hosting.IRegisteredObject>要托管环境中注册，使其生存期由宿主环境的接口。  
  
 可以通过调用创建已注册对象的实例<xref:System.Web.Hosting.ApplicationManager.CreateObject%2A?displayProperty=nameWithType>的应用程序管理器中的方法。 应用程序管理器将新创建的对象返回给调用方，然后在对象调用特定于类型的方法。 在启动期间，已注册的对象应调用<xref:System.Web.Hosting.HostingEnvironment.RegisterObject%2A?displayProperty=nameWithType>方法以完成注册的对象。  
  
 当应用程序管理器需要停止已注册的对象时，它将调用<xref:System.Web.Hosting.IRegisteredObject.Stop%2A>方法。  
  
 应用程序可以具有已注册的类型的一个实例。 若要创建已注册的类型的多个实例，使用工厂模式来创建对象管理器，与应用程序注册并管理多个实例。 有关对象的一个示例实现工厂模式，请参阅中的示例<xref:System.Web.Hosting.ApplicationManager>类。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop (bool immediate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Stop(bool immediate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.IRegisteredObject.Stop(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop (immediate As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop(bool immediate);" />
      <MemberSignature Language="F#" Value="abstract member Stop : bool -&gt; unit" Usage="iRegisteredObject.Stop immediate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="immediate" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="immediate">如果注册对象应在返回前从宿主环境中注销，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <summary>请求注销一个已注册对象。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 应用程序管理器将调用<xref:System.Web.Hosting.IRegisteredObject.Stop%2A>方法来请求注销一个已注册的对象。 在处理期间<xref:System.Web.Hosting.IRegisteredObject.Stop%2A>方法中，已注册的对象必须调用<xref:System.Web.Hosting.HostingEnvironment.UnregisterObject%2A?displayProperty=nameWithType>方法。  
  
 <xref:System.Web.Hosting.IRegisteredObject.Stop%2A>与第一次调用方法`immediate`参数设置为`false`。 该对象可以先完成处理，调用<xref:System.Web.Hosting.HostingEnvironment.UnregisterObject%2A>方法，并最后返回; 也可以立即返回并完成之前调用以异步方式处理<xref:System.Web.Hosting.HostingEnvironment.UnregisterObject%2A>方法。  
  
 如果已注册的对象不会完成处理的应用程序管理器的超时时间到期时，就<xref:System.Web.Hosting.IRegisteredObject.Stop%2A>与再次调用方法`immediate`参数设置为`true`。 当`immediate`参数是`true`，已注册的对象必须调用<xref:System.Web.Hosting.HostingEnvironment.UnregisterObject%2A>方法，然后再返回; 否则，将应用程序管理器删除其注册。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>