<Type Name="ResourceSet" FullName="System.Resources.ResourceSet">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1ebec899078f557e5f9079f81c57b2a6ae47f91e" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69066889" /></Metadata><TypeSignature Language="C#" Value="public class ResourceSet : IDisposable, System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit ResourceSet extends System.Object implements class System.Collections.IEnumerable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Resources.ResourceSet" />
  <TypeSignature Language="VB.NET" Value="Public Class ResourceSet&#xA;Implements IDisposable, IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ResourceSet : IDisposable, System::Collections::IEnumerable" />
  <TypeSignature Language="F#" Value="type ResourceSet = class&#xA;    interface IDisposable&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Resources.ResourceManager</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="d5ec7-101">存储已针对某个特定区域性进行了本地化的所有资源，忽略所有其他区域性（包括任何代用规则）。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-101">Stores all the resources localized for one particular culture, ignoring all other cultures, including any fallback rules.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE [untrusted-data-class-note](~/includes/untrusted-data-class-note.md)]

 <span data-ttu-id="d5ec7-102">类枚举<xref:System.Resources.IResourceReader>, 加载每个名称和值, 并将<xref:System.Collections.Hashtable>它们存储在中。 <xref:System.Resources.ResourceSet></span><span class="sxs-lookup"><span data-stu-id="d5ec7-102">The <xref:System.Resources.ResourceSet> class enumerates over an <xref:System.Resources.IResourceReader>, loading every name and value, and storing them in a <xref:System.Collections.Hashtable>.</span></span> <span data-ttu-id="d5ec7-103">可以使用<xref:System.Resources.IResourceReader>自定义。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-103">A custom <xref:System.Resources.IResourceReader> can be used.</span></span>  
  
 <span data-ttu-id="d5ec7-104"><xref:System.Resources.ResourceSet> 通过<xref:System.Resources.ResourceManager.GetResourceSet%2A?displayProperty=nameWithType>调用方法, 可以实例化表示特定区域性的资源的对象。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-104">You can instantiate a <xref:System.Resources.ResourceSet> object that represents the resources of a specific culture by calling the <xref:System.Resources.ResourceManager.GetResourceSet%2A?displayProperty=nameWithType> method.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d5ec7-105">此类型实现 <xref:System.IDisposable> 接口。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-105">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="d5ec7-106">在使用完类型后，您应直接或间接释放类型。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-106">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="d5ec7-107">若要直接释放类型，请在 `try`/`catch` 块中调用其 <xref:System.IDisposable.Dispose%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-107">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="d5ec7-108">若要间接释放类型，请使用 `using`（在 C# 中）或 `Using`（在 Visual Basic 中）等语言构造。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-108">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="d5ec7-109">有关详细信息，请参阅 <xref:System.IDisposable> 接口主题中的“使用实现 IDisposable 的对象”一节。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-109">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="d5ec7-110">使用自己的<see cref="T:System.Resources.ResourceSet" />资源读取器和编写器的派生类应<see cref="M:System.Resources.ResourceSet.GetDefaultReader" />重写<see cref="M:System.Resources.ResourceSet.GetDefaultWriter" />、和, 以提供用于解释资源集的适当功能。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-110">Derived classes of <see cref="T:System.Resources.ResourceSet" /> that use their own resource reader and writer should override <see cref="M:System.Resources.ResourceSet.GetDefaultReader" />, and <see cref="M:System.Resources.ResourceSet.GetDefaultWriter" />, to provide the appropriate functionality for interpreting the resource set.</span></span></para></block>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d5ec7-111">创建 <see cref="T:System.Resources.ResourceSet" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-111">Creates a new instance of the <see cref="T:System.Resources.ResourceSet" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ResourceSet ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceSet.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ResourceSet();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d5ec7-112">使用默认属性初始化 <see cref="T:System.Resources.ResourceSet" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-112">Initializes a new instance of the <see cref="T:System.Resources.ResourceSet" /> class with default properties.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResourceSet (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceSet.#ctor(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResourceSet(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="new System.Resources.ResourceSet : System.IO.Stream -&gt; System.Resources.ResourceSet" Usage="new System.Resources.ResourceSet stream" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="d5ec7-113">要读取的资源的 <see cref="T:System.IO.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-113">The <see cref="T:System.IO.Stream" /> of resources to be read.</span></span> <span data-ttu-id="d5ec7-114">流应引用现有的资源文件。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-114">The stream should refer to an existing resources file.</span></span></param>
        <summary><span data-ttu-id="d5ec7-115">使用从给定流中读取资源的系统默认的 <see cref="T:System.Resources.ResourceSet" /> 来创建 <see cref="T:System.Resources.ResourceReader" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-115">Creates a new instance of the <see cref="T:System.Resources.ResourceSet" /> class using the system default <see cref="T:System.Resources.ResourceReader" /> that reads resources from the given stream.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d5ec7-116"><paramref name="stream" /> 不可读。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-116">The <paramref name="stream" /> is not readable.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d5ec7-117"><paramref name="stream" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-117">The <paramref name="stream" /> parameter is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="d5ec7-118">用于提供序列化服务。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-118">for providing serialization services.</span></span> <span data-ttu-id="d5ec7-119">关联的枚举: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" />安全操作:<see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /></span><span class="sxs-lookup"><span data-stu-id="d5ec7-119">Associated enumeration:   <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /> Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /></span></span></permission>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="d5ec7-120">需要对直接调用方的完全信任。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-120">requires full trust for the immediate caller.</span></span> <span data-ttu-id="d5ec7-121">部分受信任的或透明的代码不能使用此成员。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-121">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResourceSet (System.Resources.IResourceReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Resources.IResourceReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceSet.#ctor(System.Resources.IResourceReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (reader As IResourceReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResourceSet(System::Resources::IResourceReader ^ reader);" />
      <MemberSignature Language="F#" Value="new System.Resources.ResourceSet : System.Resources.IResourceReader -&gt; System.Resources.ResourceSet" Usage="new System.Resources.ResourceSet reader" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="reader" Type="System.Resources.IResourceReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="d5ec7-122">将使用的读取器。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-122">The reader that will be used.</span></span></param>
        <summary><span data-ttu-id="d5ec7-123">使用指定的资源阅读器创建 <see cref="T:System.Resources.ResourceSet" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-123">Creates a new instance of the <see cref="T:System.Resources.ResourceSet" /> class using the specified resource reader.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5ec7-124">您可以使用此构造函数支持用户提供<xref:System.Resources.IResourceReader>的自定义资源格式。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-124">You can use this constructor to support custom resource formats using a user-provided <xref:System.Resources.IResourceReader>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d5ec7-125"><paramref name="reader" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-125">The <paramref name="reader" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResourceSet (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceSet.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResourceSet(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="new System.Resources.ResourceSet : string -&gt; System.Resources.ResourceSet" Usage="new System.Resources.ResourceSet fileName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="d5ec7-126">要读取的资源文件。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-126">Resource file to read.</span></span></param>
        <summary><span data-ttu-id="d5ec7-127">使用从给定文件打开并读取资源的系统默认的 <see cref="T:System.Resources.ResourceSet" /> 来创建 <see cref="T:System.Resources.ResourceReader" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-127">Creates a new instance of the <see cref="T:System.Resources.ResourceSet" /> class using the system default <see cref="T:System.Resources.ResourceReader" /> that opens and reads resources from the given file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d5ec7-128">下面的代码示例定义特定文件的<xref:System.Resources.ResourceSet>类的新实例, 循环访问该文件使用的资源, 并在控制台中显示其内容。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-128">The following code example defines a new instance of the <xref:System.Resources.ResourceSet> class for a specific file, iterates through the resources used by that file, and displays their contents to the console.</span></span>  
  
 [!code-cpp[System.Resources.ResourceSet.GetEnumerator#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Resources.ResourceSet.GetEnumerator/CPP/getenumerator.cpp#1)]
 [!code-csharp[System.Resources.ResourceSet.GetEnumerator#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Resources.ResourceSet.GetEnumerator/CS/getenumerator.cs#1)]
 [!code-vb[System.Resources.ResourceSet.GetEnumerator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Resources.ResourceSet.GetEnumerator/VB/getenumerator.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d5ec7-129"><paramref name="fileName" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-129">The <paramref name="fileName" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public virtual void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceSet.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Close();" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit&#xA;override this.Close : unit -&gt; unit" Usage="resourceSet.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d5ec7-130">通过此 <see cref="T:System.Resources.ResourceSet" /> 来关闭和释放所有资源。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-130">Closes and releases any resources used by this <see cref="T:System.Resources.ResourceSet" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5ec7-131">调用此方法后, 对<xref:System.Resources.ResourceSet>上方法的所有调用都可能失败。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-131">All calls to methods on the <xref:System.Resources.ResourceSet> after a call to this method might fail.</span></span>  
  
 <span data-ttu-id="d5ec7-132"><xref:System.Resources.ResourceSet.Close%2A>可以安全地调用多次。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-132"><xref:System.Resources.ResourceSet.Close%2A> can be safely called multiple times.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d5ec7-133">`true`调用<xref:System.Resources.ResourceSet.Close%2A> 的当前实现()<xref:System.Resources.ResourceSet.Dispose%2A> 。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-133">The current implementation of <xref:System.Resources.ResourceSet.Close%2A> calls <xref:System.Resources.ResourceSet.Dispose%2A> (`true`).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d5ec7-134">下面的代码示例使用<xref:System.Resources.ResourceSet.Close%2A>方法来释放由调用<xref:System.Resources.ResourceSet>实例使用的所有资源。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-134">The following code example uses the <xref:System.Resources.ResourceSet.Close%2A> method to release all resources used by the calling <xref:System.Resources.ResourceSet> instance.</span></span>  
  
 [!code-cpp[System.Resources.ResourceSet.GetEnumerator#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Resources.ResourceSet.GetEnumerator/CPP/getenumerator.cpp#1)]
 [!code-csharp[System.Resources.ResourceSet.GetEnumerator#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Resources.ResourceSet.GetEnumerator/CS/getenumerator.cs#1)]
 [!code-vb[System.Resources.ResourceSet.GetEnumerator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Resources.ResourceSet.GetEnumerator/VB/getenumerator.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d5ec7-135">释放由当前 <see cref="T:System.Resources.ResourceSet" /> 实例使用的资源。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-135">Releases resources used by the current <see cref="T:System.Resources.ResourceSet" /> instance.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceSet.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="resourceSet.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d5ec7-136">处置由 <see cref="T:System.Resources.ResourceSet" /> 的当前实例使用的资源（内存除外）。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-136">Disposes of the resources (other than memory) used by the current instance of <see cref="T:System.Resources.ResourceSet" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5ec7-137">在完成使用 <xref:System.Resources.ResourceSet.Dispose%2A> 后，应调用 <xref:System.Resources.ResourceSet>。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-137">Call <xref:System.Resources.ResourceSet.Dispose%2A> when you are finished using the <xref:System.Resources.ResourceSet>.</span></span> <span data-ttu-id="d5ec7-138"><xref:System.Resources.ResourceSet.Dispose%2A> 方法使 <xref:System.Resources.ResourceSet> 处于不可用状态。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-138">The <xref:System.Resources.ResourceSet.Dispose%2A> method leaves the <xref:System.Resources.ResourceSet> in an unusable state.</span></span> <span data-ttu-id="d5ec7-139">调用<xref:System.Resources.ResourceSet.Dispose%2A>后, 必须释放对的<xref:System.Resources.ResourceSet>所有引用, 以使其占用的内存可通过垃圾回收进行回收。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-139">After calling <xref:System.Resources.ResourceSet.Dispose%2A>, you must release all references to the <xref:System.Resources.ResourceSet> so the memory it was occupying can be reclaimed by garbage collection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d5ec7-140">当前方法是的<xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType>实现。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-140">The current method is the implementation of <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="d5ec7-141">此实现调用<xref:System.Resources.ResourceSet.Dispose%2A> (`true`)。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-141">This implementation calls <xref:System.Resources.ResourceSet.Dispose%2A> (`true`).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceSet.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="resourceSet.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="d5ec7-142">指示是否应显式关闭当前实例中包含的对象。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-142">Indicates whether the objects contained in the current instance should be explicitly closed.</span></span></param>
        <summary><span data-ttu-id="d5ec7-143">释放与当前实例关联的资源（内存除外），并关闭内部托管对象（如果请求这样做）。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-143">Releases resources (other than memory) associated with the current instance, closing internal managed objects if requested.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5ec7-144">如果参数为`true`, 则当前方法将释放与其关联的所有资源, 以及与之关联的所有对象。 `dispose`</span><span class="sxs-lookup"><span data-stu-id="d5ec7-144">If the `dispose` parameter is `true`, the current method frees all the resources associated with it as well as with all objects associated with it.</span></span> <span data-ttu-id="d5ec7-145">如果`dispose` 为`false`, 则当前方法仅释放分配给它的资源, 并忽略与其关联的任何对象。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-145">If `dispose` is `false`, the current method frees only the resources allocated to it, and ignores any objects associated with it.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDefaultReader">
      <MemberSignature Language="C#" Value="public virtual Type GetDefaultReader ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetDefaultReader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceSet.GetDefaultReader" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDefaultReader () As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Type ^ GetDefaultReader();" />
      <MemberSignature Language="F#" Value="abstract member GetDefaultReader : unit -&gt; Type&#xA;override this.GetDefaultReader : unit -&gt; Type" Usage="resourceSet.GetDefaultReader " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d5ec7-146">返回此类 <see cref="T:System.Resources.ResourceSet" /> 的首选资源读取器类。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-146">Returns the preferred resource reader class for this kind of <see cref="T:System.Resources.ResourceSet" />.</span></span></summary>
        <returns><span data-ttu-id="d5ec7-147">此类 <see cref="T:System.Resources.ResourceSet" /> 的首选资源读取器的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-147">The <see cref="T:System.Type" /> for the preferred resource reader for this kind of <see cref="T:System.Resources.ResourceSet" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="d5ec7-148">使用自己的<see cref="T:System.Resources.ResourceSet" />资源读取器的派生类应<see cref="M:System.Resources.ResourceSet.GetDefaultReader" />重写<see cref="M:System.Resources.ResourceSet.GetDefaultWriter" />和。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-148">Derived classes of <see cref="T:System.Resources.ResourceSet" /> using their own resource reader should override <see cref="M:System.Resources.ResourceSet.GetDefaultReader" />, and <see cref="M:System.Resources.ResourceSet.GetDefaultWriter" />.</span></span></para></block>
        <altmember cref="T:System.Resources.IResourceReader" />
      </Docs>
    </Member>
    <Member MemberName="GetDefaultWriter">
      <MemberSignature Language="C#" Value="public virtual Type GetDefaultWriter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetDefaultWriter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceSet.GetDefaultWriter" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDefaultWriter () As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Type ^ GetDefaultWriter();" />
      <MemberSignature Language="F#" Value="abstract member GetDefaultWriter : unit -&gt; Type&#xA;override this.GetDefaultWriter : unit -&gt; Type" Usage="resourceSet.GetDefaultWriter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d5ec7-149">返回此类 <see cref="T:System.Resources.ResourceSet" /> 的首选资源编写器类。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-149">Returns the preferred resource writer class for this kind of <see cref="T:System.Resources.ResourceSet" />.</span></span></summary>
        <returns><span data-ttu-id="d5ec7-150">此类 <see cref="T:System.Resources.ResourceSet" /> 的首选资源编写器的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-150">The <see cref="T:System.Type" /> for the preferred resource writer for this kind of <see cref="T:System.Resources.ResourceSet" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="d5ec7-151">使用自己的<see cref="T:System.Resources.ResourceSet" />资源读取器的派生类应<see cref="M:System.Resources.ResourceSet.GetDefaultReader" />重写<see cref="M:System.Resources.ResourceSet.GetDefaultWriter" />和。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-151">Derived classes of <see cref="T:System.Resources.ResourceSet" /> using their own resource reader should override <see cref="M:System.Resources.ResourceSet.GetDefaultReader" />, and <see cref="M:System.Resources.ResourceSet.GetDefaultWriter" />.</span></span></para></block>
        <altmember cref="T:System.Resources.IResourceWriter" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IDictionaryEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IDictionaryEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceSet.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEnumerator () As IDictionaryEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IDictionaryEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IDictionaryEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IDictionaryEnumerator" Usage="resourceSet.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionaryEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d5ec7-152">返回 <see cref="T:System.Collections.IDictionaryEnumerator" />，它可以循环访问 <see cref="T:System.Resources.ResourceSet" />。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-152">Returns an <see cref="T:System.Collections.IDictionaryEnumerator" /> that can iterate through the <see cref="T:System.Resources.ResourceSet" />.</span></span></summary>
        <returns><span data-ttu-id="d5ec7-153">该 <see cref="T:System.Resources.ResourceSet" /> 的 <see cref="T:System.Collections.IDictionaryEnumerator" />。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-153">An <see cref="T:System.Collections.IDictionaryEnumerator" /> for this <see cref="T:System.Resources.ResourceSet" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5ec7-154">枚举器仅允许读取集合中的数据。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-154">Enumerators only allow reading the data in the collection.</span></span> <span data-ttu-id="d5ec7-155">枚举器不能用于修改基础集合。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-155">Enumerators cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="d5ec7-156">最初，枚举数定位在集合中第一个元素的前面。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-156">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="d5ec7-157"><xref:System.Collections.IEnumerator.Reset%2A> 也会将枚举器放回此位置。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-157"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span> <span data-ttu-id="d5ec7-158">在此位置, 调用<xref:System.Collections.IEnumerator.Current%2A>会引发异常。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-158">At this position, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="d5ec7-159">因此，在读取 <xref:System.Collections.IEnumerator.MoveNext%2A> 的值之前，必须调用 <xref:System.Collections.IEnumerator.Current%2A> 将枚举器向前移动到集合的第一个元素。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-159">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="d5ec7-160">在调用 <xref:System.Collections.IEnumerator.Current%2A> 或 <xref:System.Collections.IEnumerator.MoveNext%2A> 之前，<xref:System.Collections.IEnumerator.Reset%2A> 返回同一对象。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-160"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="d5ec7-161"><xref:System.Collections.IEnumerator.MoveNext%2A> 将 <xref:System.Collections.IEnumerator.Current%2A> 设置为下一个元素。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-161"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="d5ec7-162">在传递到集合的末尾之后，枚举数放在集合中最后一个元素后面，且调用 <xref:System.Collections.IEnumerator.MoveNext%2A> 会返回 `false`。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-162">After the end of the collection is passed, the enumerator is positioned after the last element in the collection, and calling <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="d5ec7-163">如果最后一次调用<xref:System.Collections.IEnumerator.MoveNext%2A>返回`false`, 则<xref:System.Collections.IEnumerator.Current%2A>调用会引发异常。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-163">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="d5ec7-164">若要再次将 <xref:System.Collections.IEnumerator.Current%2A> 设置为集合的第一个元素，可以调用 <xref:System.Collections.IEnumerator.Reset%2A> 并接着调用 <xref:System.Collections.IEnumerator.MoveNext%2A>。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-164">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="d5ec7-165">只要集合保持不变，枚举数就保持有效。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-165">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="d5ec7-166">如果对集合所做的更改 (如添加、修改或删除元素), 则枚举器将失效且不可恢复, 并且<xref:System.Collections.IEnumerator.MoveNext%2A>对<xref:System.Collections.IEnumerator.Reset%2A>或的<xref:System.InvalidOperationException>下一个调用将引发。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-166">If changes are made to the collection, such as adding, modifying or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="d5ec7-167">如果在 <xref:System.Collections.IEnumerator.MoveNext%2A> 和 <xref:System.Collections.IEnumerator.Current%2A> 之间修改集合，那么即使枚举数已经无效，<xref:System.Collections.IEnumerator.Current%2A> 也将返回它所设置成的元素。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-167">If the collection is modified between <xref:System.Collections.IEnumerator.MoveNext%2A> and <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> will return the element that it is set to, even if the enumerator is already invalidated.</span></span>  
  
 <span data-ttu-id="d5ec7-168">您可以使用<xref:System.Collections.IDictionaryEnumerator.Entry%2A?displayProperty=nameWithType>属性来访问存储在当前元素中的值。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-168">You can use the <xref:System.Collections.IDictionaryEnumerator.Entry%2A?displayProperty=nameWithType> property to access the value stored in the current element.</span></span> <span data-ttu-id="d5ec7-169"><xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType>使用属性访问当前元素的键。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-169">Use the <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType> property to access the key of the current element.</span></span> <span data-ttu-id="d5ec7-170"><xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType>使用属性访问当前元素的值。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-170">Use the <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> property to access the value of the current element.</span></span>  
  
 <span data-ttu-id="d5ec7-171">枚举数没有对集合的独占访问权；因此，从头到尾对一个集合进行枚举在本质上不是一个线程安全的过程。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-171">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="d5ec7-172">即使集合是同步的, 其他线程仍可以修改集合, 这会导致枚举器引发异常。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-172">Even when a collection is synchronized, other threads could still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="d5ec7-173">若要确保枚举过程中的线程安全性，可以在整个枚举期间锁定集合，或者捕获由其他线程进行的更改所导致的异常。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-173">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d5ec7-174">下面的示例演示如何为该文件<xref:System.Resources.ResourceSet> `items.resources`创建一个`rs` 。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-174">The following example demonstrates how to create a <xref:System.Resources.ResourceSet>`rs` for the file `items.resources`.</span></span> <span data-ttu-id="d5ec7-175">接下来, <xref:System.Resources.ResourceSet.GetEnumerator%2A>使用方法为创建`rs`一个<xref:System.Collections.IDictionaryEnumerator> 。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-175">Next, the <xref:System.Resources.ResourceSet.GetEnumerator%2A> method is used to create an <xref:System.Collections.IDictionaryEnumerator> for `rs`.</span></span> <span data-ttu-id="d5ec7-176"><xref:System.Collections.IDictionaryEnumerator> 循环访问并`rs`向控制台显示内容。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-176">The <xref:System.Collections.IDictionaryEnumerator> iterates through `rs` and displays the contents to the console.</span></span>  
  
 [!code-cpp[System.Resources.ResourceSet.GetEnumerator#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Resources.ResourceSet.GetEnumerator/CPP/getenumerator.cpp#1)]
 [!code-csharp[System.Resources.ResourceSet.GetEnumerator#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Resources.ResourceSet.GetEnumerator/CS/getenumerator.cs#1)]
 [!code-vb[System.Resources.ResourceSet.GetEnumerator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Resources.ResourceSet.GetEnumerator/VB/getenumerator.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="d5ec7-177">资源集已关闭或已释放。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-177">The resource set has been closed or disposed.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetObject">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d5ec7-178">返回具有指定名称的资源对象。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-178">Returns a resource object with the specified name.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetObject">
      <MemberSignature Language="C#" Value="public virtual object GetObject (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetObject(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceSet.GetObject(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetObject (name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetObject(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetObject : string -&gt; obj&#xA;override this.GetObject : string -&gt; obj" Usage="resourceSet.GetObject name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="d5ec7-179">要搜索的资源的区分大小写的名称。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-179">Case-sensitive name of the resource to search for.</span></span></param>
        <summary><span data-ttu-id="d5ec7-180">搜索具有指定名称的资源对象。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-180">Searches for a resource object with the specified name.</span></span></summary>
        <returns><span data-ttu-id="d5ec7-181">所请求的资源。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-181">The requested resource.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5ec7-182">资源对象的名称区分大小写。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-182">The name of the resource object is case sensitive.</span></span> <span data-ttu-id="d5ec7-183">对于不区分大小写的搜索, <xref:System.Resources.ResourceSet.GetObject%2A>请使用。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-183">For a case-insensitive search, use <xref:System.Resources.ResourceSet.GetObject%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d5ec7-184"><paramref name="name" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-184">The <paramref name="name" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="d5ec7-185">对象已关闭或已释放。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-185">The object has been closed or disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetObject">
      <MemberSignature Language="C#" Value="public virtual object GetObject (string name, bool ignoreCase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetObject(string name, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceSet.GetObject(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetObject (name As String, ignoreCase As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetObject(System::String ^ name, bool ignoreCase);" />
      <MemberSignature Language="F#" Value="abstract member GetObject : string * bool -&gt; obj&#xA;override this.GetObject : string * bool -&gt; obj" Usage="resourceSet.GetObject (name, ignoreCase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="d5ec7-186">要搜索的资源的名称。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-186">Name of the resource to search for.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="d5ec7-187">指示是否应忽略指定名称的大小写。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-187">Indicates whether the case of the specified name should be ignored.</span></span></param>
        <summary><span data-ttu-id="d5ec7-188">如果请求的话，按照不区分大小写的方式搜索具有指定名称的资源对象。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-188">Searches for a resource object with the specified name in a case-insensitive manner, if requested.</span></span></summary>
        <returns><span data-ttu-id="d5ec7-189">所请求的资源。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-189">The requested resource.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5ec7-190">如果`ignoreCase`参数的值为`true`, 则名称为 "resource" 的资源等效于名称为 "resource" 的资源。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-190">If the value of the `ignoreCase` parameter is `true`, a resource with the name "Resource" is equivalent to the resource with the name "resource".</span></span> <span data-ttu-id="d5ec7-191">但请注意, 此方法始终使用<xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType>执行不区分大小写的字符串比较。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-191">Note, however, that this method always performs case-insensitive string comparisons using <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="d5ec7-192">其优点在于, 此方法执行的不区分大小写的字符串比较的结果在所有计算机上都是相同的, 与区域性无关。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-192">The advantage is that results of case-insensitive string comparisons performed by this method are the same on all computers regardless of culture.</span></span> <span data-ttu-id="d5ec7-193">缺点是结果与所有区域性的大小写规则都不一致。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-193">The disadvantage is that the results are not consistent with the casing rules of all cultures.</span></span>  
  
 <span data-ttu-id="d5ec7-194">例如, 土耳其语字母有两个版本的字符 I: 一个带有点, 一个没有句点。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-194">For example, the Turkish alphabet has two versions of the character I: one with a dot and one without a dot.</span></span> <span data-ttu-id="d5ec7-195">在土耳其语中, 字符 I (Unicode 0049) 被视为不同字符ı (Unicode 0131) 的大写版本。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-195">In Turkish, the character I (Unicode 0049) is considered the uppercase version of a different character ı (Unicode 0131).</span></span> <span data-ttu-id="d5ec7-196">字符 i (Unicode 0069) 被视为其他字符 i (Unicode 0130) 的小写形式。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-196">The character i (Unicode 0069) is considered the lowercase version of yet another character İ (Unicode 0130).</span></span> <span data-ttu-id="d5ec7-197">根据这些大小写规则, i (Unicode 0069) 和 I (Unicode 0049) 字符的不区分大小写的字符串比较对于区域性 "tr-TR" (土耳其语) 应该失败。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-197">According to these casing rules, a case-insensitive string comparison of the characters i (Unicode 0069) and I (Unicode 0049) should fail for the culture "tr-TR" (Turkish in Turkey).</span></span> <span data-ttu-id="d5ec7-198">使用将`ignoreCase`方法设置为`true`时, 此比较将成功。 `GetObject`</span><span class="sxs-lookup"><span data-stu-id="d5ec7-198">Using the `GetObject` method with `ignoreCase` set to `true`, this comparison succeeds.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d5ec7-199"><paramref name="name" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-199">The <paramref name="name" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="d5ec7-200">对象已关闭或已释放。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-200">The object has been closed or disposed.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetString">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d5ec7-201">返回具有指定名称的 <see cref="T:System.String" /> 资源。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-201">Returns a <see cref="T:System.String" /> resource with a specified name.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public virtual string GetString (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetString(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceSet.GetString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetString (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetString(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetString : string -&gt; string&#xA;override this.GetString : string -&gt; string" Usage="resourceSet.GetString name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="d5ec7-202">要搜索的资源的名称。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-202">Name of the resource to search for.</span></span></param>
        <summary><span data-ttu-id="d5ec7-203">搜索具有指定名称的 <see cref="T:System.String" /> 资源。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-203">Searches for a <see cref="T:System.String" /> resource with the specified name.</span></span></summary>
        <returns><span data-ttu-id="d5ec7-204">当值是 <see cref="T:System.String" /> 时为资源的值。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-204">The value of a resource, if the value is a <see cref="T:System.String" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d5ec7-205"><paramref name="name" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-205">The <paramref name="name" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d5ec7-206"><paramref name="name" /> 指定的资源不是 <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-206">The resource specified by <paramref name="name" /> is not a <see cref="T:System.String" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="d5ec7-207">对象已关闭或已释放。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-207">The object has been closed or disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public virtual string GetString (string name, bool ignoreCase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetString(string name, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceSet.GetString(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetString (name As String, ignoreCase As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetString(System::String ^ name, bool ignoreCase);" />
      <MemberSignature Language="F#" Value="abstract member GetString : string * bool -&gt; string&#xA;override this.GetString : string * bool -&gt; string" Usage="resourceSet.GetString (name, ignoreCase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="d5ec7-208">要搜索的资源的名称。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-208">Name of the resource to search for.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="d5ec7-209">指示是否应忽略指定名称的大小写。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-209">Indicates whether the case of the case of the specified name should be ignored.</span></span></param>
        <summary><span data-ttu-id="d5ec7-210">如果请求的话，按照不区分大小写的方式搜索具有指定名称的 <see cref="T:System.String" /> 资源。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-210">Searches for a <see cref="T:System.String" /> resource with the specified name in a case-insensitive manner, if requested.</span></span></summary>
        <returns><span data-ttu-id="d5ec7-211">当值是 <see cref="T:System.String" /> 时为资源的值。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-211">The value of a resource, if the value is a <see cref="T:System.String" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5ec7-212">如果`ignoreCase`参数的值为`true`, 则名称为 "resource" 的资源等效于名称为 "resource" 的资源。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-212">If the value of the `ignoreCase` parameter is `true`, a resource with the name "Resource" is equivalent to the resource with the name "resource".</span></span> <span data-ttu-id="d5ec7-213">但请注意, 此方法始终使用<xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType>执行不区分大小写的字符串比较。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-213">Note, however, that this method always performs case-insensitive string comparisons using <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="d5ec7-214">其优点在于, 此方法执行的不区分大小写的字符串比较的结果在所有计算机上都是相同的, 与区域性无关。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-214">The advantage is that results of case-insensitive string comparisons performed by this method are the same on all computers regardless of culture.</span></span> <span data-ttu-id="d5ec7-215">缺点是结果与所有区域性的大小写规则都不一致。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-215">The disadvantage is that the results are not consistent with the casing rules of all cultures.</span></span>  
  
 <span data-ttu-id="d5ec7-216">例如, 土耳其语字母有两个版本的字符 I: 一个带有点, 一个没有句点。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-216">For example, the Turkish alphabet has two versions of the character I: one with a dot and one without a dot.</span></span> <span data-ttu-id="d5ec7-217">在土耳其语中, 字符 I (Unicode 0049) 被视为不同字符ı (Unicode 0131) 的大写版本。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-217">In Turkish, the character I (Unicode 0049) is considered the uppercase version of a different character ı (Unicode 0131).</span></span> <span data-ttu-id="d5ec7-218">字符 i (Unicode 0069) 被视为其他字符 i (Unicode 0130) 的小写形式。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-218">The character i (Unicode 0069) is considered the lowercase version of yet another character İ (Unicode 0130).</span></span> <span data-ttu-id="d5ec7-219">根据这些大小写规则, i (Unicode 0069) 和 I (Unicode 0049) 字符的不区分大小写的字符串比较对于区域性 "tr-TR" (土耳其语) 应该失败。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-219">According to these casing rules, a case-insensitive string comparison of the characters i (Unicode 0069) and I (Unicode 0049) should fail for the culture "tr-TR" (Turkish in Turkey).</span></span> <span data-ttu-id="d5ec7-220">使用将`ignoreCase`方法设置为`true`时, 此比较将成功。 `GetString`</span><span class="sxs-lookup"><span data-stu-id="d5ec7-220">Using the `GetString` method with `ignoreCase` set to `true`, this comparison succeeds.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d5ec7-221"><paramref name="name" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-221">The <paramref name="name" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d5ec7-222"><paramref name="name" /> 指定的资源不是 <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-222">The resource specified by <paramref name="name" /> is not a <see cref="T:System.String" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="d5ec7-223">对象已关闭或已释放。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-223">The object has been closed or disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Reader">
      <MemberSignature Language="C#" Value="protected System.Resources.IResourceReader Reader;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.Resources.IResourceReader Reader" />
      <MemberSignature Language="DocId" Value="F:System.Resources.ResourceSet.Reader" />
      <MemberSignature Language="VB.NET" Value="Protected Reader As IResourceReader " />
      <MemberSignature Language="C++ CLI" Value="protected: System::Resources::IResourceReader ^ Reader;" />
      <MemberSignature Language="F#" Value="val mutable Reader : System.Resources.IResourceReader" Usage="System.Resources.ResourceSet.Reader" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Resources.IResourceReader</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d5ec7-224">指示用于读取资源的 <see cref="T:System.Resources.IResourceReader" />。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-224">Indicates the <see cref="T:System.Resources.IResourceReader" /> used to read the resources.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Resources.IResourceReader" />
      </Docs>
    </Member>
    <Member MemberName="ReadResources">
      <MemberSignature Language="C#" Value="protected virtual void ReadResources ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ReadResources() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceSet.ReadResources" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ReadResources ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ReadResources();" />
      <MemberSignature Language="F#" Value="abstract member ReadResources : unit -&gt; unit&#xA;override this.ReadResources : unit -&gt; unit" Usage="resourceSet.ReadResources " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d5ec7-225">读取所有资源，并将它们存储在 <see cref="T:System.Collections.Hashtable" /> 属性中指示的 <see cref="F:System.Resources.ResourceSet.Table" /> 中。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-225">Reads all the resources and stores them in a <see cref="T:System.Collections.Hashtable" /> indicated in the <see cref="F:System.Resources.ResourceSet.Table" /> property.</span></span></summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="d5ec7-226"><see cref="T:System.Resources.ResourceSet" />的派生类应显式调用<see cref="M:System.Resources.ResourceSet.ReadResources" />以将中的<see cref="T:System.Resources.IResourceReader" />所有资源加载到<see cref="F:System.Resources.ResourceSet.Table" />中, 通常是<see cref="M:System.Resources.ResourceSet.GetString(System.String)" />在构造函数中或在首次调用或<see cref="M:System.Resources.ResourceSet.GetObject(System.String)" />时延迟。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-226">Derived classes of <see cref="T:System.Resources.ResourceSet" /> should explicitly call <see cref="M:System.Resources.ResourceSet.ReadResources" /> to load all the resources from the <see cref="T:System.Resources.IResourceReader" /> into <see cref="F:System.Resources.ResourceSet.Table" />, generally either in the constructor or lazily on the first call to either <see cref="M:System.Resources.ResourceSet.GetString(System.String)" /> or <see cref="M:System.Resources.ResourceSet.GetObject(System.String)" />.</span></span> <span data-ttu-id="d5ec7-227">但是, 如果资源集和 IResourceReader 已具有彼此相关的信息并且具有更有效的方法来加载几个选择的资源, 则可以跳过此步骤。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-227">However, if your resource set and IResourceReader already have information about each other and have a more efficient way to load just a few select resources, this step can be skipped.</span></span> <span data-ttu-id="d5ec7-228">若要最大程度地减少工作集, 请以这样一种方式编写资源集: 仅查询你的应用程序请求的资源值的 IResourceReader。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-228">To minimize working set, write your resource set in such a way that it queries your IResourceReader for only the resource values requested by your application.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceSet.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d5ec7-229">返回一个 <see cref="T:System.Collections.IEnumerator" /> 对象，以避免与 <see langword="Dispose" /> 之间出现争用情况。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-229">Returns an <see cref="T:System.Collections.IEnumerator" /> object to avoid a race condition with <see langword="Dispose" />.</span></span> <span data-ttu-id="d5ec7-230">不应直接在您的代码中使用此成员。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-230">This member is not intended to be used directly from your code.</span></span></summary>
        <returns><span data-ttu-id="d5ec7-231">当前 <see cref="T:System.Resources.ResourceSet" /> 对象的一个枚举数。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-231">An enumerator for the current <see cref="T:System.Resources.ResourceSet" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Table">
      <MemberSignature Language="C#" Value="protected System.Collections.Hashtable Table;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.Collections.Hashtable Table" />
      <MemberSignature Language="DocId" Value="F:System.Resources.ResourceSet.Table" />
      <MemberSignature Language="VB.NET" Value="Protected Table As Hashtable " />
      <MemberSignature Language="C++ CLI" Value="protected: System::Collections::Hashtable ^ Table;" />
      <MemberSignature Language="F#" Value="val mutable Table : System.Collections.Hashtable" Usage="System.Resources.ResourceSet.Table" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Hashtable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d5ec7-232">存储资源的 <see cref="T:System.Collections.Hashtable" />。</span><span class="sxs-lookup"><span data-stu-id="d5ec7-232">The <see cref="T:System.Collections.Hashtable" /> in which the resources are stored.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Collections.Hashtable" />
      </Docs>
    </Member>
  </Members>
</Type>
