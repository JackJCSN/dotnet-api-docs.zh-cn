<Type Name="SslStream" FullName="System.Net.Security.SslStream">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a2f73261f7e06cbc4cbe0110e48fda13969095a3" /><Meta Name="ms.sourcegitcommit" Value="43c8e74d92c78325492baf27e41b400443f0dfbf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="08/08/2019" /><Meta Name="ms.locfileid" Value="68858723" /></Metadata><TypeSignature Language="C#" Value="public class SslStream : System.Net.Security.AuthenticatedStream" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SslStream extends System.Net.Security.AuthenticatedStream implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.Security.SslStream" />
  <TypeSignature Language="VB.NET" Value="Public Class SslStream&#xA;Inherits AuthenticatedStream" />
  <TypeSignature Language="C++ CLI" Value="public ref class SslStream : System::Net::Security::AuthenticatedStream" />
  <TypeSignature Language="F#" Value="type SslStream = class&#xA;    inherit AuthenticatedStream&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Security</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Net.Security.AuthenticatedStream</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="ba16d-101">提供一个用于客户端-服务器通信的流，该流使用安全套接字层 (SSL) 安全协议对服务器和（可选）客户端进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ba16d-101">Provides a stream used for client-server communication that uses the Secure Socket Layer (SSL) security protocol to authenticate the server and optionally the client.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba16d-102">SSL 协议有助于为使用<xref:System.Net.Security.SslStream>传输的消息提供机密性和完整性检查。</span><span class="sxs-lookup"><span data-stu-id="ba16d-102">SSL protocols help to provide confidentiality and integrity checking for messages transmitted using an <xref:System.Net.Security.SslStream>.</span></span> <span data-ttu-id="ba16d-103">当在客户端和服务器之间传递敏感<xref:System.Net.Security.SslStream>信息时, 应使用 SSL 连接, 例如提供的。</span><span class="sxs-lookup"><span data-stu-id="ba16d-103">An SSL connection, such as that provided by <xref:System.Net.Security.SslStream>, should be used when communicating sensitive information between a client and a server.</span></span> <span data-ttu-id="ba16d-104"><xref:System.Net.Security.SslStream>使用有助于防止任何人在网络传输过程中读取和篡改信息。</span><span class="sxs-lookup"><span data-stu-id="ba16d-104">Using an <xref:System.Net.Security.SslStream> helps to prevent anyone from reading and tampering with information while it is in transit on the network.</span></span>  
  
 <span data-ttu-id="ba16d-105">实例使用您在<xref:System.Net.Security.SslStream>创建时提供的流来传输数据。 <xref:System.Net.Security.SslStream></span><span class="sxs-lookup"><span data-stu-id="ba16d-105">An <xref:System.Net.Security.SslStream> instance transmits data using a stream that you supply when creating the <xref:System.Net.Security.SslStream>.</span></span> <span data-ttu-id="ba16d-106">当你提供此基础流时, 你可以选择指定是否关闭<xref:System.Net.Security.SslStream>还会关闭基础流。</span><span class="sxs-lookup"><span data-stu-id="ba16d-106">When you supply this underlying stream, you have the option to specify whether closing the <xref:System.Net.Security.SslStream> also closes the underlying stream.</span></span> <span data-ttu-id="ba16d-107">通常, <xref:System.Net.Security.SslStream>该类<xref:System.Net.Sockets.TcpClient>与和<xref:System.Net.Sockets.TcpListener>类一起使用。</span><span class="sxs-lookup"><span data-stu-id="ba16d-107">Typically, the <xref:System.Net.Security.SslStream> class is used with the <xref:System.Net.Sockets.TcpClient> and <xref:System.Net.Sockets.TcpListener> classes.</span></span> <span data-ttu-id="ba16d-108"><xref:System.Net.Sockets.TcpClient.GetStream%2A> 方法<xref:System.Net.Sockets.NetworkStream> 提供<xref:System.Net.Security.SslStream>适合与类一起使用的。</span><span class="sxs-lookup"><span data-stu-id="ba16d-108">The <xref:System.Net.Sockets.TcpClient.GetStream%2A> method provides a <xref:System.Net.Sockets.NetworkStream> suitable for use with the <xref:System.Net.Security.SslStream> class.</span></span>  
  
 <span data-ttu-id="ba16d-109">创建<xref:System.Net.Security.SslStream>之后, 必须对该服务器和客户端 (可选) 进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ba16d-109">After creating an <xref:System.Net.Security.SslStream>, the server and optionally, the client must be authenticated.</span></span> <span data-ttu-id="ba16d-110">服务器必须提供一个 X509 证书来建立其身份证明, 并请求客户端也这样做。</span><span class="sxs-lookup"><span data-stu-id="ba16d-110">The server must provide an X509 certificate that establishes proof of its identity and can request that the client also do so.</span></span> <span data-ttu-id="ba16d-111">必须先执行身份验证, 然后才能使用<xref:System.Net.Security.SslStream>传输信息。</span><span class="sxs-lookup"><span data-stu-id="ba16d-111">Authentication must be performed before transmitting information using an <xref:System.Net.Security.SslStream>.</span></span> <span data-ttu-id="ba16d-112">客户端使用同步<xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>方法启动身份验证, 这种方法会一直阻止到身份验证完成, 或异步<xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>方法, 不会阻止等待身份验证完成。</span><span class="sxs-lookup"><span data-stu-id="ba16d-112">Clients initiate authentication using the synchronous <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> methods, which block until the authentication completes, or the asynchronous <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A> methods, which do not block waiting for the authentication to complete.</span></span> <span data-ttu-id="ba16d-113">服务器使用同步<xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>或异步<xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>方法启动身份验证。</span><span class="sxs-lookup"><span data-stu-id="ba16d-113">Servers initiate authentication using the synchronous <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> or asynchronous <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods.</span></span> <span data-ttu-id="ba16d-114">客户端和服务器都必须启动身份验证。</span><span class="sxs-lookup"><span data-stu-id="ba16d-114">Both client and server must initiate the authentication.</span></span>  
  
 <span data-ttu-id="ba16d-115">身份验证由安全支持提供程序 (SSPI) 通道提供程序进行处理。</span><span class="sxs-lookup"><span data-stu-id="ba16d-115">The authentication is handled by the Security Support Provider (SSPI) channel provider.</span></span> <span data-ttu-id="ba16d-116">通过在<xref:System.Net.Security.RemoteCertificateValidationCallback> <xref:System.Net.Security.SslStream>创建时指定委托, 为客户端提供控制服务器证书验证的机会。</span><span class="sxs-lookup"><span data-stu-id="ba16d-116">The client is given an opportunity to control validation of the server's certificate by specifying a <xref:System.Net.Security.RemoteCertificateValidationCallback> delegate when creating an <xref:System.Net.Security.SslStream>.</span></span> <span data-ttu-id="ba16d-117">服务器还可以通过提供<xref:System.Net.Security.RemoteCertificateValidationCallback>委托来控制验证。</span><span class="sxs-lookup"><span data-stu-id="ba16d-117">The server can also control validation by supplying a <xref:System.Net.Security.RemoteCertificateValidationCallback> delegate.</span></span> <span data-ttu-id="ba16d-118">委托引用的方法包括远程方的证书和验证证书时遇到的任何错误。</span><span class="sxs-lookup"><span data-stu-id="ba16d-118">The method referenced by the delegate includes the remote party's certificate and any errors SSPI encountered while validating the certificate.</span></span> <span data-ttu-id="ba16d-119">请注意, 如果服务器指定委托, 则无论服务器是否请求客户端身份验证, 都将调用委托的方法。</span><span class="sxs-lookup"><span data-stu-id="ba16d-119">Note that if the server specifies a delegate, the delegate's method is invoked regardless of whether the server requested client authentication.</span></span> <span data-ttu-id="ba16d-120">如果服务器未请求客户端身份验证, 则服务器的委托方法将接收空证书, 并收到空的证书错误数组。</span><span class="sxs-lookup"><span data-stu-id="ba16d-120">If the server did not request client authentication, the server's delegate method receives a null certificate and an empty array of certificate errors.</span></span>  
  
 <span data-ttu-id="ba16d-121">如果服务器要求客户端身份验证, 则客户端必须指定一个或多个用于身份验证的证书。</span><span class="sxs-lookup"><span data-stu-id="ba16d-121">If the server requires client authentication, the client must specify one or more certificates for authentication.</span></span> <span data-ttu-id="ba16d-122">如果客户端有多个证书, 则客户端可以提供一个<xref:System.Net.Security.LocalCertificateSelectionCallback>委托, 为服务器选择正确的证书。</span><span class="sxs-lookup"><span data-stu-id="ba16d-122">If the client has more than one certificate, the client can provide a <xref:System.Net.Security.LocalCertificateSelectionCallback> delegate to select the correct certificate for the server.</span></span> <span data-ttu-id="ba16d-123">客户端的证书必须位于当前用户的 "我的" 证书存储中。</span><span class="sxs-lookup"><span data-stu-id="ba16d-123">The client's certificates must be located in the current user's "My" certificate store.</span></span> <span data-ttu-id="ba16d-124"><xref:System.Security.Authentication.SslProtocols.Ssl2> (SSL 版本 2) 协议不支持通过证书进行客户端身份验证。</span><span class="sxs-lookup"><span data-stu-id="ba16d-124">Client authentication via certificates is not supported for the <xref:System.Security.Authentication.SslProtocols.Ssl2> (SSL version 2) protocol.</span></span>  
  
 <span data-ttu-id="ba16d-125">如果身份验证失败, 则会收到<xref:System.Security.Authentication.AuthenticationException>, <xref:System.Net.Security.SslStream>并且不再可用。</span><span class="sxs-lookup"><span data-stu-id="ba16d-125">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and the <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="ba16d-126">你应关闭此对象并删除对它的所有引用, 以便垃圾回收器可以收集它。</span><span class="sxs-lookup"><span data-stu-id="ba16d-126">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 <span data-ttu-id="ba16d-127">如果身份验证过程 (也称为 SSL 握手) 成功, 则会建立服务器的标识 (以及客户端 (可选)), 并且<xref:System.Net.Security.SslStream>客户端和服务器可以使用来交换消息。</span><span class="sxs-lookup"><span data-stu-id="ba16d-127">When the authentication process, also known as the SSL handshake, succeeds, the identity of the server (and optionally, the client) is established and the <xref:System.Net.Security.SslStream> can be used by the client and server to exchange messages.</span></span> <span data-ttu-id="ba16d-128">在发送或接收信息之前, 客户端和服务器应检查由<xref:System.Net.Security.SslStream>提供的安全服务和级别, 以确定所选的协议、算法和强度是否满足其完整性和起见.</span><span class="sxs-lookup"><span data-stu-id="ba16d-128">Before sending or receiving information, the client and server should check the security services and levels provided by the <xref:System.Net.Security.SslStream> to determine whether the protocol, algorithms, and strengths selected meet their requirements for integrity and confidentiality.</span></span> <span data-ttu-id="ba16d-129">如果当前设置不足, 应关闭流。</span><span class="sxs-lookup"><span data-stu-id="ba16d-129">If the current settings are not sufficient, the stream should be closed.</span></span> <span data-ttu-id="ba16d-130">您可以<xref:System.Net.Security.SslStream> <xref:System.Net.Security.SslStream.IsEncrypted%2A>使用和<xref:System.Net.Security.SslStream.IsSigned%2A>属性来检查提供的安全服务。</span><span class="sxs-lookup"><span data-stu-id="ba16d-130">You can check the security services provided by the <xref:System.Net.Security.SslStream> using the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties.</span></span> <span data-ttu-id="ba16d-131">下表显示了一些元素, 这些元素报告用于身份验证、加密和数据签名的加密设置。</span><span class="sxs-lookup"><span data-stu-id="ba16d-131">The following table shows the elements that report the cryptographic settings used for authentication, encryption and data signing.</span></span>  
  
|<span data-ttu-id="ba16d-132">元素</span><span class="sxs-lookup"><span data-stu-id="ba16d-132">Element</span></span>|<span data-ttu-id="ba16d-133">成员</span><span class="sxs-lookup"><span data-stu-id="ba16d-133">Members</span></span>|  
|-------------|-------------|  
|<span data-ttu-id="ba16d-134">用于对服务器和客户端 (可选) 进行身份验证的安全协议。</span><span class="sxs-lookup"><span data-stu-id="ba16d-134">The security protocol used to authenticate the server and, optionally, the client.</span></span>|<span data-ttu-id="ba16d-135">属性和关联<xref:System.Security.Authentication.SslProtocols>的枚举。 <xref:System.Net.Security.SslStream.SslProtocol%2A></span><span class="sxs-lookup"><span data-stu-id="ba16d-135">The <xref:System.Net.Security.SslStream.SslProtocol%2A> property and the associated <xref:System.Security.Authentication.SslProtocols> enumeration.</span></span>|  
|<span data-ttu-id="ba16d-136">密钥交换算法。</span><span class="sxs-lookup"><span data-stu-id="ba16d-136">The key exchange algorithm.</span></span>|<span data-ttu-id="ba16d-137">属性和关联<xref:System.Security.Authentication.ExchangeAlgorithmType>的枚举。 <xref:System.Net.Security.SslStream.KeyExchangeAlgorithm%2A></span><span class="sxs-lookup"><span data-stu-id="ba16d-137">The <xref:System.Net.Security.SslStream.KeyExchangeAlgorithm%2A> property and the associated <xref:System.Security.Authentication.ExchangeAlgorithmType> enumeration.</span></span>|  
|<span data-ttu-id="ba16d-138">消息完整性算法。</span><span class="sxs-lookup"><span data-stu-id="ba16d-138">The message integrity algorithm.</span></span>|<span data-ttu-id="ba16d-139">属性和关联<xref:System.Security.Authentication.HashAlgorithmType>的枚举。 <xref:System.Net.Security.SslStream.HashAlgorithm%2A></span><span class="sxs-lookup"><span data-stu-id="ba16d-139">The <xref:System.Net.Security.SslStream.HashAlgorithm%2A> property and the associated <xref:System.Security.Authentication.HashAlgorithmType> enumeration.</span></span>|  
|<span data-ttu-id="ba16d-140">消息机密性算法。</span><span class="sxs-lookup"><span data-stu-id="ba16d-140">The message confidentiality algorithm.</span></span>|<span data-ttu-id="ba16d-141">属性和关联<xref:System.Security.Authentication.CipherAlgorithmType>的枚举。 <xref:System.Net.Security.SslStream.CipherAlgorithm%2A></span><span class="sxs-lookup"><span data-stu-id="ba16d-141">The <xref:System.Net.Security.SslStream.CipherAlgorithm%2A> property and the associated <xref:System.Security.Authentication.CipherAlgorithmType> enumeration.</span></span>|  
|<span data-ttu-id="ba16d-142">所选算法的强度。</span><span class="sxs-lookup"><span data-stu-id="ba16d-142">The strengths of the selected algorithms.</span></span>|<span data-ttu-id="ba16d-143"><xref:System.Net.Security.SslStream.KeyExchangeStrength%2A> 、<xref:System.Net.Security.SslStream.HashStrength%2A>和属性<xref:System.Net.Security.SslStream.CipherStrength%2A> 。</span><span class="sxs-lookup"><span data-stu-id="ba16d-143">The <xref:System.Net.Security.SslStream.KeyExchangeStrength%2A>, <xref:System.Net.Security.SslStream.HashStrength%2A>, and <xref:System.Net.Security.SslStream.CipherStrength%2A> properties.</span></span>|  
  
 <span data-ttu-id="ba16d-144">身份验证成功后, 可以使用同步<xref:System.Net.Security.SslStream.Write%2A>或异步<xref:System.Net.Security.SslStream.BeginWrite%2A>方法发送数据。</span><span class="sxs-lookup"><span data-stu-id="ba16d-144">After a successful authentication, you can send data using the synchronous <xref:System.Net.Security.SslStream.Write%2A> or asynchronous <xref:System.Net.Security.SslStream.BeginWrite%2A> methods.</span></span> <span data-ttu-id="ba16d-145">您可以使用同步<xref:System.Net.Security.SslStream.Read%2A>或异步<xref:System.Net.Security.SslStream.BeginRead%2A>方法接收数据。</span><span class="sxs-lookup"><span data-stu-id="ba16d-145">You can receive data using the synchronous <xref:System.Net.Security.SslStream.Read%2A> or asynchronous <xref:System.Net.Security.SslStream.BeginRead%2A> methods.</span></span>  
  
 <span data-ttu-id="ba16d-146">如果你指定<xref:System.Net.Security.SslStream.%23ctor%2A>了, 基础流应保持打开状态, 则在使用完后, 你将负责关闭该流。</span><span class="sxs-lookup"><span data-stu-id="ba16d-146">If you specified to the <xref:System.Net.Security.SslStream.%23ctor%2A> that the underlying stream should be left open, you are responsible for closing that stream when you are done using it.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ba16d-147">如果用普通用户的凭据<xref:System.Net.Security.SslStream>运行创建对象的应用程序, 应用程序将不能访问安装在本地计算机存储中的证书, 除非已向用户显式授予权限。</span><span class="sxs-lookup"><span data-stu-id="ba16d-147">If the application that creates the <xref:System.Net.Security.SslStream> object runs with the credentials of a Normal user, the application will not be able to access certificates installed in the local machine store unless permission has been explicitly given to the user to do so.</span></span>  
  
 <span data-ttu-id="ba16d-148"><xref:System.Net.Security.SslStream>假设<xref:System.IO.IOException>当从内部流中引发某一超时时, 它的调用方将被视为是致命的。</span><span class="sxs-lookup"><span data-stu-id="ba16d-148"><xref:System.Net.Security.SslStream> assumes that a timeout along with any other <xref:System.IO.IOException> when one is thrown from the inner stream will be treated as fatal by its caller.</span></span> <span data-ttu-id="ba16d-149">在超时<xref:System.Net.Security.SslStream>后重复使用实例将返回垃圾。</span><span class="sxs-lookup"><span data-stu-id="ba16d-149">Reusing a <xref:System.Net.Security.SslStream> instance after a timeout will return garbage.</span></span> <span data-ttu-id="ba16d-150">在这些情况<xref:System.IO.Stream.Close%2A>下<xref:System.Net.Security.SslStream> , 应用程序应为, 并引发异常。</span><span class="sxs-lookup"><span data-stu-id="ba16d-150">An application should <xref:System.IO.Stream.Close%2A> the <xref:System.Net.Security.SslStream> and throw an exception in these cases.</span></span>  
  
 <span data-ttu-id="ba16d-151">4.6 .NET Framework 包括一项新的安全功能, 用于阻止连接的不安全密码和哈希算法。</span><span class="sxs-lookup"><span data-stu-id="ba16d-151">The .NET Framework 4.6 includes a new security feature that blocks insecure cipher and hashing algorithms for connections.</span></span> <span data-ttu-id="ba16d-152">默认情况下, 通过 Api 使用 TLS/SSL (如 HttpClient、HttpWebRequest、FTPClient、System.net.mail.smtpclient、System.net.security.sslstream 等) 和目标 .NET Framework 4.6 获取更安全的行为。</span><span class="sxs-lookup"><span data-stu-id="ba16d-152">Applications using TLS/SSL through APIs such as HttpClient, HttpWebRequest, FTPClient, SmtpClient, SslStream, etc. and targeting .NET Framework 4.6 get the more-secure behavior by default.</span></span>  
  
 <span data-ttu-id="ba16d-153">开发人员可能需要选择退出此行为, 以便与现有的 SSL3 服务或具有 RC4 服务的 TLS 保持互操作性。</span><span class="sxs-lookup"><span data-stu-id="ba16d-153">Developers may want to opt out of this behavior in order to maintain interoperability with their existing SSL3 services OR TLS w/ RC4 services.</span></span> <span data-ttu-id="ba16d-154">[本文](https://support.microsoft.com/kb/3069494)介绍如何修改代码, 以便禁用新行为。</span><span class="sxs-lookup"><span data-stu-id="ba16d-154">[This article](https://support.microsoft.com/kb/3069494) explains how to modify your code so that the new behavior is disabled.</span></span>  
  
 <span data-ttu-id="ba16d-155">4.7 .NET Framework 增加了对未指定 TLS 版本的 SslStreams 进行身份验证的方法的新重载, 而是使用定义为[SCHANNEL](https://msdn.microsoft.com/library/windows/desktop/aa380123.aspx)中的系统默认值的 TLS 版本。</span><span class="sxs-lookup"><span data-stu-id="ba16d-155">The .NET Framework 4.7 adds new overloads for the methods that authenticate SslStreams that do not specify a TLS version, but instead use the TLS version defined as the system default in [SCHANNEL](https://msdn.microsoft.com/library/windows/desktop/aa380123.aspx).</span></span> <span data-ttu-id="ba16d-156">在应用中使用这些方法, 以便能够在以后修改默认值, 因为 TLS 版本的最佳实践随时间而变化, 无需重新生成和重新部署应用。</span><span class="sxs-lookup"><span data-stu-id="ba16d-156">Use these methods in your app as a way to be able to later modify the defaults as TLS version best practice changes over time, without the need to rebuild and redeploy your app.</span></span>

 <span data-ttu-id="ba16d-157">另请参阅[.NET Framework 的传输层安全性 (TLS) 最佳实践](~/docs/framework/network-programming/tls.md)。</span><span class="sxs-lookup"><span data-stu-id="ba16d-157">Also see [Transport Layer Security (TLS) best practices with the .NET Framework](~/docs/framework/network-programming/tls.md).</span></span>
  
   
  
## Examples  
 <span data-ttu-id="ba16d-158">下面的代码示例演示如何创建<xref:System.Net.Sockets.TcpListener> <xref:System.Net.Security.SslStream>使用类与客户端进行通信的。</span><span class="sxs-lookup"><span data-stu-id="ba16d-158">The following code example demonstrates creating an <xref:System.Net.Sockets.TcpListener> that uses the <xref:System.Net.Security.SslStream> class to communicate with clients.</span></span>  
  
[!code-cpp[NclSslServerSync#0](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#0)]
[!code-csharp[NclSslServerSync#0](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#0)]  
[!code-vb[NclSslServerSync#0](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclSslServerSync/VB/serversync.vb#0)]
  
 <span data-ttu-id="ba16d-159">下面的代码示例演示如何创建<xref:System.Net.Sockets.TcpClient>一个<xref:System.Net.Security.SslStream>使用类与服务器进行通信的。</span><span class="sxs-lookup"><span data-stu-id="ba16d-159">The following code example demonstrates creating a <xref:System.Net.Sockets.TcpClient> that uses the <xref:System.Net.Security.SslStream> class to communicate with a server.</span></span>  
  
 [!code-cpp[NclSslClientSync#0](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslClientSync/CPP/clientsync.cpp#0)]
 [!code-csharp[NclSslClientSync#0](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslClientSync/CS/clientsync.cs#0)]  
 [!code-vb[NclSslClientSync#0](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclSslClientSync/VB/clientsync.vb#0)]

 ]]></format>
    </remarks>
    <altmember cref="T:System.Net.Security.NegotiateStream" />
    <altmember cref="T:System.Net.Security.AuthenticatedStream" />
    <altmember cref="T:System.IO.IOException" />
    <altmember cref="T:System.IO.Stream" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ba16d-160">初始化 <see cref="T:System.Net.Security.SslStream" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="ba16d-160">Initializes a new instance of the <see cref="T:System.Net.Security.SslStream" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba16d-161">若要防止<xref:System.Net.Security.SslStream>关闭所提供的流, 请<xref:System.Net.Security.SslStream.%23ctor%2A>使用构造函数。</span><span class="sxs-lookup"><span data-stu-id="ba16d-161">To prevent the <xref:System.Net.Security.SslStream> from closing the stream that you supply, use the <xref:System.Net.Security.SslStream.%23ctor%2A> constructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SslStream (System.IO.Stream innerStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream innerStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.#ctor(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (innerStream As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SslStream(System::IO::Stream ^ innerStream);" />
      <MemberSignature Language="F#" Value="new System.Net.Security.SslStream : System.IO.Stream -&gt; System.Net.Security.SslStream" Usage="new System.Net.Security.SslStream innerStream" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="innerStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="innerStream"><span data-ttu-id="ba16d-162">一个 <see cref="T:System.IO.Stream" /> 对象，<see cref="T:System.Net.Security.SslStream" /> 使用此对象发送和接收数据。</span><span class="sxs-lookup"><span data-stu-id="ba16d-162">A <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.SslStream" /> for sending and receiving data.</span></span></param>
        <summary><span data-ttu-id="ba16d-163">使用指定的 <see cref="T:System.Net.Security.SslStream" /> 初始化 <see cref="T:System.IO.Stream" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="ba16d-163">Initializes a new instance of the <see cref="T:System.Net.Security.SslStream" /> class using the specified <see cref="T:System.IO.Stream" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba16d-164">如果未在 encryptionpolicy 的配置文件中指定值, 则<xref:System.Net.Security.EncryptionPolicy> <xref:System.Net.Security.EncryptionPolicy.RequireEncryption?displayProperty=nameWithType>为<xref:System.Net.Security.SslStream>构造的实例默认值。</span><span class="sxs-lookup"><span data-stu-id="ba16d-164">If a value is not specified in the configuration file for encryptionpolicy, the <xref:System.Net.Security.EncryptionPolicy> defaults to <xref:System.Net.Security.EncryptionPolicy.RequireEncryption?displayProperty=nameWithType> for the <xref:System.Net.Security.SslStream> instance that is constructed.</span></span>  
  
 <span data-ttu-id="ba16d-165">当加密策略设置为<xref:System.Net.Security.EncryptionPolicy.NoEncryption?displayProperty=nameWithType>时, 需要使用 Null 密码。</span><span class="sxs-lookup"><span data-stu-id="ba16d-165">The use of the Null cipher is required when the encryption policy is set to <xref:System.Net.Security.EncryptionPolicy.NoEncryption?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ba16d-166"><paramref name="innerStream" /> 不可读。</span><span class="sxs-lookup"><span data-stu-id="ba16d-166"><paramref name="innerStream" /> is not readable.</span></span>  
  
<span data-ttu-id="ba16d-167">或</span><span class="sxs-lookup"><span data-stu-id="ba16d-167">-or-</span></span> 
 <span data-ttu-id="ba16d-168"><paramref name="innerStream" /> 不可写。</span><span class="sxs-lookup"><span data-stu-id="ba16d-168"><paramref name="innerStream" /> is not writable.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ba16d-169"><paramref name="innerStream" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ba16d-169"><paramref name="innerStream" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="ba16d-170">或</span><span class="sxs-lookup"><span data-stu-id="ba16d-170">-or-</span></span> 
 <span data-ttu-id="ba16d-171"><paramref name="innerStream" /> 等于 <see cref="F:System.IO.Stream.Null" />。</span><span class="sxs-lookup"><span data-stu-id="ba16d-171"><paramref name="innerStream" /> is equal to <see cref="F:System.IO.Stream.Null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SslStream (System.IO.Stream innerStream, bool leaveInnerStreamOpen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream innerStream, bool leaveInnerStreamOpen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (innerStream As Stream, leaveInnerStreamOpen As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SslStream(System::IO::Stream ^ innerStream, bool leaveInnerStreamOpen);" />
      <MemberSignature Language="F#" Value="new System.Net.Security.SslStream : System.IO.Stream * bool -&gt; System.Net.Security.SslStream" Usage="new System.Net.Security.SslStream (innerStream, leaveInnerStreamOpen)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="innerStream" Type="System.IO.Stream" />
        <Parameter Name="leaveInnerStreamOpen" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="innerStream"><span data-ttu-id="ba16d-172">一个 <see cref="T:System.IO.Stream" /> 对象，<see cref="T:System.Net.Security.SslStream" /> 使用此对象发送和接收数据。</span><span class="sxs-lookup"><span data-stu-id="ba16d-172">A <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.SslStream" /> for sending and receiving data.</span></span></param>
        <param name="leaveInnerStreamOpen"><span data-ttu-id="ba16d-173">一个布尔值，它指示 <see cref="T:System.IO.Stream" /> 用来发送和接收数据的 <see cref="T:System.Net.Security.SslStream" /> 对象的封闭行为。</span><span class="sxs-lookup"><span data-stu-id="ba16d-173">A Boolean value that indicates the closure behavior of the <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.SslStream" /> for sending and receiving data.</span></span> <span data-ttu-id="ba16d-174">此参数指示内部流是否保持打开状态。</span><span class="sxs-lookup"><span data-stu-id="ba16d-174">This parameter indicates if the inner stream is left open.</span></span></param>
        <summary><span data-ttu-id="ba16d-175">使用指定的 <see cref="T:System.Net.Security.SslStream" /> 和流封闭行为初始化 <see cref="T:System.IO.Stream" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="ba16d-175">Initializes a new instance of the <see cref="T:System.Net.Security.SslStream" /> class using the specified <see cref="T:System.IO.Stream" /> and stream closure behavior.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba16d-176">如果`true` <xref:System.Net.Security.SslStream> `innerStream`为参数指定, 则关闭将对流不起任何作用; 当不再需要流时, 必须显式关闭`innerStream`。 `leaveStreamOpen`</span><span class="sxs-lookup"><span data-stu-id="ba16d-176">When you specify `true` for the `leaveStreamOpen` parameter, closing the <xref:System.Net.Security.SslStream> has no effect on the `innerStream` stream; you must explicitly close `innerStream` when you no longer need it.</span></span>  
  
 <span data-ttu-id="ba16d-177">如果未在 encryptionpolicy 的配置文件中指定值, 则<xref:System.Net.Security.EncryptionPolicy> <xref:System.Net.Security.EncryptionPolicy.RequireEncryption?displayProperty=nameWithType>为<xref:System.Net.Security.SslStream>构造的实例默认值。</span><span class="sxs-lookup"><span data-stu-id="ba16d-177">If a value is not specified in the configuration file for encryptionpolicy, the <xref:System.Net.Security.EncryptionPolicy> defaults to <xref:System.Net.Security.EncryptionPolicy.RequireEncryption?displayProperty=nameWithType> for the <xref:System.Net.Security.SslStream> instance that is constructed.</span></span>  
  
 <span data-ttu-id="ba16d-178">当加密策略设置为<xref:System.Net.Security.EncryptionPolicy.NoEncryption?displayProperty=nameWithType>时, 需要使用 Null 密码。</span><span class="sxs-lookup"><span data-stu-id="ba16d-178">The use of the Null cipher is required when the encryption policy is set to <xref:System.Net.Security.EncryptionPolicy.NoEncryption?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba16d-179">下面的代码示例演示如何调用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="ba16d-179">The following code example demonstrates calling this constructor.</span></span>  
  
 [!code-cpp[NclSslServerSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#1)]
 [!code-csharp[NclSslServerSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#1)]  
 [!code-vb[NclSslServerSync#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclSslServerSync/VB/serversync.vb#1)] 
 
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ba16d-180"><paramref name="innerStream" /> 不可读。</span><span class="sxs-lookup"><span data-stu-id="ba16d-180"><paramref name="innerStream" /> is not readable.</span></span>  
  
<span data-ttu-id="ba16d-181">或</span><span class="sxs-lookup"><span data-stu-id="ba16d-181">-or-</span></span> 
 <span data-ttu-id="ba16d-182"><paramref name="innerStream" /> 不可写。</span><span class="sxs-lookup"><span data-stu-id="ba16d-182"><paramref name="innerStream" /> is not writable.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ba16d-183"><paramref name="innerStream" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ba16d-183"><paramref name="innerStream" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="ba16d-184">或</span><span class="sxs-lookup"><span data-stu-id="ba16d-184">-or-</span></span> 
 <span data-ttu-id="ba16d-185"><paramref name="innerStream" /> 等于 <see cref="F:System.IO.Stream.Null" />。</span><span class="sxs-lookup"><span data-stu-id="ba16d-185"><paramref name="innerStream" /> is equal to <see cref="F:System.IO.Stream.Null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SslStream (System.IO.Stream innerStream, bool leaveInnerStreamOpen, System.Net.Security.RemoteCertificateValidationCallback userCertificateValidationCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream innerStream, bool leaveInnerStreamOpen, class System.Net.Security.RemoteCertificateValidationCallback userCertificateValidationCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (innerStream As Stream, leaveInnerStreamOpen As Boolean, userCertificateValidationCallback As RemoteCertificateValidationCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SslStream(System::IO::Stream ^ innerStream, bool leaveInnerStreamOpen, System::Net::Security::RemoteCertificateValidationCallback ^ userCertificateValidationCallback);" />
      <MemberSignature Language="F#" Value="new System.Net.Security.SslStream : System.IO.Stream * bool * System.Net.Security.RemoteCertificateValidationCallback -&gt; System.Net.Security.SslStream" Usage="new System.Net.Security.SslStream (innerStream, leaveInnerStreamOpen, userCertificateValidationCallback)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="innerStream" Type="System.IO.Stream" />
        <Parameter Name="leaveInnerStreamOpen" Type="System.Boolean" />
        <Parameter Name="userCertificateValidationCallback" Type="System.Net.Security.RemoteCertificateValidationCallback" />
      </Parameters>
      <Docs>
        <param name="innerStream"><span data-ttu-id="ba16d-186">一个 <see cref="T:System.IO.Stream" /> 对象，<see cref="T:System.Net.Security.SslStream" /> 使用此对象发送和接收数据。</span><span class="sxs-lookup"><span data-stu-id="ba16d-186">A <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.SslStream" /> for sending and receiving data.</span></span></param>
        <param name="leaveInnerStreamOpen"><span data-ttu-id="ba16d-187">一个布尔值，它指示 <see cref="T:System.IO.Stream" /> 用来发送和接收数据的 <see cref="T:System.Net.Security.SslStream" /> 对象的封闭行为。</span><span class="sxs-lookup"><span data-stu-id="ba16d-187">A Boolean value that indicates the closure behavior of the <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.SslStream" /> for sending and receiving data.</span></span> <span data-ttu-id="ba16d-188">此参数指示内部流是否保持打开状态。</span><span class="sxs-lookup"><span data-stu-id="ba16d-188">This parameter indicates if the inner stream is left open.</span></span></param>
        <param name="userCertificateValidationCallback"><span data-ttu-id="ba16d-189"><see cref="T:System.Net.Security.RemoteCertificateValidationCallback" /> 委托，负责验证远程方提供的证书。</span><span class="sxs-lookup"><span data-stu-id="ba16d-189">A <see cref="T:System.Net.Security.RemoteCertificateValidationCallback" /> delegate responsible for validating the certificate supplied by the remote party.</span></span></param>
        <summary><span data-ttu-id="ba16d-190">使用指定的 <see cref="T:System.Net.Security.SslStream" />、流关闭行为和证书验证委托初始化 <see cref="T:System.IO.Stream" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="ba16d-190">Initializes a new instance of the <see cref="T:System.Net.Security.SslStream" /> class using the specified <see cref="T:System.IO.Stream" />, stream closure behavior and certificate validation delegate.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba16d-191">如果`true` <xref:System.Net.Security.SslStream> `innerStream`为参数指定, 则关闭将对流不起任何作用; 当不再需要流时, 必须显式关闭`innerStream`。 `leaveStreamOpen`</span><span class="sxs-lookup"><span data-stu-id="ba16d-191">When you specify `true` for the `leaveStreamOpen` parameter, closing the <xref:System.Net.Security.SslStream> has no effect on the `innerStream` stream; you must explicitly close `innerStream` when you no longer need it.</span></span>  
  
 <span data-ttu-id="ba16d-192">`userCertificateValidationCallback`委托的`certificateErrors`参数包含通道安全支持提供程序接口 (SSPI) 返回的任何 Windows 错误代码。</span><span class="sxs-lookup"><span data-stu-id="ba16d-192">The `userCertificateValidationCallback` delegate's `certificateErrors` argument contains any Windows error codes returned by the channel Security Support Provider Interface (SSPI).</span></span> <span data-ttu-id="ba16d-193">`userCertificateValidationCallback`委托调用的方法的返回值决定身份验证是否成功。</span><span class="sxs-lookup"><span data-stu-id="ba16d-193">The return value of the method invoked by the `userCertificateValidationCallback` delegate determines whether authentication succeeds.</span></span>  
  
 <span data-ttu-id="ba16d-194">调用`userCertificateValidationCallback`委托的方法时, 已选择了安全协议和加密算法。</span><span class="sxs-lookup"><span data-stu-id="ba16d-194">The security protocol and cryptographic algorithms are already selected when the `userCertificateValidationCallback` delegate's method is invoked.</span></span> <span data-ttu-id="ba16d-195">你可以使用方法来确定所选的加密算法和优势是否足以满足你的应用程序的需求。</span><span class="sxs-lookup"><span data-stu-id="ba16d-195">You can use the method to determine whether the selected cryptographic algorithms and strengths are sufficient for your application.</span></span> <span data-ttu-id="ba16d-196">如果不是, 则该方法`false`应返回以<xref:System.Net.Security.SslStream>阻止创建。</span><span class="sxs-lookup"><span data-stu-id="ba16d-196">If not, the method should return `false` to prevent the <xref:System.Net.Security.SslStream> from being created.</span></span>  
  
 <span data-ttu-id="ba16d-197">如果未在 encryptionpolicy 的配置文件中指定值, 则<xref:System.Net.Security.EncryptionPolicy> <xref:System.Net.Security.EncryptionPolicy.RequireEncryption?displayProperty=nameWithType>为<xref:System.Net.Security.SslStream>构造的实例默认值。</span><span class="sxs-lookup"><span data-stu-id="ba16d-197">If a value is not specified in the configuration file for encryptionpolicy, the <xref:System.Net.Security.EncryptionPolicy> defaults to <xref:System.Net.Security.EncryptionPolicy.RequireEncryption?displayProperty=nameWithType> for the <xref:System.Net.Security.SslStream> instance that is constructed.</span></span>  
  
 <span data-ttu-id="ba16d-198">当加密策略设置为<xref:System.Net.Security.EncryptionPolicy.NoEncryption?displayProperty=nameWithType>时, 需要使用 Null 密码。</span><span class="sxs-lookup"><span data-stu-id="ba16d-198">The use of the Null cipher is required when the encryption policy is set to <xref:System.Net.Security.EncryptionPolicy.NoEncryption?displayProperty=nameWithType>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ba16d-199">框架在创建时将缓存 SSL 会话, 并在可能的情况下尝试重复使用缓存会话来执行新请求。</span><span class="sxs-lookup"><span data-stu-id="ba16d-199">The Framework caches SSL sessions as they are created and attempts to reuse a cached session for a new request, if possible.</span></span> <span data-ttu-id="ba16d-200">尝试重用 SSL 会话时, 框架使用的<xref:System.Net.HttpWebRequest.ClientCertificates%2A>第一个元素 (如果有), 或者如果<xref:System.Net.HttpWebRequest.ClientCertificates%2A>为空, 则尝试重新使用匿名会话。</span><span class="sxs-lookup"><span data-stu-id="ba16d-200">When attempting to reuse an SSL session, the Framework uses the first element of <xref:System.Net.HttpWebRequest.ClientCertificates%2A> (if there is one), or tries to reuse an anonymous sessions if <xref:System.Net.HttpWebRequest.ClientCertificates%2A> is empty.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ba16d-201">SSL 版本2协议不支持客户端证书。</span><span class="sxs-lookup"><span data-stu-id="ba16d-201">Client certificates are not supported in the SSL version 2 protocol.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba16d-202">下面的代码示例创建<xref:System.Net.Security.SslStream>并启动身份验证的客户端部分。</span><span class="sxs-lookup"><span data-stu-id="ba16d-202">The following code example creates an <xref:System.Net.Security.SslStream> and initiates the client portion of the authentication.</span></span>  
  
 [!code-cpp[NclSslClientSync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslClientSync/CPP/clientsync.cpp#4)]
 [!code-csharp[NclSslClientSync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslClientSync/CS/clientsync.cs#4)]  
 [!code-vb[NclSslClientSync#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclSslClientSync/VB/clientsync.vb#4)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ba16d-203"><paramref name="innerStream" /> 不可读。</span><span class="sxs-lookup"><span data-stu-id="ba16d-203"><paramref name="innerStream" /> is not readable.</span></span>  
  
<span data-ttu-id="ba16d-204">或</span><span class="sxs-lookup"><span data-stu-id="ba16d-204">-or-</span></span> 
 <span data-ttu-id="ba16d-205"><paramref name="innerStream" /> 不可写。</span><span class="sxs-lookup"><span data-stu-id="ba16d-205"><paramref name="innerStream" /> is not writable.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ba16d-206"><paramref name="innerStream" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ba16d-206"><paramref name="innerStream" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="ba16d-207">或</span><span class="sxs-lookup"><span data-stu-id="ba16d-207">-or-</span></span> 
 <span data-ttu-id="ba16d-208"><paramref name="innerStream" /> 等于 <see cref="F:System.IO.Stream.Null" />。</span><span class="sxs-lookup"><span data-stu-id="ba16d-208"><paramref name="innerStream" /> is equal to <see cref="F:System.IO.Stream.Null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SslStream (System.IO.Stream innerStream, bool leaveInnerStreamOpen, System.Net.Security.RemoteCertificateValidationCallback userCertificateValidationCallback, System.Net.Security.LocalCertificateSelectionCallback userCertificateSelectionCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream innerStream, bool leaveInnerStreamOpen, class System.Net.Security.RemoteCertificateValidationCallback userCertificateValidationCallback, class System.Net.Security.LocalCertificateSelectionCallback userCertificateSelectionCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (innerStream As Stream, leaveInnerStreamOpen As Boolean, userCertificateValidationCallback As RemoteCertificateValidationCallback, userCertificateSelectionCallback As LocalCertificateSelectionCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SslStream(System::IO::Stream ^ innerStream, bool leaveInnerStreamOpen, System::Net::Security::RemoteCertificateValidationCallback ^ userCertificateValidationCallback, System::Net::Security::LocalCertificateSelectionCallback ^ userCertificateSelectionCallback);" />
      <MemberSignature Language="F#" Value="new System.Net.Security.SslStream : System.IO.Stream * bool * System.Net.Security.RemoteCertificateValidationCallback * System.Net.Security.LocalCertificateSelectionCallback -&gt; System.Net.Security.SslStream" Usage="new System.Net.Security.SslStream (innerStream, leaveInnerStreamOpen, userCertificateValidationCallback, userCertificateSelectionCallback)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="innerStream" Type="System.IO.Stream" />
        <Parameter Name="leaveInnerStreamOpen" Type="System.Boolean" />
        <Parameter Name="userCertificateValidationCallback" Type="System.Net.Security.RemoteCertificateValidationCallback" />
        <Parameter Name="userCertificateSelectionCallback" Type="System.Net.Security.LocalCertificateSelectionCallback" />
      </Parameters>
      <Docs>
        <param name="innerStream"><span data-ttu-id="ba16d-209">一个 <see cref="T:System.IO.Stream" /> 对象，<see cref="T:System.Net.Security.SslStream" /> 使用此对象发送和接收数据。</span><span class="sxs-lookup"><span data-stu-id="ba16d-209">A <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.SslStream" /> for sending and receiving data.</span></span></param>
        <param name="leaveInnerStreamOpen"><span data-ttu-id="ba16d-210">一个布尔值，它指示 <see cref="T:System.IO.Stream" /> 用来发送和接收数据的 <see cref="T:System.Net.Security.SslStream" /> 对象的封闭行为。</span><span class="sxs-lookup"><span data-stu-id="ba16d-210">A Boolean value that indicates the closure behavior of the <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.SslStream" /> for sending and receiving data.</span></span> <span data-ttu-id="ba16d-211">此参数指示内部流是否保持打开状态。</span><span class="sxs-lookup"><span data-stu-id="ba16d-211">This parameter indicates if the inner stream is left open.</span></span></param>
        <param name="userCertificateValidationCallback"><span data-ttu-id="ba16d-212"><see cref="T:System.Net.Security.RemoteCertificateValidationCallback" /> 委托，负责验证远程方提供的证书。</span><span class="sxs-lookup"><span data-stu-id="ba16d-212">A <see cref="T:System.Net.Security.RemoteCertificateValidationCallback" /> delegate responsible for validating the certificate supplied by the remote party.</span></span></param>
        <param name="userCertificateSelectionCallback"><span data-ttu-id="ba16d-213"><see cref="T:System.Net.Security.LocalCertificateSelectionCallback" /> 委托，负责选择用于身份验证的证书。</span><span class="sxs-lookup"><span data-stu-id="ba16d-213">A <see cref="T:System.Net.Security.LocalCertificateSelectionCallback" /> delegate responsible for selecting the certificate used for authentication.</span></span></param>
        <summary><span data-ttu-id="ba16d-214">使用指定的 <see cref="T:System.Net.Security.SslStream" />、流关闭行为、证书验证委托和证书选择委托初始化 <see cref="T:System.IO.Stream" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="ba16d-214">Initializes a new instance of the <see cref="T:System.Net.Security.SslStream" /> class using the specified <see cref="T:System.IO.Stream" />, stream closure behavior, certificate validation delegate and certificate selection delegate.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba16d-215">如果`true` <xref:System.Net.Security.SslStream> `innerStream`为参数指定, 则关闭将对流不起任何作用; 当不再需要流时, 必须显式关闭`innerStream`。 `leaveStreamOpen`</span><span class="sxs-lookup"><span data-stu-id="ba16d-215">When you specify `true` for the `leaveStreamOpen` parameter, closing the <xref:System.Net.Security.SslStream> has no effect on the `innerStream` stream; you must explicitly close `innerStream` when you no longer need it.</span></span>  
  
 <span data-ttu-id="ba16d-216">`userCertificateValidationCallback`委托的`certificateErrors`参数包含通道安全支持提供程序接口 (SSPI) 返回的任何 Windows 错误代码。</span><span class="sxs-lookup"><span data-stu-id="ba16d-216">The `userCertificateValidationCallback` delegate's `certificateErrors` argument contains any Windows error codes returned by the channel Security Support Provider Interface (SSPI).</span></span> <span data-ttu-id="ba16d-217">`userCertificateValidationCallback`委托调用的方法的返回值决定身份验证是否成功。</span><span class="sxs-lookup"><span data-stu-id="ba16d-217">The return value of the method invoked by the `userCertificateValidationCallback` delegate determines whether authentication succeeds.</span></span>  
  
 <span data-ttu-id="ba16d-218">调用`userCertificateValidationCallback`委托的方法时, 已选择了安全协议和加密算法。</span><span class="sxs-lookup"><span data-stu-id="ba16d-218">The security protocol and cryptographic algorithms are already selected when the `userCertificateValidationCallback` delegate's method is invoked.</span></span> <span data-ttu-id="ba16d-219">你可以使用方法来确定所选的加密算法和优势是否足以满足你的应用程序的需求。</span><span class="sxs-lookup"><span data-stu-id="ba16d-219">You can use the method to determine whether the selected cryptographic algorithms and strengths are sufficient for your application.</span></span> <span data-ttu-id="ba16d-220">如果不是, 则该方法`false`应返回以<xref:System.Net.Security.SslStream>阻止创建。</span><span class="sxs-lookup"><span data-stu-id="ba16d-220">If not, the method should return `false` to prevent the <xref:System.Net.Security.SslStream> from being created.</span></span>  
  
 <span data-ttu-id="ba16d-221">当`userCertificateSelectionCallback`你的应用程序具有多个证书并且必须动态选择证书时, 该委托很有用。</span><span class="sxs-lookup"><span data-stu-id="ba16d-221">The `userCertificateSelectionCallback` delegate is useful when your application has multiple certificates and must dynamically choose a certificate.</span></span> <span data-ttu-id="ba16d-222">"我的" 存储区中的证书被传递给委托调用的方法。</span><span class="sxs-lookup"><span data-stu-id="ba16d-222">Certificates in the "MY" store are passed to the method invoked by the delegate.</span></span>  
  
 <span data-ttu-id="ba16d-223">如果未在 encryptionpolicy 的配置文件中指定值, 则<xref:System.Net.Security.EncryptionPolicy> <xref:System.Net.Security.EncryptionPolicy.RequireEncryption?displayProperty=nameWithType>为<xref:System.Net.Security.SslStream>构造的实例默认值。</span><span class="sxs-lookup"><span data-stu-id="ba16d-223">If a value is not specified in the configuration file for encryptionpolicy, the <xref:System.Net.Security.EncryptionPolicy> defaults to <xref:System.Net.Security.EncryptionPolicy.RequireEncryption?displayProperty=nameWithType> for the <xref:System.Net.Security.SslStream> instance that is constructed.</span></span>  
  
 <span data-ttu-id="ba16d-224">当加密策略设置为<xref:System.Net.Security.EncryptionPolicy.NoEncryption?displayProperty=nameWithType>时, 需要使用 Null 密码。</span><span class="sxs-lookup"><span data-stu-id="ba16d-224">The use of the Null cipher is required when the encryption policy is set to <xref:System.Net.Security.EncryptionPolicy.NoEncryption?displayProperty=nameWithType>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ba16d-225">框架在创建时将缓存 SSL 会话, 并在可能的情况下尝试重复使用缓存会话来执行新请求。</span><span class="sxs-lookup"><span data-stu-id="ba16d-225">The Framework caches SSL sessions as they are created and attempts to reuse a cached session for a new request, if possible.</span></span> <span data-ttu-id="ba16d-226">尝试重用 SSL 会话时, 框架使用 P:System.Net.HttpWebRequest.ClientCertificates 的第一个元素 (如果有), 或尝试在 P:System.Net.HttpWebRequest.ClientCertificates 为空时重用匿名会话。</span><span class="sxs-lookup"><span data-stu-id="ba16d-226">When attempting to reuse an SSL session, the Framework uses the first element of P:System.Net.HttpWebRequest.ClientCertificates (if there is one), or tries to reuse an anonymous sessions if P:System.Net.HttpWebRequest.ClientCertificates is empty.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba16d-227">下面的代码示例演示如何调用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="ba16d-227">The following code example demonstrates calling this constructor.</span></span> <span data-ttu-id="ba16d-228">此示例是为<xref:System.Net.Security.SslStream>类提供的更大示例的一部分。</span><span class="sxs-lookup"><span data-stu-id="ba16d-228">This example is part of a larger example provided for the <xref:System.Net.Security.SslStream> class.</span></span>  
  
 [!code-cpp[NclSslClientAsync#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslClientAsync/CPP/NclSslClientAsync.cpp#6)]
 [!code-csharp[NclSslClientAsync#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslClientAsync/CS/clientasync.cs#6)]  
 [!code-vb[NclSslClientAsync#6](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclSslClientAsync/VB/clientasync.vb#6)]  

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ba16d-229"><paramref name="innerStream" /> 不可读。</span><span class="sxs-lookup"><span data-stu-id="ba16d-229"><paramref name="innerStream" /> is not readable.</span></span>  
  
<span data-ttu-id="ba16d-230">或</span><span class="sxs-lookup"><span data-stu-id="ba16d-230">-or-</span></span> 
 <span data-ttu-id="ba16d-231"><paramref name="innerStream" /> 不可写。</span><span class="sxs-lookup"><span data-stu-id="ba16d-231"><paramref name="innerStream" /> is not writable.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ba16d-232"><paramref name="innerStream" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ba16d-232"><paramref name="innerStream" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="ba16d-233">或</span><span class="sxs-lookup"><span data-stu-id="ba16d-233">-or-</span></span> 
 <span data-ttu-id="ba16d-234"><paramref name="innerStream" /> 等于 <see cref="F:System.IO.Stream.Null" />。</span><span class="sxs-lookup"><span data-stu-id="ba16d-234"><paramref name="innerStream" /> is equal to <see cref="F:System.IO.Stream.Null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SslStream (System.IO.Stream innerStream, bool leaveInnerStreamOpen, System.Net.Security.RemoteCertificateValidationCallback userCertificateValidationCallback, System.Net.Security.LocalCertificateSelectionCallback userCertificateSelectionCallback, System.Net.Security.EncryptionPolicy encryptionPolicy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream innerStream, bool leaveInnerStreamOpen, class System.Net.Security.RemoteCertificateValidationCallback userCertificateValidationCallback, class System.Net.Security.LocalCertificateSelectionCallback userCertificateSelectionCallback, valuetype System.Net.Security.EncryptionPolicy encryptionPolicy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback,System.Net.Security.EncryptionPolicy)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SslStream(System::IO::Stream ^ innerStream, bool leaveInnerStreamOpen, System::Net::Security::RemoteCertificateValidationCallback ^ userCertificateValidationCallback, System::Net::Security::LocalCertificateSelectionCallback ^ userCertificateSelectionCallback, System::Net::Security::EncryptionPolicy encryptionPolicy);" />
      <MemberSignature Language="F#" Value="new System.Net.Security.SslStream : System.IO.Stream * bool * System.Net.Security.RemoteCertificateValidationCallback * System.Net.Security.LocalCertificateSelectionCallback * System.Net.Security.EncryptionPolicy -&gt; System.Net.Security.SslStream" Usage="new System.Net.Security.SslStream (innerStream, leaveInnerStreamOpen, userCertificateValidationCallback, userCertificateSelectionCallback, encryptionPolicy)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoLimitation("encryptionPolicy is ignored")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="innerStream" Type="System.IO.Stream" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="leaveInnerStreamOpen" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="userCertificateValidationCallback" Type="System.Net.Security.RemoteCertificateValidationCallback" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="userCertificateSelectionCallback" Type="System.Net.Security.LocalCertificateSelectionCallback" Index="3" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="encryptionPolicy" Type="System.Net.Security.EncryptionPolicy" Index="4" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="innerStream"><span data-ttu-id="ba16d-235">一个 <see cref="T:System.IO.Stream" /> 对象，<see cref="T:System.Net.Security.SslStream" /> 使用此对象发送和接收数据。</span><span class="sxs-lookup"><span data-stu-id="ba16d-235">A <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.SslStream" /> for sending and receiving data.</span></span></param>
        <param name="leaveInnerStreamOpen"><span data-ttu-id="ba16d-236">一个布尔值，它指示 <see cref="T:System.IO.Stream" /> 用来发送和接收数据的 <see cref="T:System.Net.Security.SslStream" /> 对象的封闭行为。</span><span class="sxs-lookup"><span data-stu-id="ba16d-236">A Boolean value that indicates the closure behavior of the <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.SslStream" /> for sending and receiving data.</span></span> <span data-ttu-id="ba16d-237">此参数指示内部流是否保持打开状态。</span><span class="sxs-lookup"><span data-stu-id="ba16d-237">This parameter indicates if the inner stream is left open.</span></span></param>
        <param name="userCertificateValidationCallback"><span data-ttu-id="ba16d-238"><see cref="T:System.Net.Security.RemoteCertificateValidationCallback" /> 委托，负责验证远程方提供的证书。</span><span class="sxs-lookup"><span data-stu-id="ba16d-238">A <see cref="T:System.Net.Security.RemoteCertificateValidationCallback" /> delegate responsible for validating the certificate supplied by the remote party.</span></span></param>
        <param name="userCertificateSelectionCallback"><span data-ttu-id="ba16d-239"><see cref="T:System.Net.Security.LocalCertificateSelectionCallback" /> 委托，负责选择用于身份验证的证书。</span><span class="sxs-lookup"><span data-stu-id="ba16d-239">A <see cref="T:System.Net.Security.LocalCertificateSelectionCallback" /> delegate responsible for selecting the certificate used for authentication.</span></span></param>
        <param name="encryptionPolicy"><span data-ttu-id="ba16d-240">要使用的 <see cref="T:System.Net.Security.EncryptionPolicy" />。</span><span class="sxs-lookup"><span data-stu-id="ba16d-240">The <see cref="T:System.Net.Security.EncryptionPolicy" /> to use.</span></span></param>
        <summary><span data-ttu-id="ba16d-241">使用指定的 <see cref="T:System.Net.Security.SslStream" /> 初始化 <see cref="T:System.IO.Stream" /> 类的新实例</span><span class="sxs-lookup"><span data-stu-id="ba16d-241">Initializes a new instance of the <see cref="T:System.Net.Security.SslStream" /> class using the specified <see cref="T:System.IO.Stream" /></span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba16d-242">当`encryptionPolicy`参数设置为<xref:System.Net.Security.EncryptionPolicy.NoEncryption?displayProperty=nameWithType>时, 需要使用 Null 密码。</span><span class="sxs-lookup"><span data-stu-id="ba16d-242">The use of the Null cipher is required when the `encryptionPolicy` parameter is set to <xref:System.Net.Security.EncryptionPolicy.NoEncryption?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ba16d-243"><paramref name="innerStream" /> 不可读。</span><span class="sxs-lookup"><span data-stu-id="ba16d-243"><paramref name="innerStream" /> is not readable.</span></span>  
  
<span data-ttu-id="ba16d-244">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ba16d-244">-or-</span></span> 
 <span data-ttu-id="ba16d-245"><paramref name="innerStream" /> 不可写。</span><span class="sxs-lookup"><span data-stu-id="ba16d-245"><paramref name="innerStream" /> is not writable.</span></span>  
  
<span data-ttu-id="ba16d-246">或</span><span class="sxs-lookup"><span data-stu-id="ba16d-246">-or-</span></span> 
 <span data-ttu-id="ba16d-247"><paramref name="encryptionPolicy" /> 无效。</span><span class="sxs-lookup"><span data-stu-id="ba16d-247"><paramref name="encryptionPolicy" /> is not valid.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ba16d-248"><paramref name="innerStream" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ba16d-248"><paramref name="innerStream" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="ba16d-249">或</span><span class="sxs-lookup"><span data-stu-id="ba16d-249">-or-</span></span> 
 <span data-ttu-id="ba16d-250"><paramref name="innerStream" /> 等于 <see cref="F:System.IO.Stream.Null" />。</span><span class="sxs-lookup"><span data-stu-id="ba16d-250"><paramref name="innerStream" /> is equal to <see cref="F:System.IO.Stream.Null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="AuthenticateAsClient">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ba16d-251">对客户端-服务器连接的客户端进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ba16d-251">Authenticate the client side of a client-server connection.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsClient (string targetHost);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsClient(string targetHost) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsClient(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsClient (targetHost As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsClient(System::String ^ targetHost);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClient : string -&gt; unit&#xA;override this.AuthenticateAsClient : string -&gt; unit" Usage="sslStream.AuthenticateAsClient targetHost" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.AuthenticateAsClient(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetHost" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="targetHost"><span data-ttu-id="ba16d-252">共享此 <see cref="T:System.Net.Security.SslStream" /> 的服务器名称。</span><span class="sxs-lookup"><span data-stu-id="ba16d-252">The name of the server that shares this <see cref="T:System.Net.Security.SslStream" />.</span></span></param>
        <summary><span data-ttu-id="ba16d-253">由客户端调用，以对服务器或客户端服务器连接中的客户端（可选）进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ba16d-253">Called by clients to authenticate the server and optionally the client in a client-server connection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]<span data-ttu-id="ba16d-254">身份验证中不使用任何客户端证书。</span><span class="sxs-lookup"><span data-stu-id="ba16d-254">No client certificates are used in the authentication.</span></span> <span data-ttu-id="ba16d-255">身份验证期间, 不会检查证书吊销列表。</span><span class="sxs-lookup"><span data-stu-id="ba16d-255">The certificate revocation list is not checked during authentication.</span></span> <span data-ttu-id="ba16d-256">为指定的`targetHost`值必须与服务器证书上的名称匹配。</span><span class="sxs-lookup"><span data-stu-id="ba16d-256">The value specified for `targetHost` must match the name on the server's certificate.</span></span>  
  
 <span data-ttu-id="ba16d-257">当身份验证成功时, 必须检查<xref:System.Net.Security.SslStream.IsEncrypted%2A>和<xref:System.Net.Security.SslStream.IsSigned%2A>属性, 以确定所使用的安全<xref:System.Net.Security.SslStream>服务。</span><span class="sxs-lookup"><span data-stu-id="ba16d-257">When authentication succeeds, you must check the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.SslStream>.</span></span> <span data-ttu-id="ba16d-258"><xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>检查属性以确定是否发生了相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="ba16d-258">Check the <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="ba16d-259">如果身份验证失败, 则会收到<xref:System.Security.Authentication.AuthenticationException>, 此<xref:System.Net.Security.SslStream>操作不再可用。</span><span class="sxs-lookup"><span data-stu-id="ba16d-259">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="ba16d-260">你应关闭此对象并删除对它的所有引用, 以便垃圾回收器可以收集它。</span><span class="sxs-lookup"><span data-stu-id="ba16d-260">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ba16d-261"><paramref name="targetHost" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ba16d-261"><paramref name="targetHost" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="ba16d-262">身份验证失败，并使此对象处于不可用的状态。</span><span class="sxs-lookup"><span data-stu-id="ba16d-262">The authentication failed and left this object in an unusable state.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ba16d-263">已进行了身份验证。</span><span class="sxs-lookup"><span data-stu-id="ba16d-263">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="ba16d-264">或</span><span class="sxs-lookup"><span data-stu-id="ba16d-264">-or-</span></span> 
<span data-ttu-id="ba16d-265">之前已尝试使用此 <see cref="T:System.Net.Security.SslStream" /> 进行了服务器身份验证。</span><span class="sxs-lookup"><span data-stu-id="ba16d-265">Server authentication using this <see cref="T:System.Net.Security.SslStream" /> was tried previously.</span></span>  
  
<span data-ttu-id="ba16d-266">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ba16d-266">-or-</span></span> 
<span data-ttu-id="ba16d-267">身份验证已在进行中。</span><span class="sxs-lookup"><span data-stu-id="ba16d-267">Authentication is already in progress.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ba16d-268">此对象已关闭。</span><span class="sxs-lookup"><span data-stu-id="ba16d-268">This object has been closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsClient (string targetHost, System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, bool checkCertificateRevocation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsClient(string targetHost, class System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, bool checkCertificateRevocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsClient (targetHost As String, clientCertificates As X509CertificateCollection, checkCertificateRevocation As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsClient(System::String ^ targetHost, System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ clientCertificates, bool checkCertificateRevocation);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClient : string * System.Security.Cryptography.X509Certificates.X509CertificateCollection * bool -&gt; unit&#xA;override this.AuthenticateAsClient : string * System.Security.Cryptography.X509Certificates.X509CertificateCollection * bool -&gt; unit" Usage="sslStream.AuthenticateAsClient (targetHost, clientCertificates, checkCertificateRevocation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetHost" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1" />
        <Parameter Name="clientCertificates" Type="System.Security.Cryptography.X509Certificates.X509CertificateCollection" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1" />
        <Parameter Name="checkCertificateRevocation" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="targetHost"><span data-ttu-id="ba16d-269">将共享此 <see cref="T:System.Net.Security.SslStream" /> 的服务器名称。</span><span class="sxs-lookup"><span data-stu-id="ba16d-269">The name of the server that will share this <see cref="T:System.Net.Security.SslStream" />.</span></span></param>
        <param name="clientCertificates"><span data-ttu-id="ba16d-270">包含客户端证书的 <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />。</span><span class="sxs-lookup"><span data-stu-id="ba16d-270">The <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> that contains client certificates.</span></span></param>
        <param name="checkCertificateRevocation"><span data-ttu-id="ba16d-271">一个 <see cref="T:System.Boolean" /> 值，该值指定身份验证期间是否检查证书吊销列表。</span><span class="sxs-lookup"><span data-stu-id="ba16d-271">A <see cref="T:System.Boolean" /> value that specifies whether the certificate revocation list is checked during authentication.</span></span></param>
        <summary><span data-ttu-id="ba16d-272">由客户端调用，以对服务器或客户端服务器连接中的客户端（可选）进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ba16d-272">Called by clients to authenticate the server and optionally the client in a client-server connection.</span></span> <span data-ttu-id="ba16d-273">身份验证过程使用指定的证书集合和系统默认的 SSL 协议。</span><span class="sxs-lookup"><span data-stu-id="ba16d-273">The authentication process uses the specified certificate collection, and the system default SSL protocol.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]
 
 <span data-ttu-id="ba16d-274">当身份验证成功时, 必须检查<xref:System.Net.Security.SslStream.IsEncrypted%2A>和<xref:System.Net.Security.SslStream.IsSigned%2A>属性, 以确定所使用的安全<xref:System.Net.Security.SslStream>服务。</span><span class="sxs-lookup"><span data-stu-id="ba16d-274">When authentication succeeds, you must check the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.SslStream>.</span></span> <span data-ttu-id="ba16d-275"><xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>检查属性以确定是否发生了相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="ba16d-275">Check the <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="ba16d-276">如果身份验证失败, 则会收到<xref:System.Security.Authentication.AuthenticationException>, 此<xref:System.Net.Security.SslStream>操作不再可用。</span><span class="sxs-lookup"><span data-stu-id="ba16d-276">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="ba16d-277">你应关闭此对象并删除对它的所有引用, 以便垃圾回收器可以收集它。</span><span class="sxs-lookup"><span data-stu-id="ba16d-277">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ba16d-278">SSL 版本2协议不支持客户端证书。</span><span class="sxs-lookup"><span data-stu-id="ba16d-278">Client certificates are not supported in the SSL version 2 protocol.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsClient (string targetHost, System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsClient(string targetHost, class System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, valuetype System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsClient (targetHost As String, clientCertificates As X509CertificateCollection, enabledSslProtocols As SslProtocols, checkCertificateRevocation As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsClient(System::String ^ targetHost, System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ clientCertificates, System::Security::Authentication::SslProtocols enabledSslProtocols, bool checkCertificateRevocation);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClient : string * System.Security.Cryptography.X509Certificates.X509CertificateCollection * System.Security.Authentication.SslProtocols * bool -&gt; unit&#xA;override this.AuthenticateAsClient : string * System.Security.Cryptography.X509Certificates.X509CertificateCollection * System.Security.Authentication.SslProtocols * bool -&gt; unit" Usage="sslStream.AuthenticateAsClient (targetHost, clientCertificates, enabledSslProtocols, checkCertificateRevocation)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetHost" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="clientCertificates" Type="System.Security.Cryptography.X509Certificates.X509CertificateCollection" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="enabledSslProtocols" Type="System.Security.Authentication.SslProtocols" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="checkCertificateRevocation" Type="System.Boolean" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="targetHost"><span data-ttu-id="ba16d-279">将共享此 <see cref="T:System.Net.Security.SslStream" /> 的服务器名称。</span><span class="sxs-lookup"><span data-stu-id="ba16d-279">The name of the server that will share this <see cref="T:System.Net.Security.SslStream" />.</span></span></param>
        <param name="clientCertificates"><span data-ttu-id="ba16d-280">包含客户端证书的 <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />。</span><span class="sxs-lookup"><span data-stu-id="ba16d-280">The <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> that contains client certificates.</span></span></param>
        <param name="enabledSslProtocols"><span data-ttu-id="ba16d-281">代表用于身份验证的协议的 <see cref="T:System.Security.Authentication.SslProtocols" /> 值。</span><span class="sxs-lookup"><span data-stu-id="ba16d-281">The <see cref="T:System.Security.Authentication.SslProtocols" /> value that represents the protocol used for authentication.</span></span></param>
        <param name="checkCertificateRevocation"><span data-ttu-id="ba16d-282">一个 <see cref="T:System.Boolean" /> 值，该值指定身份验证期间是否检查证书吊销列表。</span><span class="sxs-lookup"><span data-stu-id="ba16d-282">A <see cref="T:System.Boolean" /> value that specifies whether the certificate revocation list is checked during authentication.</span></span></param>
        <summary><span data-ttu-id="ba16d-283">由客户端调用，以对服务器或客户端服务器连接中的客户端（可选）进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ba16d-283">Called by clients to authenticate the server and optionally the client in a client-server connection.</span></span> <span data-ttu-id="ba16d-284">身份验证过程使用指定的证书集合和 SSL 协议。</span><span class="sxs-lookup"><span data-stu-id="ba16d-284">The authentication process uses the specified certificate collection and SSL protocol.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]
 
 <span data-ttu-id="ba16d-285">当身份验证成功时, 必须检查<xref:System.Net.Security.SslStream.IsEncrypted%2A>和<xref:System.Net.Security.SslStream.IsSigned%2A>属性, 以确定所使用的安全<xref:System.Net.Security.SslStream>服务。</span><span class="sxs-lookup"><span data-stu-id="ba16d-285">When authentication succeeds, you must check the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.SslStream>.</span></span> <span data-ttu-id="ba16d-286"><xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>检查属性以确定是否发生了相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="ba16d-286">Check the <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="ba16d-287">如果身份验证失败, 则会收到<xref:System.Security.Authentication.AuthenticationException>, 此<xref:System.Net.Security.SslStream>操作不再可用。</span><span class="sxs-lookup"><span data-stu-id="ba16d-287">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="ba16d-288">你应关闭此对象并删除对它的所有引用, 以便垃圾回收器可以收集它。</span><span class="sxs-lookup"><span data-stu-id="ba16d-288">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ba16d-289">SSL 版本2协议不支持客户端证书。</span><span class="sxs-lookup"><span data-stu-id="ba16d-289">Client certificates are not supported in the SSL version 2 protocol.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AuthenticateAsClientAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ba16d-290">对客户端-服务器连接中的客户端进行身份验证以作为异步操作。</span><span class="sxs-lookup"><span data-stu-id="ba16d-290">Authenticate the client side of a client-server connection as an asynchronous operation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (string targetHost);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsClientAsync(string targetHost) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsClientAsync (targetHost As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsClientAsync(System::String ^ targetHost);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClientAsync : string -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsClientAsync : string -&gt; System.Threading.Tasks.Task" Usage="sslStream.AuthenticateAsClientAsync targetHost" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.AuthenticateAsClientAsync(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetHost" Type="System.String" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="targetHost"><span data-ttu-id="ba16d-291">共享此 <see cref="T:System.Net.Security.SslStream" /> 的服务器名称。</span><span class="sxs-lookup"><span data-stu-id="ba16d-291">The name of the server that shares this <see cref="T:System.Net.Security.SslStream" />.</span></span></param>
        <summary><span data-ttu-id="ba16d-292">由客户端调用，以对服务器或客户端服务器连接中的客户端（可选）进行身份验证，此为异步操作。</span><span class="sxs-lookup"><span data-stu-id="ba16d-292">Called by clients to authenticate the server and optionally the client in a client-server connection as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="ba16d-293">表示异步操作的任务对象。</span><span class="sxs-lookup"><span data-stu-id="ba16d-293">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]<span data-ttu-id="ba16d-294">身份验证中不使用任何客户端证书。</span><span class="sxs-lookup"><span data-stu-id="ba16d-294">No client certificates are used in the authentication.</span></span> <span data-ttu-id="ba16d-295">身份验证期间, 不会检查证书吊销列表。</span><span class="sxs-lookup"><span data-stu-id="ba16d-295">The certificate revocation list is not checked during authentication.</span></span> <span data-ttu-id="ba16d-296">为指定的`targetHost`值必须与服务器证书上的名称匹配。</span><span class="sxs-lookup"><span data-stu-id="ba16d-296">The value specified for `targetHost` must match the name on the server's certificate.</span></span>  
  
 <span data-ttu-id="ba16d-297">当身份验证成功时, 必须检查<xref:System.Net.Security.SslStream.IsEncrypted%2A>和<xref:System.Net.Security.SslStream.IsSigned%2A>属性, 以确定所使用的安全<xref:System.Net.Security.SslStream>服务。</span><span class="sxs-lookup"><span data-stu-id="ba16d-297">When authentication succeeds, you must check the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.SslStream>.</span></span> <span data-ttu-id="ba16d-298"><xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>检查属性以确定是否发生了相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="ba16d-298">Check the <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="ba16d-299">如果身份验证失败, 则会收到<xref:System.Security.Authentication.AuthenticationException>, 此<xref:System.Net.Security.SslStream>操作不再可用。</span><span class="sxs-lookup"><span data-stu-id="ba16d-299">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="ba16d-300">你应关闭此对象并删除对它的所有引用, 以便垃圾回收器可以收集它。</span><span class="sxs-lookup"><span data-stu-id="ba16d-300">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ba16d-301"><paramref name="targetHost" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ba16d-301"><paramref name="targetHost" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="ba16d-302">身份验证失败，并使此对象处于不可用的状态。</span><span class="sxs-lookup"><span data-stu-id="ba16d-302">The authentication failed and left this object in an unusable state.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ba16d-303">已进行了身份验证。</span><span class="sxs-lookup"><span data-stu-id="ba16d-303">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="ba16d-304">或</span><span class="sxs-lookup"><span data-stu-id="ba16d-304">-or-</span></span> 
<span data-ttu-id="ba16d-305">之前已尝试使用此 <see cref="T:System.Net.Security.SslStream" /> 进行了服务器身份验证。</span><span class="sxs-lookup"><span data-stu-id="ba16d-305">Server authentication using this <see cref="T:System.Net.Security.SslStream" /> was tried previously.</span></span>  
  
<span data-ttu-id="ba16d-306">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ba16d-306">-or-</span></span> 
<span data-ttu-id="ba16d-307">身份验证已在进行中。</span><span class="sxs-lookup"><span data-stu-id="ba16d-307">Authentication is already in progress.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ba16d-308">此对象已关闭。</span><span class="sxs-lookup"><span data-stu-id="ba16d-308">This object has been closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task AuthenticateAsClientAsync (System.Net.Security.SslClientAuthenticationOptions sslClientAuthenticationOptions, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task AuthenticateAsClientAsync(class System.Net.Security.SslClientAuthenticationOptions sslClientAuthenticationOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.Net.Security.SslClientAuthenticationOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ AuthenticateAsClientAsync(System::Net::Security::SslClientAuthenticationOptions ^ sslClientAuthenticationOptions, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.AuthenticateAsClientAsync : System.Net.Security.SslClientAuthenticationOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="sslStream.AuthenticateAsClientAsync (sslClientAuthenticationOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sslClientAuthenticationOptions" Type="System.Net.Security.SslClientAuthenticationOptions" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="sslClientAuthenticationOptions">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (string targetHost, System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, bool checkCertificateRevocation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsClientAsync(string targetHost, class System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, bool checkCertificateRevocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsClientAsync (targetHost As String, clientCertificates As X509CertificateCollection, checkCertificateRevocation As Boolean) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsClientAsync(System::String ^ targetHost, System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ clientCertificates, bool checkCertificateRevocation);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClientAsync : string * System.Security.Cryptography.X509Certificates.X509CertificateCollection * bool -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsClientAsync : string * System.Security.Cryptography.X509Certificates.X509CertificateCollection * bool -&gt; System.Threading.Tasks.Task" Usage="sslStream.AuthenticateAsClientAsync (targetHost, clientCertificates, checkCertificateRevocation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetHost" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1" />
        <Parameter Name="clientCertificates" Type="System.Security.Cryptography.X509Certificates.X509CertificateCollection" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1" />
        <Parameter Name="checkCertificateRevocation" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="targetHost"><span data-ttu-id="ba16d-309">将共享此 <see cref="T:System.Net.Security.SslStream" /> 的服务器名称。</span><span class="sxs-lookup"><span data-stu-id="ba16d-309">The name of the server that will share this <see cref="T:System.Net.Security.SslStream" />.</span></span></param>
        <param name="clientCertificates"><span data-ttu-id="ba16d-310">包含客户端证书的 <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />。</span><span class="sxs-lookup"><span data-stu-id="ba16d-310">The <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> that contains client certificates.</span></span></param>
        <param name="checkCertificateRevocation"><span data-ttu-id="ba16d-311">一个 <see cref="T:System.Boolean" /> 值，该值指定身份验证期间是否检查证书吊销列表。</span><span class="sxs-lookup"><span data-stu-id="ba16d-311">A <see cref="T:System.Boolean" /> value that specifies whether the certificate revocation list is checked during authentication.</span></span></param>
        <summary><span data-ttu-id="ba16d-312">由客户端调用，以对服务器或客户端服务器连接中的客户端（可选）进行身份验证，此为异步操作。</span><span class="sxs-lookup"><span data-stu-id="ba16d-312">Called by clients to authenticate the server and optionally the client in a client-server connection as an asynchronous operation.</span></span> <span data-ttu-id="ba16d-313">身份验证过程使用指定的证书集合和系统默认的 SSL 协议。</span><span class="sxs-lookup"><span data-stu-id="ba16d-313">The authentication process uses the specified certificate collection and the system default SSL protocol.</span></span></summary>
        <returns><span data-ttu-id="ba16d-314">表示异步操作的任务对象。</span><span class="sxs-lookup"><span data-stu-id="ba16d-314">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]
 
 <span data-ttu-id="ba16d-315">当身份验证成功时, 必须检查<xref:System.Net.Security.SslStream.IsEncrypted%2A>和<xref:System.Net.Security.SslStream.IsSigned%2A>属性, 以确定所使用的安全<xref:System.Net.Security.SslStream>服务。</span><span class="sxs-lookup"><span data-stu-id="ba16d-315">When authentication succeeds, you must check the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.SslStream>.</span></span> <span data-ttu-id="ba16d-316"><xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>检查属性以确定是否发生了相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="ba16d-316">Check the <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="ba16d-317">如果身份验证失败, 则会收到<xref:System.Security.Authentication.AuthenticationException>, 此<xref:System.Net.Security.SslStream>操作不再可用。</span><span class="sxs-lookup"><span data-stu-id="ba16d-317">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="ba16d-318">你应关闭此对象并删除对它的所有引用, 以便垃圾回收器可以收集它。</span><span class="sxs-lookup"><span data-stu-id="ba16d-318">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ba16d-319">SSL 版本2协议不支持客户端证书。</span><span class="sxs-lookup"><span data-stu-id="ba16d-319">Client certificates are not supported in the SSL version 2 protocol.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (string targetHost, System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsClientAsync(string targetHost, class System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, valuetype System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsClientAsync (targetHost As String, clientCertificates As X509CertificateCollection, enabledSslProtocols As SslProtocols, checkCertificateRevocation As Boolean) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsClientAsync(System::String ^ targetHost, System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ clientCertificates, System::Security::Authentication::SslProtocols enabledSslProtocols, bool checkCertificateRevocation);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClientAsync : string * System.Security.Cryptography.X509Certificates.X509CertificateCollection * System.Security.Authentication.SslProtocols * bool -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsClientAsync : string * System.Security.Cryptography.X509Certificates.X509CertificateCollection * System.Security.Authentication.SslProtocols * bool -&gt; System.Threading.Tasks.Task" Usage="sslStream.AuthenticateAsClientAsync (targetHost, clientCertificates, enabledSslProtocols, checkCertificateRevocation)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetHost" Type="System.String" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="clientCertificates" Type="System.Security.Cryptography.X509Certificates.X509CertificateCollection" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="enabledSslProtocols" Type="System.Security.Authentication.SslProtocols" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="checkCertificateRevocation" Type="System.Boolean" Index="3" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="targetHost"><span data-ttu-id="ba16d-320">将共享此 <see cref="T:System.Net.Security.SslStream" /> 的服务器名称。</span><span class="sxs-lookup"><span data-stu-id="ba16d-320">The name of the server that will share this <see cref="T:System.Net.Security.SslStream" />.</span></span></param>
        <param name="clientCertificates"><span data-ttu-id="ba16d-321">包含客户端证书的 <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />。</span><span class="sxs-lookup"><span data-stu-id="ba16d-321">The <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> that contains client certificates.</span></span></param>
        <param name="enabledSslProtocols"><span data-ttu-id="ba16d-322">代表用于身份验证的协议的 <see cref="T:System.Security.Authentication.SslProtocols" /> 值。</span><span class="sxs-lookup"><span data-stu-id="ba16d-322">The <see cref="T:System.Security.Authentication.SslProtocols" /> value that represents the protocol used for authentication.</span></span></param>
        <param name="checkCertificateRevocation"><span data-ttu-id="ba16d-323">一个 <see cref="T:System.Boolean" /> 值，该值指定身份验证期间是否检查证书吊销列表。</span><span class="sxs-lookup"><span data-stu-id="ba16d-323">A <see cref="T:System.Boolean" /> value that specifies whether the certificate revocation list is checked during authentication.</span></span></param>
        <summary><span data-ttu-id="ba16d-324">由客户端调用，以对服务器或客户端服务器连接中的客户端（可选）进行身份验证，此为异步操作。</span><span class="sxs-lookup"><span data-stu-id="ba16d-324">Called by clients to authenticate the server and optionally the client in a client-server connection as an asynchronous operation.</span></span> <span data-ttu-id="ba16d-325">身份验证过程使用指定的证书集合和 SSL 协议。</span><span class="sxs-lookup"><span data-stu-id="ba16d-325">The authentication process uses the specified certificate collection and SSL protocol.</span></span></summary>
        <returns><span data-ttu-id="ba16d-326">表示异步操作的任务对象。</span><span class="sxs-lookup"><span data-stu-id="ba16d-326">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]
 
 <span data-ttu-id="ba16d-327">当身份验证成功时, 必须检查<xref:System.Net.Security.SslStream.IsEncrypted%2A>和<xref:System.Net.Security.SslStream.IsSigned%2A>属性, 以确定所使用的安全<xref:System.Net.Security.SslStream>服务。</span><span class="sxs-lookup"><span data-stu-id="ba16d-327">When authentication succeeds, you must check the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.SslStream>.</span></span> <span data-ttu-id="ba16d-328"><xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>检查属性以确定是否发生了相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="ba16d-328">Check the <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="ba16d-329">如果身份验证失败, 则会收到<xref:System.Security.Authentication.AuthenticationException>, 此<xref:System.Net.Security.SslStream>操作不再可用。</span><span class="sxs-lookup"><span data-stu-id="ba16d-329">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="ba16d-330">你应关闭此对象并删除对它的所有引用, 以便垃圾回收器可以收集它。</span><span class="sxs-lookup"><span data-stu-id="ba16d-330">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ba16d-331">SSL 版本2协议不支持客户端证书。</span><span class="sxs-lookup"><span data-stu-id="ba16d-331">Client certificates are not supported in the SSL version 2 protocol.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AuthenticateAsServer">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ba16d-332">服务器调用此方法，以便对客户端-服务器连接中的服务器及客户端（可选）进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ba16d-332">Called by servers to authenticate the server and optionally the client in a client-server connection.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsServer (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsServer(class System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsServer (serverCertificate As X509Certificate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsServer(System::Security::Cryptography::X509Certificates::X509Certificate ^ serverCertificate);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServer : System.Security.Cryptography.X509Certificates.X509Certificate -&gt; unit&#xA;override this.AuthenticateAsServer : System.Security.Cryptography.X509Certificates.X509Certificate -&gt; unit" Usage="sslStream.AuthenticateAsServer serverCertificate" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serverCertificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="serverCertificate"><span data-ttu-id="ba16d-333">用于对服务器进行身份验证的证书。</span><span class="sxs-lookup"><span data-stu-id="ba16d-333">The certificate used to authenticate the server.</span></span></param>
        <summary><span data-ttu-id="ba16d-334">服务器调用此方法，以便使用指定的证书对客户端-服务器连接中的服务器及客户端（可选）进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ba16d-334">Called by servers to authenticate the server and optionally the client in a client-server connection using the specified certificate.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]<span data-ttu-id="ba16d-335">身份验证期间, 不会检查证书吊销列表。</span><span class="sxs-lookup"><span data-stu-id="ba16d-335">The certificate revocation list is not checked during authentication.</span></span> <span data-ttu-id="ba16d-336">客户端不需要提供用于身份验证的证书。</span><span class="sxs-lookup"><span data-stu-id="ba16d-336">The client is not required to provide a certificate for authentication.</span></span>  
  
 <span data-ttu-id="ba16d-337">此方法将在操作完成之前一直阻止。</span><span class="sxs-lookup"><span data-stu-id="ba16d-337">This method blocks until the operation completes.</span></span> <span data-ttu-id="ba16d-338">若要在操作完成前阻止阻止, 请使用<xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>方法重载之一。</span><span class="sxs-lookup"><span data-stu-id="ba16d-338">To prevent blocking until the operation completes, use one of the <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="ba16d-339">如果身份验证失败, 则会收到<xref:System.Security.Authentication.AuthenticationException>, 此<xref:System.Net.Security.SslStream>操作不再可用。</span><span class="sxs-lookup"><span data-stu-id="ba16d-339">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="ba16d-340">你应关闭此对象并删除对它的所有引用, 以便垃圾回收器可以收集它。</span><span class="sxs-lookup"><span data-stu-id="ba16d-340">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ba16d-341"><paramref name="serverCertificate" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ba16d-341"><paramref name="serverCertificate" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="ba16d-342">身份验证失败，并使此对象处于不可用的状态。</span><span class="sxs-lookup"><span data-stu-id="ba16d-342">The authentication failed and left this object in an unusable state.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ba16d-343">已进行了身份验证。</span><span class="sxs-lookup"><span data-stu-id="ba16d-343">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="ba16d-344">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ba16d-344">-or-</span></span> 
<span data-ttu-id="ba16d-345">之前已尝试使用此 <see cref="T:System.Net.Security.SslStream" /> 进行了客户端身份验证。</span><span class="sxs-lookup"><span data-stu-id="ba16d-345">Client authentication using this <see cref="T:System.Net.Security.SslStream" /> was tried previously.</span></span>  
  
<span data-ttu-id="ba16d-346">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ba16d-346">-or-</span></span> 
<span data-ttu-id="ba16d-347">身份验证已在进行中。</span><span class="sxs-lookup"><span data-stu-id="ba16d-347">Authentication is already in progress.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ba16d-348">此对象已关闭。</span><span class="sxs-lookup"><span data-stu-id="ba16d-348">This object has been closed.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="ba16d-349">Windows 95、Windows 98 或 Windows Millennium 上不支持 <see cref="Overload:System.Net.Security.SslStream.AuthenticateAsServer" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ba16d-349">The <see cref="Overload:System.Net.Security.SslStream.AuthenticateAsServer" /> method is not supported on Windows 95, Windows 98, or Windows Millennium.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsServer (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, bool checkCertificateRevocation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsServer(class System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, bool checkCertificateRevocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsServer (serverCertificate As X509Certificate, clientCertificateRequired As Boolean, checkCertificateRevocation As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsServer(System::Security::Cryptography::X509Certificates::X509Certificate ^ serverCertificate, bool clientCertificateRequired, bool checkCertificateRevocation);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServer : System.Security.Cryptography.X509Certificates.X509Certificate * bool * bool -&gt; unit&#xA;override this.AuthenticateAsServer : System.Security.Cryptography.X509Certificates.X509Certificate * bool * bool -&gt; unit" Usage="sslStream.AuthenticateAsServer (serverCertificate, clientCertificateRequired, checkCertificateRevocation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serverCertificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1" />
        <Parameter Name="clientCertificateRequired" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1" />
        <Parameter Name="checkCertificateRevocation" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="serverCertificate"><span data-ttu-id="ba16d-350">用于对服务器进行身份验证的 X509Certificate 。</span><span class="sxs-lookup"><span data-stu-id="ba16d-350">The X509Certificate used to authenticate the server.</span></span></param>
        <param name="clientCertificateRequired"><span data-ttu-id="ba16d-351">一个 <see cref="T:System.Boolean" /> 值，该值指定是否向客户端请求证书用于进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ba16d-351">A <see cref="T:System.Boolean" /> value that specifies whether the client is asked for a certificate for authentication.</span></span> <span data-ttu-id="ba16d-352">请注意，这只是一个请求 - 如果没有提供任何证书，服务器仍然可接受连接请求。</span><span class="sxs-lookup"><span data-stu-id="ba16d-352">Note that this is only a request -- if no certificate is provided, the server still accepts the connection request.</span></span></param>
        <param name="checkCertificateRevocation"><span data-ttu-id="ba16d-353">一个 <see cref="T:System.Boolean" /> 值，该值指定身份验证期间是否检查证书吊销列表。</span><span class="sxs-lookup"><span data-stu-id="ba16d-353">A <see cref="T:System.Boolean" /> value that specifies whether the certificate revocation list is checked during authentication.</span></span></param>
        <summary><span data-ttu-id="ba16d-354">由服务器调用，以使用指定的证书、要求和系统默认安全协议在客户端 - 服务器连接中对服务器和客户端（可选）进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ba16d-354">Called by servers to authenticate the server and optionally the client in a client-server connection using the specified certificates and requirements, and using the system default security protocol.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]
 
 <span data-ttu-id="ba16d-355">此方法将在操作完成之前一直阻止。</span><span class="sxs-lookup"><span data-stu-id="ba16d-355">This method blocks until the operation completes.</span></span> <span data-ttu-id="ba16d-356">若要在操作完成前阻止阻止, 请使用<xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>方法重载之一。</span><span class="sxs-lookup"><span data-stu-id="ba16d-356">To prevent blocking until the operation completes, use one of the <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="ba16d-357">如果身份验证失败, 则会收到<xref:System.Security.Authentication.AuthenticationException>, 此<xref:System.Net.Security.SslStream>操作不再可用。</span><span class="sxs-lookup"><span data-stu-id="ba16d-357">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="ba16d-358">你应关闭此对象并删除对它的所有引用, 以便垃圾回收器可以收集它。</span><span class="sxs-lookup"><span data-stu-id="ba16d-358">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ba16d-359"><paramref name="serverCertificate" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ba16d-359"><paramref name="serverCertificate" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="ba16d-360">身份验证失败，并使此对象处于不可用的状态。</span><span class="sxs-lookup"><span data-stu-id="ba16d-360">The authentication failed and left this object in an unusable state.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ba16d-361">已进行了身份验证。</span><span class="sxs-lookup"><span data-stu-id="ba16d-361">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="ba16d-362">或</span><span class="sxs-lookup"><span data-stu-id="ba16d-362">-or-</span></span> 
<span data-ttu-id="ba16d-363">之前已尝试使用此 <see cref="T:System.Net.Security.SslStream" /> 进行了客户端身份验证。</span><span class="sxs-lookup"><span data-stu-id="ba16d-363">Client authentication using this <see cref="T:System.Net.Security.SslStream" /> was tried previously.</span></span>  
  
<span data-ttu-id="ba16d-364">或</span><span class="sxs-lookup"><span data-stu-id="ba16d-364">-or-</span></span> 
<span data-ttu-id="ba16d-365">身份验证已在进行中。</span><span class="sxs-lookup"><span data-stu-id="ba16d-365">Authentication is already in progress.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ba16d-366">此对象已关闭。</span><span class="sxs-lookup"><span data-stu-id="ba16d-366">This object has been closed.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="ba16d-367">Windows 95、Windows 98 或 Windows Millennium 上不支持 <see cref="Overload:System.Net.Security.SslStream.AuthenticateAsServer" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ba16d-367">The <see cref="Overload:System.Net.Security.SslStream.AuthenticateAsServer" /> method is not supported on Windows 95, Windows 98, or Windows Millennium.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsServer (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsServer(class System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, valuetype System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsServer (serverCertificate As X509Certificate, clientCertificateRequired As Boolean, enabledSslProtocols As SslProtocols, checkCertificateRevocation As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsServer(System::Security::Cryptography::X509Certificates::X509Certificate ^ serverCertificate, bool clientCertificateRequired, System::Security::Authentication::SslProtocols enabledSslProtocols, bool checkCertificateRevocation);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServer : System.Security.Cryptography.X509Certificates.X509Certificate * bool * System.Security.Authentication.SslProtocols * bool -&gt; unit&#xA;override this.AuthenticateAsServer : System.Security.Cryptography.X509Certificates.X509Certificate * bool * System.Security.Authentication.SslProtocols * bool -&gt; unit" Usage="sslStream.AuthenticateAsServer (serverCertificate, clientCertificateRequired, enabledSslProtocols, checkCertificateRevocation)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serverCertificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="clientCertificateRequired" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="enabledSslProtocols" Type="System.Security.Authentication.SslProtocols" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="checkCertificateRevocation" Type="System.Boolean" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="serverCertificate"><span data-ttu-id="ba16d-368">用于对服务器进行身份验证的 X509Certificate 。</span><span class="sxs-lookup"><span data-stu-id="ba16d-368">The X509Certificate used to authenticate the server.</span></span></param>
        <param name="clientCertificateRequired"><span data-ttu-id="ba16d-369">一个 <see cref="T:System.Boolean" /> 值，该值指定是否向客户端请求证书用于进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ba16d-369">A <see cref="T:System.Boolean" /> value that specifies whether the client is asked for a certificate for authentication.</span></span> <span data-ttu-id="ba16d-370">请注意，这只是一个请求 - 如果没有提供任何证书，服务器仍然可接受连接请求。</span><span class="sxs-lookup"><span data-stu-id="ba16d-370">Note that this is only a request -- if no certificate is provided, the server still accepts the connection request.</span></span></param>
        <param name="enabledSslProtocols"><span data-ttu-id="ba16d-371">代表用于身份验证的协议的 <see cref="T:System.Security.Authentication.SslProtocols" /> 值。</span><span class="sxs-lookup"><span data-stu-id="ba16d-371">The <see cref="T:System.Security.Authentication.SslProtocols" /> value that represents the protocol used for authentication.</span></span></param>
        <param name="checkCertificateRevocation"><span data-ttu-id="ba16d-372">一个 <see cref="T:System.Boolean" /> 值，该值指定身份验证期间是否检查证书吊销列表。</span><span class="sxs-lookup"><span data-stu-id="ba16d-372">A <see cref="T:System.Boolean" /> value that specifies whether the certificate revocation list is checked during authentication.</span></span></param>
        <summary><span data-ttu-id="ba16d-373">由服务器调用，以使用指定的证书、要求和安全协议在客户端 - 服务器连接中对服务器和客户端（可选）进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ba16d-373">Called by servers to authenticate the server and optionally the client in a client-server connection using the specified certificates, requirements and security protocol.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]
 
 <span data-ttu-id="ba16d-374">此方法将在操作完成之前一直阻止。</span><span class="sxs-lookup"><span data-stu-id="ba16d-374">This method blocks until the operation completes.</span></span> <span data-ttu-id="ba16d-375">若要在操作完成前阻止阻止, 请使用<xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>方法重载之一。</span><span class="sxs-lookup"><span data-stu-id="ba16d-375">To prevent blocking until the operation completes, use one of the <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="ba16d-376">如果身份验证失败, 则会收到<xref:System.Security.Authentication.AuthenticationException>, 此<xref:System.Net.Security.SslStream>操作不再可用。</span><span class="sxs-lookup"><span data-stu-id="ba16d-376">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="ba16d-377">你应关闭此对象并删除对它的所有引用, 以便垃圾回收器可以收集它。</span><span class="sxs-lookup"><span data-stu-id="ba16d-377">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ba16d-378"><paramref name="serverCertificate" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ba16d-378"><paramref name="serverCertificate" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ba16d-379"><paramref name="enabledSslProtocols" /> 不是有效的 <see cref="T:System.Security.Authentication.SslProtocols" /> 值。</span><span class="sxs-lookup"><span data-stu-id="ba16d-379"><paramref name="enabledSslProtocols" /> is not a valid <see cref="T:System.Security.Authentication.SslProtocols" /> value.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="ba16d-380">身份验证失败，并使此对象处于不可用的状态。</span><span class="sxs-lookup"><span data-stu-id="ba16d-380">The authentication failed and left this object in an unusable state.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ba16d-381">已进行了身份验证。</span><span class="sxs-lookup"><span data-stu-id="ba16d-381">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="ba16d-382">或</span><span class="sxs-lookup"><span data-stu-id="ba16d-382">-or-</span></span> 
<span data-ttu-id="ba16d-383">之前已尝试使用此 <see cref="T:System.Net.Security.SslStream" /> 进行了客户端身份验证。</span><span class="sxs-lookup"><span data-stu-id="ba16d-383">Client authentication using this <see cref="T:System.Net.Security.SslStream" /> was tried previously.</span></span>  
  
<span data-ttu-id="ba16d-384">或</span><span class="sxs-lookup"><span data-stu-id="ba16d-384">-or-</span></span> 
<span data-ttu-id="ba16d-385">身份验证已在进行中。</span><span class="sxs-lookup"><span data-stu-id="ba16d-385">Authentication is already in progress.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ba16d-386">此对象已关闭。</span><span class="sxs-lookup"><span data-stu-id="ba16d-386">This object has been closed.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="ba16d-387">Windows 95、Windows 98 或 Windows Millennium 上不支持 <see cref="Overload:System.Net.Security.SslStream.AuthenticateAsServer" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ba16d-387">The <see cref="Overload:System.Net.Security.SslStream.AuthenticateAsServer" /> method is not supported on Windows 95, Windows 98, or Windows Millennium.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="AuthenticateAsServerAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ba16d-388">服务器调用此方法，对客户端-服务器连接中的服务器及客户端（可选）进行身份验证以作为异步操作。</span><span class="sxs-lookup"><span data-stu-id="ba16d-388">Called by servers to authenticate the server and optionally the client in a client-server connection as an asynchronous operation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AuthenticateAsServerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsServerAsync(class System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsServerAsync (serverCertificate As X509Certificate) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsServerAsync(System::Security::Cryptography::X509Certificates::X509Certificate ^ serverCertificate);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServerAsync : System.Security.Cryptography.X509Certificates.X509Certificate -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsServerAsync : System.Security.Cryptography.X509Certificates.X509Certificate -&gt; System.Threading.Tasks.Task" Usage="sslStream.AuthenticateAsServerAsync serverCertificate" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serverCertificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="serverCertificate"><span data-ttu-id="ba16d-389">用于对服务器进行身份验证的证书。</span><span class="sxs-lookup"><span data-stu-id="ba16d-389">The certificate used to authenticate the server.</span></span></param>
        <summary><span data-ttu-id="ba16d-390">服务器调用此方法，使用指定的证书对客户端-服务器连接中的服务器及客户端（可选）进行身份验证以作为异步操作。</span><span class="sxs-lookup"><span data-stu-id="ba16d-390">Called by servers to authenticate the server and optionally the client in a client-server connection using the specified certificate as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="ba16d-391">表示异步操作的任务对象。</span><span class="sxs-lookup"><span data-stu-id="ba16d-391">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]
 
 <span data-ttu-id="ba16d-392">此方法使用<xref:System.Security.Authentication.SslProtocols.Default>进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ba16d-392">This method authenticates using <xref:System.Security.Authentication.SslProtocols.Default>.</span></span> <span data-ttu-id="ba16d-393">身份验证期间, 不会检查证书吊销列表。</span><span class="sxs-lookup"><span data-stu-id="ba16d-393">The certificate revocation list is not checked during authentication.</span></span> <span data-ttu-id="ba16d-394">客户端不需要提供用于身份验证的证书。</span><span class="sxs-lookup"><span data-stu-id="ba16d-394">The client is not required to provide a certificate for authentication.</span></span>  
  
 <span data-ttu-id="ba16d-395">如果身份验证失败, 则会收到<xref:System.Security.Authentication.AuthenticationException>, 此<xref:System.Net.Security.SslStream>操作不再可用。</span><span class="sxs-lookup"><span data-stu-id="ba16d-395">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="ba16d-396">你应关闭此对象并删除对它的所有引用, 以便垃圾回收器可以收集它。</span><span class="sxs-lookup"><span data-stu-id="ba16d-396">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ba16d-397"><paramref name="serverCertificate" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ba16d-397"><paramref name="serverCertificate" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="ba16d-398">身份验证失败，并使此对象处于不可用的状态。</span><span class="sxs-lookup"><span data-stu-id="ba16d-398">The authentication failed and left this object in an unusable state.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ba16d-399">已进行了身份验证。</span><span class="sxs-lookup"><span data-stu-id="ba16d-399">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="ba16d-400">或</span><span class="sxs-lookup"><span data-stu-id="ba16d-400">-or-</span></span> 
<span data-ttu-id="ba16d-401">之前已尝试使用此 <see cref="T:System.Net.Security.SslStream" /> 进行了客户端身份验证。</span><span class="sxs-lookup"><span data-stu-id="ba16d-401">Client authentication using this <see cref="T:System.Net.Security.SslStream" /> was tried previously.</span></span>  
  
<span data-ttu-id="ba16d-402">或</span><span class="sxs-lookup"><span data-stu-id="ba16d-402">-or-</span></span> 
<span data-ttu-id="ba16d-403">身份验证已在进行中。</span><span class="sxs-lookup"><span data-stu-id="ba16d-403">Authentication is already in progress.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ba16d-404">此对象已关闭。</span><span class="sxs-lookup"><span data-stu-id="ba16d-404">This object has been closed.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="ba16d-405">Windows 95、Windows 98 或 Windows Millennium 上不支持 <see cref="Overload:System.Net.Security.SslStream.AuthenticateAsServerAsync" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ba16d-405">The <see cref="Overload:System.Net.Security.SslStream.AuthenticateAsServerAsync" /> method is not supported on Windows 95, Windows 98, or Windows Millennium.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServerAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task AuthenticateAsServerAsync (System.Net.Security.SslServerAuthenticationOptions sslServerAuthenticationOptions, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task AuthenticateAsServerAsync(class System.Net.Security.SslServerAuthenticationOptions sslServerAuthenticationOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Net.Security.SslServerAuthenticationOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ AuthenticateAsServerAsync(System::Net::Security::SslServerAuthenticationOptions ^ sslServerAuthenticationOptions, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.AuthenticateAsServerAsync : System.Net.Security.SslServerAuthenticationOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="sslStream.AuthenticateAsServerAsync (sslServerAuthenticationOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sslServerAuthenticationOptions" Type="System.Net.Security.SslServerAuthenticationOptions" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="sslServerAuthenticationOptions">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, bool checkCertificateRevocation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsServerAsync(class System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, bool checkCertificateRevocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsServerAsync (serverCertificate As X509Certificate, clientCertificateRequired As Boolean, checkCertificateRevocation As Boolean) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsServerAsync(System::Security::Cryptography::X509Certificates::X509Certificate ^ serverCertificate, bool clientCertificateRequired, bool checkCertificateRevocation);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServerAsync : System.Security.Cryptography.X509Certificates.X509Certificate * bool * bool -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsServerAsync : System.Security.Cryptography.X509Certificates.X509Certificate * bool * bool -&gt; System.Threading.Tasks.Task" Usage="sslStream.AuthenticateAsServerAsync (serverCertificate, clientCertificateRequired, checkCertificateRevocation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serverCertificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1" />
        <Parameter Name="clientCertificateRequired" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1" />
        <Parameter Name="checkCertificateRevocation" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="serverCertificate"><span data-ttu-id="ba16d-406">用于对服务器进行身份验证的 X509Certificate 。</span><span class="sxs-lookup"><span data-stu-id="ba16d-406">The X509Certificate used to authenticate the server.</span></span></param>
        <param name="clientCertificateRequired"><span data-ttu-id="ba16d-407">一个 <see cref="T:System.Boolean" /> 值，该值指定是否向客户端请求证书用于进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ba16d-407">A <see cref="T:System.Boolean" /> value that specifies whether the client is asked for a certificate for authentication.</span></span> <span data-ttu-id="ba16d-408">请注意，这只是一个请求 - 如果没有提供任何证书，服务器仍然可接受连接请求。</span><span class="sxs-lookup"><span data-stu-id="ba16d-408">Note that this is only a request -- if no certificate is provided, the server still accepts the connection request.</span></span></param>
        <param name="checkCertificateRevocation"><span data-ttu-id="ba16d-409">一个 <see cref="T:System.Boolean" /> 值，该值指定身份验证期间是否检查证书吊销列表。</span><span class="sxs-lookup"><span data-stu-id="ba16d-409">A <see cref="T:System.Boolean" /> value that specifies whether the certificate revocation list is checked during authentication.</span></span></param>
        <summary><span data-ttu-id="ba16d-410">由服务器调用，以通过异步操作的形式使用指定的证书、要求和安全协议对客户端 - 服务器连接中的服务器和客户端（可选）进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ba16d-410">Called by servers to authenticate the server and optionally the client in a client-server connection using the specified certificates, requirements and security protocol as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="ba16d-411">表示异步操作的任务对象。</span><span class="sxs-lookup"><span data-stu-id="ba16d-411">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]
 
 <span data-ttu-id="ba16d-412">如果身份验证失败, 则会收到<xref:System.Security.Authentication.AuthenticationException>, 此<xref:System.Net.Security.SslStream>操作不再可用。</span><span class="sxs-lookup"><span data-stu-id="ba16d-412">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="ba16d-413">你应关闭此对象并删除对它的所有引用, 以便垃圾回收器可以收集它。</span><span class="sxs-lookup"><span data-stu-id="ba16d-413">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsServerAsync(class System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, valuetype System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsServerAsync (serverCertificate As X509Certificate, clientCertificateRequired As Boolean, enabledSslProtocols As SslProtocols, checkCertificateRevocation As Boolean) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsServerAsync(System::Security::Cryptography::X509Certificates::X509Certificate ^ serverCertificate, bool clientCertificateRequired, System::Security::Authentication::SslProtocols enabledSslProtocols, bool checkCertificateRevocation);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServerAsync : System.Security.Cryptography.X509Certificates.X509Certificate * bool * System.Security.Authentication.SslProtocols * bool -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsServerAsync : System.Security.Cryptography.X509Certificates.X509Certificate * bool * System.Security.Authentication.SslProtocols * bool -&gt; System.Threading.Tasks.Task" Usage="sslStream.AuthenticateAsServerAsync (serverCertificate, clientCertificateRequired, enabledSslProtocols, checkCertificateRevocation)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serverCertificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="clientCertificateRequired" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="enabledSslProtocols" Type="System.Security.Authentication.SslProtocols" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="checkCertificateRevocation" Type="System.Boolean" Index="3" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="serverCertificate"><span data-ttu-id="ba16d-414">用于对服务器进行身份验证的 X509Certificate 。</span><span class="sxs-lookup"><span data-stu-id="ba16d-414">The X509Certificate used to authenticate the server.</span></span></param>
        <param name="clientCertificateRequired"><span data-ttu-id="ba16d-415">一个 <see cref="T:System.Boolean" /> 值，该值指定是否向客户端请求证书用于进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ba16d-415">A <see cref="T:System.Boolean" /> value that specifies whether the client is asked for a certificate for authentication.</span></span> <span data-ttu-id="ba16d-416">请注意，这只是一个请求 - 如果没有提供任何证书，服务器仍然可接受连接请求。</span><span class="sxs-lookup"><span data-stu-id="ba16d-416">Note that this is only a request -- if no certificate is provided, the server still accepts the connection request.</span></span></param>
        <param name="enabledSslProtocols"><span data-ttu-id="ba16d-417">代表用于身份验证的协议的 <see cref="T:System.Security.Authentication.SslProtocols" /> 值。</span><span class="sxs-lookup"><span data-stu-id="ba16d-417">The <see cref="T:System.Security.Authentication.SslProtocols" /> value that represents the protocol used for authentication.</span></span></param>
        <param name="checkCertificateRevocation"><span data-ttu-id="ba16d-418">一个 <see cref="T:System.Boolean" /> 值，该值指定身份验证期间是否检查证书吊销列表。</span><span class="sxs-lookup"><span data-stu-id="ba16d-418">A <see cref="T:System.Boolean" /> value that specifies whether the certificate revocation list is checked during authentication.</span></span></param>
        <summary><span data-ttu-id="ba16d-419">由服务器调用，以通过异步操作的形式使用指定的证书、要求和安全协议对客户端 - 服务器连接中的服务器和客户端（可选）进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ba16d-419">Called by servers to authenticate the server and optionally the client in a client-server connection using the specified certificates, requirements and security protocol as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="ba16d-420">表示异步操作的任务对象。</span><span class="sxs-lookup"><span data-stu-id="ba16d-420">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]
 
 <span data-ttu-id="ba16d-421">如果身份验证失败, 则会收到<xref:System.Security.Authentication.AuthenticationException>, 此<xref:System.Net.Security.SslStream>操作不再可用。</span><span class="sxs-lookup"><span data-stu-id="ba16d-421">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="ba16d-422">你应关闭此对象并删除对它的所有引用, 以便垃圾回收器可以收集它。</span><span class="sxs-lookup"><span data-stu-id="ba16d-422">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginAuthenticateAsClient">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ba16d-423">开始一个操作，以对客户端-服务器连接中的客户端进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ba16d-423">Begins an operation to authenticate the client side of a client-server connection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba16d-424">进行身份验证时, 不会阻止此方法的重载。</span><span class="sxs-lookup"><span data-stu-id="ba16d-424">The overloads of this method do not block while authentication is in progress.</span></span> <span data-ttu-id="ba16d-425">若要在等待身份验证完成时阻止, 请使用其中一<xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>种方法。</span><span class="sxs-lookup"><span data-stu-id="ba16d-425">To block while waiting for the authentication to complete, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsClient (string targetHost, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsClient(string targetHost, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsClient(System::String ^ targetHost, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsClient : string * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsClient : string * AsyncCallback * obj -&gt; IAsyncResult" Usage="sslStream.BeginAuthenticateAsClient (targetHost, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.BeginAuthenticateAsClient(System.String,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetHost" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="asyncState" Type="System.Object" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="targetHost"><span data-ttu-id="ba16d-426">共享此 <see cref="T:System.Net.Security.SslStream" /> 的服务器名称。</span><span class="sxs-lookup"><span data-stu-id="ba16d-426">The name of the server that shares this <see cref="T:System.Net.Security.SslStream" />.</span></span></param>
        <param name="asyncCallback"><span data-ttu-id="ba16d-427">一个 <see cref="T:System.AsyncCallback" /> 委托，该委托引用当身份验证完成时要调用的方法。</span><span class="sxs-lookup"><span data-stu-id="ba16d-427">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="ba16d-428">一个用户定义对象，其中包含操作的相关信息。</span><span class="sxs-lookup"><span data-stu-id="ba16d-428">A user-defined object that contains information about the operation.</span></span> <span data-ttu-id="ba16d-429">操作完成时，此对象传递给 <paramref name="asyncCallback" /> 委托。</span><span class="sxs-lookup"><span data-stu-id="ba16d-429">This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</span></span></param>
        <summary><span data-ttu-id="ba16d-430">客户端调用此方法，以便开始一个异步操作，对服务器及客户端（可选）进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ba16d-430">Called by clients to begin an asynchronous operation to authenticate the server and optionally the client.</span></span></summary>
        <returns><span data-ttu-id="ba16d-431">一个指示异步操作状态的 <see cref="T:System.IAsyncResult" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="ba16d-431">An <see cref="T:System.IAsyncResult" /> object that indicates the status of the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]<span data-ttu-id="ba16d-432">身份验证中不使用任何客户端证书。</span><span class="sxs-lookup"><span data-stu-id="ba16d-432">No client certificates are used in the authentication.</span></span> <span data-ttu-id="ba16d-433">身份验证期间, 不会检查证书吊销列表。</span><span class="sxs-lookup"><span data-stu-id="ba16d-433">The certificate revocation list is not checked during authentication.</span></span>  
  
 <span data-ttu-id="ba16d-434">为指定的`targetHost`值必须与服务器证书上的名称匹配。</span><span class="sxs-lookup"><span data-stu-id="ba16d-434">The value specified for `targetHost` must match the name on the server's certificate.</span></span>  
  
 <span data-ttu-id="ba16d-435">必须通过调用<xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A>方法完成异步身份验证操作。</span><span class="sxs-lookup"><span data-stu-id="ba16d-435">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="ba16d-436">通常, 方法由`asyncCallback`委托调用。</span><span class="sxs-lookup"><span data-stu-id="ba16d-436">Typically, the method is invoked by the `asyncCallback` delegate.</span></span>  
  
 <span data-ttu-id="ba16d-437">操作完成时, 此方法不会被阻止。</span><span class="sxs-lookup"><span data-stu-id="ba16d-437">This method does not block while the operation completes.</span></span> <span data-ttu-id="ba16d-438">若要在操作完成之前一直阻止, 请使用<xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>方法重载之一。</span><span class="sxs-lookup"><span data-stu-id="ba16d-438">To block until the operation completes, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="ba16d-439">有关使用异步编程模型的详细信息, 请参阅[以异步方式调用同步方法](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="ba16d-439">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="ba16d-440">如果收到<xref:System.Security.Authentication.AuthenticationException> <xref:System.Net.Security.SslStream> , 则不再可用。</span><span class="sxs-lookup"><span data-stu-id="ba16d-440">If you receive a <xref:System.Security.Authentication.AuthenticationException>, this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="ba16d-441">你应关闭此对象并删除对它的所有引用, 以便垃圾回收器可以收集它。</span><span class="sxs-lookup"><span data-stu-id="ba16d-441">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ba16d-442"><paramref name="targetHost" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ba16d-442"><paramref name="targetHost" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="ba16d-443">身份验证失败，并使此对象处于不可用的状态。</span><span class="sxs-lookup"><span data-stu-id="ba16d-443">The authentication failed and left this object in an unusable state.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ba16d-444">已进行了身份验证。</span><span class="sxs-lookup"><span data-stu-id="ba16d-444">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="ba16d-445">或</span><span class="sxs-lookup"><span data-stu-id="ba16d-445">-or-</span></span> 
<span data-ttu-id="ba16d-446">之前已尝试使用此 <see cref="T:System.Net.Security.SslStream" /> 进行了服务器身份验证。</span><span class="sxs-lookup"><span data-stu-id="ba16d-446">Server authentication using this <see cref="T:System.Net.Security.SslStream" /> was tried previously.</span></span>  
  
<span data-ttu-id="ba16d-447">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ba16d-447">-or-</span></span> 
<span data-ttu-id="ba16d-448">身份验证已在进行中。</span><span class="sxs-lookup"><span data-stu-id="ba16d-448">Authentication is already in progress.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ba16d-449">此对象已关闭。</span><span class="sxs-lookup"><span data-stu-id="ba16d-449">This object has been closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsClient (string targetHost, System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, bool checkCertificateRevocation, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsClient(string targetHost, class System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, bool checkCertificateRevocation, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Boolean,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsClient(System::String ^ targetHost, System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ clientCertificates, bool checkCertificateRevocation, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsClient : string * System.Security.Cryptography.X509Certificates.X509CertificateCollection * bool * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsClient : string * System.Security.Cryptography.X509Certificates.X509CertificateCollection * bool * AsyncCallback * obj -&gt; IAsyncResult" Usage="sslStream.BeginAuthenticateAsClient (targetHost, clientCertificates, checkCertificateRevocation, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetHost" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1" />
        <Parameter Name="clientCertificates" Type="System.Security.Cryptography.X509Certificates.X509CertificateCollection" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1" />
        <Parameter Name="checkCertificateRevocation" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1" />
        <Parameter Name="asyncState" Type="System.Object" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="targetHost"><span data-ttu-id="ba16d-450">共享此 <see cref="T:System.Net.Security.SslStream" /> 的服务器名称。</span><span class="sxs-lookup"><span data-stu-id="ba16d-450">The name of the server that shares this <see cref="T:System.Net.Security.SslStream" />.</span></span></param>
        <param name="clientCertificates"><span data-ttu-id="ba16d-451"><see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> 包含客户端证书。</span><span class="sxs-lookup"><span data-stu-id="ba16d-451">The <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> containing client certificates.</span></span></param>
        <param name="checkCertificateRevocation"><span data-ttu-id="ba16d-452">一个 <see cref="T:System.Boolean" /> 值，该值指定身份验证期间是否检查证书吊销列表。</span><span class="sxs-lookup"><span data-stu-id="ba16d-452">A <see cref="T:System.Boolean" /> value that specifies whether the certificate revocation list is checked during authentication.</span></span></param>
        <param name="asyncCallback"><span data-ttu-id="ba16d-453">一个 <see cref="T:System.AsyncCallback" /> 委托，该委托引用当身份验证完成时要调用的方法。</span><span class="sxs-lookup"><span data-stu-id="ba16d-453">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="ba16d-454">一个用户定义对象，其中包含操作的相关信息。</span><span class="sxs-lookup"><span data-stu-id="ba16d-454">A user-defined object that contains information about the operation.</span></span> <span data-ttu-id="ba16d-455">操作完成时，此对象传递给 <paramref name="asyncCallback" /> 委托。</span><span class="sxs-lookup"><span data-stu-id="ba16d-455">This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</span></span></param>
        <summary><span data-ttu-id="ba16d-456">由客户端调用，以使用指定的证书和系统默认安全协议开始对服务器和客户端（可选）异步进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ba16d-456">Called by clients to begin an asynchronous operation to authenticate the server and optionally the client using the specified certificates and the system default security protocol.</span></span></summary>
        <returns><span data-ttu-id="ba16d-457">一个指示异步操作状态的 <see cref="T:System.IAsyncResult" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="ba16d-457">An <see cref="T:System.IAsyncResult" /> object that indicates the status of the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]
 
 <span data-ttu-id="ba16d-458">为指定的`targetHost`值必须与服务器证书上的名称匹配。</span><span class="sxs-lookup"><span data-stu-id="ba16d-458">The value specified for `targetHost` must match the name on the server's certificate.</span></span>  
  
 <span data-ttu-id="ba16d-459">必须通过调用<xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A>方法完成异步身份验证操作。</span><span class="sxs-lookup"><span data-stu-id="ba16d-459">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="ba16d-460">通常, 方法由`asyncCallback`委托调用。</span><span class="sxs-lookup"><span data-stu-id="ba16d-460">Typically, the method is invoked by the `asyncCallback` delegate.</span></span>  
  
 <span data-ttu-id="ba16d-461">操作完成时, 此方法不会被阻止。</span><span class="sxs-lookup"><span data-stu-id="ba16d-461">This method does not block while the operation completes.</span></span> <span data-ttu-id="ba16d-462">若要在操作完成之前一直阻止, 请使用<xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>方法重载之一。</span><span class="sxs-lookup"><span data-stu-id="ba16d-462">To block until the operation completes, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="ba16d-463">有关使用异步编程模型的详细信息, 请参阅[以异步方式调用同步方法](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="ba16d-463">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="ba16d-464">如果收到<xref:System.Security.Authentication.AuthenticationException> <xref:System.Net.Security.SslStream> , 则不再可用。</span><span class="sxs-lookup"><span data-stu-id="ba16d-464">If you receive a <xref:System.Security.Authentication.AuthenticationException>, this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="ba16d-465">你应关闭此对象并删除对它的所有引用, 以便垃圾回收器可以收集它。</span><span class="sxs-lookup"><span data-stu-id="ba16d-465">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ba16d-466">SSL 版本2协议不支持客户端证书。</span><span class="sxs-lookup"><span data-stu-id="ba16d-466">Client certificates are not supported in the SSL version 2 protocol.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ba16d-467"><paramref name="targetHost" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ba16d-467"><paramref name="targetHost" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="ba16d-468">身份验证失败，并使此对象处于不可用的状态。</span><span class="sxs-lookup"><span data-stu-id="ba16d-468">The authentication failed and left this object in an unusable state.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ba16d-469">已进行了身份验证。</span><span class="sxs-lookup"><span data-stu-id="ba16d-469">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="ba16d-470">或</span><span class="sxs-lookup"><span data-stu-id="ba16d-470">-or-</span></span> 
<span data-ttu-id="ba16d-471">之前已尝试使用此 <see cref="T:System.Net.Security.SslStream" /> 进行了服务器身份验证。</span><span class="sxs-lookup"><span data-stu-id="ba16d-471">Server authentication using this <see cref="T:System.Net.Security.SslStream" /> was tried previously.</span></span>  
  
<span data-ttu-id="ba16d-472">或</span><span class="sxs-lookup"><span data-stu-id="ba16d-472">-or-</span></span> 
<span data-ttu-id="ba16d-473">身份验证已在进行中。</span><span class="sxs-lookup"><span data-stu-id="ba16d-473">Authentication is already in progress.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ba16d-474">此对象已关闭。</span><span class="sxs-lookup"><span data-stu-id="ba16d-474">This object has been closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsClient (string targetHost, System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsClient(string targetHost, class System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, valuetype System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsClient(System::String ^ targetHost, System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ clientCertificates, System::Security::Authentication::SslProtocols enabledSslProtocols, bool checkCertificateRevocation, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsClient : string * System.Security.Cryptography.X509Certificates.X509CertificateCollection * System.Security.Authentication.SslProtocols * bool * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsClient : string * System.Security.Cryptography.X509Certificates.X509CertificateCollection * System.Security.Authentication.SslProtocols * bool * AsyncCallback * obj -&gt; IAsyncResult" Usage="sslStream.BeginAuthenticateAsClient (targetHost, clientCertificates, enabledSslProtocols, checkCertificateRevocation, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetHost" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="clientCertificates" Type="System.Security.Cryptography.X509Certificates.X509CertificateCollection" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="enabledSslProtocols" Type="System.Security.Authentication.SslProtocols" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="checkCertificateRevocation" Type="System.Boolean" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="asyncState" Type="System.Object" Index="5" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="targetHost"><span data-ttu-id="ba16d-475">共享此 <see cref="T:System.Net.Security.SslStream" /> 的服务器名称。</span><span class="sxs-lookup"><span data-stu-id="ba16d-475">The name of the server that shares this <see cref="T:System.Net.Security.SslStream" />.</span></span></param>
        <param name="clientCertificates"><span data-ttu-id="ba16d-476"><see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> 包含客户端证书。</span><span class="sxs-lookup"><span data-stu-id="ba16d-476">The <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> containing client certificates.</span></span></param>
        <param name="enabledSslProtocols"><span data-ttu-id="ba16d-477">代表用于身份验证的协议的 <see cref="T:System.Security.Authentication.SslProtocols" /> 值。</span><span class="sxs-lookup"><span data-stu-id="ba16d-477">The <see cref="T:System.Security.Authentication.SslProtocols" /> value that represents the protocol used for authentication.</span></span></param>
        <param name="checkCertificateRevocation"><span data-ttu-id="ba16d-478">一个 <see cref="T:System.Boolean" /> 值，该值指定身份验证期间是否检查证书吊销列表。</span><span class="sxs-lookup"><span data-stu-id="ba16d-478">A <see cref="T:System.Boolean" /> value that specifies whether the certificate revocation list is checked during authentication.</span></span></param>
        <param name="asyncCallback"><span data-ttu-id="ba16d-479">一个 <see cref="T:System.AsyncCallback" /> 委托，该委托引用当身份验证完成时要调用的方法。</span><span class="sxs-lookup"><span data-stu-id="ba16d-479">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="ba16d-480">一个用户定义对象，其中包含操作的相关信息。</span><span class="sxs-lookup"><span data-stu-id="ba16d-480">A user-defined object that contains information about the operation.</span></span> <span data-ttu-id="ba16d-481">操作完成时，此对象传递给 <paramref name="asyncCallback" /> 委托。</span><span class="sxs-lookup"><span data-stu-id="ba16d-481">This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</span></span></param>
        <summary><span data-ttu-id="ba16d-482">客户端调用此方法，以便开始一个异步操作，使用指定的证书和安全协议对服务器及客户端（可选）进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ba16d-482">Called by clients to begin an asynchronous operation to authenticate the server and optionally the client using the specified certificates and security protocol.</span></span></summary>
        <returns><span data-ttu-id="ba16d-483">一个指示异步操作状态的 <see cref="T:System.IAsyncResult" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="ba16d-483">An <see cref="T:System.IAsyncResult" /> object that indicates the status of the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]
 
 <span data-ttu-id="ba16d-484">为指定的`targetHost`值必须与服务器证书上的名称匹配。</span><span class="sxs-lookup"><span data-stu-id="ba16d-484">The value specified for `targetHost` must match the name on the server's certificate.</span></span>  
  
 <span data-ttu-id="ba16d-485">必须通过调用<xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A>方法完成异步身份验证操作。</span><span class="sxs-lookup"><span data-stu-id="ba16d-485">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="ba16d-486">通常, 方法由`asyncCallback`委托调用。</span><span class="sxs-lookup"><span data-stu-id="ba16d-486">Typically, the method is invoked by the `asyncCallback` delegate.</span></span>  
  
 <span data-ttu-id="ba16d-487">操作完成时, 此方法不会被阻止。</span><span class="sxs-lookup"><span data-stu-id="ba16d-487">This method does not block while the operation completes.</span></span> <span data-ttu-id="ba16d-488">若要在操作完成之前一直阻止, 请使用<xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>方法重载之一。</span><span class="sxs-lookup"><span data-stu-id="ba16d-488">To block until the operation completes, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="ba16d-489">有关使用异步编程模型的详细信息, 请参阅[以异步方式调用同步方法](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="ba16d-489">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="ba16d-490">如果收到<xref:System.Security.Authentication.AuthenticationException> <xref:System.Net.Security.SslStream> , 则不再可用。</span><span class="sxs-lookup"><span data-stu-id="ba16d-490">If you receive a <xref:System.Security.Authentication.AuthenticationException>, this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="ba16d-491">你应关闭此对象并删除对它的所有引用, 以便垃圾回收器可以收集它。</span><span class="sxs-lookup"><span data-stu-id="ba16d-491">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ba16d-492">SSL 版本2协议不支持客户端证书。</span><span class="sxs-lookup"><span data-stu-id="ba16d-492">Client certificates are not supported in the SSL version 2 protocol.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ba16d-493"><paramref name="targetHost" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ba16d-493"><paramref name="targetHost" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ba16d-494"><paramref name="enabledSslProtocols" /> 不是有效的 <see cref="T:System.Security.Authentication.SslProtocols" /> 值。</span><span class="sxs-lookup"><span data-stu-id="ba16d-494"><paramref name="enabledSslProtocols" /> is not a valid <see cref="T:System.Security.Authentication.SslProtocols" /> value.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="ba16d-495">身份验证失败，并使此对象处于不可用的状态。</span><span class="sxs-lookup"><span data-stu-id="ba16d-495">The authentication failed and left this object in an unusable state.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ba16d-496">已进行了身份验证。</span><span class="sxs-lookup"><span data-stu-id="ba16d-496">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="ba16d-497">或</span><span class="sxs-lookup"><span data-stu-id="ba16d-497">-or-</span></span> 
<span data-ttu-id="ba16d-498">之前已尝试使用此 <see cref="T:System.Net.Security.SslStream" /> 进行了服务器身份验证。</span><span class="sxs-lookup"><span data-stu-id="ba16d-498">Server authentication using this <see cref="T:System.Net.Security.SslStream" /> was tried previously.</span></span>  
  
<span data-ttu-id="ba16d-499">或</span><span class="sxs-lookup"><span data-stu-id="ba16d-499">-or-</span></span> 
<span data-ttu-id="ba16d-500">身份验证已在进行中。</span><span class="sxs-lookup"><span data-stu-id="ba16d-500">Authentication is already in progress.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ba16d-501">此对象已关闭。</span><span class="sxs-lookup"><span data-stu-id="ba16d-501">This object has been closed.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginAuthenticateAsServer">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ba16d-502">开始一个异步操作，以处理进行身份验证的客户端-服务器连接中的服务器端。</span><span class="sxs-lookup"><span data-stu-id="ba16d-502">Begins an asynchronous operation to handle the server side of authenticating a client-server connection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba16d-503">进行身份验证时, 不会阻止此方法的重载。</span><span class="sxs-lookup"><span data-stu-id="ba16d-503">The overloads of this method do not block while authentication is in progress.</span></span> <span data-ttu-id="ba16d-504">若要在等待身份验证完成时阻止, 请使用其中一<xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>种方法。</span><span class="sxs-lookup"><span data-stu-id="ba16d-504">To block while waiting for the authentication to complete, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsServer (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsServer(class System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsServer(System::Security::Cryptography::X509Certificates::X509Certificate ^ serverCertificate, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsServer : System.Security.Cryptography.X509Certificates.X509Certificate * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsServer : System.Security.Cryptography.X509Certificates.X509Certificate * AsyncCallback * obj -&gt; IAsyncResult" Usage="sslStream.BeginAuthenticateAsServer (serverCertificate, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serverCertificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="asyncState" Type="System.Object" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="serverCertificate"><span data-ttu-id="ba16d-505">用于对服务器进行身份验证的 X509Certificate 。</span><span class="sxs-lookup"><span data-stu-id="ba16d-505">The X509Certificate used to authenticate the server.</span></span></param>
        <param name="asyncCallback"><span data-ttu-id="ba16d-506">一个 <see cref="T:System.AsyncCallback" /> 委托，该委托引用当身份验证完成时要调用的方法。</span><span class="sxs-lookup"><span data-stu-id="ba16d-506">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="ba16d-507">一个用户定义对象，其中包含操作的相关信息。</span><span class="sxs-lookup"><span data-stu-id="ba16d-507">A user-defined object that contains information about the operation.</span></span> <span data-ttu-id="ba16d-508">操作完成时，此对象传递给 <paramref name="asyncCallback" /> 委托。</span><span class="sxs-lookup"><span data-stu-id="ba16d-508">This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</span></span></param>
        <summary><span data-ttu-id="ba16d-509">服务器调用此方法，以便开始一个异步操作，对客户端-服务器连接中的客户端及服务器（可选）进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ba16d-509">Called by servers to begin an asynchronous operation to authenticate the client and optionally the server in a client-server connection.</span></span></summary>
        <returns><span data-ttu-id="ba16d-510">一个指示异步操作状态的 <see cref="T:System.IAsyncResult" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="ba16d-510">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]<span data-ttu-id="ba16d-511">身份验证期间, 不会检查证书吊销列表。</span><span class="sxs-lookup"><span data-stu-id="ba16d-511">The certificate revocation list is not checked during authentication.</span></span> <span data-ttu-id="ba16d-512">客户端不需要提供用于身份验证的证书。</span><span class="sxs-lookup"><span data-stu-id="ba16d-512">The client is not required to provide a certificate for authentication.</span></span>  
  
 <span data-ttu-id="ba16d-513">必须通过调用<xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A>方法完成异步身份验证操作。</span><span class="sxs-lookup"><span data-stu-id="ba16d-513">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="ba16d-514">通常, 方法由`asyncCallback`委托调用。</span><span class="sxs-lookup"><span data-stu-id="ba16d-514">Typically, the method is invoked by the `asyncCallback` delegate.</span></span>  
  
 <span data-ttu-id="ba16d-515">操作完成时, 此方法不会被阻止。</span><span class="sxs-lookup"><span data-stu-id="ba16d-515">This method does not block while the operation completes.</span></span> <span data-ttu-id="ba16d-516">若要在操作完成之前一直阻止, 请使用<xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>方法重载之一。</span><span class="sxs-lookup"><span data-stu-id="ba16d-516">To block until the operation completes, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="ba16d-517">有关使用异步编程模型的详细信息, 请参阅[以异步方式调用同步方法](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="ba16d-517">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="ba16d-518">如果收到<xref:System.Security.Authentication.AuthenticationException> <xref:System.Net.Security.SslStream> , 则不再可用。</span><span class="sxs-lookup"><span data-stu-id="ba16d-518">If you receive a <xref:System.Security.Authentication.AuthenticationException>, this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="ba16d-519">你应关闭此对象并删除对它的所有引用, 以便垃圾回收器可以收集它。</span><span class="sxs-lookup"><span data-stu-id="ba16d-519">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ba16d-520"><paramref name="serverCertificate" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ba16d-520"><paramref name="serverCertificate" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="ba16d-521">身份验证失败，并使此对象处于不可用的状态。</span><span class="sxs-lookup"><span data-stu-id="ba16d-521">The authentication failed and left this object in an unusable state.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ba16d-522">已进行了身份验证。</span><span class="sxs-lookup"><span data-stu-id="ba16d-522">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="ba16d-523">或</span><span class="sxs-lookup"><span data-stu-id="ba16d-523">-or-</span></span> 
<span data-ttu-id="ba16d-524">之前已尝试使用此 <see cref="T:System.Net.Security.SslStream" /> 进行了客户端身份验证。</span><span class="sxs-lookup"><span data-stu-id="ba16d-524">Client authentication using this <see cref="T:System.Net.Security.SslStream" /> was tried previously.</span></span>  
  
<span data-ttu-id="ba16d-525">或</span><span class="sxs-lookup"><span data-stu-id="ba16d-525">-or-</span></span> 
<span data-ttu-id="ba16d-526">身份验证已在进行中。</span><span class="sxs-lookup"><span data-stu-id="ba16d-526">Authentication is already in progress.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ba16d-527">此对象已关闭。</span><span class="sxs-lookup"><span data-stu-id="ba16d-527">This object has been closed.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="ba16d-528">Windows 95、Windows 98 或 Windows Millennium 上不支持 <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ba16d-528">The <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" /> method is not supported on Windows 95, Windows 98, or Windows Millennium.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsServer (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, bool checkCertificateRevocation, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsServer(class System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, bool checkCertificateRevocation, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsServer(System::Security::Cryptography::X509Certificates::X509Certificate ^ serverCertificate, bool clientCertificateRequired, bool checkCertificateRevocation, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsServer : System.Security.Cryptography.X509Certificates.X509Certificate * bool * bool * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsServer : System.Security.Cryptography.X509Certificates.X509Certificate * bool * bool * AsyncCallback * obj -&gt; IAsyncResult" Usage="sslStream.BeginAuthenticateAsServer (serverCertificate, clientCertificateRequired, checkCertificateRevocation, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serverCertificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1" />
        <Parameter Name="clientCertificateRequired" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1" />
        <Parameter Name="checkCertificateRevocation" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1" />
        <Parameter Name="asyncState" Type="System.Object" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="serverCertificate"><span data-ttu-id="ba16d-529">用于对服务器进行身份验证的 X509Certificate 。</span><span class="sxs-lookup"><span data-stu-id="ba16d-529">The X509Certificate used to authenticate the server.</span></span></param>
        <param name="clientCertificateRequired"><span data-ttu-id="ba16d-530">一个 <see cref="T:System.Boolean" /> 值，该值指定是否向客户端请求证书用于进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ba16d-530">A <see cref="T:System.Boolean" /> value that specifies whether the client is asked for a certificate for authentication.</span></span> <span data-ttu-id="ba16d-531">请注意，这只是一个请求 - 如果没有提供任何证书，服务器仍然可接受连接请求。</span><span class="sxs-lookup"><span data-stu-id="ba16d-531">Note that this is only a request -- if no certificate is provided, the server still accepts the connection request.</span></span></param>
        <param name="checkCertificateRevocation"><span data-ttu-id="ba16d-532">一个 <see cref="T:System.Boolean" /> 值，该值指定身份验证期间是否检查证书吊销列表。</span><span class="sxs-lookup"><span data-stu-id="ba16d-532">A <see cref="T:System.Boolean" /> value that specifies whether the certificate revocation list is checked during authentication.</span></span></param>
        <param name="asyncCallback"><span data-ttu-id="ba16d-533">一个 <see cref="T:System.AsyncCallback" /> 委托，该委托引用当身份验证完成时要调用的方法。</span><span class="sxs-lookup"><span data-stu-id="ba16d-533">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="ba16d-534">一个用户定义对象，其中包含操作的相关信息。</span><span class="sxs-lookup"><span data-stu-id="ba16d-534">A user-defined object that contains information about the operation.</span></span> <span data-ttu-id="ba16d-535">操作完成时，此对象传递给 <paramref name="asyncCallback" /> 委托。</span><span class="sxs-lookup"><span data-stu-id="ba16d-535">This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</span></span></param>
        <summary><span data-ttu-id="ba16d-536">由服务器调用，以使用指定的证书、要求和系统默认安全协议开始对服务器和客户端（可选）异步进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ba16d-536">Called by servers to begin an asynchronous operation to authenticate the server and optionally the client using the specified certificates and requirements, and the system default security protocol.</span></span></summary>
        <returns><span data-ttu-id="ba16d-537">一个指示异步操作状态的 <see cref="T:System.IAsyncResult" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="ba16d-537">An <see cref="T:System.IAsyncResult" /> object that indicates the status of the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]
 
 <span data-ttu-id="ba16d-538">必须通过调用<xref:System.Net.Security.SslStream.EndAuthenticateAsServer%2A>方法完成异步身份验证操作。</span><span class="sxs-lookup"><span data-stu-id="ba16d-538">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.SslStream.EndAuthenticateAsServer%2A> method.</span></span> <span data-ttu-id="ba16d-539">通常, 方法由`asyncCallback`委托调用。</span><span class="sxs-lookup"><span data-stu-id="ba16d-539">Typically, the method is invoked by the `asyncCallback` delegate.</span></span>  
  
 <span data-ttu-id="ba16d-540">操作完成时, 此方法不会被阻止。</span><span class="sxs-lookup"><span data-stu-id="ba16d-540">This method does not block while the operation completes.</span></span> <span data-ttu-id="ba16d-541">若要在操作完成之前一直阻止, 请使用<xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>方法重载之一。</span><span class="sxs-lookup"><span data-stu-id="ba16d-541">To block until the operation completes, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="ba16d-542">有关使用异步编程模型的详细信息, 请参阅[以异步方式调用同步方法](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="ba16d-542">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="ba16d-543">如果收到<xref:System.Security.Authentication.AuthenticationException> <xref:System.Net.Security.SslStream> , 则不再可用。</span><span class="sxs-lookup"><span data-stu-id="ba16d-543">If you receive a <xref:System.Security.Authentication.AuthenticationException>, this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="ba16d-544">你应关闭此对象并删除对它的所有引用, 以便垃圾回收器可以收集它。</span><span class="sxs-lookup"><span data-stu-id="ba16d-544">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ba16d-545"><paramref name="serverCertificate" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ba16d-545"><paramref name="serverCertificate" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="ba16d-546">身份验证失败，并使此对象处于不可用的状态。</span><span class="sxs-lookup"><span data-stu-id="ba16d-546">The authentication failed and left this object in an unusable state.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ba16d-547">已进行了身份验证。</span><span class="sxs-lookup"><span data-stu-id="ba16d-547">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="ba16d-548">或</span><span class="sxs-lookup"><span data-stu-id="ba16d-548">-or-</span></span> 
<span data-ttu-id="ba16d-549">之前已尝试使用此 <see cref="T:System.Net.Security.SslStream" /> 进行了服务器身份验证。</span><span class="sxs-lookup"><span data-stu-id="ba16d-549">Server authentication using this <see cref="T:System.Net.Security.SslStream" /> was tried previously.</span></span>  
  
<span data-ttu-id="ba16d-550">或</span><span class="sxs-lookup"><span data-stu-id="ba16d-550">-or-</span></span> 
<span data-ttu-id="ba16d-551">身份验证已在进行中。</span><span class="sxs-lookup"><span data-stu-id="ba16d-551">Authentication is already in progress.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ba16d-552">此对象已关闭。</span><span class="sxs-lookup"><span data-stu-id="ba16d-552">This object has been closed.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="ba16d-553">Windows 95、Windows 98 或 Windows Millennium 上不支持 <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ba16d-553">The <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" /> method is not supported on Windows 95, Windows 98, or Windows Millennium.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsServer (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsServer(class System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, valuetype System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsServer(System::Security::Cryptography::X509Certificates::X509Certificate ^ serverCertificate, bool clientCertificateRequired, System::Security::Authentication::SslProtocols enabledSslProtocols, bool checkCertificateRevocation, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsServer : System.Security.Cryptography.X509Certificates.X509Certificate * bool * System.Security.Authentication.SslProtocols * bool * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsServer : System.Security.Cryptography.X509Certificates.X509Certificate * bool * System.Security.Authentication.SslProtocols * bool * AsyncCallback * obj -&gt; IAsyncResult" Usage="sslStream.BeginAuthenticateAsServer (serverCertificate, clientCertificateRequired, enabledSslProtocols, checkCertificateRevocation, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serverCertificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="clientCertificateRequired" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="enabledSslProtocols" Type="System.Security.Authentication.SslProtocols" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="checkCertificateRevocation" Type="System.Boolean" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="asyncState" Type="System.Object" Index="5" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="serverCertificate"><span data-ttu-id="ba16d-554">用于对服务器进行身份验证的 X509Certificate 。</span><span class="sxs-lookup"><span data-stu-id="ba16d-554">The X509Certificate used to authenticate the server.</span></span></param>
        <param name="clientCertificateRequired"><span data-ttu-id="ba16d-555">一个 <see cref="T:System.Boolean" /> 值，该值指定是否向客户端请求证书用于进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ba16d-555">A <see cref="T:System.Boolean" /> value that specifies whether the client is asked for a certificate for authentication.</span></span> <span data-ttu-id="ba16d-556">请注意，这只是一个请求 - 如果没有提供任何证书，服务器仍然可接受连接请求。</span><span class="sxs-lookup"><span data-stu-id="ba16d-556">Note that this is only a request -- if no certificate is provided, the server still accepts the connection request.</span></span></param>
        <param name="enabledSslProtocols"><span data-ttu-id="ba16d-557">代表用于身份验证的协议的 <see cref="T:System.Security.Authentication.SslProtocols" /> 值。</span><span class="sxs-lookup"><span data-stu-id="ba16d-557">The <see cref="T:System.Security.Authentication.SslProtocols" /> value that represents the protocol used for authentication.</span></span></param>
        <param name="checkCertificateRevocation"><span data-ttu-id="ba16d-558">一个 <see cref="T:System.Boolean" /> 值，该值指定身份验证期间是否检查证书吊销列表。</span><span class="sxs-lookup"><span data-stu-id="ba16d-558">A <see cref="T:System.Boolean" /> value that specifies whether the certificate revocation list is checked during authentication.</span></span></param>
        <param name="asyncCallback"><span data-ttu-id="ba16d-559">一个 <see cref="T:System.AsyncCallback" /> 委托，该委托引用当身份验证完成时要调用的方法。</span><span class="sxs-lookup"><span data-stu-id="ba16d-559">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="ba16d-560">一个用户定义对象，其中包含操作的相关信息。</span><span class="sxs-lookup"><span data-stu-id="ba16d-560">A user-defined object that contains information about the operation.</span></span> <span data-ttu-id="ba16d-561">操作完成时，此对象传递给 <paramref name="asyncCallback" /> 委托。</span><span class="sxs-lookup"><span data-stu-id="ba16d-561">This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</span></span></param>
        <summary><span data-ttu-id="ba16d-562">由服务器调用，以使用指定的证书、要求和安全协议开始对服务器和客户端（可选）异步进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ba16d-562">Called by servers to begin an asynchronous operation to authenticate the server and optionally the client using the specified certificates, requirements and security protocol.</span></span></summary>
        <returns><span data-ttu-id="ba16d-563">一个指示异步操作状态的 <see cref="T:System.IAsyncResult" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="ba16d-563">An <see cref="T:System.IAsyncResult" /> object that indicates the status of the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]
 
 <span data-ttu-id="ba16d-564">必须通过调用<xref:System.Net.Security.SslStream.EndAuthenticateAsServer%2A>方法完成异步身份验证操作。</span><span class="sxs-lookup"><span data-stu-id="ba16d-564">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.SslStream.EndAuthenticateAsServer%2A> method.</span></span> <span data-ttu-id="ba16d-565">通常, 方法由`asyncCallback`委托调用。</span><span class="sxs-lookup"><span data-stu-id="ba16d-565">Typically, the method is invoked by the `asyncCallback` delegate.</span></span>  
  
 <span data-ttu-id="ba16d-566">操作完成时, 此方法不会被阻止。</span><span class="sxs-lookup"><span data-stu-id="ba16d-566">This method does not block while the operation completes.</span></span> <span data-ttu-id="ba16d-567">若要在操作完成之前一直阻止, 请使用<xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>方法重载之一。</span><span class="sxs-lookup"><span data-stu-id="ba16d-567">To block until the operation completes, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="ba16d-568">有关使用异步编程模型的详细信息, 请参阅[以异步方式调用同步方法](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="ba16d-568">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="ba16d-569">如果收到<xref:System.Security.Authentication.AuthenticationException> <xref:System.Net.Security.SslStream> , 则不再可用。</span><span class="sxs-lookup"><span data-stu-id="ba16d-569">If you receive a <xref:System.Security.Authentication.AuthenticationException>, this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="ba16d-570">你应关闭此对象并删除对它的所有引用, 以便垃圾回收器可以收集它。</span><span class="sxs-lookup"><span data-stu-id="ba16d-570">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ba16d-571"><paramref name="serverCertificate" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ba16d-571"><paramref name="serverCertificate" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ba16d-572"><paramref name="enabledSslProtocols" /> 不是有效的 <see cref="T:System.Security.Authentication.SslProtocols" /> 值。</span><span class="sxs-lookup"><span data-stu-id="ba16d-572"><paramref name="enabledSslProtocols" /> is not a valid <see cref="T:System.Security.Authentication.SslProtocols" /> value.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="ba16d-573">身份验证失败，并使此对象处于不可用的状态。</span><span class="sxs-lookup"><span data-stu-id="ba16d-573">The authentication failed and left this object in an unusable state.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ba16d-574">已进行了身份验证。</span><span class="sxs-lookup"><span data-stu-id="ba16d-574">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="ba16d-575">或</span><span class="sxs-lookup"><span data-stu-id="ba16d-575">-or-</span></span> 
<span data-ttu-id="ba16d-576">之前已尝试使用此 <see cref="T:System.Net.Security.SslStream" /> 进行了服务器身份验证。</span><span class="sxs-lookup"><span data-stu-id="ba16d-576">Server authentication using this <see cref="T:System.Net.Security.SslStream" /> was tried previously.</span></span>  
  
<span data-ttu-id="ba16d-577">或</span><span class="sxs-lookup"><span data-stu-id="ba16d-577">-or-</span></span> 
<span data-ttu-id="ba16d-578">身份验证已在进行中。</span><span class="sxs-lookup"><span data-stu-id="ba16d-578">Authentication is already in progress.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ba16d-579">此对象已关闭。</span><span class="sxs-lookup"><span data-stu-id="ba16d-579">This object has been closed.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="ba16d-580">Windows 95、Windows 98 或 Windows Millennium 上不支持 <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ba16d-580">The <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" /> method is not supported on Windows 95, Windows 98, or Windows Millennium.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginRead">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginRead (byte[] buffer, int offset, int count, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginRead(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginRead(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="override this.BeginRead : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="sslStream.BeginRead (buffer, offset, count, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="offset" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="asyncState" Type="System.Object" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="ba16d-581">一个 <see cref="T:System.Byte" /> 数组，该数组接收从流中读取的字节。</span><span class="sxs-lookup"><span data-stu-id="ba16d-581">A <see cref="T:System.Byte" /> array that receives the bytes read from the stream.</span></span></param>
        <param name="offset"><span data-ttu-id="ba16d-582"><paramref name="buffer" /> 中从零开始的位置，从此处开始存储从此流中读取的数据。</span><span class="sxs-lookup"><span data-stu-id="ba16d-582">The zero-based location in <paramref name="buffer" /> at which to begin storing the data read from this stream.</span></span></param>
        <param name="count"><span data-ttu-id="ba16d-583">要从流中读取的最大字节数。</span><span class="sxs-lookup"><span data-stu-id="ba16d-583">The maximum number of bytes to read from the stream.</span></span></param>
        <param name="asyncCallback"><span data-ttu-id="ba16d-584"><see cref="T:System.AsyncCallback" /> 委托，该委托引用读操作完成时要调用的方法。</span><span class="sxs-lookup"><span data-stu-id="ba16d-584">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the read operation is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="ba16d-585">一个用户定义的对象，其中包含读操作的相关信息。</span><span class="sxs-lookup"><span data-stu-id="ba16d-585">A user-defined object that contains information about the read operation.</span></span> <span data-ttu-id="ba16d-586">操作完成时，此对象传递给 <paramref name="asyncCallback" /> 委托。</span><span class="sxs-lookup"><span data-stu-id="ba16d-586">This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</span></span></param>
        <summary><span data-ttu-id="ba16d-587">开始一个异步读操作，此操作读取流中的数据并将其存储在指定的数组中。</span><span class="sxs-lookup"><span data-stu-id="ba16d-587">Begins an asynchronous read operation that reads data from the stream and stores it in the specified array.</span></span></summary>
        <returns><span data-ttu-id="ba16d-588">一个指示异步操作状态的 <see cref="T:System.IAsyncResult" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="ba16d-588">An <see cref="T:System.IAsyncResult" /> object that indicates the status of the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba16d-589">如果启用了加密和或签名, 则读取操作将从基础流中读取数据, 检查数据的完整性, 并/或对其进行解密。</span><span class="sxs-lookup"><span data-stu-id="ba16d-589">If encryption and or signing are enabled, the read operation reads the data from the underlying stream, checks the integrity of the data, and/or decrypts it.</span></span> <span data-ttu-id="ba16d-590">异步读取操作必须通过调用<xref:System.Net.Security.SslStream.EndRead%2A>方法完成。</span><span class="sxs-lookup"><span data-stu-id="ba16d-590">The asynchronous read operation must be completed by calling the <xref:System.Net.Security.SslStream.EndRead%2A> method.</span></span> <span data-ttu-id="ba16d-591">通常, 方法由`asyncCallback`委托调用。</span><span class="sxs-lookup"><span data-stu-id="ba16d-591">Typically, the method is invoked by the `asyncCallback` delegate.</span></span>  
  
 <span data-ttu-id="ba16d-592">操作完成时, 此方法不会被阻止。</span><span class="sxs-lookup"><span data-stu-id="ba16d-592">This method does not block while the operation completes.</span></span> <span data-ttu-id="ba16d-593">若要在操作完成之前一直阻止, <xref:System.Net.Security.SslStream.Read%2A>请使用方法。</span><span class="sxs-lookup"><span data-stu-id="ba16d-593">To block until the operation completes, use the <xref:System.Net.Security.SslStream.Read%2A> method.</span></span>  
  
 <span data-ttu-id="ba16d-594">有关使用异步编程模型的详细信息, 请参阅[以异步方式调用同步方法](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="ba16d-594">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="ba16d-595"><xref:System.Net.Security.SslStream>类不支持多个同时读取操作。</span><span class="sxs-lookup"><span data-stu-id="ba16d-595">The <xref:System.Net.Security.SslStream> class does not support multiple simultaneous read operations.</span></span>  
  
 <span data-ttu-id="ba16d-596">在成功完成身份验证之前, 你无法调用此方法。</span><span class="sxs-lookup"><span data-stu-id="ba16d-596">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="ba16d-597">若要进行身份<xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>验证, 请调用一个、或<xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>、 <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="ba16d-597">To authenticate call one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, or <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba16d-598">下面的代码示例演示如何启动异步读取操作。</span><span class="sxs-lookup"><span data-stu-id="ba16d-598">The following code example demonstrates starting an asynchronous read operation.</span></span>  
  
 [!code-cpp[NclSslClientAsync#8](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslClientAsync/CPP/NclSslClientAsync.cpp#8)]
 [!code-csharp[NclSslClientAsync#8](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslClientAsync/CS/clientasync.cs#8)]  
 [!code-vb[NclSslClientAsync#8](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclSslClientAsync/VB/clientasync.vb#8)]  

 [!code-cpp[NclSslClientAsync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslClientAsync/CPP/NclSslClientAsync.cpp#4)]
 [!code-csharp[NclSslClientAsync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslClientAsync/CS/clientasync.cs#4)] 
 [!code-vb[NclSslClientAsync#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclSslClientAsync/VB/clientasync.vb#4)]  

  
 <span data-ttu-id="ba16d-599">当读取完成时, 将调用以下方法。</span><span class="sxs-lookup"><span data-stu-id="ba16d-599">The following method is called when the read completes.</span></span>  
  
 [!code-cpp[NclSslClientAsync#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslClientAsync/CPP/NclSslClientAsync.cpp#5)]
 [!code-csharp[NclSslClientAsync#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslClientAsync/CS/clientasync.cs#5)]  
 [!code-vb[NclSslClientAsync#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclSslClientAsync/VB/clientasync.vb#5)]  

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ba16d-600"><paramref name="buffer" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ba16d-600"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ba16d-601"><paramref name="offset" />
          <paramref name="&lt;" />
          <paramref name="0" />。</span><span class="sxs-lookup"><span data-stu-id="ba16d-601"><paramref name="offset" />
          <paramref name="&lt;" />
          <paramref name="0" />.</span></span>  
  
 <span data-ttu-id="ba16d-602"><paramref name="-or-" /><paramref name="offset" /> &gt; <paramref name="buffer" /> 的长度。</span><span class="sxs-lookup"><span data-stu-id="ba16d-602"><paramref name="-or-" /><paramref name="offset" /> &gt; the length of <paramref name="buffer" />.</span></span>  
  
<span data-ttu-id="ba16d-603">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ba16d-603">-or-</span></span> 
 <span data-ttu-id="ba16d-604"><paramref name="offset" /> + count &gt; <paramref name="buffer" /> 的长度。</span><span class="sxs-lookup"><span data-stu-id="ba16d-604"><paramref name="offset" /> + count &gt; the length of <paramref name="buffer" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="ba16d-605">读操作失败。</span><span class="sxs-lookup"><span data-stu-id="ba16d-605">The read operation failed.</span></span>  
  
 <span data-ttu-id="ba16d-606">或</span><span class="sxs-lookup"><span data-stu-id="ba16d-606">-or-</span></span>  
  
 <span data-ttu-id="ba16d-607">使用了加密服务，但未能解密该数据。</span><span class="sxs-lookup"><span data-stu-id="ba16d-607">Encryption is in use, but the data could not be decrypted.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ba16d-608">已存在一个正在执行的读取操作。</span><span class="sxs-lookup"><span data-stu-id="ba16d-608">There is already a read operation in progress.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ba16d-609">此对象已关闭。</span><span class="sxs-lookup"><span data-stu-id="ba16d-609">This object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ba16d-610">未进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ba16d-610">Authentication has not occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginWrite">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginWrite (byte[] buffer, int offset, int count, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginWrite(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginWrite(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="override this.BeginWrite : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="sslStream.BeginWrite (buffer, offset, count, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="offset" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="asyncState" Type="System.Object" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="ba16d-611">一个 <see cref="T:System.Byte" /> 数组，该数组提供要写入流中的字节。</span><span class="sxs-lookup"><span data-stu-id="ba16d-611">A <see cref="T:System.Byte" /> array that supplies the bytes to be written to the stream.</span></span></param>
        <param name="offset"><span data-ttu-id="ba16d-612"><paramref name="buffer" /> 中从零开始的位置，从此处开始读取要写入到流中的字节。</span><span class="sxs-lookup"><span data-stu-id="ba16d-612">The zero-based location in <paramref name="buffer" /> at which to begin reading bytes to be written to the stream.</span></span></param>
        <param name="count"><span data-ttu-id="ba16d-613"><see cref="T:System.Int32" /> 值，该值指定要从 <paramref name="buffer" /> 中读取的字节数。</span><span class="sxs-lookup"><span data-stu-id="ba16d-613">An <see cref="T:System.Int32" /> value that specifies the number of bytes to read from <paramref name="buffer" />.</span></span></param>
        <param name="asyncCallback"><span data-ttu-id="ba16d-614"><see cref="T:System.AsyncCallback" /> 委托，它引用写操作完成时要调用的方法。</span><span class="sxs-lookup"><span data-stu-id="ba16d-614">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the write operation is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="ba16d-615">一个用户定义的对象，其中包含写操作的相关信息。</span><span class="sxs-lookup"><span data-stu-id="ba16d-615">A user-defined object that contains information about the write operation.</span></span> <span data-ttu-id="ba16d-616">操作完成时，此对象传递给 <paramref name="asyncCallback" /> 委托。</span><span class="sxs-lookup"><span data-stu-id="ba16d-616">This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</span></span></param>
        <summary><span data-ttu-id="ba16d-617">开始一个异步写操作，此操作将指定缓冲区中的 <see cref="T:System.Byte" /> 写入到流中。</span><span class="sxs-lookup"><span data-stu-id="ba16d-617">Begins an asynchronous write operation that writes <see cref="T:System.Byte" />s from the specified buffer to the stream.</span></span></summary>
        <returns><span data-ttu-id="ba16d-618">一个指示异步操作状态的 <see cref="T:System.IAsyncResult" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="ba16d-618">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ba16d-619">下面的代码示例演示如何调用此方法。</span><span class="sxs-lookup"><span data-stu-id="ba16d-619">The following code example demonstrates calling this method.</span></span>  
  
 [!code-cpp[NclSslServerAsync#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerAsync/CPP/NclSslServerAsync.cpp#5)]
 [!code-csharp[NclSslServerAsync#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerAsync/CS/serverasync.cs#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ba16d-620"><paramref name="buffer" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ba16d-620"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ba16d-621"><paramref name="offset" />
          <paramref name="&lt;" />
          <paramref name="0" />。</span><span class="sxs-lookup"><span data-stu-id="ba16d-621"><paramref name="offset" />
          <paramref name="&lt;" />
          <paramref name="0" />.</span></span>  
  
 <span data-ttu-id="ba16d-622"><paramref name="-or-" /><paramref name="offset" /> &gt; <paramref name="buffer" /> 的长度。</span><span class="sxs-lookup"><span data-stu-id="ba16d-622"><paramref name="-or-" /><paramref name="offset" /> &gt; the length of <paramref name="buffer" />.</span></span>  
  
<span data-ttu-id="ba16d-623">或</span><span class="sxs-lookup"><span data-stu-id="ba16d-623">-or-</span></span> 
 <span data-ttu-id="ba16d-624"><paramref name="offset" /> + count &gt; <paramref name="buffer" /> 的长度。</span><span class="sxs-lookup"><span data-stu-id="ba16d-624"><paramref name="offset" /> + count &gt; the length of <paramref name="buffer" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="ba16d-625">写操作失败。</span><span class="sxs-lookup"><span data-stu-id="ba16d-625">The write operation failed.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ba16d-626">已存在一个正在执行的写操作。</span><span class="sxs-lookup"><span data-stu-id="ba16d-626">There is already a write operation in progress.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ba16d-627">此对象已关闭。</span><span class="sxs-lookup"><span data-stu-id="ba16d-627">This object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ba16d-628">未进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ba16d-628">Authentication has not occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public override bool CanRead { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRead" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.CanRead" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanRead As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRead { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRead : bool" Usage="System.Net.Security.SslStream.CanRead" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.CanRead</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ba16d-629">获取一个 <see cref="T:System.Boolean" /> 值，该值指示基础流是否可读。</span><span class="sxs-lookup"><span data-stu-id="ba16d-629">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream is readable.</span></span></summary>
        <value><span data-ttu-id="ba16d-630">如果已进行身份验证且基础流可读，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ba16d-630"><see langword="true" /> if authentication has occurred and the underlying stream is readable; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba16d-631">如果已成功进行身份验证, 则此属性返回通过对基础<xref:System.IO.Stream.CanRead%2A>流调用而返回的值。</span><span class="sxs-lookup"><span data-stu-id="ba16d-631">If successful authentication has occurred, this property returns the value returned by invoking <xref:System.IO.Stream.CanRead%2A> on the underlying stream.</span></span>  
  
 <span data-ttu-id="ba16d-632">基础流是在创建<xref:System.Net.Security.SslStream>类的实例时指定的。</span><span class="sxs-lookup"><span data-stu-id="ba16d-632">The underlying stream is specified when you create an instance of the <xref:System.Net.Security.SslStream> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba16d-633">下面的代码示例演示如何显示此属性的值。</span><span class="sxs-lookup"><span data-stu-id="ba16d-633">The following code example demonstrates displaying the value of this property.</span></span>  
  
[!code-cpp[NclSslServerSync#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#5)]
[!code-csharp[NclSslServerSync#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#5)]  
[!code-vb[NclSslServerSync#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclSslServerSync/VB/serversync.vb#5)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSeek">
      <MemberSignature Language="C#" Value="public override bool CanSeek { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSeek" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.CanSeek" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanSeek As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSeek { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanSeek : bool" Usage="System.Net.Security.SslStream.CanSeek" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ba16d-634">获取一个 <see cref="T:System.Boolean" /> 值，该值指示基础流是否可查找。</span><span class="sxs-lookup"><span data-stu-id="ba16d-634">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream is seekable.</span></span></summary>
        <value><span data-ttu-id="ba16d-635">此属性始终返回 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ba16d-635">This property always returns <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba16d-636">不要尝试设置<xref:System.Net.Security.SslStream>对象或其基础流的位置。</span><span class="sxs-lookup"><span data-stu-id="ba16d-636">Do not attempt to set the position of the <xref:System.Net.Security.SslStream> object or its underlying stream.</span></span>  
  
 <span data-ttu-id="ba16d-637">基础流是在创建<xref:System.Net.Security.SslStream>类的实例时指定的。</span><span class="sxs-lookup"><span data-stu-id="ba16d-637">The underlying stream is specified when you create an instance of the <xref:System.Net.Security.SslStream> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.Stream.CanSeek" />
        <altmember cref="P:System.Net.Security.SslStream.Position" />
      </Docs>
    </Member>
    <Member MemberName="CanTimeout">
      <MemberSignature Language="C#" Value="public override bool CanTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.CanTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanTimeout As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanTimeout { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanTimeout : bool" Usage="System.Net.Security.SslStream.CanTimeout" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.CanTimeout</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ba16d-638">获取一个 <see cref="T:System.Boolean" /> 值，该值指示基础流是否支持超时。</span><span class="sxs-lookup"><span data-stu-id="ba16d-638">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream supports time-outs.</span></span></summary>
        <value><span data-ttu-id="ba16d-639">如果基础流支持超时，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ba16d-639"><see langword="true" /> if the underlying stream supports time-outs; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba16d-640">此属性返回通过对基础流调用<xref:System.IO.Stream.CanTimeout%2A>而返回的值。</span><span class="sxs-lookup"><span data-stu-id="ba16d-640">This property returns the value returned by invoking <xref:System.IO.Stream.CanTimeout%2A> on the underlying stream.</span></span>  
  
 <span data-ttu-id="ba16d-641">基础流是在创建<xref:System.Net.Security.SslStream>类的实例时指定的。</span><span class="sxs-lookup"><span data-stu-id="ba16d-641">The underlying stream is specified when you create an instance of the <xref:System.Net.Security.SslStream> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba16d-642">下面的代码示例演示如何显示此属性的值。</span><span class="sxs-lookup"><span data-stu-id="ba16d-642">The following code example demonstrates displaying the value of this property.</span></span>  
  
[!code-cpp[NclSslServerSync#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#5)]
[!code-csharp[NclSslServerSync#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#5)]  
[!code-vb[NclSslServerSync#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclSslServerSync/VB/serversync.vb#5)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWrite">
      <MemberSignature Language="C#" Value="public override bool CanWrite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWrite" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.CanWrite" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanWrite As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanWrite { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanWrite : bool" Usage="System.Net.Security.SslStream.CanWrite" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.CanWrite</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ba16d-643">获取一个 <see cref="T:System.Boolean" /> 值，该值指示基础流是否可写。</span><span class="sxs-lookup"><span data-stu-id="ba16d-643">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream is writable.</span></span></summary>
        <value><span data-ttu-id="ba16d-644">如果已进行身份验证且基础流可写，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ba16d-644"><see langword="true" /> if authentication has occurred and the underlying stream is writable; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba16d-645">如果已成功进行身份验证, 则此属性返回通过对基础<xref:System.IO.Stream.CanWrite%2A>流调用而返回的值。</span><span class="sxs-lookup"><span data-stu-id="ba16d-645">If successful authentication has occurred, this property returns the value returned by invoking <xref:System.IO.Stream.CanWrite%2A> on the underlying stream.</span></span>  
  
 <span data-ttu-id="ba16d-646">基础流是在创建<xref:System.Net.Security.SslStream>类的实例时指定的。</span><span class="sxs-lookup"><span data-stu-id="ba16d-646">The underlying stream is specified when you create an instance of the <xref:System.Net.Security.SslStream> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba16d-647">下面的代码示例演示如何显示此属性的值。</span><span class="sxs-lookup"><span data-stu-id="ba16d-647">The following code example demonstrates displaying the value of this property.</span></span>  
  
[!code-cpp[NclSslServerSync#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#5)]
[!code-csharp[NclSslServerSync#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#5)]  
[!code-vb[NclSslServerSync#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclSslServerSync/VB/serversync.vb#5)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckCertRevocationStatus">
      <MemberSignature Language="C#" Value="public virtual bool CheckCertRevocationStatus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CheckCertRevocationStatus" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.CheckCertRevocationStatus" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CheckCertRevocationStatus As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CheckCertRevocationStatus { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CheckCertRevocationStatus : bool" Usage="System.Net.Security.SslStream.CheckCertRevocationStatus" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.CheckCertRevocationStatus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ba16d-648">获取一个 <see cref="T:System.Boolean" /> 值，该值指示在证书验证过程中是否检查证书吊销列表。</span><span class="sxs-lookup"><span data-stu-id="ba16d-648">Gets a <see cref="T:System.Boolean" /> value that indicates whether the certificate revocation list is checked during the certificate validation process.</span></span></summary>
        <value><span data-ttu-id="ba16d-649">如果检查证书吊销列表，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ba16d-649"><see langword="true" /> if the certificate revocation list is checked; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba16d-650">证书吊销列表包含颁发者已吊销的证书。</span><span class="sxs-lookup"><span data-stu-id="ba16d-650">The certificate revocation list contains certificates that have been revoked by the issuer.</span></span> <span data-ttu-id="ba16d-651">检查列表会对性能产生负面影响, 但会提高应用程序的安全性。</span><span class="sxs-lookup"><span data-stu-id="ba16d-651">Checking the list negatively impacts performance but improves application security.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba16d-652">下面的代码示例演示如何显示此属性的值。</span><span class="sxs-lookup"><span data-stu-id="ba16d-652">The following code example demonstrates displaying the value of this property.</span></span>  
  
[!code-cpp[NclSslServerSync#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#5)]
[!code-csharp[NclSslServerSync#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#5)]  
[!code-vb[NclSslServerSync#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclSslServerSync/VB/serversync.vb#5)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CipherAlgorithm">
      <MemberSignature Language="C#" Value="public virtual System.Security.Authentication.CipherAlgorithmType CipherAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Authentication.CipherAlgorithmType CipherAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.CipherAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CipherAlgorithm As CipherAlgorithmType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Authentication::CipherAlgorithmType CipherAlgorithm { System::Security::Authentication::CipherAlgorithmType get(); };" />
      <MemberSignature Language="F#" Value="member this.CipherAlgorithm : System.Security.Authentication.CipherAlgorithmType" Usage="System.Net.Security.SslStream.CipherAlgorithm" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.CipherAlgorithm</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Authentication.CipherAlgorithmType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ba16d-653">获取一个值，该值确定此 <see cref="T:System.Net.Security.SslStream" /> 使用的批量加密算法。</span><span class="sxs-lookup"><span data-stu-id="ba16d-653">Gets a value that identifies the bulk encryption algorithm used by this <see cref="T:System.Net.Security.SslStream" />.</span></span></summary>
        <value><span data-ttu-id="ba16d-654">一个值, 该值标识此<see cref="T:System.Net.Security.SslStream" />使用的批量加密算法。</span><span class="sxs-lookup"><span data-stu-id="ba16d-654">A value that identifies the bulk encryption algorithm used by this <see cref="T:System.Net.Security.SslStream" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba16d-655">当<xref:System.Net.Security.EncryptionPolicy.NoEncryption>枚举值<xref:System.Security.Authentication.CipherAlgorithmType.Null>用于构造<xref:System.Net.Security.SslStream.CipherAlgorithm%2A> 实例<xref:System.Net.Security.SslStream>时, 属性需要值。</span><span class="sxs-lookup"><span data-stu-id="ba16d-655">A value of <xref:System.Security.Authentication.CipherAlgorithmType.Null> is required for the <xref:System.Net.Security.SslStream.CipherAlgorithm%2A> property when the <xref:System.Net.Security.EncryptionPolicy.NoEncryption> enumeration value is used to construct a <xref:System.Net.Security.SslStream> instance.</span></span>  
  
 [!INCLUDE[winxpsvr](~/includes/winxpsvr-md.md)]<span data-ttu-id="ba16d-656">和[!INCLUDE[winxp](~/includes/winxp-md.md)]不支持此<xref:System.Security.Authentication.CipherAlgorithmType.Null>值。</span><span class="sxs-lookup"><span data-stu-id="ba16d-656">and [!INCLUDE[winxp](~/includes/winxp-md.md)] do not support the <xref:System.Security.Authentication.CipherAlgorithmType.Null> value.</span></span> <span data-ttu-id="ba16d-657">因此, 即使<xref:System.Security.Authentication.CipherAlgorithmType.Null>使用该值来<xref:System.Net.Security.SslStream>构造实例, <xref:System.Net.Security.EncryptionPolicy>属性也将为<xref:System.Security.Authentication.CipherAlgorithmType.None>。</span><span class="sxs-lookup"><span data-stu-id="ba16d-657">So even if the <xref:System.Security.Authentication.CipherAlgorithmType.Null> value is used to construct the <xref:System.Net.Security.SslStream> instance, the <xref:System.Net.Security.EncryptionPolicy> property will be <xref:System.Security.Authentication.CipherAlgorithmType.None>.</span></span> <span data-ttu-id="ba16d-658"><xref:System.Security.Authentication.CipherAlgorithmType.Null>该值仅在 Windows Vista 和更高版本上返回。</span><span class="sxs-lookup"><span data-stu-id="ba16d-658">The <xref:System.Security.Authentication.CipherAlgorithmType.Null> value is only returned on Windows Vista and later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba16d-659">下面的代码示例显示指定流的加密设置。</span><span class="sxs-lookup"><span data-stu-id="ba16d-659">The following code example displays the cryptography settings for the specified stream.</span></span>  
  
[!code-cpp[NclSslServerSync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#3)]
[!code-csharp[NclSslServerSync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#3)]  
[!code-vb[NclSslServerSync#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclSslServerSync/VB/serversync.vb#3)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ba16d-660"><see cref="P:System.Net.Security.SslStream.CipherAlgorithm" /> 属性是在身份验证过程未完成时访问的或者身份验证过程失败。</span><span class="sxs-lookup"><span data-stu-id="ba16d-660">The <see cref="P:System.Net.Security.SslStream.CipherAlgorithm" /> property was accessed before the completion of the authentication process or the authentication process failed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CipherStrength">
      <MemberSignature Language="C#" Value="public virtual int CipherStrength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CipherStrength" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.CipherStrength" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CipherStrength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int CipherStrength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.CipherStrength : int" Usage="System.Net.Security.SslStream.CipherStrength" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.CipherStrength</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ba16d-661">获取一个值，该值确定此 <see cref="T:System.Net.Security.SslStream" /> 使用的密码算法的强度。</span><span class="sxs-lookup"><span data-stu-id="ba16d-661">Gets a value that identifies the strength of the cipher algorithm used by this <see cref="T:System.Net.Security.SslStream" />.</span></span></summary>
        <value><span data-ttu-id="ba16d-662"><see cref="T:System.Int32" /> 值，该值指定算法的强度（以位为单位）。</span><span class="sxs-lookup"><span data-stu-id="ba16d-662">An <see cref="T:System.Int32" /> value that specifies the strength of the algorithm, in bits.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba16d-663">在进行身份验证之前, 此属性的值为零。</span><span class="sxs-lookup"><span data-stu-id="ba16d-663">The value of this property is zero until the authentication occurs.</span></span>  
  
 <span data-ttu-id="ba16d-664">此属性返回以下值之一:</span><span class="sxs-lookup"><span data-stu-id="ba16d-664">This property returns one of the following values:</span></span>  
  
-   <span data-ttu-id="ba16d-665">0</span><span class="sxs-lookup"><span data-stu-id="ba16d-665">0</span></span>  
  
-   <span data-ttu-id="ba16d-666">40</span><span class="sxs-lookup"><span data-stu-id="ba16d-666">40</span></span>  
  
-   <span data-ttu-id="ba16d-667">56</span><span class="sxs-lookup"><span data-stu-id="ba16d-667">56</span></span>  
  
-   <span data-ttu-id="ba16d-668">80</span><span class="sxs-lookup"><span data-stu-id="ba16d-668">80</span></span>  
  
-   <span data-ttu-id="ba16d-669">128</span><span class="sxs-lookup"><span data-stu-id="ba16d-669">128</span></span>  
  
-   <span data-ttu-id="ba16d-670">168</span><span class="sxs-lookup"><span data-stu-id="ba16d-670">168</span></span>  
  
-   <span data-ttu-id="ba16d-671">192</span><span class="sxs-lookup"><span data-stu-id="ba16d-671">192</span></span>  
  
-   <span data-ttu-id="ba16d-672">256</span><span class="sxs-lookup"><span data-stu-id="ba16d-672">256</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba16d-673">下面的代码示例显示指定流的加密设置。</span><span class="sxs-lookup"><span data-stu-id="ba16d-673">The following code example displays the cryptography settings for the specified stream.</span></span>  
  
[!code-cpp[NclSslServerSync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#3)]
[!code-csharp[NclSslServerSync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#3)]  
[!code-vb[NclSslServerSync#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclSslServerSync/VB/serversync.vb#3)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="sslStream.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="ba16d-674"><see langword="true" /> 表示释放托管资源和非托管资源；<see langword="false" /> 表示仅释放非托管资源。</span><span class="sxs-lookup"><span data-stu-id="ba16d-674"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="ba16d-675">释放由 <see cref="T:System.Net.Security.SslStream" /> 占用的非托管资源，还可以另外再释放托管资源。</span><span class="sxs-lookup"><span data-stu-id="ba16d-675">Releases the unmanaged resources used by the <see cref="T:System.Net.Security.SslStream" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba16d-676">此方法由公共`Dispose()`方法<xref:System.Object.Finalize%2A>和方法调用。</span><span class="sxs-lookup"><span data-stu-id="ba16d-676">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="ba16d-677">`Dispose()`调用受保护`Dispose(Boolean)`的方法, `disposing`并将参数`true`设置为。</span><span class="sxs-lookup"><span data-stu-id="ba16d-677">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="ba16d-678"><xref:System.Object.Finalize%2A>在`Dispose` 设置`disposing` 为`false`的情况调用。</span><span class="sxs-lookup"><span data-stu-id="ba16d-678"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="ba16d-679">当参数为 true 时, 此方法释放该<xref:System.Net.Security.SslStream>引用的任何托管对象所持有的所有资源。 `disposing`</span><span class="sxs-lookup"><span data-stu-id="ba16d-679">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.Net.Security.SslStream> references.</span></span> <span data-ttu-id="ba16d-680">此方法调用每个引用对象的 `Dispose()` 方法。</span><span class="sxs-lookup"><span data-stu-id="ba16d-680">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="ba16d-681">
            <see langword="Dispose" /> 可以由其他对象多次调用。</span><span class="sxs-lookup"><span data-stu-id="ba16d-681">
            <see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="ba16d-682">当重<see langword="Dispose(Boolean)" />写时, 请注意不要引用先前在<see langword="Dispose" />调用时已释放的对象。</span><span class="sxs-lookup"><span data-stu-id="ba16d-682">When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="ba16d-683">有关如何实现<see langword="Dispose(Boolean)" />的详细信息, 请参阅[实现 Dispose 方法](~/docs/standard/garbage-collection/implementing-dispose.md)。</span><span class="sxs-lookup"><span data-stu-id="ba16d-683">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
<span data-ttu-id="ba16d-684">有关<see langword="Dispose" /> 和<see cref="M:System.Object.Finalize" />的详细信息, 请参阅[清理非托管资源](~/docs/standard/garbage-collection/unmanaged.md)和[重写 Finalize 方法](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100))。</span><span class="sxs-lookup"><span data-stu-id="ba16d-684">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="DisposeAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.ValueTask DisposeAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Threading.Tasks.ValueTask DisposeAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.DisposeAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DisposeAsync () As ValueTask" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::ValueTask DisposeAsync();" />
      <MemberSignature Language="F#" Value="override this.DisposeAsync : unit -&gt; System.Threading.Tasks.ValueTask" Usage="sslStream.DisposeAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ba16d-685">异步释放 <see cref="T:System.Net.Security.SslStream" /> 使用的非托管资源和受管理资源。</span><span class="sxs-lookup"><span data-stu-id="ba16d-685">Asynchronously releases the unmanaged and managed resources used by the <see cref="T:System.Net.Security.SslStream" />.</span></span></summary>
        <returns><span data-ttu-id="ba16d-686">一个表示异步释放操作的任务。</span><span class="sxs-lookup"><span data-stu-id="ba16d-686">A task that represents the asynchronous dispose operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba16d-687">利用此方法, 您可以在不阻塞主线程的情况下执行占用大量资源的释放操作。</span><span class="sxs-lookup"><span data-stu-id="ba16d-687">This method enables you to perform a resource-intensive dispose operation without blocking the main thread.</span></span> 

 <span data-ttu-id="ba16d-688">如果<xref:System.Net.Security.AuthenticatedStream.LeaveInnerStreamOpen>为, 则此方法还会`false`释放内部流; 否则, 只刷新内部流。</span><span class="sxs-lookup"><span data-stu-id="ba16d-688">This method also disposes the inner stream when <xref:System.Net.Security.AuthenticatedStream.LeaveInnerStreamOpen> is `false`; otherwise, the inner stream is just flushed.</span></span>
 
 <span data-ttu-id="ba16d-689">调用`DisposeAsync`会允许出于其他目的重新<xref:System.Net.Security.SslStream>分配所使用的资源。</span><span class="sxs-lookup"><span data-stu-id="ba16d-689">Calling `DisposeAsync` allows the resources used by the <xref:System.Net.Security.SslStream> to be reallocated for other purposes.</span></span> <span data-ttu-id="ba16d-690">有关详细信息, 请参阅[清理非托管资源](~/docs/standard/garbage-collection/unmanaged.md)。</span><span class="sxs-lookup"><span data-stu-id="ba16d-690">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span>
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void EndAuthenticateAsClient (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndAuthenticateAsClient(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.EndAuthenticateAsClient(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndAuthenticateAsClient (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndAuthenticateAsClient(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="abstract member EndAuthenticateAsClient : IAsyncResult -&gt; unit&#xA;override this.EndAuthenticateAsClient : IAsyncResult -&gt; unit" Usage="sslStream.EndAuthenticateAsClient asyncResult" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.EndAuthenticateAsClient(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="ba16d-691">调用 <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" /> 后返回的 <see cref="T:System.IAsyncResult" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="ba16d-691">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" />.</span></span></param>
        <summary><span data-ttu-id="ba16d-692">结束通过以前调用 <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" /> 而启动的、处于挂起状态的异步服务器身份验证操作。</span><span class="sxs-lookup"><span data-stu-id="ba16d-692">Ends a pending asynchronous server authentication operation started with a previous call to <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba16d-693">如果操作尚未完成, 则此方法将一直阻止到该操作。</span><span class="sxs-lookup"><span data-stu-id="ba16d-693">If the operation has not completed, this method blocks until it does.</span></span> <span data-ttu-id="ba16d-694">当身份验证成功时, 必须检查<xref:System.Net.Security.SslStream.IsEncrypted%2A>和<xref:System.Net.Security.SslStream.IsSigned%2A>属性, 以确定所使用的安全<xref:System.Net.Security.SslStream>服务。</span><span class="sxs-lookup"><span data-stu-id="ba16d-694">When the authentication succeeds, you must check the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.SslStream>.</span></span> <span data-ttu-id="ba16d-695"><xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>检查属性以确定是否发生了相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="ba16d-695">Check the <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="ba16d-696">如果身份验证失败, 则会收到<xref:System.Security.Authentication.AuthenticationException>, 此<xref:System.Net.Security.SslStream>操作不再可用。</span><span class="sxs-lookup"><span data-stu-id="ba16d-696">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="ba16d-697">你应关闭此对象并删除对它的所有引用, 以便垃圾回收器可以收集它。</span><span class="sxs-lookup"><span data-stu-id="ba16d-697">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 <span data-ttu-id="ba16d-698">若要同步执行此操作, 请使用其中<xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>一种方法。</span><span class="sxs-lookup"><span data-stu-id="ba16d-698">To perform this operation synchronously, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ba16d-699"><paramref name="asyncResult" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ba16d-699"><paramref name="asyncResult" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ba16d-700"><paramref name="asyncResult" /> 并不是通过对 <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" /> 的调用创建的。</span><span class="sxs-lookup"><span data-stu-id="ba16d-700"><paramref name="asyncResult" /> was not created by a call to <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" />.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="ba16d-701">身份验证失败，并使此对象处于不可用的状态。</span><span class="sxs-lookup"><span data-stu-id="ba16d-701">The authentication failed and left this object in an unusable state.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ba16d-702">没有处于挂起状态的服务器身份验证要完成。</span><span class="sxs-lookup"><span data-stu-id="ba16d-702">There is no pending server authentication to complete.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void EndAuthenticateAsServer (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndAuthenticateAsServer(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.EndAuthenticateAsServer(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndAuthenticateAsServer (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndAuthenticateAsServer(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="abstract member EndAuthenticateAsServer : IAsyncResult -&gt; unit&#xA;override this.EndAuthenticateAsServer : IAsyncResult -&gt; unit" Usage="sslStream.EndAuthenticateAsServer asyncResult" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.EndAuthenticateAsServer(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="ba16d-703">调用 <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" /> 后返回的 <see cref="T:System.IAsyncResult" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="ba16d-703">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" />.</span></span></param>
        <summary><span data-ttu-id="ba16d-704">结束通过以前调用 <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" /> 而启动的、处于挂起状态的异步客户端身份验证操作。</span><span class="sxs-lookup"><span data-stu-id="ba16d-704">Ends a pending asynchronous client authentication operation started with a previous call to <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba16d-705">如果操作尚未完成, 则此方法将一直阻止到该操作。</span><span class="sxs-lookup"><span data-stu-id="ba16d-705">If the operation has not completed, this method blocks until it does.</span></span> <span data-ttu-id="ba16d-706">当身份验证成功时, 必须检查<xref:System.Net.Security.SslStream.IsEncrypted%2A>和<xref:System.Net.Security.SslStream.IsSigned%2A>属性, 以确定所使用的安全<xref:System.Net.Security.SslStream>服务。</span><span class="sxs-lookup"><span data-stu-id="ba16d-706">When the authentication succeeds, you must check the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.SslStream>.</span></span> <span data-ttu-id="ba16d-707"><xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>检查属性以确定是否发生了相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="ba16d-707">Check the <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="ba16d-708">如果身份验证失败, 则会收到<xref:System.Security.Authentication.AuthenticationException>, 此<xref:System.Net.Security.SslStream>操作不再可用。</span><span class="sxs-lookup"><span data-stu-id="ba16d-708">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="ba16d-709">你应关闭此对象并删除对它的所有引用, 以便垃圾回收器可以收集它。</span><span class="sxs-lookup"><span data-stu-id="ba16d-709">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 <span data-ttu-id="ba16d-710">若要同步执行此操作, 请使用<xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>方法之一。</span><span class="sxs-lookup"><span data-stu-id="ba16d-710">To perform this operation synchronously, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ba16d-711"><paramref name="asyncResult" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ba16d-711"><paramref name="asyncResult" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ba16d-712"><paramref name="asyncResult" /> 并不是通过对 <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" /> 的调用创建的。</span><span class="sxs-lookup"><span data-stu-id="ba16d-712"><paramref name="asyncResult" /> was not created by a call to <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" />.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="ba16d-713">身份验证失败，并使此对象处于不可用的状态。</span><span class="sxs-lookup"><span data-stu-id="ba16d-713">The authentication failed and left this object in an unusable state.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ba16d-714">没有需要完成的处于挂起状态的客户端身份验证。</span><span class="sxs-lookup"><span data-stu-id="ba16d-714">There is no pending client authentication to complete.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndRead">
      <MemberSignature Language="C#" Value="public override int EndRead (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 EndRead(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.EndRead(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EndRead (asyncResult As IAsyncResult) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int EndRead(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="override this.EndRead : IAsyncResult -&gt; int" Usage="sslStream.EndRead asyncResult" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.EndRead(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="ba16d-715">调用 <see cref="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> 后返回的 <see cref="T:System.IAsyncResult" /> 实例</span><span class="sxs-lookup"><span data-stu-id="ba16d-715">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /></span></span></param>
        <summary><span data-ttu-id="ba16d-716">结束通过以前调用 <see cref="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> 而启动的异步读操作。</span><span class="sxs-lookup"><span data-stu-id="ba16d-716">Ends an asynchronous read operation started with a previous call to <see cref="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span></span></summary>
        <returns><span data-ttu-id="ba16d-717"><see cref="T:System.Int32" /> 值，该值指定从基础流中读取的字节数。</span><span class="sxs-lookup"><span data-stu-id="ba16d-717">A <see cref="T:System.Int32" /> value that specifies the number of bytes read from the underlying stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba16d-718">如果操作尚未完成, 则此方法将一直阻止到该操作。</span><span class="sxs-lookup"><span data-stu-id="ba16d-718">If the operation has not completed, this method blocks until it does.</span></span>  
  
 <span data-ttu-id="ba16d-719">若要同步执行此操作, 请<xref:System.Net.Security.SslStream.Read%2A>使用方法。</span><span class="sxs-lookup"><span data-stu-id="ba16d-719">To perform this operation synchronously, use the <xref:System.Net.Security.SslStream.Read%2A> method.</span></span>  
  
 <span data-ttu-id="ba16d-720">在成功完成身份验证之前, 你无法调用此方法。</span><span class="sxs-lookup"><span data-stu-id="ba16d-720">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="ba16d-721">若要进行身份<xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>验证, 请调用一个、或<xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>、 <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="ba16d-721">To authenticate call one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, or <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba16d-722">下面的代码示例演示如何结束异步读取操作。</span><span class="sxs-lookup"><span data-stu-id="ba16d-722">The following code example demonstrates ending an asynchronous read operation.</span></span>  
  
 [!code-cpp[NclSslClientAsync#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslClientAsync/CPP/NclSslClientAsync.cpp#5)]
 [!code-csharp[NclSslClientAsync#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslClientAsync/CS/clientasync.cs#5)]  
 [!code-vb[NclSslClientAsync#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclSslClientAsync/VB/clientasync.vb#5)]  

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ba16d-723"><paramref name="asyncResult" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ba16d-723"><paramref name="asyncResult" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ba16d-724"><paramref name="asyncResult" /> 并不是通过对 <see cref="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> 的调用创建的。</span><span class="sxs-lookup"><span data-stu-id="ba16d-724"><paramref name="asyncResult" /> was not created by a call to <see cref="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ba16d-725">没有处于挂起状态的读操作要完成。</span><span class="sxs-lookup"><span data-stu-id="ba16d-725">There is no pending read operation to complete.</span></span>

<span data-ttu-id="ba16d-726">或</span><span class="sxs-lookup"><span data-stu-id="ba16d-726">-or-</span></span>

<span data-ttu-id="ba16d-727">未进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ba16d-727">Authentication has not occurred.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="ba16d-728">读操作失败。</span><span class="sxs-lookup"><span data-stu-id="ba16d-728">The read operation failed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndWrite">
      <MemberSignature Language="C#" Value="public override void EndWrite (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EndWrite(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.EndWrite(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub EndWrite (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void EndWrite(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="override this.EndWrite : IAsyncResult -&gt; unit" Usage="sslStream.EndWrite asyncResult" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.EndWrite(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="ba16d-729">调用 <see cref="M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> 后返回的 <see cref="T:System.IAsyncResult" /> 实例</span><span class="sxs-lookup"><span data-stu-id="ba16d-729">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /></span></span></param>
        <summary><span data-ttu-id="ba16d-730">结束通过以前调用 <see cref="M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> 而启动的异步写操作。</span><span class="sxs-lookup"><span data-stu-id="ba16d-730">Ends an asynchronous write operation started with a previous call to <see cref="M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba16d-731">如果操作尚未完成, 则此方法将一直阻止到该操作。</span><span class="sxs-lookup"><span data-stu-id="ba16d-731">If the operation has not completed, this method blocks until it does.</span></span>  
  
 <span data-ttu-id="ba16d-732">在成功通过身份验证后, 应用程序才能调用此方法。</span><span class="sxs-lookup"><span data-stu-id="ba16d-732">An application cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="ba16d-733">若要进行身份验证, 请<xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>调用一个<xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>、 <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>或<xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> 、方法。</span><span class="sxs-lookup"><span data-stu-id="ba16d-733">To authenticate, call one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, or <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
 <span data-ttu-id="ba16d-734">若要同步执行此操作, 请<xref:System.Net.Security.SslStream.Write%2A>使用方法。</span><span class="sxs-lookup"><span data-stu-id="ba16d-734">To perform this operation synchronously, use the <xref:System.Net.Security.SslStream.Write%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba16d-735">下面的代码示例演示如何结束异步写入操作。</span><span class="sxs-lookup"><span data-stu-id="ba16d-735">The following code example demonstrates ending an asynchronous write operation.</span></span>  
  
 [!code-cpp[NclSslServerAsync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerAsync/CPP/NclSslServerAsync.cpp#4)]
 [!code-csharp[NclSslServerAsync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerAsync/CS/serverasync.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ba16d-736"><paramref name="asyncResult" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ba16d-736"><paramref name="asyncResult" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ba16d-737"><paramref name="asyncResult" /> 并不是通过对 <see cref="M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> 的调用创建的。</span><span class="sxs-lookup"><span data-stu-id="ba16d-737"><paramref name="asyncResult" /> was not created by a call to <see cref="M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ba16d-738">没有处于挂起状态的写操作要完成。</span><span class="sxs-lookup"><span data-stu-id="ba16d-738">There is no pending write operation to complete.</span></span>

<span data-ttu-id="ba16d-739">或</span><span class="sxs-lookup"><span data-stu-id="ba16d-739">-or-</span></span>

<span data-ttu-id="ba16d-740">未进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ba16d-740">Authentication has not occurred.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="ba16d-741">写操作失败。</span><span class="sxs-lookup"><span data-stu-id="ba16d-741">The write operation failed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="override this.Flush : unit -&gt; unit" Usage="sslStream.Flush " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.Flush</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ba16d-742">导致所有缓冲数据都要写入基础设备。</span><span class="sxs-lookup"><span data-stu-id="ba16d-742">Causes any buffered data to be written to the underlying device.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba16d-743">此方法对<xref:System.IO.Stream.Flush%2A>基础流调用。</span><span class="sxs-lookup"><span data-stu-id="ba16d-743">This method invokes <xref:System.IO.Stream.Flush%2A> on the underlying stream.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba16d-744">下面的代码示例演示如何调用此方法。</span><span class="sxs-lookup"><span data-stu-id="ba16d-744">The following code example demonstrates calling this method.</span></span>  
  
 [!code-cpp[NclSslClientSync#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslClientSync/CPP/clientsync.cpp#5)]
 [!code-csharp[NclSslClientSync#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslClientSync/CS/clientsync.cs#5)]  
 [!code-vb[NclSslClientSync#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclSslClientSync/VB/clientsync.vb#5)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FlushAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task FlushAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task FlushAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.FlushAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ FlushAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.FlushAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="sslStream.FlushAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HashAlgorithm">
      <MemberSignature Language="C#" Value="public virtual System.Security.Authentication.HashAlgorithmType HashAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Authentication.HashAlgorithmType HashAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.HashAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HashAlgorithm As HashAlgorithmType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Authentication::HashAlgorithmType HashAlgorithm { System::Security::Authentication::HashAlgorithmType get(); };" />
      <MemberSignature Language="F#" Value="member this.HashAlgorithm : System.Security.Authentication.HashAlgorithmType" Usage="System.Net.Security.SslStream.HashAlgorithm" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.HashAlgorithm</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Authentication.HashAlgorithmType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ba16d-745">获取用于生成消息身份验证代码 (MAC) 的算法。</span><span class="sxs-lookup"><span data-stu-id="ba16d-745">Gets the algorithm used for generating message authentication codes (MACs).</span></span></summary>
        <value><span data-ttu-id="ba16d-746">用于生成消息身份验证代码 (Mac) 的算法。</span><span class="sxs-lookup"><span data-stu-id="ba16d-746">The algorithm used for generating message authentication codes (MACs).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba16d-747">消息身份验证算法生成用于检测篡改和伪造的消息哈希和签名。</span><span class="sxs-lookup"><span data-stu-id="ba16d-747">Message authentication algorithms generate message hashes and signatures used to detect tampering and forgery.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba16d-748">下面的代码示例显示指定流的加密设置。</span><span class="sxs-lookup"><span data-stu-id="ba16d-748">The following code example displays the cryptography settings for the specified stream.</span></span>  
  
[!code-cpp[NclSslServerSync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#3)]
[!code-csharp[NclSslServerSync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#3)]  
[!code-vb[NclSslServerSync#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclSslServerSync/VB/serversync.vb#3)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ba16d-749"><see cref="P:System.Net.Security.SslStream.HashAlgorithm" /> 属性是在身份验证过程未完成时访问的或者身份验证过程失败。</span><span class="sxs-lookup"><span data-stu-id="ba16d-749">The <see cref="P:System.Net.Security.SslStream.HashAlgorithm" /> property was accessed before the completion of the authentication process or the authentication process failed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="HashStrength">
      <MemberSignature Language="C#" Value="public virtual int HashStrength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 HashStrength" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.HashStrength" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HashStrength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int HashStrength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.HashStrength : int" Usage="System.Net.Security.SslStream.HashStrength" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.HashStrength</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ba16d-750">获取一个值，该值标识此实例使用的哈希算法的强度。</span><span class="sxs-lookup"><span data-stu-id="ba16d-750">Gets a value that identifies the strength of the hash algorithm used by this instance.</span></span></summary>
        <value><span data-ttu-id="ba16d-751">一个 <see cref="T:System.Int32" /> 值，指定 <see cref="T:System.Security.Authentication.HashAlgorithmType" /> 算法的强度（以位为单位）。</span><span class="sxs-lookup"><span data-stu-id="ba16d-751">An <see cref="T:System.Int32" /> value that specifies the strength of the <see cref="T:System.Security.Authentication.HashAlgorithmType" /> algorithm, in bits.</span></span> <span data-ttu-id="ba16d-752">有效值为 128 或 160。</span><span class="sxs-lookup"><span data-stu-id="ba16d-752">Valid values are 128 or 160.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba16d-753">在进行身份验证之前, 此属性的值为零。</span><span class="sxs-lookup"><span data-stu-id="ba16d-753">The value of this property is zero until the authentication occurs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba16d-754">下面的代码示例显示指定流的加密设置。</span><span class="sxs-lookup"><span data-stu-id="ba16d-754">The following code example displays the cryptography settings for the specified stream.</span></span>  
  
[!code-cpp[NclSslServerSync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#3)]
[!code-csharp[NclSslServerSync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#3)]  
[!code-vb[NclSslServerSync#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclSslServerSync/VB/serversync.vb#3)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAuthenticated">
      <MemberSignature Language="C#" Value="public override bool IsAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAuthenticated" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.IsAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsAuthenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsAuthenticated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAuthenticated : bool" Usage="System.Net.Security.SslStream.IsAuthenticated" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.IsAuthenticated</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ba16d-755">获取一个 <see cref="T:System.Boolean" /> 值，该值指示身份验证是否成功。</span><span class="sxs-lookup"><span data-stu-id="ba16d-755">Gets a <see cref="T:System.Boolean" /> value that indicates whether authentication was successful.</span></span></summary>
        <value><span data-ttu-id="ba16d-756">如果身份验证成功，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ba16d-756"><see langword="true" /> if successful authentication occurred; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba16d-757">客户端通过调用<xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>或<xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>方法进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ba16d-757">Clients authenticate by calling the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> or <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A> methods.</span></span> <span data-ttu-id="ba16d-758">服务器通过调用<xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>或<xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>方法进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ba16d-758">Servers authenticate by calling the <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> or <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba16d-759">下面的代码示例演示如何显示此属性的值。</span><span class="sxs-lookup"><span data-stu-id="ba16d-759">The following code example demonstrates displaying the value of this property.</span></span>  
  
[!code-cpp[NclSslServerSync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#4)]
[!code-csharp[NclSslServerSync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#4)]  
[!code-vb[NclSslServerSync#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclSslServerSync/VB/serversync.vb#4)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEncrypted">
      <MemberSignature Language="C#" Value="public override bool IsEncrypted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEncrypted" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.IsEncrypted" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsEncrypted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsEncrypted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEncrypted : bool" Usage="System.Net.Security.SslStream.IsEncrypted" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.IsEncrypted</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ba16d-760">获取一个 <see cref="T:System.Boolean" /> 值，该值指示此 <see cref="T:System.Net.Security.SslStream" /> 是否使用数据加密。</span><span class="sxs-lookup"><span data-stu-id="ba16d-760">Gets a <see cref="T:System.Boolean" /> value that indicates whether this <see cref="T:System.Net.Security.SslStream" /> uses data encryption.</span></span></summary>
        <value><span data-ttu-id="ba16d-761">如果在通过网络传输数据前将其加密，并在数据到达远程终结点后将其解密，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ba16d-761"><see langword="true" /> if data is encrypted before being transmitted over the network and decrypted when it reaches the remote endpoint; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba16d-762">加密有助于保护数据的隐私性, 这有助于确保在数据传输过程中, 第三方无法对数据进行解密。</span><span class="sxs-lookup"><span data-stu-id="ba16d-762">Encryption helps to protect the privacy of the data, namely it helps to ensure that while data is in transit, it cannot be deciphered by third parties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba16d-763">下面的代码示例演示如何显示此属性的值。</span><span class="sxs-lookup"><span data-stu-id="ba16d-763">The following code example demonstrates displaying the value of this property.</span></span>  
  
[!code-cpp[NclSslServerSync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#4)]
[!code-csharp[NclSslServerSync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#4)]  
[!code-vb[NclSslServerSync#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclSslServerSync/VB/serversync.vb#4)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMutuallyAuthenticated">
      <MemberSignature Language="C#" Value="public override bool IsMutuallyAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMutuallyAuthenticated" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.IsMutuallyAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsMutuallyAuthenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsMutuallyAuthenticated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMutuallyAuthenticated : bool" Usage="System.Net.Security.SslStream.IsMutuallyAuthenticated" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.IsMutuallyAuthenticated</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ba16d-764">获取一个 <see cref="T:System.Boolean" /> 值，该值指示服务器和客户端是否均已进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ba16d-764">Gets a <see cref="T:System.Boolean" /> value that indicates whether both server and client have been authenticated.</span></span></summary>
        <value><span data-ttu-id="ba16d-765">如果服务器已经过身份验证，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ba16d-765"><see langword="true" /> if the server has been authenticated; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba16d-766">当服务器希望客户端提供用于身份验证的证书时, 将由服务器指定相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="ba16d-766">Mutual authentication is specified by the server when the server wants the client to provide a certificate for authentication.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba16d-767">下面的代码示例演示如何显示此属性的值。</span><span class="sxs-lookup"><span data-stu-id="ba16d-767">The following code example demonstrates displaying the value of this property.</span></span>  
  
[!code-cpp[NclSslServerSync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#4)]
[!code-csharp[NclSslServerSync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#4)]  
[!code-vb[NclSslServerSync#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclSslServerSync/VB/serversync.vb#4)]
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Net.Security.SslStream.AuthenticateAsServer" />
        <altmember cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" />
      </Docs>
    </Member>
    <Member MemberName="IsServer">
      <MemberSignature Language="C#" Value="public override bool IsServer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsServer" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.IsServer" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsServer As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsServer { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsServer : bool" Usage="System.Net.Security.SslStream.IsServer" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.IsServer</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ba16d-768">获取一个 <see cref="T:System.Boolean" /> 值，该值指示此 <see cref="T:System.Net.Security.SslStream" /> 使用的连接的本地端是否作为服务器进行了身份验证。</span><span class="sxs-lookup"><span data-stu-id="ba16d-768">Gets a <see cref="T:System.Boolean" /> value that indicates whether the local side of the connection used by this <see cref="T:System.Net.Security.SslStream" /> was authenticated as the server.</span></span></summary>
        <value><span data-ttu-id="ba16d-769">如果本地终结点作为经过身份验证的连接的服务器端成功地进行了身份验证，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ba16d-769"><see langword="true" /> if the local endpoint was successfully authenticated as the server side of the authenticated connection; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba16d-770">如果身份验证失败或未发生, 则此属性`false`返回。</span><span class="sxs-lookup"><span data-stu-id="ba16d-770">If authentication failed or did not occur, this property returns `false`.</span></span>  
  
 <span data-ttu-id="ba16d-771">若要作为服务器进行身份验证, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>请<xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>调用或方法。</span><span class="sxs-lookup"><span data-stu-id="ba16d-771">To authenticate as the server, call the <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> or <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba16d-772">下面的代码示例演示如何显示此属性的值。</span><span class="sxs-lookup"><span data-stu-id="ba16d-772">The following code example demonstrates displaying the value of this property.</span></span>  
  
[!code-cpp[NclSslServerSync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#4)]
[!code-csharp[NclSslServerSync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#4)]  
[!code-vb[NclSslServerSync#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclSslServerSync/VB/serversync.vb#4)]
 
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSigned">
      <MemberSignature Language="C#" Value="public override bool IsSigned { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSigned" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.IsSigned" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsSigned As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSigned { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSigned : bool" Usage="System.Net.Security.SslStream.IsSigned" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.IsSigned</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ba16d-773">获取一个 <see cref="T:System.Boolean" /> 值，该值指示使用此流发送的数据是否进行签名。</span><span class="sxs-lookup"><span data-stu-id="ba16d-773">Gets a <see cref="T:System.Boolean" /> value that indicates whether the data sent using this stream is signed.</span></span></summary>
        <value><span data-ttu-id="ba16d-774">如果在传输数据前对其签名，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ba16d-774"><see langword="true" /> if the data is signed before being transmitted; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba16d-775">数据签名有助于保护数据的完整性, 也就是说, 它可帮助接收方确定数据在传输过程中是否已被篡改。</span><span class="sxs-lookup"><span data-stu-id="ba16d-775">Data signing helps to protect the integrity of the data, namely it helps the recipient determine whether the data has been tampered with while in transit.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba16d-776">下面的代码示例演示如何显示此属性的值。</span><span class="sxs-lookup"><span data-stu-id="ba16d-776">The following code example demonstrates displaying the value of this property.</span></span>  
  
[!code-cpp[NclSslServerSync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#4)]
[!code-csharp[NclSslServerSync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#4)]  
[!code-vb[NclSslServerSync#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclSslServerSync/VB/serversync.vb#4)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyExchangeAlgorithm">
      <MemberSignature Language="C#" Value="public virtual System.Security.Authentication.ExchangeAlgorithmType KeyExchangeAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Authentication.ExchangeAlgorithmType KeyExchangeAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.KeyExchangeAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property KeyExchangeAlgorithm As ExchangeAlgorithmType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Authentication::ExchangeAlgorithmType KeyExchangeAlgorithm { System::Security::Authentication::ExchangeAlgorithmType get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyExchangeAlgorithm : System.Security.Authentication.ExchangeAlgorithmType" Usage="System.Net.Security.SslStream.KeyExchangeAlgorithm" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.KeyExchangeAlgorithm</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Authentication.ExchangeAlgorithmType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ba16d-777">获取此 <see cref="T:System.Net.Security.SslStream" /> 使用的密钥交换算法。</span><span class="sxs-lookup"><span data-stu-id="ba16d-777">Gets the key exchange algorithm used by this <see cref="T:System.Net.Security.SslStream" />.</span></span></summary>
        <value><span data-ttu-id="ba16d-778">一个 <see cref="T:System.Security.Authentication.ExchangeAlgorithmType" /> 值。</span><span class="sxs-lookup"><span data-stu-id="ba16d-778">An <see cref="T:System.Security.Authentication.ExchangeAlgorithmType" /> value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba16d-779">此属性的值为, <xref:System.Security.Authentication.ExchangeAlgorithmType.None>直到进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ba16d-779">The value of this property is <xref:System.Security.Authentication.ExchangeAlgorithmType.None> until the authentication occurs.</span></span>  
  
 <span data-ttu-id="ba16d-780">密钥交换算法可保护用于生成共享密钥的信息。</span><span class="sxs-lookup"><span data-stu-id="ba16d-780">The key exchange algorithm protects information used to generate shared keys.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba16d-781">下面的代码示例显示指定流的加密设置。</span><span class="sxs-lookup"><span data-stu-id="ba16d-781">The following code example displays the cryptography settings for the specified stream.</span></span>  
  
[!code-cpp[NclSslServerSync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#3)]
[!code-csharp[NclSslServerSync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#3)]  
[!code-vb[NclSslServerSync#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclSslServerSync/VB/serversync.vb#3)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyExchangeStrength">
      <MemberSignature Language="C#" Value="public virtual int KeyExchangeStrength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 KeyExchangeStrength" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.KeyExchangeStrength" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property KeyExchangeStrength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int KeyExchangeStrength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyExchangeStrength : int" Usage="System.Net.Security.SslStream.KeyExchangeStrength" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.KeyExchangeStrength</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ba16d-782">获取一个值，该值指示此实例使用的密钥交换算法的强度。</span><span class="sxs-lookup"><span data-stu-id="ba16d-782">Gets a value that identifies the strength of the key exchange algorithm used by this instance.</span></span></summary>
        <value><span data-ttu-id="ba16d-783">一个 <see cref="T:System.Int32" /> 值，指定 <see cref="T:System.Security.Authentication.ExchangeAlgorithmType" /> 算法的强度（以位为单位）。</span><span class="sxs-lookup"><span data-stu-id="ba16d-783">An <see cref="T:System.Int32" /> value that specifies the strength of the <see cref="T:System.Security.Authentication.ExchangeAlgorithmType" /> algorithm, in bits.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba16d-784">在进行身份验证之前, 此属性的值为零。</span><span class="sxs-lookup"><span data-stu-id="ba16d-784">The value of this property is zero until the authentication occurs.</span></span>  
  
 <span data-ttu-id="ba16d-785">在常见方案中, 此属性的值为下列值之一:</span><span class="sxs-lookup"><span data-stu-id="ba16d-785">In common scenarios, the value of this property is one of the following:</span></span>  
  
-   <span data-ttu-id="ba16d-786">512</span><span class="sxs-lookup"><span data-stu-id="ba16d-786">512</span></span>  
  
-   <span data-ttu-id="ba16d-787">768</span><span class="sxs-lookup"><span data-stu-id="ba16d-787">768</span></span>  
  
-   <span data-ttu-id="ba16d-788">1024</span><span class="sxs-lookup"><span data-stu-id="ba16d-788">1024</span></span>  
  
-   <span data-ttu-id="ba16d-789">2048</span><span class="sxs-lookup"><span data-stu-id="ba16d-789">2048</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba16d-790">下面的代码示例显示指定流的加密设置。</span><span class="sxs-lookup"><span data-stu-id="ba16d-790">The following code example displays the cryptography settings for the specified stream.</span></span>  
  
[!code-cpp[NclSslServerSync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#3)]
[!code-csharp[NclSslServerSync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#3)]  
[!code-vb[NclSslServerSync#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclSslServerSync/VB/serversync.vb#3)]  

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public override long Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Length" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.Length" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Length As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Length { long get(); };" />
      <MemberSignature Language="F#" Value="member this.Length : int64" Usage="System.Net.Security.SslStream.Length" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.Length</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ba16d-791">获取基础流的长度。</span><span class="sxs-lookup"><span data-stu-id="ba16d-791">Gets the length of the underlying stream.</span></span></summary>
        <value><span data-ttu-id="ba16d-792">基础流的长度。</span><span class="sxs-lookup"><span data-stu-id="ba16d-792">The length of the underlying stream.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba16d-793">此属性返回通过对基础流调用<xref:System.IO.Stream.Length%2A>而返回的值。</span><span class="sxs-lookup"><span data-stu-id="ba16d-793">This property returns the value returned by invoking <xref:System.IO.Stream.Length%2A> on the underlying stream.</span></span> <span data-ttu-id="ba16d-794">如果基础流不可查找, 则此方法通常会引发异常。</span><span class="sxs-lookup"><span data-stu-id="ba16d-794">If the underlying stream is not seekable, this method typically throws an exception.</span></span> <span data-ttu-id="ba16d-795">基础流的运行时类型确定所引发的异常的运行时类型。</span><span class="sxs-lookup"><span data-stu-id="ba16d-795">The run-time type of the underlying stream determines the run-time type of the exception that is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ba16d-796">当基础流为 <see cref="T:System.Net.Sockets.NetworkStream" /> 时，不支持获取此属性的值。</span><span class="sxs-lookup"><span data-stu-id="ba16d-796">Getting the value of this property is not supported when the underlying stream is a <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LocalCertificate">
      <MemberSignature Language="C#" Value="public virtual System.Security.Cryptography.X509Certificates.X509Certificate LocalCertificate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509Certificate LocalCertificate" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.LocalCertificate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property LocalCertificate As X509Certificate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Cryptography::X509Certificates::X509Certificate ^ LocalCertificate { System::Security::Cryptography::X509Certificates::X509Certificate ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LocalCertificate : System.Security.Cryptography.X509Certificates.X509Certificate" Usage="System.Net.Security.SslStream.LocalCertificate" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.LocalCertificate</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509Certificate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ba16d-797">获取用于对本地终结点进行身份验证的证书。</span><span class="sxs-lookup"><span data-stu-id="ba16d-797">Gets the certificate used to authenticate the local endpoint.</span></span></summary>
        <value><span data-ttu-id="ba16d-798">一个 X509Certificate 对象，它表示为身份验证提供的证书；或者，如果没有提供证书，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ba16d-798">An X509Certificate object that represents the certificate supplied for authentication or <see langword="null" /> if no certificate was supplied.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ba16d-799">下面的代码示例演示如何显示此属性返回的证书。</span><span class="sxs-lookup"><span data-stu-id="ba16d-799">The following code example demonstrates displaying the certificate returned by this property.</span></span>  
  
[!code-cpp[NclSslServerSync#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#6)]
[!code-csharp[NclSslServerSync#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#6)]  
[!code-vb[NclSslServerSync#6](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclSslServerSync/VB/serversync.vb#6)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ba16d-800">身份验证失败或没有进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ba16d-800">Authentication failed or has not occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="NegotiatedApplicationProtocol">
      <MemberSignature Language="C#" Value="public System.Net.Security.SslApplicationProtocol NegotiatedApplicationProtocol { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Security.SslApplicationProtocol NegotiatedApplicationProtocol" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.NegotiatedApplicationProtocol" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NegotiatedApplicationProtocol As SslApplicationProtocol" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Security::SslApplicationProtocol NegotiatedApplicationProtocol { System::Net::Security::SslApplicationProtocol get(); };" />
      <MemberSignature Language="F#" Value="member this.NegotiatedApplicationProtocol : System.Net.Security.SslApplicationProtocol" Usage="System.Net.Security.SslStream.NegotiatedApplicationProtocol" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Security.SslApplicationProtocol</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NegotiatedCipherSuite">
      <MemberSignature Language="C#" Value="public virtual System.Net.Security.TlsCipherSuite NegotiatedCipherSuite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Security.TlsCipherSuite NegotiatedCipherSuite" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.NegotiatedCipherSuite" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property NegotiatedCipherSuite As TlsCipherSuite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::Security::TlsCipherSuite NegotiatedCipherSuite { System::Net::Security::TlsCipherSuite get(); };" />
      <MemberSignature Language="F#" Value="member this.NegotiatedCipherSuite : System.Net.Security.TlsCipherSuite" Usage="System.Net.Security.SslStream.NegotiatedCipherSuite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Security.TlsCipherSuite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ba16d-801">获取此连接的已协商密码套件。</span><span class="sxs-lookup"><span data-stu-id="ba16d-801">Gets the cipher suite which was negotiated for this connection.</span></span></summary>
        <value><span data-ttu-id="ba16d-802">枚举值之一, 用于标识在此连接上协商的密码套件。</span><span class="sxs-lookup"><span data-stu-id="ba16d-802">One of the enumeration values that identifies the cipher suite which was negotiated for this connection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks

<span data-ttu-id="ba16d-803">此属性获取将由基础 SSL/TLS 实现在客户端和服务器之间的通信中使用的密码套件。</span><span class="sxs-lookup"><span data-stu-id="ba16d-803">This property gets the cipher suite that is going to be used in the communication between a client and server by the underlying SSL/TLS implementation.</span></span> <span data-ttu-id="ba16d-804">只有在成功调用<xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>或<xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>之后, 才能使用此方法。</span><span class="sxs-lookup"><span data-stu-id="ba16d-804">It is only available after a successful call to <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> or <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ba16d-805">该属性是在身份验证过程未完成时访问的或者身份验证过程失败。</span><span class="sxs-lookup"><span data-stu-id="ba16d-805">The property was accessed before the completion of the authentication process or the authentication process failed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public override long Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Position" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.Position" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Position As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Position { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.Position : int64 with get, set" Usage="System.Net.Security.SslStream.Position" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ba16d-806">获取或设置基础流中的当前位置。</span><span class="sxs-lookup"><span data-stu-id="ba16d-806">Gets or sets the current position in the underlying stream.</span></span></summary>
        <value><span data-ttu-id="ba16d-807">基础流中的当前位置。</span><span class="sxs-lookup"><span data-stu-id="ba16d-807">The current position in the underlying stream.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba16d-808">此属性返回通过对基础流调用<xref:System.IO.Stream.Position%2A>而返回的值。</span><span class="sxs-lookup"><span data-stu-id="ba16d-808">This property returns the value returned by invoking <xref:System.IO.Stream.Position%2A> on the underlying stream.</span></span> <span data-ttu-id="ba16d-809">如果基础流不可查找, 则此方法通常会引发异常。</span><span class="sxs-lookup"><span data-stu-id="ba16d-809">If the underlying stream is not seekable, this method typically throws an exception.</span></span> <span data-ttu-id="ba16d-810">基础流的运行时类型确定所引发的异常的运行时类型。</span><span class="sxs-lookup"><span data-stu-id="ba16d-810">The run-time type of the underlying stream determines the run-time type of the exception that is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ba16d-811">不支持设置此属性。</span><span class="sxs-lookup"><span data-stu-id="ba16d-811">Setting this property is not supported.</span></span>  
  
<span data-ttu-id="ba16d-812">或</span><span class="sxs-lookup"><span data-stu-id="ba16d-812">-or-</span></span> 
<span data-ttu-id="ba16d-813">当基础流为 <see cref="T:System.Net.Sockets.NetworkStream" /> 时，不支持获取此属性的值。</span><span class="sxs-lookup"><span data-stu-id="ba16d-813">Getting the value of this property is not supported when the underlying stream is a <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.Read(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read (buffer As Byte(), offset As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="override this.Read : byte[] * int * int -&gt; int" Usage="sslStream.Read (buffer, offset, count)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.Read(System.Byte[],System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="ba16d-814">一个 <see cref="T:System.Byte" /> 数组，该数组接收从此流读取的字节。</span><span class="sxs-lookup"><span data-stu-id="ba16d-814">A <see cref="T:System.Byte" /> array that receives the bytes read from this stream.</span></span></param>
        <param name="offset"><span data-ttu-id="ba16d-815"><see cref="T:System.Int32" />，它包含 <paramref name="buffer" /> 中从零开始的位置，从此处开始存储从此流读取的数据。</span><span class="sxs-lookup"><span data-stu-id="ba16d-815">A <see cref="T:System.Int32" /> that contains the zero-based location in <paramref name="buffer" /> at which to begin storing the data read from this stream.</span></span></param>
        <param name="count"><span data-ttu-id="ba16d-816"><see cref="T:System.Int32" />，包含要从此流读取的最大字节数。</span><span class="sxs-lookup"><span data-stu-id="ba16d-816">A <see cref="T:System.Int32" /> that contains the maximum number of bytes to read from this stream.</span></span></param>
        <summary><span data-ttu-id="ba16d-817">读取此流中的数据并将其存储在指定的数组中。</span><span class="sxs-lookup"><span data-stu-id="ba16d-817">Reads data from this stream and stores it in the specified array.</span></span></summary>
        <returns><span data-ttu-id="ba16d-818"><see cref="T:System.Int32" /> 值，该值指定读取的字节数。</span><span class="sxs-lookup"><span data-stu-id="ba16d-818">A <see cref="T:System.Int32" /> value that specifies the number of bytes read.</span></span> <span data-ttu-id="ba16d-819">如果再也没有要读取的数据，将返回 0。</span><span class="sxs-lookup"><span data-stu-id="ba16d-819">When there is no more data to be read, returns 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba16d-820">方法从流中读取最`count`多字节, 并将它们存储在`buffer`开始处`offset`。</span><span class="sxs-lookup"><span data-stu-id="ba16d-820">The method reads a maximum of `count` bytes from the stream and stores them in `buffer` beginning at `offset`.</span></span> <span data-ttu-id="ba16d-821">你不能同时执行多个读取操作。</span><span class="sxs-lookup"><span data-stu-id="ba16d-821">You cannot perform multiple simultaneous read operations.</span></span>  
  
 <span data-ttu-id="ba16d-822">在成功完成身份验证之前, 你无法调用此方法。</span><span class="sxs-lookup"><span data-stu-id="ba16d-822">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="ba16d-823">若要进行身份<xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>验证, 请调用一个、或<xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>、 <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="ba16d-823">To authenticate call one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, or <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
 <span data-ttu-id="ba16d-824">若要以异步方式执行此操作<xref:System.Net.Security.SslStream.BeginRead%2A> , 请使用方法。</span><span class="sxs-lookup"><span data-stu-id="ba16d-824">To perform this operation asynchronously, use the <xref:System.Net.Security.SslStream.BeginRead%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba16d-825">下面的代码示例演示如何从中<xref:System.Net.Security.SslStream>进行读取。</span><span class="sxs-lookup"><span data-stu-id="ba16d-825">The following code example demonstrates reading from an <xref:System.Net.Security.SslStream>.</span></span>  
  
 [!code-cpp[NclSslClientSync#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslClientSync/CPP/clientsync.cpp#6)]
 [!code-csharp[NclSslClientSync#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslClientSync/CS/clientsync.cs#6)]  
 [!code-vb[NclSslClientSync#6](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclSslClientSync/VB/clientsync.vb#6)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ba16d-826"><paramref name="buffer" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ba16d-826"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ba16d-827"><paramref name="offset" />
          <paramref name="&lt;" />
          <paramref name="0" />。</span><span class="sxs-lookup"><span data-stu-id="ba16d-827"><paramref name="offset" />
          <paramref name="&lt;" />
          <paramref name="0" />.</span></span>  
  
 <span data-ttu-id="ba16d-828"><paramref name="-or-" /><paramref name="offset" /> &gt; <paramref name="buffer" /> 的长度。</span><span class="sxs-lookup"><span data-stu-id="ba16d-828"><paramref name="-or-" /><paramref name="offset" /> &gt; the length of <paramref name="buffer" />.</span></span>  
  
<span data-ttu-id="ba16d-829">或</span><span class="sxs-lookup"><span data-stu-id="ba16d-829">-or-</span></span> 
 <span data-ttu-id="ba16d-830"><paramref name="offset" /> + count &gt; <paramref name="buffer" /> 的长度。</span><span class="sxs-lookup"><span data-stu-id="ba16d-830"><paramref name="offset" /> + count &gt; the length of <paramref name="buffer" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="ba16d-831">读操作失败。</span><span class="sxs-lookup"><span data-stu-id="ba16d-831">The read operation failed.</span></span> <span data-ttu-id="ba16d-832">检查内部异常（如果存在）以确定失败的原因。</span><span class="sxs-lookup"><span data-stu-id="ba16d-832">Check the inner exception, if present to determine the cause of the failure.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ba16d-833">已存在一个正在执行的读取操作。</span><span class="sxs-lookup"><span data-stu-id="ba16d-833">There is already a read operation in progress.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ba16d-834">此对象已关闭。</span><span class="sxs-lookup"><span data-stu-id="ba16d-834">This object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ba16d-835">未进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ba16d-835">Authentication has not occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.ValueTask&lt;int&gt; ReadAsync (Memory&lt;byte&gt; buffer, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;int32&gt; ReadAsync(valuetype System.Memory`1&lt;unsigned int8&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.ReadAsync(System.Memory{System.Byte},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="override this.ReadAsync : Memory&lt;byte&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;int&gt;" Usage="sslStream.ReadAsync (buffer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Memory&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="ba16d-836">接收从此流读取的字节的缓冲区。</span><span class="sxs-lookup"><span data-stu-id="ba16d-836">The buffer that receives the bytes read from this stream.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="ba16d-837">要监视取消请求的标记。</span><span class="sxs-lookup"><span data-stu-id="ba16d-837">The token to monitor for cancellation requests.</span></span></param>
        <summary><span data-ttu-id="ba16d-838">从此流中异步读取数据，并将其存储在指定的内存范围内。</span><span class="sxs-lookup"><span data-stu-id="ba16d-838">Asynchronously reads data from this stream and stores it in the specified memory range.</span></span></summary>
        <returns><span data-ttu-id="ba16d-839">表示异步读取操作的任务。</span><span class="sxs-lookup"><span data-stu-id="ba16d-839">A task that represents the asynchronous read operation.</span></span> <span data-ttu-id="ba16d-840">其 <see cref="P:System.Threading.Tasks.ValueTask`1.Result" /> 属性的值包含读入 <paramref name="buffer" /> 的总字节数。</span><span class="sxs-lookup"><span data-stu-id="ba16d-840">The value of its <see cref="P:System.Threading.Tasks.ValueTask`1.Result" /> property contains the total number of bytes read into <paramref name="buffer" />.</span></span> <span data-ttu-id="ba16d-841">如果再也没有要读取的数据，将返回 0。</span><span class="sxs-lookup"><span data-stu-id="ba16d-841">When there is no more data to be read, returns 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba16d-842">此方法可读取的`buffer`数据量尽可能多。</span><span class="sxs-lookup"><span data-stu-id="ba16d-842">This method reads as much data as is available into the `buffer`.</span></span> 
 
 <span data-ttu-id="ba16d-843">你不能同时执行多个读取操作。</span><span class="sxs-lookup"><span data-stu-id="ba16d-843">You cannot perform multiple simultaneous read operations.</span></span>  
  
 <span data-ttu-id="ba16d-844">在成功完成身份验证之前, 你无法调用此方法。</span><span class="sxs-lookup"><span data-stu-id="ba16d-844">You cannot call this method until you have successfully authenticated.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ba16d-845">未进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ba16d-845">Authentication has not occurred.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="ba16d-846">读操作失败。</span><span class="sxs-lookup"><span data-stu-id="ba16d-846">The read operation failed.</span></span> <span data-ttu-id="ba16d-847">检查内部异常（如果存在）以确定失败的原因。</span><span class="sxs-lookup"><span data-stu-id="ba16d-847">Check the inner exception, if it is present, to determine the cause of the failure.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ba16d-848">已存在一个正在执行的读取操作。</span><span class="sxs-lookup"><span data-stu-id="ba16d-848">There is already a read operation in progress.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ba16d-849">此对象已关闭。</span><span class="sxs-lookup"><span data-stu-id="ba16d-849">This object has been closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;int&gt; ReadAsync (byte[] buffer, int offset, int count, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadAsync(unsigned int8[] buffer, int32 offset, int32 count, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;int&gt; ^ ReadAsync(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.ReadAsync : byte[] * int * int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="sslStream.ReadAsync (buffer, offset, count, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="offset" Type="System.Int32" Index="1" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="3" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="ba16d-850">接收从此流读取的字节的缓冲区。</span><span class="sxs-lookup"><span data-stu-id="ba16d-850">The buffer that receives the bytes read from this stream.</span></span></param>
        <param name="offset"><span data-ttu-id="ba16d-851"><paramref name="buffer" /> 中从零开始的位置，从此处开始存储从此流中读取的数据。</span><span class="sxs-lookup"><span data-stu-id="ba16d-851">The zero-based location in <paramref name="buffer" /> at which to begin storing the data read from this stream.</span></span></param>
        <param name="count"><span data-ttu-id="ba16d-852">要从此流中读取的最大字节数。</span><span class="sxs-lookup"><span data-stu-id="ba16d-852">The maximum number of bytes to read from this stream.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="ba16d-853">要监视取消请求的标记。</span><span class="sxs-lookup"><span data-stu-id="ba16d-853">The token to monitor for cancellation requests.</span></span></param>
        <summary><span data-ttu-id="ba16d-854">从此流中异步读取数据，并将其存储在字节数组的指定范围中。</span><span class="sxs-lookup"><span data-stu-id="ba16d-854">Asynchronously reads data from this stream and stores it in the specified range of a byte array.</span></span></summary>
        <returns><span data-ttu-id="ba16d-855">表示异步读取操作的任务。</span><span class="sxs-lookup"><span data-stu-id="ba16d-855">A task that represents the asynchronous read operation.</span></span> <span data-ttu-id="ba16d-856">其 <see cref="P:System.Threading.Tasks.Task`1.Result" /> 属性的值包含读入 <paramref name="buffer" /> 的总字节数。</span><span class="sxs-lookup"><span data-stu-id="ba16d-856">The value of its <see cref="P:System.Threading.Tasks.Task`1.Result" /> property contains the total number of bytes read into <paramref name="buffer" />.</span></span> <span data-ttu-id="ba16d-857">如果再也没有要读取的数据，将返回 0。</span><span class="sxs-lookup"><span data-stu-id="ba16d-857">When there is no more data to be read, returns 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba16d-858">方法从流中读取最`count`多字节, 并将它们存储在`buffer`开始处`offset`。</span><span class="sxs-lookup"><span data-stu-id="ba16d-858">The method reads a maximum of `count` bytes from the stream and stores them in `buffer` beginning at `offset`.</span></span> 
 
 <span data-ttu-id="ba16d-859">你不能同时执行多个读取操作。</span><span class="sxs-lookup"><span data-stu-id="ba16d-859">You cannot perform multiple simultaneous read operations.</span></span>  
  
 <span data-ttu-id="ba16d-860">在成功完成身份验证之前, 你无法调用此方法。</span><span class="sxs-lookup"><span data-stu-id="ba16d-860">You cannot call this method until you have successfully authenticated.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ba16d-861"><paramref name="buffer" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ba16d-861"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="ba16d-862"><paramref name="offset" /> 小于 0。</span><span class="sxs-lookup"><span data-stu-id="ba16d-862"><paramref name="offset" /> is less than 0.</span></span>  
  
<span data-ttu-id="ba16d-863">或</span><span class="sxs-lookup"><span data-stu-id="ba16d-863">-or-</span></span> 
 <span data-ttu-id="ba16d-864"><paramref name="count" /> 小于 0。</span><span class="sxs-lookup"><span data-stu-id="ba16d-864"><paramref name="count" /> is less than 0.</span></span>
  
<span data-ttu-id="ba16d-865">或</span><span class="sxs-lookup"><span data-stu-id="ba16d-865">-or-</span></span> 
 <span data-ttu-id="ba16d-866"><paramref name="count" /> 大于 <paramref name="buffer" /> 的长度减去 <paramref name="offset" />。</span><span class="sxs-lookup"><span data-stu-id="ba16d-866"><paramref name="count" /> is greater than the length of <paramref name="buffer" /> minus <paramref name="offset" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ba16d-867">未进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ba16d-867">Authentication has not occurred.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="ba16d-868">读操作失败。</span><span class="sxs-lookup"><span data-stu-id="ba16d-868">The read operation failed.</span></span> <span data-ttu-id="ba16d-869">检查内部异常（如果存在）以确定失败的原因。</span><span class="sxs-lookup"><span data-stu-id="ba16d-869">Check the inner exception, if it is present, to determine the cause of the failure.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ba16d-870">已存在一个正在执行的读取操作。</span><span class="sxs-lookup"><span data-stu-id="ba16d-870">There is already a read operation in progress.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ba16d-871">此对象已关闭。</span><span class="sxs-lookup"><span data-stu-id="ba16d-871">This object has been closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadByte">
      <MemberSignature Language="C#" Value="public override int ReadByte ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ReadByte() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.ReadByte" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadByte () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ReadByte();" />
      <MemberSignature Language="F#" Value="override this.ReadByte : unit -&gt; int" Usage="sslStream.ReadByte " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ba16d-872">从 <see cref="T:System.Net.Security.SslStream" /> 中读取一个字节，并将流内的位置向前提升一个字节，或者如果已到达流结尾，则返回 -1。</span><span class="sxs-lookup"><span data-stu-id="ba16d-872">Reads a byte from the <see cref="T:System.Net.Security.SslStream" /> and advances the position within the stream by one byte, or returns -1 if at the end of the stream.</span></span></summary>
        <returns><span data-ttu-id="ba16d-873">强制转换为 <see langword="Int32" /> 的无符号字节，如果到达流的末尾，则为 -1。</span><span class="sxs-lookup"><span data-stu-id="ba16d-873">The unsigned byte cast to an <see langword="Int32" />, or -1 if at the end of the stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks   
 <span data-ttu-id="ba16d-874">你不能同时执行多个读取操作。</span><span class="sxs-lookup"><span data-stu-id="ba16d-874">You cannot perform multiple simultaneous read operations.</span></span>  
  
 <span data-ttu-id="ba16d-875">在成功完成身份验证之前, 你无法调用此方法。</span><span class="sxs-lookup"><span data-stu-id="ba16d-875">You cannot call this method until you have successfully authenticated.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ba16d-876">未进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ba16d-876">Authentication has not occurred.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="ba16d-877">读操作失败。</span><span class="sxs-lookup"><span data-stu-id="ba16d-877">The read operation failed.</span></span> <span data-ttu-id="ba16d-878">检查内部异常（如果存在）以确定失败的原因。</span><span class="sxs-lookup"><span data-stu-id="ba16d-878">Check the inner exception, if present to determine the cause of the failure.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ba16d-879">已存在一个正在执行的读取操作。</span><span class="sxs-lookup"><span data-stu-id="ba16d-879">There is already a read operation in progress.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ba16d-880">此对象已关闭。</span><span class="sxs-lookup"><span data-stu-id="ba16d-880">This object has been closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadTimeout">
      <MemberSignature Language="C#" Value="public override int ReadTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReadTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.ReadTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ReadTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ReadTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ReadTimeout : int with get, set" Usage="System.Net.Security.SslStream.ReadTimeout" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.ReadTimeout</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ba16d-881">获取或设置读操作阻止等待数据的时间。</span><span class="sxs-lookup"><span data-stu-id="ba16d-881">Gets or sets the amount of time a read operation blocks waiting for data.</span></span></summary>
        <value><span data-ttu-id="ba16d-882">同步读取操作失败前经过的时间。</span><span class="sxs-lookup"><span data-stu-id="ba16d-882">The amount of time that elapses before a synchronous read operation fails.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba16d-883">此属性返回通过对基础流调用<xref:System.IO.Stream.ReadTimeout%2A>而返回的值。</span><span class="sxs-lookup"><span data-stu-id="ba16d-883">This property returns the value returned by invoking <xref:System.IO.Stream.ReadTimeout%2A> on the underlying stream.</span></span> <span data-ttu-id="ba16d-884">设置此属性时, 基础流<xref:System.IO.Stream.ReadTimeout%2A>上的值设置为指定值。</span><span class="sxs-lookup"><span data-stu-id="ba16d-884">When you set this property, the <xref:System.IO.Stream.ReadTimeout%2A> value on the underlying stream is set to the specified value.</span></span>  
  
 <span data-ttu-id="ba16d-885">如果基础流为<xref:System.Net.Sockets.NetworkStream>, 则以毫秒为单位, <xref:System.Net.Security.SslStream.ReadTimeout%2A>并且默认设置<xref:System.Threading.Timeout.Infinite>为, 以便读取操作不会超时。</span><span class="sxs-lookup"><span data-stu-id="ba16d-885">If the underlying stream is a <xref:System.Net.Sockets.NetworkStream>, <xref:System.Net.Security.SslStream.ReadTimeout%2A> is in milliseconds and is set to <xref:System.Threading.Timeout.Infinite> by default so that read operations do not timeout.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba16d-886">下面的代码示例演示如何设置此属性的值。</span><span class="sxs-lookup"><span data-stu-id="ba16d-886">The following code example demonstrates setting the value of this property.</span></span>  
  
[!code-cpp[NclSslServerSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#1)]
[!code-csharp[NclSslServerSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#1)]  
[!code-vb[NclSslServerSync#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclSslServerSync/VB/serversync.vb#1)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoteCertificate">
      <MemberSignature Language="C#" Value="public virtual System.Security.Cryptography.X509Certificates.X509Certificate RemoteCertificate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509Certificate RemoteCertificate" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.RemoteCertificate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RemoteCertificate As X509Certificate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Cryptography::X509Certificates::X509Certificate ^ RemoteCertificate { System::Security::Cryptography::X509Certificates::X509Certificate ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RemoteCertificate : System.Security.Cryptography.X509Certificates.X509Certificate" Usage="System.Net.Security.SslStream.RemoteCertificate" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.RemoteCertificate</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509Certificate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ba16d-887">获取用于对远程终结点进行身份验证的证书。</span><span class="sxs-lookup"><span data-stu-id="ba16d-887">Gets the certificate used to authenticate the remote endpoint.</span></span></summary>
        <value><span data-ttu-id="ba16d-888">一个 X509Certificate 对象，它表示为身份验证提供的证书；或者，如果没有提供证书，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ba16d-888">An X509Certificate object that represents the certificate supplied for authentication or <see langword="null" /> if no certificate was supplied.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ba16d-889">下面的代码示例演示如何显示此属性返回的证书。</span><span class="sxs-lookup"><span data-stu-id="ba16d-889">The following code example demonstrates displaying the certificate returned by this property.</span></span>  
  
[!code-cpp[NclSslServerSync#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#6)]
[!code-csharp[NclSslServerSync#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#6)]  
[!code-vb[NclSslServerSync#6](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclSslServerSync/VB/serversync.vb#6)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ba16d-890">身份验证失败或没有进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ba16d-890">Authentication failed or has not occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public override long Seek (long offset, System.IO.SeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 Seek(int64 offset, valuetype System.IO.SeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.Seek(System.Int64,System.IO.SeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Seek (offset As Long, origin As SeekOrigin) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long Seek(long offset, System::IO::SeekOrigin origin);" />
      <MemberSignature Language="F#" Value="override this.Seek : int64 * System.IO.SeekOrigin -&gt; int64" Usage="sslStream.Seek (offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="origin" Type="System.IO.SeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset"><span data-ttu-id="ba16d-891">忽略此值。</span><span class="sxs-lookup"><span data-stu-id="ba16d-891">This value is ignored.</span></span></param>
        <param name="origin"><span data-ttu-id="ba16d-892">忽略此值。</span><span class="sxs-lookup"><span data-stu-id="ba16d-892">This value is ignored.</span></span></param>
        <summary><span data-ttu-id="ba16d-893">引发 <see cref="T:System.NotSupportedException" />。</span><span class="sxs-lookup"><span data-stu-id="ba16d-893">Throws a <see cref="T:System.NotSupportedException" />.</span></span></summary>
        <returns><span data-ttu-id="ba16d-894">总是引发 <see cref="T:System.NotSupportedException" />。</span><span class="sxs-lookup"><span data-stu-id="ba16d-894">Always throws a <see cref="T:System.NotSupportedException" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba16d-895">请勿调用此方法。</span><span class="sxs-lookup"><span data-stu-id="ba16d-895">Do not call this method.</span></span> <span data-ttu-id="ba16d-896">它是继承的, 但不受<xref:System.Net.Security.SslStream>类支持。</span><span class="sxs-lookup"><span data-stu-id="ba16d-896">It is inherited, but is not supported by the <xref:System.Net.Security.SslStream> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ba16d-897"><see cref="T:System.Net.Security.SslStream" /> 对象不支持查找。</span><span class="sxs-lookup"><span data-stu-id="ba16d-897">Seeking is not supported by <see cref="T:System.Net.Security.SslStream" /> objects.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetLength">
      <MemberSignature Language="C#" Value="public override void SetLength (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetLength(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.SetLength(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SetLength (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SetLength(long value);" />
      <MemberSignature Language="F#" Value="override this.SetLength : int64 -&gt; unit" Usage="sslStream.SetLength value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.SetLength(System.Int64)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ba16d-898"><see cref="T:System.Int64" /> 值，该值指定流的长度。</span><span class="sxs-lookup"><span data-stu-id="ba16d-898">An <see cref="T:System.Int64" /> value that specifies the length of the stream.</span></span></param>
        <summary><span data-ttu-id="ba16d-899">设置基础流的长度。</span><span class="sxs-lookup"><span data-stu-id="ba16d-899">Sets the length of the underlying stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba16d-900">此方法在<xref:System.IO.Stream.SetLength%2A?displayProperty=nameWithType>创建此<xref:System.Net.Security.SslStream>时指定的基础流上调用。</span><span class="sxs-lookup"><span data-stu-id="ba16d-900">This method invokes <xref:System.IO.Stream.SetLength%2A?displayProperty=nameWithType> on the underlying stream specified when this <xref:System.Net.Security.SslStream> was created.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShutdownAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task ShutdownAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task ShutdownAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.ShutdownAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ShutdownAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ ShutdownAsync();" />
      <MemberSignature Language="F#" Value="abstract member ShutdownAsync : unit -&gt; System.Threading.Tasks.Task&#xA;override this.ShutdownAsync : unit -&gt; System.Threading.Tasks.Task" Usage="sslStream.ShutdownAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ba16d-901">关闭此 SslStream。</span><span class="sxs-lookup"><span data-stu-id="ba16d-901">Shuts down this SslStream.</span></span></summary>
        <returns><span data-ttu-id="ba16d-902">表示异步操作的任务对象。</span><span class="sxs-lookup"><span data-stu-id="ba16d-902">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SslProtocol">
      <MemberSignature Language="C#" Value="public virtual System.Security.Authentication.SslProtocols SslProtocol { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Authentication.SslProtocols SslProtocol" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.SslProtocol" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SslProtocol As SslProtocols" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Authentication::SslProtocols SslProtocol { System::Security::Authentication::SslProtocols get(); };" />
      <MemberSignature Language="F#" Value="member this.SslProtocol : System.Security.Authentication.SslProtocols" Usage="System.Net.Security.SslStream.SslProtocol" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.SslProtocol</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Authentication.SslProtocols</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ba16d-903">获取一个值，该值指示用于对此连接进行身份验证的安全协议。</span><span class="sxs-lookup"><span data-stu-id="ba16d-903">Gets a value that indicates the security protocol used to authenticate this connection.</span></span></summary>
        <value><span data-ttu-id="ba16d-904">代表用于身份验证的协议的 <see cref="T:System.Security.Authentication.SslProtocols" /> 值。</span><span class="sxs-lookup"><span data-stu-id="ba16d-904">The <see cref="T:System.Security.Authentication.SslProtocols" /> value that represents the protocol used for authentication.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba16d-905">创建时<xref:System.Net.Security.SslStream>指定支持的安全协议。</span><span class="sxs-lookup"><span data-stu-id="ba16d-905">The supported security protocols are specified when the <xref:System.Net.Security.SslStream> is created.</span></span> <span data-ttu-id="ba16d-906">如果没有向构造函数传递任何安全协议, 则使用<xref:System.Security.Authentication.SslProtocols.Default>创建实例。</span><span class="sxs-lookup"><span data-stu-id="ba16d-906">If no security protocol was passed to the constructor, the instance is created using <xref:System.Security.Authentication.SslProtocols.Default>.</span></span> <span data-ttu-id="ba16d-907">根据客户端和服务器支持的协议选择用于身份验证的实际协议。</span><span class="sxs-lookup"><span data-stu-id="ba16d-907">The actual protocol used for authentication is selected based on the protocols supported by the client and server.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba16d-908">下面的示例显示指定流的安全属性。</span><span class="sxs-lookup"><span data-stu-id="ba16d-908">The following example displays the security properties of the specified stream.</span></span>  
  
[!code-cpp[NclSslServerSync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#3)]
[!code-csharp[NclSslServerSync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#3)]  
[!code-vb[NclSslServerSync#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclSslServerSync/VB/serversync.vb#3)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TransportContext">
      <MemberSignature Language="C#" Value="public System.Net.TransportContext TransportContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.TransportContext TransportContext" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.TransportContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TransportContext As TransportContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::TransportContext ^ TransportContext { System::Net::TransportContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TransportContext : System.Net.TransportContext" Usage="System.Net.Security.SslStream.TransportContext" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.TransportContext</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.TransportContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ba16d-909">获取用于采用扩展保护的身份验证的 <see cref="T:System.Net.TransportContext" />。</span><span class="sxs-lookup"><span data-stu-id="ba16d-909">Gets the <see cref="T:System.Net.TransportContext" /> used for authentication using extended protection.</span></span></summary>
        <value><span data-ttu-id="ba16d-910">一个 <see cref="T:System.Net.TransportContext" /> 对象，它包含用于扩展保护的通道绑定令牌 (CBT)。</span><span class="sxs-lookup"><span data-stu-id="ba16d-910">The <see cref="T:System.Net.TransportContext" /> object that contains the channel binding token (CBT) used for extended protection.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md"><span data-ttu-id="ba16d-911">带有扩展保护的集成 Windows 身份验证</span><span class="sxs-lookup"><span data-stu-id="ba16d-911">Integrated Windows Authentication with Extended Protection</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ba16d-912">将数据写入此流。</span><span class="sxs-lookup"><span data-stu-id="ba16d-912">Writes data to this stream.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (byte[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(unsigned int8[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.Write(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (buffer As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(cli::array &lt;System::Byte&gt; ^ buffer);" />
      <MemberSignature Language="F#" Value="override this.Write : byte[] -&gt; unit" Usage="sslStream.Write buffer" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.Write(System.Byte[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="ba16d-913">一个 <see cref="T:System.Byte" /> 数组，该数组提供要写入流中的字节。</span><span class="sxs-lookup"><span data-stu-id="ba16d-913">A <see cref="T:System.Byte" /> array that supplies the bytes written to the stream.</span></span></param>
        <summary><span data-ttu-id="ba16d-914">将指定的数据写入此流。</span><span class="sxs-lookup"><span data-stu-id="ba16d-914">Writes the specified data to this stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba16d-915">操作完成时, 此方法将会阻止。</span><span class="sxs-lookup"><span data-stu-id="ba16d-915">This method blocks while the operation completes.</span></span> <span data-ttu-id="ba16d-916">若要在操作完成时阻止阻止, 请<xref:System.Net.Security.SslStream.BeginWrite%2A>使用方法。</span><span class="sxs-lookup"><span data-stu-id="ba16d-916">To prevent blocking while the operation completes, use the <xref:System.Net.Security.SslStream.BeginWrite%2A> method.</span></span>  
  
 <span data-ttu-id="ba16d-917">在成功完成身份验证之前, 你无法调用此方法。</span><span class="sxs-lookup"><span data-stu-id="ba16d-917">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="ba16d-918">若要进行身份<xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>验证, 请调用一个、或<xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>、 <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="ba16d-918">To authenticate call one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, or <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
 <span data-ttu-id="ba16d-919"><xref:System.Net.Security.SslStream>类不支持多个同时写入操作。</span><span class="sxs-lookup"><span data-stu-id="ba16d-919">The <xref:System.Net.Security.SslStream> class does not support multiple simultaneous write operations.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba16d-920">下面的代码示例演示如何向经过身份<xref:System.Net.Security.SslStream>验证的进行写入。</span><span class="sxs-lookup"><span data-stu-id="ba16d-920">The following code example demonstrates writing to an authenticated <xref:System.Net.Security.SslStream>.</span></span>  
  
[!code-cpp[NclSslServerSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#1)]
[!code-csharp[NclSslServerSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#1)]  
[!code-vb[NclSslServerSync#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclSslServerSync/VB/serversync.vb#1)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ba16d-921"><paramref name="buffer" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ba16d-921"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="ba16d-922">写操作失败。</span><span class="sxs-lookup"><span data-stu-id="ba16d-922">The write operation failed.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ba16d-923">已存在一个正在执行的写操作。</span><span class="sxs-lookup"><span data-stu-id="ba16d-923">There is already a write operation in progress.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ba16d-924">此对象已关闭。</span><span class="sxs-lookup"><span data-stu-id="ba16d-924">This object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ba16d-925">未进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ba16d-925">Authentication has not occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.Write(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As Byte(), offset As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="override this.Write : byte[] * int * int -&gt; unit" Usage="sslStream.Write (buffer, offset, count)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.Write(System.Byte[],System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="ba16d-926">一个 <see cref="T:System.Byte" /> 数组，该数组提供要写入流中的字节。</span><span class="sxs-lookup"><span data-stu-id="ba16d-926">A <see cref="T:System.Byte" /> array that supplies the bytes written to the stream.</span></span></param>
        <param name="offset"><span data-ttu-id="ba16d-927"><see cref="T:System.Int32" />，它包含 <paramref name="buffer" /> 中从零开始的位置，将从此位置开始读取要写入流中的字节。</span><span class="sxs-lookup"><span data-stu-id="ba16d-927">A <see cref="T:System.Int32" /> that contains the zero-based location in <paramref name="buffer" /> at which to begin reading bytes to be written to the stream.</span></span></param>
        <param name="count"><span data-ttu-id="ba16d-928"><see cref="T:System.Int32" />，包含要从 <paramref name="buffer" /> 中读取的字节数。</span><span class="sxs-lookup"><span data-stu-id="ba16d-928">A <see cref="T:System.Int32" /> that contains the number of bytes to read from <paramref name="buffer" />.</span></span></param>
        <summary><span data-ttu-id="ba16d-929">使用指定的缓冲区和偏移将指定数目的 <see cref="T:System.Byte" /> 写入基础流。</span><span class="sxs-lookup"><span data-stu-id="ba16d-929">Write the specified number of <see cref="T:System.Byte" />s to the underlying stream using the specified buffer and offset.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba16d-930">操作完成时, 此方法将会阻止。</span><span class="sxs-lookup"><span data-stu-id="ba16d-930">This method blocks while the operation completes.</span></span> <span data-ttu-id="ba16d-931">若要在操作完成时阻止阻止, 请使用<xref:System.Net.Security.SslStream.BeginWrite%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="ba16d-931">To prevent blocking while the operation completes the operation completes, use the <xref:System.Net.Security.SslStream.BeginWrite%2A> method.</span></span>  
  
 <span data-ttu-id="ba16d-932">在成功完成身份验证之前, 你无法调用此方法。</span><span class="sxs-lookup"><span data-stu-id="ba16d-932">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="ba16d-933">若要进行身份<xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>验证, 请调用一个、或<xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>、 <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="ba16d-933">To authenticate call one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, or <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
 <span data-ttu-id="ba16d-934"><xref:System.Net.Security.SslStream>类不支持多个同时写入操作。</span><span class="sxs-lookup"><span data-stu-id="ba16d-934">The <xref:System.Net.Security.SslStream> class does not support multiple simultaneous write operations.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ba16d-935"><paramref name="buffer" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ba16d-935"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ba16d-936"><paramref name="offset" />
          <paramref name="&lt;" />
          <paramref name="0" />。</span><span class="sxs-lookup"><span data-stu-id="ba16d-936"><paramref name="offset" />
          <paramref name="&lt;" />
          <paramref name="0" />.</span></span>  
  
 <span data-ttu-id="ba16d-937"><paramref name="-or-" /><paramref name="offset" /> &gt; <paramref name="buffer" /> 的长度。</span><span class="sxs-lookup"><span data-stu-id="ba16d-937"><paramref name="-or-" /><paramref name="offset" /> &gt; the length of <paramref name="buffer" />.</span></span>  
  
<span data-ttu-id="ba16d-938">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ba16d-938">-or-</span></span> 
 <span data-ttu-id="ba16d-939"><paramref name="offset" /> + count &gt; <paramref name="buffer" /> 的长度。</span><span class="sxs-lookup"><span data-stu-id="ba16d-939"><paramref name="offset" /> + count &gt; the length of <paramref name="buffer" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="ba16d-940">写操作失败。</span><span class="sxs-lookup"><span data-stu-id="ba16d-940">The write operation failed.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ba16d-941">已存在一个正在执行的写操作。</span><span class="sxs-lookup"><span data-stu-id="ba16d-941">There is already a write operation in progress.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ba16d-942">此对象已关闭。</span><span class="sxs-lookup"><span data-stu-id="ba16d-942">This object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ba16d-943">未进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ba16d-943">Authentication has not occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.ValueTask WriteAsync (ReadOnlyMemory&lt;byte&gt; buffer, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Threading.Tasks.ValueTask WriteAsync(valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.WriteAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="override this.WriteAsync : ReadOnlyMemory&lt;byte&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask" Usage="sslStream.WriteAsync (buffer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlyMemory&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="ba16d-944">要写入基础流中的数据。</span><span class="sxs-lookup"><span data-stu-id="ba16d-944">The data to write to the underlying stream.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="ba16d-945">要监视取消请求的标记。</span><span class="sxs-lookup"><span data-stu-id="ba16d-945">The token to monitor for cancellation requests.</span></span></param>
        <summary><span data-ttu-id="ba16d-946">将数据从只读字节内存范围异步写入基础流。</span><span class="sxs-lookup"><span data-stu-id="ba16d-946">Asynchronously writes data to the underlying stream from a read-only byte memory range.</span></span></summary>
        <returns><span data-ttu-id="ba16d-947">表示异步写入操作的任务。</span><span class="sxs-lookup"><span data-stu-id="ba16d-947">A task that represents the asynchronous write operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
<span data-ttu-id="ba16d-948">在成功完成身份验证之前, 你无法调用此方法。</span><span class="sxs-lookup"><span data-stu-id="ba16d-948">You cannot call this method until you have successfully authenticated.</span></span> 

<span data-ttu-id="ba16d-949"><xref:System.Net.Security.SslStream>类不支持多个同时写入操作。</span><span class="sxs-lookup"><span data-stu-id="ba16d-949">The <xref:System.Net.Security.SslStream> class does not support multiple simultaneous write operations.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ba16d-950">未进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ba16d-950">Authentication has not occurred.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="ba16d-951">写操作失败。</span><span class="sxs-lookup"><span data-stu-id="ba16d-951">The write operation failed.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ba16d-952">已存在一个正在执行的写操作。</span><span class="sxs-lookup"><span data-stu-id="ba16d-952">There is already a write operation in progress.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ba16d-953">此对象已关闭。</span><span class="sxs-lookup"><span data-stu-id="ba16d-953">This object has been closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteAsync (byte[] buffer, int offset, int count, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteAsync(unsigned int8[] buffer, int32 offset, int32 count, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteAsync(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.WriteAsync : byte[] * int * int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="sslStream.WriteAsync (buffer, offset, count, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="offset" Type="System.Int32" Index="1" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="3" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="ba16d-954">要写入基础流中的数据。</span><span class="sxs-lookup"><span data-stu-id="ba16d-954">The data to write to the underlying stream.</span></span></param>
        <param name="offset"><span data-ttu-id="ba16d-955"><paramref name="buffer" /> 中开始写入数据的位置。</span><span class="sxs-lookup"><span data-stu-id="ba16d-955">The location in <paramref name="buffer" /> from which to start writing data.</span></span></param>
        <param name="count"><span data-ttu-id="ba16d-956">要写入基础流的字节数。</span><span class="sxs-lookup"><span data-stu-id="ba16d-956">The number of bytes to write to the underlying stream.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="ba16d-957">要监视取消请求的标记。</span><span class="sxs-lookup"><span data-stu-id="ba16d-957">The token to monitor for cancellation requests.</span></span></param>
        <summary><span data-ttu-id="ba16d-958">从字节数组的指定范围将数据异步写入基础流。</span><span class="sxs-lookup"><span data-stu-id="ba16d-958">Asynchronously writes data to the underlying stream from the specified range of a byte array.</span></span></summary>
        <returns><span data-ttu-id="ba16d-959">表示异步写入操作的任务。</span><span class="sxs-lookup"><span data-stu-id="ba16d-959">A task that represents the asynchronous write operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
<span data-ttu-id="ba16d-960">在成功完成身份验证之前, 你无法调用此方法。</span><span class="sxs-lookup"><span data-stu-id="ba16d-960">You cannot call this method until you have successfully authenticated.</span></span> 

<span data-ttu-id="ba16d-961"><xref:System.Net.Security.SslStream>类不支持多个同时写入操作。</span><span class="sxs-lookup"><span data-stu-id="ba16d-961">The <xref:System.Net.Security.SslStream> class does not support multiple simultaneous write operations.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ba16d-962"><paramref name="buffer" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ba16d-962"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="ba16d-963"><paramref name="offset" /> 小于 0。</span><span class="sxs-lookup"><span data-stu-id="ba16d-963"><paramref name="offset" /> is less than 0.</span></span>  
  
<span data-ttu-id="ba16d-964">或</span><span class="sxs-lookup"><span data-stu-id="ba16d-964">-or-</span></span> 
 <span data-ttu-id="ba16d-965"><paramref name="count" /> 小于 0。</span><span class="sxs-lookup"><span data-stu-id="ba16d-965"><paramref name="count" /> is less than 0.</span></span>
  
<span data-ttu-id="ba16d-966">或</span><span class="sxs-lookup"><span data-stu-id="ba16d-966">-or-</span></span> 
 <span data-ttu-id="ba16d-967"><paramref name="count" /> 大于 <paramref name="buffer" /> 的长度减去 <paramref name="offset" />。</span><span class="sxs-lookup"><span data-stu-id="ba16d-967"><paramref name="count" /> is greater than the length of <paramref name="buffer" /> minus <paramref name="offset" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ba16d-968">未进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ba16d-968">Authentication has not occurred.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="ba16d-969">写操作失败。</span><span class="sxs-lookup"><span data-stu-id="ba16d-969">The write operation failed.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ba16d-970">已存在一个正在执行的写操作。</span><span class="sxs-lookup"><span data-stu-id="ba16d-970">There is already a write operation in progress.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ba16d-971">此对象已关闭。</span><span class="sxs-lookup"><span data-stu-id="ba16d-971">This object has been closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteTimeout">
      <MemberSignature Language="C#" Value="public override int WriteTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 WriteTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.WriteTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property WriteTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int WriteTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.WriteTimeout : int with get, set" Usage="System.Net.Security.SslStream.WriteTimeout" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.WriteTimeout</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ba16d-972">获取或设置写操作阻止等待数据的时间。</span><span class="sxs-lookup"><span data-stu-id="ba16d-972">Gets or sets the amount of time a write operation blocks waiting for data.</span></span></summary>
        <value><span data-ttu-id="ba16d-973">同步写入操作失败前经过的时间。</span><span class="sxs-lookup"><span data-stu-id="ba16d-973">The amount of time that elapses before a synchronous write operation fails.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba16d-974">此属性返回通过对基础流调用<xref:System.IO.Stream.WriteTimeout%2A>而返回的值。</span><span class="sxs-lookup"><span data-stu-id="ba16d-974">This property returns the value returned by invoking <xref:System.IO.Stream.WriteTimeout%2A> on the underlying stream.</span></span> <span data-ttu-id="ba16d-975">对于设置操作, 指定的值将设置<xref:System.IO.Stream.WriteTimeout%2A>基础流的值。</span><span class="sxs-lookup"><span data-stu-id="ba16d-975">For set operations, the specified value sets the <xref:System.IO.Stream.WriteTimeout%2A> value on the underlying stream.</span></span>  
  
 <span data-ttu-id="ba16d-976">如果基础流为<xref:System.Net.Sockets.NetworkStream>, 则以毫秒为单位, <xref:System.Net.Security.SslStream.WriteTimeout%2A>并且默认设置<xref:System.Threading.Timeout.Infinite>为, 以便写入操作不会超时。</span><span class="sxs-lookup"><span data-stu-id="ba16d-976">If the underlying stream is a <xref:System.Net.Sockets.NetworkStream>, <xref:System.Net.Security.SslStream.WriteTimeout%2A> is in milliseconds and is set to <xref:System.Threading.Timeout.Infinite> by default so that write operations do not timeout.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba16d-977">下面的代码示例演示如何设置此属性的值。</span><span class="sxs-lookup"><span data-stu-id="ba16d-977">The following code example demonstrates setting the value of this property.</span></span>  
  
[!code-cpp[NclSslServerSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#1)]
[!code-csharp[NclSslServerSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#1)]  
[!code-vb[NclSslServerSync#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclSslServerSync/VB/serversync.vb#1)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>