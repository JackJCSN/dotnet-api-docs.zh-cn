<Type Name="TableAttribute" FullName="System.Data.Linq.Mapping.TableAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="269173580c93d2a57455256607f1d5db0997bdd8" /><Meta Name="ms.sourcegitcommit" Value="1bb00d2f4343e73ae8d58668f02297a3cf10a4c1" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="06/15/2019" /><Meta Name="ms.locfileid" Value="63896076" /></Metadata><TypeSignature Language="C#" Value="public sealed class TableAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TableAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Data.Linq.Mapping.TableAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TableAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class TableAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type TableAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Linq</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class, AllowMultiple=false, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="f313d-101">将某个类指定为与数据库表相关联的实体类。</span><span class="sxs-lookup"><span data-stu-id="f313d-101">Designates a class as an entity class that is associated with a database table.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f313d-102">使用此属性可将类指定为与数据库表或视图关联的实体类。</span><span class="sxs-lookup"><span data-stu-id="f313d-102">Use this attribute to designate a class as an entity class that is associated with a database table or view.</span></span> [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] <span data-ttu-id="f313d-103">将具有类视为<xref:System.Data.Linq.Mapping.TableAttribute>类视为持久性类的属性。</span><span class="sxs-lookup"><span data-stu-id="f313d-103">treats classes that have the <xref:System.Data.Linq.Mapping.TableAttribute> attribute as persistent classes.</span></span>  
  
 [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] <span data-ttu-id="f313d-104">支持仅单表映射。</span><span class="sxs-lookup"><span data-stu-id="f313d-104">supports only single-table mapping.</span></span> <span data-ttu-id="f313d-105">也就是说，一个实体类必须映射到一个数据库表，和你不能在同一时间将数据库表映射到多个类。</span><span class="sxs-lookup"><span data-stu-id="f313d-105">That is, an entity class must be mapped to exactly one database table, and you cannot map a database table to multiple classes at the same time.</span></span>  
  
 <span data-ttu-id="f313d-106">可以使用<xref:System.Data.Linq.Mapping.TableAttribute.Name%2A>属性的<xref:System.Data.Linq.Mapping.TableAttribute>属性来指定表的名称，可以选择使用架构名称来限定表名称。</span><span class="sxs-lookup"><span data-stu-id="f313d-106">You can use the <xref:System.Data.Linq.Mapping.TableAttribute.Name%2A> property of the <xref:System.Data.Linq.Mapping.TableAttribute> attribute to specify a name for the table, and you can optionally use the schema name to qualify a table name.</span></span> <span data-ttu-id="f313d-107">如果不通过使用指定名称<xref:System.Data.Linq.Mapping.TableAttribute.Name%2A>属性，表名称被假定为与类名称相同。</span><span class="sxs-lookup"><span data-stu-id="f313d-107">If you do not specify a name by using the <xref:System.Data.Linq.Mapping.TableAttribute.Name%2A> property, the table name is assumed to be the same as the class name.</span></span>  
  
## <a name="schema-qualified-names"></a><span data-ttu-id="f313d-108">架构限定的名称</span><span class="sxs-lookup"><span data-stu-id="f313d-108">Schema-qualified Names</span></span>  
 <span data-ttu-id="f313d-109">您可以选择使用架构名称来限定表名称。</span><span class="sxs-lookup"><span data-stu-id="f313d-109">You can optionally use the schema name to qualify a table name.</span></span> <span data-ttu-id="f313d-110">默认情况下，左侧的第一期的令牌<xref:System.Data.Linq.Mapping.TableAttribute.Name%2A>字符串被视为架构名称。</span><span class="sxs-lookup"><span data-stu-id="f313d-110">By default, the token to the left of the first period in the <xref:System.Data.Linq.Mapping.TableAttribute.Name%2A> string is considered to be the schema name.</span></span> <span data-ttu-id="f313d-111">表名称被视为名称的余下部分。</span><span class="sxs-lookup"><span data-stu-id="f313d-111">The remainder of the name is considered to be the table name.</span></span> <span data-ttu-id="f313d-112">提供程序加引号作为相应的表名称。</span><span class="sxs-lookup"><span data-stu-id="f313d-112">The provider quotes the table name as appropriate.</span></span> <span data-ttu-id="f313d-113">例如， [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] SQL Server 提供程序可确保，则使用方括号至少所需的位置。</span><span class="sxs-lookup"><span data-stu-id="f313d-113">For example, the [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] provider for SQL Server makes sure that brackets are used at least where they are needed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f313d-114">在某些情况下，您必须显式属性由于对 SQL Server 提供程序不能自动的括号。</span><span class="sxs-lookup"><span data-stu-id="f313d-114">In some cases, you must explicitly quote attributes because the SQL Server provider cannot auto-quote.</span></span> <span data-ttu-id="f313d-115">下表显示了一些示例。</span><span class="sxs-lookup"><span data-stu-id="f313d-115">The following table shows some examples.</span></span>  
  
|<span data-ttu-id="f313d-116">Case</span><span class="sxs-lookup"><span data-stu-id="f313d-116">Case</span></span>|<span data-ttu-id="f313d-117">示例:标识符名称</span><span class="sxs-lookup"><span data-stu-id="f313d-117">Example: Identifier Name</span></span>|<span data-ttu-id="f313d-118">示例:在特性中的预期的字符串</span><span class="sxs-lookup"><span data-stu-id="f313d-118">Example: Expected String in Attributes</span></span>|<span data-ttu-id="f313d-119">否则为...</span><span class="sxs-lookup"><span data-stu-id="f313d-119">Otherwise…</span></span>|  
|----------|------------------------------|--------------------------------------------|----------------|  
|<span data-ttu-id="f313d-120">架构名称包含句点</span><span class="sxs-lookup"><span data-stu-id="f313d-120">Schema name contains a period</span></span>|<span data-ttu-id="f313d-121">架构："A.B"</span><span class="sxs-lookup"><span data-stu-id="f313d-121">Schema: "A.B"</span></span><br /><br /> <span data-ttu-id="f313d-122">表："C"</span><span class="sxs-lookup"><span data-stu-id="f313d-122">Table: "C"</span></span>|<span data-ttu-id="f313d-123">"[A.B]。C"</span><span class="sxs-lookup"><span data-stu-id="f313d-123">"[A.B].C"</span></span>|<span data-ttu-id="f313d-124">假定第一个期间为单独的表名称的架构名称。</span><span class="sxs-lookup"><span data-stu-id="f313d-124">The first period is assumed to separate the schema name from the table name.</span></span>|  
|<span data-ttu-id="f313d-125">架构/表名称开头 `@`</span><span class="sxs-lookup"><span data-stu-id="f313d-125">Schema/Table name starts with `@`</span></span>|<span data-ttu-id="f313d-126">“@SomeName”</span><span class="sxs-lookup"><span data-stu-id="f313d-126">"@SomeName"</span></span>|<span data-ttu-id="f313d-127">"[@SomeName]"</span><span class="sxs-lookup"><span data-stu-id="f313d-127">"[@SomeName]"</span></span>|<span data-ttu-id="f313d-128">假定为参数名称。</span><span class="sxs-lookup"><span data-stu-id="f313d-128">Assumed to be a parameter name.</span></span>|  
|<span data-ttu-id="f313d-129">架构的开头`[`结尾 `]`</span><span class="sxs-lookup"><span data-stu-id="f313d-129">Schema starts with `[` and ends with `]`</span></span>|<span data-ttu-id="f313d-130">"[Schema.Table]"</span><span class="sxs-lookup"><span data-stu-id="f313d-130">"[Schema.Table]"</span></span>|<span data-ttu-id="f313d-131">"[[架构]。[表]]]"</span><span class="sxs-lookup"><span data-stu-id="f313d-131">"[[Schema].[Table]]]"</span></span>|<span data-ttu-id="f313d-132">不带引号的标识符类似于带引号的标识符。</span><span class="sxs-lookup"><span data-stu-id="f313d-132">The unquoted identifier resembles a quoted identifier.</span></span>|  
|<span data-ttu-id="f313d-133">表的前`[`结尾 `]`</span><span class="sxs-lookup"><span data-stu-id="f313d-133">Table starts with `[` and ends with `]`</span></span>|<span data-ttu-id="f313d-134">"[Table]"</span><span class="sxs-lookup"><span data-stu-id="f313d-134">"[Table]"</span></span>|<span data-ttu-id="f313d-135">"[[表]]]"</span><span class="sxs-lookup"><span data-stu-id="f313d-135">"[[Table]]]"</span></span>|<span data-ttu-id="f313d-136">不带引号的标识符类似于带引号的标识符。</span><span class="sxs-lookup"><span data-stu-id="f313d-136">The unquoted identifier resembles a quoted identifier.</span></span>|  
  
   
  
## Examples  
 [!code-csharp[DLinqCustomize#1](~/samples/snippets/csharp/VS_Snippets_Data/DLinqCustomize/cs/Program.cs#1)]
 [!code-vb[DLinqCustomize#1](~/samples/snippets/visualbasic/VS_Snippets_Data/DLinqCustomize/vb/Module1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TableAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.Mapping.TableAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TableAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f313d-137">初始化 <see cref="T:System.Data.Linq.Mapping.TableAttribute" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="f313d-137">Initializes a new instance of the <see cref="T:System.Data.Linq.Mapping.TableAttribute" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.TableAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Data.Linq.Mapping.TableAttribute.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f313d-138">获取或设置表或视图的名称。</span><span class="sxs-lookup"><span data-stu-id="f313d-138">Gets or sets the name of the table or view.</span></span></summary>
        <value><span data-ttu-id="f313d-139">默认情况下，此值与类名称相同。</span><span class="sxs-lookup"><span data-stu-id="f313d-139">By default, the value is the same as the name of the class.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f313d-140">如果不通过使用指定名称<xref:System.Data.Linq.Mapping.TableAttribute.Name%2A>，表名称被假定为与类名称相同。</span><span class="sxs-lookup"><span data-stu-id="f313d-140">If you do not specify a name by using <xref:System.Data.Linq.Mapping.TableAttribute.Name%2A>, the table name is assumed to be the same as the class name.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f313d-141">您可以选择使用架构名称来限定表名 (例如，Schema3.Table5)。</span><span class="sxs-lookup"><span data-stu-id="f313d-141">You can optionally use a schema name to qualify the table name (for example, Schema3.Table5).</span></span> <span data-ttu-id="f313d-142">默认情况下，左侧的第一期的令牌<xref:System.Data.Linq.Mapping.TableAttribute.Name%2A>字符串被视为该架构名称，并为表名称的其余部分。</span><span class="sxs-lookup"><span data-stu-id="f313d-142">By default, the token to the left of the first period in the <xref:System.Data.Linq.Mapping.TableAttribute.Name%2A> string is considered to be the schema name, and the rest to be the table name.</span></span>  
  
 <span data-ttu-id="f313d-143">在下面的示例中，默认表名`Customer`，更改为`Customers`。</span><span class="sxs-lookup"><span data-stu-id="f313d-143">In the following example, the default table name, `Customer`, is changed to `Customers`.</span></span>  
  
   
  
## Examples  
 [!code-csharp[DLinqCustomize#1](~/samples/snippets/csharp/VS_Snippets_Data/DLinqCustomize/cs/Program.cs#1)]
 [!code-vb[DLinqCustomize#1](~/samples/snippets/visualbasic/VS_Snippets_Data/DLinqCustomize/vb/Module1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>