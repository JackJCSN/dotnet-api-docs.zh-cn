<Type Name="HtmlGenericControl" FullName="System.Web.UI.HtmlControls.HtmlGenericControl">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d5eda748fccc11ad863b9e6164afe5c24a846f31" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69130813" /></Metadata><TypeSignature Language="C#" Value="public class HtmlGenericControl : System.Web.UI.HtmlControls.HtmlContainerControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HtmlGenericControl extends System.Web.UI.HtmlControls.HtmlContainerControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.HtmlControls.HtmlGenericControl" />
  <TypeSignature Language="VB.NET" Value="Public Class HtmlGenericControl&#xA;Inherits HtmlContainerControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class HtmlGenericControl : System::Web::UI::HtmlControls::HtmlContainerControl" />
  <TypeSignature Language="F#" Value="type HtmlGenericControl = class&#xA;    inherit HtmlContainerControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.HtmlControls.HtmlContainerControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Web.UI.ConstructorNeedsTag(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>定义未由特定 .NET Framework 类表示的所有 HTML 服务器控件元素的方法、属性和事件。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此类表示不由 .NET Framework 类直接表示的 HTML 服务器控件元素`<span>`, 例如`<body>`、 `<div>`、或`<font>`。  
  
 有关实例<xref:System.Web.UI.HtmlControls.HtmlGenericControl>的初始属性值的列表, <xref:System.Web.UI.HtmlControls.HtmlGenericControl.%23ctor%2A>请参见构造函数。  
  
> [!CAUTION]
>  此控件可用于显示用户输入, 其中可能包括恶意客户端脚本。 在应用程序中显示可执行脚本、SQL 语句或其他代码之前, 请检查从该客户端发送的任何信息。 ASP.NET 提供输入请求验证功能来阻止用户输入中的脚本和 HTML。 还提供验证服务器控件以评估用户输入。 有关详细信息, 请参阅[验证服务器控制语法](https://msdn.microsoft.com/library/96d2c59e-693c-4079-9b53-b3ff0d9e9133)和[验证中的用户输入 ASP.NET 网页](https://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461)。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.HtmlControls.HtmlGenericControl>类来`<body>`表示元素。  
  
 [!code-aspx-csharp[Classic HtmlGenericControl Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HtmlGenericControl Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic HtmlGenericControl Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HtmlGenericControl Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlContainerControl" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.HtmlControls.HtmlGenericControl" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlGenericControl ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlGenericControl.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HtmlGenericControl();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>使用默认值初始化 <see cref="T:System.Web.UI.HtmlControls.HtmlGenericControl" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此构造函数创建并初始化使用默认值的<xref:System.Web.UI.HtmlControls.HtmlGenericControl>类的新实例。 它通常用于动态创建服务器端`<span>`元素。  
  
 下表显示了实例的<xref:System.Web.UI.HtmlControls.HtmlGenericControl>初始属性值。  
  
|Property|初始值|  
|--------------|-------------------|  
|`TagName`|"Span" 文本字符串。|  
  
   
  
## Examples  
 下面的代码示例演示如何使用无参数构造函数创建<xref:System.Web.UI.HtmlControls.HtmlGenericControl>类的新实例。  
  
 [!code-aspx-csharp[HtmlGenericControlDefaultConstructor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlGenericControlDefaultConstructor/CS/htmlgenericcontrolconstructorcs.aspx#1)]
 [!code-aspx-vb[HtmlGenericControlDefaultConstructor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlGenericControlDefaultConstructor/VB/htmlgenericcontrolconstructorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlGenericControl (string tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlGenericControl.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (tag As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HtmlGenericControl(System::String ^ tag);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.HtmlControls.HtmlGenericControl : string -&gt; System.Web.UI.HtmlControls.HtmlGenericControl" Usage="new System.Web.UI.HtmlControls.HtmlGenericControl tag" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tag">要为其创建该类的此实例的元素的名称。</param>
        <summary>使用指定的标记初始化 <see cref="T:System.Web.UI.HtmlControls.HtmlGenericControl" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此构造函数创建并初始化使用指定标记的<xref:System.Web.UI.HtmlControls.HtmlGenericControl>类的新实例。 这允许您动态创建不由 .NET Framework 类直接表示的任何 HTML 服务器控件元素。  
  
 下表显示了实例的<xref:System.Web.UI.HtmlControls.HtmlGenericControl>初始属性值。  
  
|Property|初始值|  
|--------------|-------------------|  
|`TagName`|`tag` 参数的值。|  
  
> [!NOTE]
>  如果参数为`null`, 则<xref:System.Web.UI.HtmlControls.HtmlGenericControl.TagName%2A>将属性设置为<xref:System.String.Empty?displayProperty=nameWithType>。 `tag`  
  
   
  
## Examples  
 下面的代码示例演示了如何使用重载构造函数创建<xref:System.Web.UI.HtmlControls.HtmlGenericControl>类的新实例。  
  
 [!code-aspx-csharp[HtmlGenericControlOverloadConstructor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlGenericControlOverloadConstructor/CS/htmlgenericcontrolconstructoroverloadcs.aspx#1)]
 [!code-aspx-vb[HtmlGenericControlOverloadConstructor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlGenericControlOverloadConstructor/VB/htmlgenericcontrolconstructoroverloadvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TagName">
      <MemberSignature Language="C#" Value="public string TagName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TagName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlGenericControl.TagName" />
      <MemberSignature Language="VB.NET" Value="Public Property TagName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TagName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TagName : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlGenericControl.TagName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置由 <see cref="T:System.Web.UI.HtmlControls.HtmlGenericControl" /> 控件表示的 HTML 元素的名称。</summary>
        <value>元素的标记名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此属性以编程方式确定 HTML 服务器控件的元素名称。 例如, 服务器端<xref:System.Web.UI.HtmlControls.HtmlGenericControl.TagName%2A> `<span id="MySpan" runat= "server"/>`元素的属性包含值 "span"。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.HtmlControls.HtmlGenericControl.TagName%2A>属性以编程方式将标记名称从 "Body" 改为 "Font" 和后退。  
  
 [!code-aspx-csharp[Classic HtmlGenericControl.TagName Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HtmlGenericControl.TagName Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic HtmlGenericControl.TagName Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HtmlGenericControl.TagName Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
