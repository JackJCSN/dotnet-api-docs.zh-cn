<Type Name="XamlReaderSettings" FullName="System.Xaml.XamlReaderSettings">
  <Metadata><Meta Name="ms.openlocfilehash" Value="737f4f7cedfc10e7e7447f6fef1a364feeb1d498" /><Meta Name="ms.sourcegitcommit" Value="0528148687f8b0e0a3d0f550431a777fbe5346bc" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="04/25/2019" /><Meta Name="ms.locfileid" Value="64441314" /></Metadata><TypeSignature Language="C#" Value="public class XamlReaderSettings" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlReaderSettings extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.XamlReaderSettings" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlReaderSettings" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlReaderSettings" />
  <TypeSignature Language="F#" Value="type XamlReaderSettings = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="cac69-101">为 <see cref="T:System.Xaml.XamlReader" /> 实现指定处理规则或选项设置。</span><span class="sxs-lookup"><span data-stu-id="cac69-101">Specifies processing rules or option settings for a <see cref="T:System.Xaml.XamlReader" /> implementation.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cac69-102">默认情况下，初始化<xref:System.Xaml.XamlReaderSettings>对象使用的值为其属性对应于预期默认设置，如`false`布尔属性或引用类型属性的 null 值。</span><span class="sxs-lookup"><span data-stu-id="cac69-102">By default, an initialized <xref:System.Xaml.XamlReaderSettings> object uses values for its properties that correspond to expected defaults, such as `false` for Boolean properties or null values for reference-type properties.</span></span> <span data-ttu-id="cac69-103">默认值初始化会导致以下值：</span><span class="sxs-lookup"><span data-stu-id="cac69-103">Default initialization results in the following values:</span></span>  
  
-   <span data-ttu-id="cac69-104"><xref:System.Xaml.XamlReaderSettings.BaseUri%2A>并<xref:System.Xaml.XamlReaderSettings.LocalAssembly%2A>属性是`null`。</span><span class="sxs-lookup"><span data-stu-id="cac69-104">The <xref:System.Xaml.XamlReaderSettings.BaseUri%2A> and <xref:System.Xaml.XamlReaderSettings.LocalAssembly%2A> properties are `null`.</span></span>  
  
-   <span data-ttu-id="cac69-105"><xref:System.Xaml.XamlReaderSettings.IgnoreUidsOnPropertyElements%2A> 属性为 `false`。</span><span class="sxs-lookup"><span data-stu-id="cac69-105">The <xref:System.Xaml.XamlReaderSettings.IgnoreUidsOnPropertyElements%2A> property is `false`.</span></span>  
  
-   <span data-ttu-id="cac69-106"><xref:System.Xaml.XamlReaderSettings.ProvideLineInfo%2A>属性是`false`在对象模型中; 但是，它可以设置为`true`在运行时根据加载可执行文件和其调试设置，或 XAML 架构上下文。</span><span class="sxs-lookup"><span data-stu-id="cac69-106">The <xref:System.Xaml.XamlReaderSettings.ProvideLineInfo%2A> property is `false` in the object model; however, it can be set to `true` at run time based on the loaded executables and their debug settings, or by XAML schema context.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cac69-107">初始化 <see cref="T:System.Xaml.XamlReaderSettings" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="cac69-107">Initializes a new instance of the <see cref="T:System.Xaml.XamlReaderSettings" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlReaderSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlReaderSettings.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlReaderSettings();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cac69-108">初始化 <see cref="T:System.Xaml.XamlReaderSettings" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="cac69-108">Initializes a new instance of the <see cref="T:System.Xaml.XamlReaderSettings" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cac69-109">有关初始化的详细信息<xref:System.Xaml.XamlReaderSettings>默认实例，请参阅<xref:System.Xaml.XamlReaderSettings>。</span><span class="sxs-lookup"><span data-stu-id="cac69-109">For more information about initialization of a <xref:System.Xaml.XamlReaderSettings> default instance, see <xref:System.Xaml.XamlReaderSettings>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlReaderSettings (System.Xaml.XamlReaderSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xaml.XamlReaderSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlReaderSettings.#ctor(System.Xaml.XamlReaderSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (settings As XamlReaderSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlReaderSettings(System::Xaml::XamlReaderSettings ^ settings);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlReaderSettings : System.Xaml.XamlReaderSettings -&gt; System.Xaml.XamlReaderSettings" Usage="new System.Xaml.XamlReaderSettings settings" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="settings" Type="System.Xaml.XamlReaderSettings" />
      </Parameters>
      <Docs>
        <param name="settings"><span data-ttu-id="cac69-110">一个现有的 <see cref="T:System.Xaml.XamlReaderSettings" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="cac69-110">An existing <see cref="T:System.Xaml.XamlReaderSettings" /> object.</span></span></param>
        <summary><span data-ttu-id="cac69-111">基于另一个 <see cref="T:System.Xaml.XamlReaderSettings" /> 对象中的值初始化 <see cref="T:System.Xaml.XamlReaderSettings" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="cac69-111">Initializes a new instance of the <see cref="T:System.Xaml.XamlReaderSettings" /> class based on values in another <see cref="T:System.Xaml.XamlReaderSettings" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cac69-112">此构造函数支持的其他设置可也来自于读取器进程中的其他参与者的 XAML 读取器设置合并。</span><span class="sxs-lookup"><span data-stu-id="cac69-112">This constructor supports the merging of settings for XAML readers where additional settings can also come from other participants in the reader process.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowProtectedMembersOnRoot">
      <MemberSignature Language="C#" Value="public bool AllowProtectedMembersOnRoot { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowProtectedMembersOnRoot" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlReaderSettings.AllowProtectedMembersOnRoot" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowProtectedMembersOnRoot As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowProtectedMembersOnRoot { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowProtectedMembersOnRoot : bool with get, set" Usage="System.Xaml.XamlReaderSettings.AllowProtectedMembersOnRoot" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cac69-113">获取或设置一个值，该值指示根对象在报告 XAML 类型表示形式时是否可包括具有受保护代码访问模型的成员。</span><span class="sxs-lookup"><span data-stu-id="cac69-113">Gets or sets a value that indicates whether the root object may include members that have a protected code access model when it reports the XAML type representation.</span></span></summary>
        <value><span data-ttu-id="cac69-114">如果根对象可包括具有受保护代码访问模型的成员，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="cac69-114"><see langword="true" /> if the root object may include members that have a protected code access model; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cac69-115">此设置是与某些 XAML 实现，如 WPF 根对象通常是从某种模式生成实例，该模式类型并不总是可行对象实例时的"工厂"。</span><span class="sxs-lookup"><span data-stu-id="cac69-115">This setting is relevant to some XAML implementations such as WPF where the root object is often a "factory" for generating an instance from a pattern type, when that pattern type is not always a practical object instance.</span></span> <span data-ttu-id="cac69-116">例如，根`UserControl`具有特定含义，对于 WPF 和 Silverlight 应用程序模型，和`UserControl`可能具有受保护属性 (`UserControl.Content`) 分析程序需要的访问权限。</span><span class="sxs-lookup"><span data-stu-id="cac69-116">For example, a root of `UserControl` has a certain meaning for WPF and Silverlight application models, and `UserControl` might have protected properties (`UserControl.Content`) that the parser needs access to.</span></span> <span data-ttu-id="cac69-117">工具和设计图面还需要对此类属性的访问。</span><span class="sxs-lookup"><span data-stu-id="cac69-117">Tools and design surfaces also need access to such properties.</span></span> <span data-ttu-id="cac69-118">这种情况下应通常被视为与 XAML 类型系统可写属性即使它们具有在后备类型系统中受保护的访问。</span><span class="sxs-lookup"><span data-stu-id="cac69-118">These cases should generally be reported to the XAML type system as writable properties even though they have protected access in the backing type system.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseUri">
      <MemberSignature Language="C#" Value="public Uri BaseUri { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri BaseUri" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlReaderSettings.BaseUri" />
      <MemberSignature Language="VB.NET" Value="Public Property BaseUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ BaseUri { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BaseUri : Uri with get, set" Usage="System.Xaml.XamlReaderSettings.BaseUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cac69-119">获取或设置用于解析相对路径的基 URI。</span><span class="sxs-lookup"><span data-stu-id="cac69-119">Gets or sets the base URI that is used to resolve relative paths.</span></span></summary>
        <value><span data-ttu-id="cac69-120">要使用的基 URI。</span><span class="sxs-lookup"><span data-stu-id="cac69-120">The base URI to use.</span></span> <span data-ttu-id="cac69-121">默认值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="cac69-121">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cac69-122">.NET Framework XAML 服务 API 中的某些 URI 相关属性视为 Uri 的 XAML 命名空间字符串;但是，此属性使用 true<xref:System.Uri>类型。</span><span class="sxs-lookup"><span data-stu-id="cac69-122">Some URI-related properties in the .NET Framework XAML Services API treat URIs for XAML namespaces as strings; however, this property uses the true <xref:System.Uri> type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnoreUidsOnPropertyElements">
      <MemberSignature Language="C#" Value="public bool IgnoreUidsOnPropertyElements { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreUidsOnPropertyElements" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlReaderSettings.IgnoreUidsOnPropertyElements" />
      <MemberSignature Language="VB.NET" Value="Public Property IgnoreUidsOnPropertyElements As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreUidsOnPropertyElements { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IgnoreUidsOnPropertyElements : bool with get, set" Usage="System.Xaml.XamlReaderSettings.IgnoreUidsOnPropertyElements" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cac69-123">获取或设置一个值，该值指定 XAML 读取器是否应忽略存在于属性元素上的 <see langword="x:Uid" /> 特性的值。</span><span class="sxs-lookup"><span data-stu-id="cac69-123">Gets or sets a value that specifies whether the XAML reader should ignore values for <see langword="x:Uid" /> attributes that exist on property elements.</span></span></summary>
        <value><span data-ttu-id="cac69-124">如果读取器应忽略属性元素 <see langword="true" /> 特性的值，则为 <see langword="x:Uid" />。</span><span class="sxs-lookup"><span data-stu-id="cac69-124"><see langword="true" /> if the reader should ignore values for <see langword="x:Uid" /> attributes on property elements.</span></span> <span data-ttu-id="cac69-125">如果读取器应处理属性元素的 <see langword="false" /> 特性，则为 <see langword="x:Uid" />。</span><span class="sxs-lookup"><span data-stu-id="cac69-125"><see langword="false" /> if the reader should process <see langword="x:Uid" /> attributes on property elements.</span></span> <span data-ttu-id="cac69-126">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="cac69-126">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cac69-127">在本地化过程`x:Uid`属性用于标识标记中的元素，以便本地化工具可以处理作为离散实体用于本地化 XAML 元素。</span><span class="sxs-lookup"><span data-stu-id="cac69-127">During localization, the `x:Uid` attribute is used to identify elements in markup so that localization tools can process XAML elements as discrete entities for localization.</span></span> <span data-ttu-id="cac69-128">属性通常不显示在 XAML 中的属性元素中。</span><span class="sxs-lookup"><span data-stu-id="cac69-128">Attributes do not usually appear on property elements in XAML.</span></span> <span data-ttu-id="cac69-129">但是，`x:Uid`是一个例外，因为某些用法放置中的属性元素的本地化的文本作为内容，而不是为单独的对象可以接收其自身`x:Uid`。</span><span class="sxs-lookup"><span data-stu-id="cac69-129">However, `x:Uid` is an exception because some usages put localized text in a property element as content, instead of as a separate object that can receive its own `x:Uid`.</span></span> <span data-ttu-id="cac69-130">设置<xref:System.Xaml.XamlReaderSettings.IgnoreUidsOnPropertyElements%2A>值设为`true`启用更严格模式。</span><span class="sxs-lookup"><span data-stu-id="cac69-130">Setting an <xref:System.Xaml.XamlReaderSettings.IgnoreUidsOnPropertyElements%2A> value to `true` enables a stricter mode.</span></span> <span data-ttu-id="cac69-131">默认值`false`继续处理属性元素`x:Uid`属性。</span><span class="sxs-lookup"><span data-stu-id="cac69-131">The default value of `false` continues to process property element `x:Uid` attributes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalAssembly">
      <MemberSignature Language="C#" Value="public System.Reflection.Assembly LocalAssembly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Assembly LocalAssembly" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlReaderSettings.LocalAssembly" />
      <MemberSignature Language="VB.NET" Value="Public Property LocalAssembly As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::Assembly ^ LocalAssembly { System::Reflection::Assembly ^ get(); void set(System::Reflection::Assembly ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LocalAssembly : System.Reflection.Assembly with get, set" Usage="System.Xaml.XamlReaderSettings.LocalAssembly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cac69-132">获取或设置表示要处理的当前本地程序集的对象。</span><span class="sxs-lookup"><span data-stu-id="cac69-132">Gets or sets the object that represents the current local assembly for processing.</span></span> <span data-ttu-id="cac69-133">此程序集信息用于调用帮助器 API，例如 <see cref="M:System.Xaml.XamlType.GetAllMembers" />。</span><span class="sxs-lookup"><span data-stu-id="cac69-133">This assembly information is used for calls to helper APIs such as <see cref="M:System.Xaml.XamlType.GetAllMembers" />.</span></span></summary>
        <value><span data-ttu-id="cac69-134">CLR 反射 <see cref="T:System.Reflection.Assembly" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="cac69-134">A CLR reflection <see cref="T:System.Reflection.Assembly" /> object.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProvideLineInfo">
      <MemberSignature Language="C#" Value="public bool ProvideLineInfo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProvideLineInfo" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlReaderSettings.ProvideLineInfo" />
      <MemberSignature Language="VB.NET" Value="Public Property ProvideLineInfo As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ProvideLineInfo { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ProvideLineInfo : bool with get, set" Usage="System.Xaml.XamlReaderSettings.ProvideLineInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cac69-135">获取或设置一个值，该值指定读取器是否可提供行号和位置。</span><span class="sxs-lookup"><span data-stu-id="cac69-135">Gets or sets a value that specifies whether the reader can provide line number and position.</span></span></summary>
        <value><span data-ttu-id="cac69-136">如果读取器可提供行号和位置信息，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="cac69-136"><see langword="true" /> if the reader can provide line number and position information; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cac69-137"><xref:System.Xaml.XamlReaderSettings.ProvideLineInfo%2A> 是`false`在对象模型中; 但是，它可以设置为`true`在运行时根据加载可执行文件和其调试设置。</span><span class="sxs-lookup"><span data-stu-id="cac69-137"><xref:System.Xaml.XamlReaderSettings.ProvideLineInfo%2A> is `false` in the object model; however, it can be set to `true` at run time based on the loaded executables and their debug settings.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValuesMustBeString">
      <MemberSignature Language="C#" Value="public bool ValuesMustBeString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValuesMustBeString" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlReaderSettings.ValuesMustBeString" />
      <MemberSignature Language="VB.NET" Value="Public Property ValuesMustBeString As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ValuesMustBeString { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ValuesMustBeString : bool with get, set" Usage="System.Xaml.XamlReaderSettings.ValuesMustBeString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cac69-138">获取或设置一个值，该值指定读取器是否强制将所有 <see langword="Value" /> 节点处理为 <see langword="String" /> 类型。</span><span class="sxs-lookup"><span data-stu-id="cac69-138">Gets or sets a value that specifies whether the reader enforces that all <see langword="Value" /> nodes are processed as a <see langword="String" /> type.</span></span></summary>
        <value><span data-ttu-id="cac69-139">如果读取器强制在 <see langword="true" /> 节点中仅含 <see langword="String" />，则为 <see langword="Value" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="cac69-139"><see langword="true" /> if the reader enforces that only <see langword="String" /> is contained in <see langword="Value" /> nodes; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="cac69-140">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="cac69-140">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cac69-141">除了<xref:System.String>，可能发生`Value`在某些 XAML 实现的内容是<xref:System.Windows.Markup.XData>。</span><span class="sxs-lookup"><span data-stu-id="cac69-141">In addition to <xref:System.String>, a possible `Value` content under some XAML implementations is <xref:System.Windows.Markup.XData>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>