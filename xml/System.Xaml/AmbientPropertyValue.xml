<Type Name="AmbientPropertyValue" FullName="System.Xaml.AmbientPropertyValue">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f6af58c20c5950eead76a68ac2c6208b839262cb" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="64175074" /></Metadata><TypeSignature Language="C#" Value="public class AmbientPropertyValue" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AmbientPropertyValue extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.AmbientPropertyValue" />
  <TypeSignature Language="VB.NET" Value="Public Class AmbientPropertyValue" />
  <TypeSignature Language="C++ CLI" Value="public ref class AmbientPropertyValue" />
  <TypeSignature Language="F#" Value="type AmbientPropertyValue = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>报告有关环境属性的信息，作为 <see cref="T:System.Xaml.IAmbientProvider" /> 实现的一部分。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xaml.AmbientPropertyValue> 表示通过调用返回的信息项<xref:System.Xaml.IAmbientProvider>服务方法。 `GetAll`方法返回枚举或数组<xref:System.Xaml.AmbientPropertyValue>项;`GetFirst`方法返回单个<xref:System.Xaml.AmbientPropertyValue>。  
  
## <a name="about-ambient-properties"></a>有关环境属性  
 环境属性是其属性值应为 XAML 节点结构中的值转换器用法和其下的对象图可用属性。 在加载路径的对象写入阶段或保存的序列化阶段期间的环境概念是 XAML 处理器相关路径。  
  
 一种类型还可能被由于环境。 在这种情况下，使用特性化的类型的所有属性都报告为环境。  
  
 在加载路径的情况下，环境属性值可能会影响其下存在 XAML 节点结构中的其他属性的对象关系图生成值。 当处理为 XAML 节点流，环境的概念意味着环境属性值必须是可用于类型转换器和标记扩展`StartObject`到`EndObject`。 同样，类型转换器或标记扩展使用该保存路径可以查找环境属性和它的值。 因此，XAML 生成的是更好的往返过程表示形式。  
  
 根据其语言定义，XAML 不会指定必须处理对象的成员的顺序。 但是，任何环境属性值都必须首先由 XAML 读取器处理，以便其他属性中包含的类型转换器和标记扩展用法可以访问通过<xref:System.Xaml.IAmbientProvider>服务。  
  
 <xref:System.Xaml.XamlMember.DependsOn%2A> 是一个类似的概念，还会影响 XAML 节点处理顺序。 但是，<xref:System.Xaml.XamlMember.DependsOn%2A>仅用于对等成员和节点关系; 因此不可能影响所有后代。 此外，<xref:System.Xaml.XamlMember.DependsOn%2A>直接影响对象关系图属性设置，而环境技术依赖于类型转换器或标记扩展。 在环境的技术，还必须有特定的类型转换器或标记扩展定义。 负责每个类型转换器或标记扩展，以确定应如何解释和应用于使用类型转换器或标记扩展的对象关系图位置的环境属性值。  
  
## <a name="wpf-usage-notes"></a>WPF 用法说明  
 中所示的环境属性方案[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]功能集是<xref:System.Windows.Style.TargetType%2A?displayProperty=nameWithType>，可以限定必要的属性名称查找有关其他值。 在这种情况下，<xref:System.Windows.Style.TargetType%2A?displayProperty=nameWithType>值限定<xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType>中下面的 XAML 节点的值。 <xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType> 使用的类型转换器行为<xref:System.Windows.DependencyProperty>。 此行为访问环境<xref:System.Windows.Style.TargetType%2A?displayProperty=nameWithType>通过查询值<xref:System.Xaml.IAmbientProvider.GetFirstAmbientValue%2A>从可用于类型转换器和标记扩展的服务上下文。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xaml.IAmbientProvider" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AmbientPropertyValue (System.Xaml.XamlMember property, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xaml.XamlMember property, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.AmbientPropertyValue.#ctor(System.Xaml.XamlMember,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (property As XamlMember, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AmbientPropertyValue(System::Xaml::XamlMember ^ property, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="new System.Xaml.AmbientPropertyValue : System.Xaml.XamlMember * obj -&gt; System.Xaml.AmbientPropertyValue" Usage="new System.Xaml.AmbientPropertyValue (property, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="property" Type="System.Xaml.XamlMember" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="property">表示环境属性的标识符。</param>
        <param name="value">要报告的值。</param>
        <summary>初始化 <see cref="T:System.Xaml.AmbientPropertyValue" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RetrievedProperty">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlMember RetrievedProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlMember RetrievedProperty" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.AmbientPropertyValue.RetrievedProperty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RetrievedProperty As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlMember ^ RetrievedProperty { System::Xaml::XamlMember ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RetrievedProperty : System.Xaml.XamlMember" Usage="System.Xaml.AmbientPropertyValue.RetrievedProperty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取表示环境属性的 XAML 类型系统标识符 (<see cref="T:System.Xaml.XamlMember" />)。</summary>
        <value>表示环境属性的标识符。</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Markup.AmbientAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.AmbientPropertyValue.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Value { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : obj" Usage="System.Xaml.AmbientPropertyValue.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取环境属性的值。</summary>
        <value>环境属性的值。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>