<Type Name="XmlAttributeAttribute" FullName="System.Xml.Serialization.XmlAttributeAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6bb1012587e580f2c0bca2655c14f0bc8e8744f4" /><Meta Name="ms.sourcegitcommit" Value="a22d0855bbf24d893f43605f8b7e3a44bd9551a5" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70358292" /></Metadata><TypeSignature Language="C#" Value="public class XmlAttributeAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlAttributeAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlAttributeAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlAttributeAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlAttributeAttribute : Attribute" />
  <TypeSignature Language="F#" Value="type XmlAttributeAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.Serialization</AssemblyName>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netstandard-2.0;netcore-2.2;dotnet-uwp-10.0;netstandard-2.1;netcore-1.0;netcore-1.1;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.Property | System.AttributeTargets.ReturnValue)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="3753a-101">指定 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 必须将类成员序列化为 XML 属性。</span><span class="sxs-lookup"><span data-stu-id="3753a-101">Specifies that the <see cref="T:System.Xml.Serialization.XmlSerializer" /> must serialize the class member as an XML attribute.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3753a-102">属于控制<xref:System.Xml.Serialization.XmlSerializer>序列化或反序列化对象的方式的一系列属性。 <xref:System.Xml.Serialization.XmlAttributeAttribute></span><span class="sxs-lookup"><span data-stu-id="3753a-102">The <xref:System.Xml.Serialization.XmlAttributeAttribute> belongs to a family of attributes that controls how the <xref:System.Xml.Serialization.XmlSerializer> serializes, or deserializes, an object.</span></span> <span data-ttu-id="3753a-103">有关类似属性的完整列表，请参阅[控制 XML 序列化的属性](~/docs/standard/serialization/attributes-that-control-xml-serialization.md)。</span><span class="sxs-lookup"><span data-stu-id="3753a-103">For a complete list of similar attributes, see [Attributes That Control XML Serialization](~/docs/standard/serialization/attributes-that-control-xml-serialization.md).</span></span>  
  
 <span data-ttu-id="3753a-104">当应用于公共字段或属性时， <xref:System.Xml.Serialization.XmlAttributeAttribute>会<xref:System.Xml.Serialization.XmlSerializer>通知将成员序列化为 XML 特性。</span><span class="sxs-lookup"><span data-stu-id="3753a-104">When applied to a public field or property, the <xref:System.Xml.Serialization.XmlAttributeAttribute> informs the <xref:System.Xml.Serialization.XmlSerializer> to serialize the member as an XML attribute.</span></span> <span data-ttu-id="3753a-105">默认情况下， <xref:System.Xml.Serialization.XmlSerializer>将公共字段和属性序列化为 XML 元素。</span><span class="sxs-lookup"><span data-stu-id="3753a-105">By default, the <xref:System.Xml.Serialization.XmlSerializer> serializes public fields and properties as XML elements.</span></span>  
  
 <span data-ttu-id="3753a-106">您可以<xref:System.Xml.Serialization.XmlAttributeAttribute>仅将返回一个值（或值数组）的公共字段或公共属性分配给一个 XML 架构定义语言（xsd）简单类型（包括从 XSD `anySimpleType`派生的所有内置数据类型）类型）。</span><span class="sxs-lookup"><span data-stu-id="3753a-106">You can assign the <xref:System.Xml.Serialization.XmlAttributeAttribute> only to public fields or public properties that return a value (or array of values) that can be mapped to one of the XML Schema definition language (XSD) simple types (including all built-in datatypes derived from the XSD `anySimpleType` type).</span></span> <span data-ttu-id="3753a-107">可能的类型包括可以映射到 XSD 简单类型的任何类型，包括<xref:System.Guid>、 <xref:System.Char>和枚举。</span><span class="sxs-lookup"><span data-stu-id="3753a-107">The possible types include any that can be mapped to the XSD simple types, including <xref:System.Guid>, <xref:System.Char>, and enumerations.</span></span> <span data-ttu-id="3753a-108">有关 XSD 类型的列表以及如何将它们映射到 to.NET 数据类型，请参阅属性。<xref:System.Xml.Serialization.XmlAttributeAttribute.DataType%2A></span><span class="sxs-lookup"><span data-stu-id="3753a-108">See the <xref:System.Xml.Serialization.XmlAttributeAttribute.DataType%2A> property for a list of XSD types and how they are mapped to.NET data types.</span></span>  
  
 <span data-ttu-id="3753a-109">可以通过<xref:System.Xml.Serialization.XmlAttributeAttribute>以下两种特殊特性设置`xml:lang` ：（指定语言）和`xml:space` （指定如何处理空白）特性。</span><span class="sxs-lookup"><span data-stu-id="3753a-109">There are two special attributes that can be set with the <xref:System.Xml.Serialization.XmlAttributeAttribute> : the `xml:lang` (specifies language) and `xml:space` (specifies how to handle white space) attributes.</span></span> <span data-ttu-id="3753a-110">这些特性旨在传达与处理 XML 的应用程序相关的信息。</span><span class="sxs-lookup"><span data-stu-id="3753a-110">These attributes are intended to convey information that is relevant only to an application processing the XML.</span></span> <span data-ttu-id="3753a-111">下面的代码演示了设置这些设置的示例。</span><span class="sxs-lookup"><span data-stu-id="3753a-111">Examples of setting these are shown in the following code.</span></span>  
  
```csharp  
[XmlAttribute("xml:lang")]  
 public string Lang;  
 // Set this to 'default' or 'preserve'.  
 [XmlAttribute("space",   
 Namespace = "http://www.w3.org/XML/1998/namespace")]  
 public string Space 
 ```

 ```vb 
 <XmlAttribute("xml:lang")> _  
 Public Lang As String   
 ' Set this to 'default' or 'preserve'.  
 <XmlAttribute("space", _  
 Namespace:= "http://www.w3.org/XML/1998/namespace")> _  
 Public Space As String  
```  
  
 <span data-ttu-id="3753a-112">有关使用特性的详细信息，请参阅[特性](~/docs/standard/attributes/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3753a-112">For more information about using attributes, see [Attributes](~/docs/standard/attributes/index.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3753a-113">您可以在代码中`XmlAttribute`使用该单词而不是更<xref:System.Xml.Serialization.XmlAttributeAttribute>长的时间。</span><span class="sxs-lookup"><span data-stu-id="3753a-113">You can use the word `XmlAttribute` in your code instead of the longer <xref:System.Xml.Serialization.XmlAttributeAttribute>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3753a-114">下面的示例序列化一个类，其中包含要应用的<xref:System.Xml.Serialization.XmlAttributeAttribute>多个字段。</span><span class="sxs-lookup"><span data-stu-id="3753a-114">The following example serializes a class that contains several fields to which the <xref:System.Xml.Serialization.XmlAttributeAttribute> is applied.</span></span>  
  
 [!code-cpp[Classic XmlAttributeAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributeAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributeAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributeAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3753a-115">初始化 <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="3753a-115">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlAttributeAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlAttributeAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlAttributeAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3753a-116">初始化 <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="3753a-116">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[XMLAttributeAttribute_ctr1_2#1](~/samples/snippets/cpp/VS_Snippets_Remoting/XMLAttributeAttribute_ctr1_2/CPP/xmlAttributeAttribute_ctr1_2.cpp#1)]
 [!code-csharp[XMLAttributeAttribute_ctr1_2#1](~/samples/snippets/csharp/VS_Snippets_Remoting/XMLAttributeAttribute_ctr1_2/CS/xmlattributeattribute_ctr1_2.cs#1)]
 [!code-vb[XMLAttributeAttribute_ctr1_2#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XMLAttributeAttribute_ctr1_2/VB/xmlattributeattribute_ctr1_2.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlAttributeAttribute (string attributeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string attributeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlAttributeAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (attributeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlAttributeAttribute(System::String ^ attributeName);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlAttributeAttribute : string -&gt; System.Xml.Serialization.XmlAttributeAttribute" Usage="new System.Xml.Serialization.XmlAttributeAttribute attributeName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="attributeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="attributeName"><span data-ttu-id="3753a-117"><see cref="T:System.Xml.Serialization.XmlSerializer" /> 生成的 XML 特性的名称。</span><span class="sxs-lookup"><span data-stu-id="3753a-117">The name of the XML attribute that the <see cref="T:System.Xml.Serialization.XmlSerializer" /> generates.</span></span></param>
        <summary><span data-ttu-id="3753a-118">初始化 <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" /> 类的新实例，并指定生成的 XML 属性的名称。</span><span class="sxs-lookup"><span data-stu-id="3753a-118">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" /> class and specifies the name of the generated XML attribute.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[XMLAttributeAttribute_ctr1_2#2](~/samples/snippets/cpp/VS_Snippets_Remoting/XMLAttributeAttribute_ctr1_2/CPP/xmlAttributeAttribute_ctr1_2.cpp#2)]
 [!code-csharp[XMLAttributeAttribute_ctr1_2#2](~/samples/snippets/csharp/VS_Snippets_Remoting/XMLAttributeAttribute_ctr1_2/CS/xmlattributeattribute_ctr1_2.cs#2)]
 [!code-vb[XMLAttributeAttribute_ctr1_2#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XMLAttributeAttribute_ctr1_2/VB/xmlattributeattribute_ctr1_2.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlAttributeAttribute (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlAttributeAttribute.#ctor(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlAttributeAttribute(Type ^ type);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlAttributeAttribute : Type -&gt; System.Xml.Serialization.XmlAttributeAttribute" Usage="new System.Xml.Serialization.XmlAttributeAttribute type" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="3753a-119">用来存储特性的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="3753a-119">The <see cref="T:System.Type" /> used to store the attribute.</span></span></param>
        <summary><span data-ttu-id="3753a-120">初始化 <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="3753a-120">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlAttributeAttribute (string attributeName, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string attributeName, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlAttributeAttribute.#ctor(System.String,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlAttributeAttribute(System::String ^ attributeName, Type ^ type);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlAttributeAttribute : string * Type -&gt; System.Xml.Serialization.XmlAttributeAttribute" Usage="new System.Xml.Serialization.XmlAttributeAttribute (attributeName, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="attributeName" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="attributeName"><span data-ttu-id="3753a-121">生成的 XML 特性的名称。</span><span class="sxs-lookup"><span data-stu-id="3753a-121">The name of the XML attribute that is generated.</span></span></param>
        <param name="type"><span data-ttu-id="3753a-122">用来存储特性的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="3753a-122">The <see cref="T:System.Type" /> used to store the attribute.</span></span></param>
        <summary><span data-ttu-id="3753a-123">初始化 <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="3753a-123">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AttributeName">
      <MemberSignature Language="C#" Value="public string AttributeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AttributeName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributeAttribute.AttributeName" />
      <MemberSignature Language="VB.NET" Value="Public Property AttributeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AttributeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AttributeName : string with get, set" Usage="System.Xml.Serialization.XmlAttributeAttribute.AttributeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3753a-124">获取或设置 XML 属性的名称。</span><span class="sxs-lookup"><span data-stu-id="3753a-124">Gets or sets the name of the XML attribute.</span></span></summary>
        <value><span data-ttu-id="3753a-125">XML 属性的名称。</span><span class="sxs-lookup"><span data-stu-id="3753a-125">The name of the XML attribute.</span></span> <span data-ttu-id="3753a-126">默认值为成员名称。</span><span class="sxs-lookup"><span data-stu-id="3753a-126">The default is the member name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3753a-127">当不<xref:System.Xml.Serialization.XmlAttributeAttribute.AttributeName%2A>能使用默认值时，请使用属性指定 XML 特性名称。</span><span class="sxs-lookup"><span data-stu-id="3753a-127">Use the <xref:System.Xml.Serialization.XmlAttributeAttribute.AttributeName%2A> property to specify an XML attribute name when the default value cannot be used.</span></span> <span data-ttu-id="3753a-128">例如，如果 XML 属性名称作为成员标识符无效，则可以在将设置<xref:System.Xml.Serialization.XmlAttributeAttribute.AttributeName%2A>为无效名称时使用标识符的有效名称。</span><span class="sxs-lookup"><span data-stu-id="3753a-128">For example, if the XML attribute name is invalid as a member identifier, you can use a valid name for the identifier while setting the <xref:System.Xml.Serialization.XmlAttributeAttribute.AttributeName%2A> to an invalid name.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3753a-129">下面的示例设置<xref:System.Xml.Serialization.XmlAttributeAttribute.AttributeName%2A>的属性。 <xref:System.Xml.Serialization.XmlAttributeAttribute></span><span class="sxs-lookup"><span data-stu-id="3753a-129">The following example sets the <xref:System.Xml.Serialization.XmlAttributeAttribute.AttributeName%2A> property of an <xref:System.Xml.Serialization.XmlAttributeAttribute>.</span></span>  
  
 [!code-cpp[Classic XmlAttributeAttribute.AttributeName Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributeAttribute.AttributeName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributeAttribute.AttributeName Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributeAttribute.AttributeName Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributeAttribute.AttributeName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributeAttribute.AttributeName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.Serialization.XmlElementAttribute.ElementName" />
      </Docs>
    </Member>
    <Member MemberName="DataType">
      <MemberSignature Language="C#" Value="public string DataType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributeAttribute.DataType" />
      <MemberSignature Language="VB.NET" Value="Public Property DataType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataType : string with get, set" Usage="System.Xml.Serialization.XmlAttributeAttribute.DataType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3753a-130">获取或设置 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 生成的 XML 属性的 XSD 数据类型。</span><span class="sxs-lookup"><span data-stu-id="3753a-130">Gets or sets the XSD data type of the XML attribute generated by the <see cref="T:System.Xml.Serialization.XmlSerializer" />.</span></span></summary>
        <value><span data-ttu-id="3753a-131">XSD （XML 架构文档）数据类型。</span><span class="sxs-lookup"><span data-stu-id="3753a-131">An XSD (XML Schema Document) data type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3753a-132">下表列出了具有 their.NET 等效项的 XSD 简单数据类型。</span><span class="sxs-lookup"><span data-stu-id="3753a-132">The following table lists the XSD simple data types with their.NET equivalents.</span></span>  
  
 <span data-ttu-id="3753a-133">`base64Binary`对于 XSD <xref:System.Xml.Serialization.XmlAttributeAttribute.DataType%2A>和`hexBinary`数据类型<xref:System.Byte> ，请使用结构数组，并根据需要将属性<xref:System.Xml.Serialization.XmlArrayItemAttribute>设置为 "base64Binary" 或 "hexBinary" 的应用。</span><span class="sxs-lookup"><span data-stu-id="3753a-133">For the XSD `base64Binary` and `hexBinary` data types, use an array of <xref:System.Byte> structures, and apply a <xref:System.Xml.Serialization.XmlArrayItemAttribute> with the <xref:System.Xml.Serialization.XmlAttributeAttribute.DataType%2A> property set to "base64Binary" or "hexBinary", as appropriate.</span></span> <span data-ttu-id="3753a-134">`time`对于 XSD <xref:System.Xml.Serialization.XmlAttributeAttribute.DataType%2A>和`date` 数据类型<xref:System.Xml.Serialization.XmlAttributeAttribute> ，请使用类型，并将设置为"日期"或"时间"。<xref:System.DateTime></span><span class="sxs-lookup"><span data-stu-id="3753a-134">For the XSD `time` and `date` data types, use the <xref:System.DateTime> type and apply the <xref:System.Xml.Serialization.XmlAttributeAttribute> with the <xref:System.Xml.Serialization.XmlAttributeAttribute.DataType%2A> set to "date" or "time".</span></span>  
  
 <span data-ttu-id="3753a-135">对于映射到字符串的每个 XSD 类型，应用其<xref:System.Xml.Serialization.XmlAttributeAttribute> <xref:System.Xml.Serialization.XmlAttributeAttribute.DataType%2A>属性设置为 XSD 类型的。</span><span class="sxs-lookup"><span data-stu-id="3753a-135">For every XSD type that is mapped to a string, apply the <xref:System.Xml.Serialization.XmlAttributeAttribute> with its <xref:System.Xml.Serialization.XmlAttributeAttribute.DataType%2A> property set to the XSD type.</span></span> <span data-ttu-id="3753a-136">但是，这不会更改序列化格式，而只会更改成员的架构。</span><span class="sxs-lookup"><span data-stu-id="3753a-136">However, this does not change the serialization format, only the schema for the member.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3753a-137">属性区分大小写，因此必须将其精确设置为 XSD 数据类型之一。</span><span class="sxs-lookup"><span data-stu-id="3753a-137">The property is case-sensitive, so you must set it exactly to one of the XSD data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3753a-138">将二进制数据作为 XML 元素传递比将其作为 XML 特性传递更为有效。</span><span class="sxs-lookup"><span data-stu-id="3753a-138">Passing binary data as an XML element is more efficient than passing it as an XML attribute.</span></span>  
  
 <span data-ttu-id="3753a-139">有关 xml 数据类型的详细信息，请参阅[xml 架构第2部分：万维网联合会](https://www.w3.org/TR/xmlschema-2/)中的数据类型文档。</span><span class="sxs-lookup"><span data-stu-id="3753a-139">For more information about XML data types, see the [XML Schema Part 2: DataTypes](https://www.w3.org/TR/xmlschema-2/) document from the World Wide Web Consortium.</span></span>  
  
|<span data-ttu-id="3753a-140">XSD 数据类型</span><span class="sxs-lookup"><span data-stu-id="3753a-140">XSD data type</span></span>|<span data-ttu-id="3753a-141">.NET 数据类型</span><span class="sxs-lookup"><span data-stu-id="3753a-141">.NET data type</span></span>|  
|-------------------|--------------------|  
|<span data-ttu-id="3753a-142">anyURI</span><span class="sxs-lookup"><span data-stu-id="3753a-142">anyURI</span></span>|<xref:System.String>|  
|<span data-ttu-id="3753a-143">base64Binary</span><span class="sxs-lookup"><span data-stu-id="3753a-143">base64Binary</span></span>|<span data-ttu-id="3753a-144"><xref:System.Byte>对象数组</span><span class="sxs-lookup"><span data-stu-id="3753a-144">Array of <xref:System.Byte> objects</span></span>|  
|<span data-ttu-id="3753a-145">boolean</span><span class="sxs-lookup"><span data-stu-id="3753a-145">boolean</span></span>|<xref:System.Boolean>|  
|<span data-ttu-id="3753a-146">byte</span><span class="sxs-lookup"><span data-stu-id="3753a-146">byte</span></span>|<xref:System.SByte>|  
|<span data-ttu-id="3753a-147">date</span><span class="sxs-lookup"><span data-stu-id="3753a-147">date</span></span>|<xref:System.DateTime>|  
|<span data-ttu-id="3753a-148">dateTime</span><span class="sxs-lookup"><span data-stu-id="3753a-148">dateTime</span></span>|<xref:System.DateTime>|  
|<span data-ttu-id="3753a-149">decimal</span><span class="sxs-lookup"><span data-stu-id="3753a-149">decimal</span></span>|<xref:System.Decimal>|  
|<span data-ttu-id="3753a-150">double</span><span class="sxs-lookup"><span data-stu-id="3753a-150">double</span></span>|<xref:System.Double>|  
|<span data-ttu-id="3753a-151">ENTITY</span><span class="sxs-lookup"><span data-stu-id="3753a-151">ENTITY</span></span>|<xref:System.String>|  
|<span data-ttu-id="3753a-152">条目</span><span class="sxs-lookup"><span data-stu-id="3753a-152">ENTITIES</span></span>|<xref:System.String>|  
|<span data-ttu-id="3753a-153">float</span><span class="sxs-lookup"><span data-stu-id="3753a-153">float</span></span>|<xref:System.Single>|  
|<span data-ttu-id="3753a-154">gDay</span><span class="sxs-lookup"><span data-stu-id="3753a-154">gDay</span></span>|<xref:System.String>|  
|<span data-ttu-id="3753a-155">gMonth</span><span class="sxs-lookup"><span data-stu-id="3753a-155">gMonth</span></span>|<xref:System.String>|  
|<span data-ttu-id="3753a-156">gMonthDay</span><span class="sxs-lookup"><span data-stu-id="3753a-156">gMonthDay</span></span>|<xref:System.String>|  
|<span data-ttu-id="3753a-157">gYear</span><span class="sxs-lookup"><span data-stu-id="3753a-157">gYear</span></span>|<xref:System.String>|  
|<span data-ttu-id="3753a-158">gYearMonth</span><span class="sxs-lookup"><span data-stu-id="3753a-158">gYearMonth</span></span>|<xref:System.String>|  
|<span data-ttu-id="3753a-159">hexBinary</span><span class="sxs-lookup"><span data-stu-id="3753a-159">hexBinary</span></span>|<span data-ttu-id="3753a-160"><xref:System.Byte>对象数组</span><span class="sxs-lookup"><span data-stu-id="3753a-160">Array of <xref:System.Byte> objects</span></span>|  
|<span data-ttu-id="3753a-161">Id</span><span class="sxs-lookup"><span data-stu-id="3753a-161">ID</span></span>|<xref:System.String>|  
|<span data-ttu-id="3753a-162">IDREF</span><span class="sxs-lookup"><span data-stu-id="3753a-162">IDREF</span></span>|<xref:System.String>|  
|<span data-ttu-id="3753a-163">IDREFS</span><span class="sxs-lookup"><span data-stu-id="3753a-163">IDREFS</span></span>|<xref:System.String>|  
|<span data-ttu-id="3753a-164">int</span><span class="sxs-lookup"><span data-stu-id="3753a-164">int</span></span>|<xref:System.Int32>|  
|<span data-ttu-id="3753a-165">整数</span><span class="sxs-lookup"><span data-stu-id="3753a-165">integer</span></span>|<xref:System.String>|  
|<span data-ttu-id="3753a-166">语言</span><span class="sxs-lookup"><span data-stu-id="3753a-166">language</span></span>|<xref:System.String>|  
|<span data-ttu-id="3753a-167">long</span><span class="sxs-lookup"><span data-stu-id="3753a-167">long</span></span>|<xref:System.Int64>|  
|<span data-ttu-id="3753a-168">name</span><span class="sxs-lookup"><span data-stu-id="3753a-168">Name</span></span>|<xref:System.String>|  
|<span data-ttu-id="3753a-169">NCName</span><span class="sxs-lookup"><span data-stu-id="3753a-169">NCName</span></span>|<xref:System.String>|  
|<span data-ttu-id="3753a-170">negativeInteger</span><span class="sxs-lookup"><span data-stu-id="3753a-170">negativeInteger</span></span>|<xref:System.String>|  
|<span data-ttu-id="3753a-171">NMTOKEN</span><span class="sxs-lookup"><span data-stu-id="3753a-171">NMTOKEN</span></span>|<xref:System.String>|  
|<span data-ttu-id="3753a-172">NMTOKENS</span><span class="sxs-lookup"><span data-stu-id="3753a-172">NMTOKENS</span></span>|<xref:System.String>|  
|<span data-ttu-id="3753a-173">normalizedString</span><span class="sxs-lookup"><span data-stu-id="3753a-173">normalizedString</span></span>|<xref:System.String>|  
|<span data-ttu-id="3753a-174">nonNegativeInteger</span><span class="sxs-lookup"><span data-stu-id="3753a-174">nonNegativeInteger</span></span>|<xref:System.String>|  
|<span data-ttu-id="3753a-175">nonPositiveInteger</span><span class="sxs-lookup"><span data-stu-id="3753a-175">nonPositiveInteger</span></span>|<xref:System.String>|  
|<span data-ttu-id="3753a-176">NOTATION</span><span class="sxs-lookup"><span data-stu-id="3753a-176">NOTATION</span></span>|<xref:System.String>|  
|<span data-ttu-id="3753a-177">positiveInteger</span><span class="sxs-lookup"><span data-stu-id="3753a-177">positiveInteger</span></span>|<xref:System.String>|  
|<span data-ttu-id="3753a-178">QName</span><span class="sxs-lookup"><span data-stu-id="3753a-178">QName</span></span>|<xref:System.Xml.XmlQualifiedName>|  
|<span data-ttu-id="3753a-179">duration</span><span class="sxs-lookup"><span data-stu-id="3753a-179">duration</span></span>|<xref:System.String>|  
|<span data-ttu-id="3753a-180">string</span><span class="sxs-lookup"><span data-stu-id="3753a-180">string</span></span>|<xref:System.String>|  
|<span data-ttu-id="3753a-181">short</span><span class="sxs-lookup"><span data-stu-id="3753a-181">short</span></span>|<xref:System.Int16>|  
|<span data-ttu-id="3753a-182">time</span><span class="sxs-lookup"><span data-stu-id="3753a-182">time</span></span>|<xref:System.DateTime>|  
|<span data-ttu-id="3753a-183">token</span><span class="sxs-lookup"><span data-stu-id="3753a-183">token</span></span>|<xref:System.String>|  
|<span data-ttu-id="3753a-184">unsignedByte</span><span class="sxs-lookup"><span data-stu-id="3753a-184">unsignedByte</span></span>|<xref:System.Byte>|  
|<span data-ttu-id="3753a-185">unsignedInt</span><span class="sxs-lookup"><span data-stu-id="3753a-185">unsignedInt</span></span>|<xref:System.UInt32>|  
|<span data-ttu-id="3753a-186">unsignedLong</span><span class="sxs-lookup"><span data-stu-id="3753a-186">unsignedLong</span></span>|<xref:System.UInt64>|  
|<span data-ttu-id="3753a-187">unsignedShort</span><span class="sxs-lookup"><span data-stu-id="3753a-187">unsignedShort</span></span>|<xref:System.UInt16>|  
  
   
  
## Examples  
 <span data-ttu-id="3753a-188">下面的示例将应用<xref:System.Xml.Serialization.XmlAttributeAttribute>到两个成员，并将<xref:System.Xml.Serialization.XmlAttributeAttribute.DataType%2A>属性设置为不同的值。</span><span class="sxs-lookup"><span data-stu-id="3753a-188">The following example applies the <xref:System.Xml.Serialization.XmlAttributeAttribute> to two members, and sets the <xref:System.Xml.Serialization.XmlAttributeAttribute.DataType%2A> property set to different values.</span></span>  
  
 [!code-cpp[Classic XmlAttributeAttribute.DataType Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributeAttribute.DataType Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributeAttribute.DataType Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributeAttribute.DataType Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributeAttribute.DataType Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributeAttribute.DataType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Form">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaForm Form { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.Schema.XmlSchemaForm Form" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributeAttribute.Form" />
      <MemberSignature Language="VB.NET" Value="Public Property Form As XmlSchemaForm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaForm Form { System::Xml::Schema::XmlSchemaForm get(); void set(System::Xml::Schema::XmlSchemaForm value); };" />
      <MemberSignature Language="F#" Value="member this.Form : System.Xml.Schema.XmlSchemaForm with get, set" Usage="System.Xml.Serialization.XmlAttributeAttribute.Form" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaForm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3753a-189">获取或设置一个值，该值指示 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 生成的 XML 属性名称是否是限定的。</span><span class="sxs-lookup"><span data-stu-id="3753a-189">Gets or sets a value that indicates whether the XML attribute name generated by the <see cref="T:System.Xml.Serialization.XmlSerializer" /> is qualified.</span></span></summary>
        <value><span data-ttu-id="3753a-190"><see cref="T:System.Xml.Schema.XmlSchemaForm" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="3753a-190">One of the <see cref="T:System.Xml.Schema.XmlSchemaForm" /> values.</span></span> <span data-ttu-id="3753a-191">默认值为 <see langword="XmlForm.None" />。</span><span class="sxs-lookup"><span data-stu-id="3753a-191">The default is <see langword="XmlForm.None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3753a-192"><xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A>属性确定 XML 元素是否是限定的或非限定的。</span><span class="sxs-lookup"><span data-stu-id="3753a-192">The <xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A> property determines whether an XML element is qualified or unqualified.</span></span> <span data-ttu-id="3753a-193">属性符合 1999 http://www.w3.org规范`Namespaces in XML`。 <xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A></span><span class="sxs-lookup"><span data-stu-id="3753a-193">The <xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A> property conforms to the 1999 http://www.w3.org specification `Namespaces in XML`.</span></span>  
  
 <span data-ttu-id="3753a-194">如果将<xref:System.Xml.Serialization.XmlElementAttribute.Form%2A> `XmlSchemaForm.Unqualified`属性设置为任何值，尝试将属性设置为会引发异常。 <xref:System.Xml.Serialization.XmlAttributeAttribute.Namespace%2A></span><span class="sxs-lookup"><span data-stu-id="3753a-194">If the <xref:System.Xml.Serialization.XmlAttributeAttribute.Namespace%2A> property is set to any value, attempting to set the <xref:System.Xml.Serialization.XmlElementAttribute.Form%2A> property to `XmlSchemaForm.Unqualified` throws an exception.</span></span>  
  
 <span data-ttu-id="3753a-195">默认设置`XmlSchemaForm.None` <xref:System.Xml.Serialization.XmlSerializer>指示检查 XML 文档的架构，以确定命名空间是否是限定的。</span><span class="sxs-lookup"><span data-stu-id="3753a-195">The default setting, `XmlSchemaForm.None`, instructs the <xref:System.Xml.Serialization.XmlSerializer> to check the schema for the XML document to determine whether the namespace is qualified.</span></span> <span data-ttu-id="3753a-196">如果架构未指定单个元素或属性的值，则将<xref:System.Xml.Serialization.XmlSerializer> `elementFormDefault`使用和`attributeFormDefault`值来确定是否限定了某个元素或属性。</span><span class="sxs-lookup"><span data-stu-id="3753a-196">If the schema does not specify a value for an individual element or attribute, the <xref:System.Xml.Serialization.XmlSerializer> uses the `elementFormDefault` and `attributeFormDefault` values to determine whether an element or attribute is qualified.</span></span> <span data-ttu-id="3753a-197">以下 XML 代码显示了一个架构：</span><span class="sxs-lookup"><span data-stu-id="3753a-197">The following XML code shows a schema:</span></span>  
  
```xml  
<schema elementFormDefault="qualified"   
attributeFormDefault="unqualified"... >  
   <element name="Name"/>  
   <attribute name="Number"/>  
</schema>  
```  
  
 <span data-ttu-id="3753a-198"><xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A> `XmlSchemaForm.None` `Number`当读取架构时， `Name`和`Number`的值为，但`Name`元素是限定的，而元素是非限定的。 <xref:System.Xml.Serialization.XmlSerializer></span><span class="sxs-lookup"><span data-stu-id="3753a-198">When the <xref:System.Xml.Serialization.XmlSerializer> reads the schema, the <xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A> value for both the `Name` and `Number` is `XmlSchemaForm.None`, but the `Name` element is qualified, while the `Number` element is unqualified.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3753a-199">下面的示例将应用<xref:System.Xml.Serialization.XmlAttributeAttribute>于类中包含的两个字段。</span><span class="sxs-lookup"><span data-stu-id="3753a-199">The following example applies the <xref:System.Xml.Serialization.XmlAttributeAttribute> to two fields contained in a class.</span></span>  
  
 [!code-cpp[Classic XmlAttributeAttribute.Form Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributeAttribute.Form Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributeAttribute.Form Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributeAttribute.Form Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributeAttribute.Form Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributeAttribute.Form Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributeAttribute.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : string with get, set" Usage="System.Xml.Serialization.XmlAttributeAttribute.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3753a-200">获取或设置 XML 属性的 XML 命名空间。</span><span class="sxs-lookup"><span data-stu-id="3753a-200">Gets or sets the XML namespace of the XML attribute.</span></span></summary>
        <value><span data-ttu-id="3753a-201">XML 属性的 XML 命名空间。</span><span class="sxs-lookup"><span data-stu-id="3753a-201">The XML namespace of the XML attribute.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3753a-202"><xref:System.Xml.Serialization.XmlAttributeAttribute.Namespace%2A>属性符合http://www.w3.org规范。 `Namespaces in XML`</span><span class="sxs-lookup"><span data-stu-id="3753a-202">The <xref:System.Xml.Serialization.XmlAttributeAttribute.Namespace%2A> property conforms to the http://www.w3.org specification `Namespaces in XML`.</span></span>  
  
 <span data-ttu-id="3753a-203">若要创建与前缀关联的命名空间，则必须创建<xref:System.Xml.Serialization.XmlSerializerNamespaces>一个对象，该对象包含 XML 文档中使用的命名空间和前缀。</span><span class="sxs-lookup"><span data-stu-id="3753a-203">To create namespaces that are associated with prefixes, you must create an <xref:System.Xml.Serialization.XmlSerializerNamespaces> object that contains the namespaces and prefixes used in the XML document.</span></span> <span data-ttu-id="3753a-204">为每个<xref:System.Xml.Serialization.XmlAttributeAttribute>设置的命名空间必须与<xref:System.Xml.Serialization.XmlSerializerNamespaces>对象中的一个命名空间匹配。</span><span class="sxs-lookup"><span data-stu-id="3753a-204">The namespace you set for each <xref:System.Xml.Serialization.XmlAttributeAttribute> must match one of the namespaces in the <xref:System.Xml.Serialization.XmlSerializerNamespaces> object.</span></span> <span data-ttu-id="3753a-205">当生成<xref:System.Xml.Serialization.XmlSerializer> XML 代码时，它会对每个属性名称进行正确的前缀。</span><span class="sxs-lookup"><span data-stu-id="3753a-205">When the <xref:System.Xml.Serialization.XmlSerializer> generates the XML code, it correctly prefixes each attribute name.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3753a-206">下面的示例将应用<xref:System.Xml.Serialization.XmlAttributeAttribute>于类中包含的两个字段。</span><span class="sxs-lookup"><span data-stu-id="3753a-206">The following example applies the <xref:System.Xml.Serialization.XmlAttributeAttribute> to two fields contained in a class.</span></span> <span data-ttu-id="3753a-207">该示例将每<xref:System.Xml.Serialization.XmlAttributeAttribute.Namespace%2A>个属性的属性设置为与成员标识符不同的值。</span><span class="sxs-lookup"><span data-stu-id="3753a-207">The example sets the <xref:System.Xml.Serialization.XmlAttributeAttribute.Namespace%2A> property for each attribute to a value different from the member identifier.</span></span>  
  
 [!code-cpp[Classic XmlAttributeAttribute.Namespace Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributeAttribute.Namespace Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributeAttribute.Namespace Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributeAttribute.Namespace Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributeAttribute.Namespace Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributeAttribute.Namespace Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Type Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Type" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributeAttribute.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ Type { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Type : Type with get, set" Usage="System.Xml.Serialization.XmlAttributeAttribute.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3753a-208">获取或设置 XML 属性的复杂类型。</span><span class="sxs-lookup"><span data-stu-id="3753a-208">Gets or sets the complex type of the XML attribute.</span></span></summary>
        <value><span data-ttu-id="3753a-209">XML 属性的类型。</span><span class="sxs-lookup"><span data-stu-id="3753a-209">The type of the XML attribute.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
