<Type Name="XmlTypeAttribute" FullName="System.Xml.Serialization.XmlTypeAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="69f8bc7381af446173dc9844069d16bacedd06b3" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70412043" /></Metadata><TypeSignature Language="C#" Value="public class XmlTypeAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlTypeAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlTypeAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlTypeAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlTypeAttribute : Attribute" />
  <TypeSignature Language="F#" Value="type XmlTypeAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.Serialization</AssemblyName>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netstandard-2.0;netcore-2.2;dotnet-uwp-10.0;netstandard-2.1">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Enum | System.AttributeTargets.Interface | System.AttributeTargets.Struct)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Struct | System.AttributeTargets.Enum | System.AttributeTargets.Interface)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="19f68-101">控制当属性目标由 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 序列化时生成的 XML 架构。</span><span class="sxs-lookup"><span data-stu-id="19f68-101">Controls the XML schema that is generated when the attribute target is serialized by the <see cref="T:System.Xml.Serialization.XmlSerializer" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19f68-102">属于一系列属性，这些属性控制<xref:System.Xml.Serialization.XmlSerializer>序列化或反序列化对象的方式。 <xref:System.Xml.Serialization.XmlTypeAttribute></span><span class="sxs-lookup"><span data-stu-id="19f68-102">The <xref:System.Xml.Serialization.XmlTypeAttribute> belongs to a family of attributes that controls how the <xref:System.Xml.Serialization.XmlSerializer> serializes or deserializes an object.</span></span> <span data-ttu-id="19f68-103">有关类似属性的完整列表，请参阅[控制 XML 序列化的属性](~/docs/standard/serialization/attributes-that-control-xml-serialization.md)。</span><span class="sxs-lookup"><span data-stu-id="19f68-103">For a complete list of similar attributes, see [Attributes That Control XML Serialization](~/docs/standard/serialization/attributes-that-control-xml-serialization.md).</span></span>  
  
 <span data-ttu-id="19f68-104">您可以将应用<xref:System.Xml.Serialization.XmlTypeAttribute>于类、结构、枚举或接口声明。</span><span class="sxs-lookup"><span data-stu-id="19f68-104">You can apply the <xref:System.Xml.Serialization.XmlTypeAttribute> to a class, structure, enumeration, or interface declaration.</span></span>  
  
 <span data-ttu-id="19f68-105">将应用<xref:System.Xml.Serialization.XmlTypeAttribute>到类，以指定 xml 类型的命名空间、xml 类型名称，以及是否要在 XML 架构文档中包括该类型。</span><span class="sxs-lookup"><span data-stu-id="19f68-105">Apply the <xref:System.Xml.Serialization.XmlTypeAttribute> to a class to specify the XML type's namespace, the XML type name, and whether to include the type in the XML schema document.</span></span> <span data-ttu-id="19f68-106">若要查看设置<xref:System.Xml.Serialization.XmlTypeAttribute>类属性的结果，请将应用程序编译为可执行文件或 DLL，并将生成的文件传递给[XML 架构定义工具（xsd.exe）](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md)。</span><span class="sxs-lookup"><span data-stu-id="19f68-106">To see the results of setting the properties of the <xref:System.Xml.Serialization.XmlTypeAttribute> class, compile your application as an executable or DLL, and pass the resulting file to the [XML Schema Definition Tool (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md).</span></span> <span data-ttu-id="19f68-107">该工具会写入架构，包括类型定义。</span><span class="sxs-lookup"><span data-stu-id="19f68-107">The tool writes the schema, including the type definition.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="19f68-108">如果将<xref:System.Xml.Serialization.XmlTypeAttribute.IncludeInSchema%2A>属性设置为`false`，则[XML 架构定义工具（xsd.exe）](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md)不会在架构中包含类型。</span><span class="sxs-lookup"><span data-stu-id="19f68-108">If you set the <xref:System.Xml.Serialization.XmlTypeAttribute.IncludeInSchema%2A> property to `false`, the [XML Schema Definition Tool (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md) does not include the type in the schema.</span></span> <span data-ttu-id="19f68-109">默认情况下，对于每个公共类，XSD 工具会`complexType`生成一个类型为的和一个元素。</span><span class="sxs-lookup"><span data-stu-id="19f68-109">By default, for each public class, the XSD tool generates a `complexType` and an element of that type.</span></span>  
  
 <span data-ttu-id="19f68-110">有关使用特性的详细信息，请参阅[特性](~/docs/standard/attributes/index.md)。</span><span class="sxs-lookup"><span data-stu-id="19f68-110">For more information about using attributes, see [Attributes](~/docs/standard/attributes/index.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="19f68-111">您可以在代码中`XmlType`使用该单词而不是更<xref:System.Xml.Serialization.XmlTypeAttribute>长的时间。</span><span class="sxs-lookup"><span data-stu-id="19f68-111">You can use the word `XmlType` in your code instead of the longer <xref:System.Xml.Serialization.XmlTypeAttribute>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19f68-112">下面的示例演示了已应用的<xref:System.Xml.Serialization.XmlTypeAttribute>两个类。</span><span class="sxs-lookup"><span data-stu-id="19f68-112">The following example shows two classes to which the <xref:System.Xml.Serialization.XmlTypeAttribute> has been applied.</span></span>  
  
 [!code-cpp[Classic XmlTypeAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlTypeAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlTypeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlTypeAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlTypeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlTypeAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.Serialization.XmlAttributeOverrides" />
    <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
    <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
    <altmember cref="P:System.Xml.Serialization.XmlAttributes.XmlText" />
    <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md"><span data-ttu-id="19f68-113">XML 序列化简介</span><span class="sxs-lookup"><span data-stu-id="19f68-113">Introducing XML Serialization</span></span></related>
    <related type="Article" href="~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md"><span data-ttu-id="19f68-114">如何：指定 XML 流的替代元素名称</span><span class="sxs-lookup"><span data-stu-id="19f68-114">How to: Specify an Alternate Element Name for an XML Stream</span></span></related>
    <related type="Article" href="~/docs/standard/serialization/controlling-xml-serialization-using-attributes.md"><span data-ttu-id="19f68-115">使用属性控制 XML 序列化</span><span class="sxs-lookup"><span data-stu-id="19f68-115">Controlling XML Serialization Using Attributes</span></span></related>
    <related type="Article" href="~/docs/standard/serialization/examples-of-xml-serialization.md"><span data-ttu-id="19f68-116">XML 序列化示例</span><span class="sxs-lookup"><span data-stu-id="19f68-116">Examples of XML Serialization</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="19f68-117">初始化 <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="19f68-117">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTypeAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlTypeAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTypeAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="19f68-118">初始化 <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="19f68-118">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="19f68-119">下面的示例创建<xref:System.Xml.Serialization.XmlTypeAttribute>类的两个实例，该类用于重写两个类的序列化。</span><span class="sxs-lookup"><span data-stu-id="19f68-119">The following example creates two instances of the <xref:System.Xml.Serialization.XmlTypeAttribute> class that are used to override the serialization of the two classes.</span></span>  
  
 [!code-cpp[XMLTypeAttribute1_2#2](~/samples/snippets/cpp/VS_Snippets_Remoting/XMLTypeAttribute1_2/CPP/xmltypeattribute1_2.cpp#2)]
 [!code-csharp[XMLTypeAttribute1_2#2](~/samples/snippets/csharp/VS_Snippets_Remoting/XMLTypeAttribute1_2/CS/xmltypeattribute1_2.cs#2)]
 [!code-vb[XMLTypeAttribute1_2#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XMLTypeAttribute1_2/VB/xmltypeattribute1_2.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTypeAttribute (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlTypeAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (typeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTypeAttribute(System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlTypeAttribute : string -&gt; System.Xml.Serialization.XmlTypeAttribute" Usage="new System.Xml.Serialization.XmlTypeAttribute typeName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName"><span data-ttu-id="19f68-120"><see cref="T:System.Xml.Serialization.XmlSerializer" /> 序列化类实例时生成（和在反序列化类实例时识别）的 XML 类型的名称。</span><span class="sxs-lookup"><span data-stu-id="19f68-120">The name of the XML type that the <see cref="T:System.Xml.Serialization.XmlSerializer" /> generates when it serializes the class instance (and recognizes when it deserializes the class instance).</span></span></param>
        <summary><span data-ttu-id="19f68-121">初始化 <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> 类的新实例，并指定 XML 类型的名称。</span><span class="sxs-lookup"><span data-stu-id="19f68-121">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> class and specifies the name of the XML type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19f68-122">将应用<xref:System.Xml.Serialization.XmlTypeAttribute>到类，以指定 xml 类型的命名空间、xml 类型名称，以及是否要在 XML 架构文档中包括该类型。</span><span class="sxs-lookup"><span data-stu-id="19f68-122">Apply the <xref:System.Xml.Serialization.XmlTypeAttribute> to a class to specify the XML type's namespace, the XML type name, and whether to include the type in the XML schema document.</span></span> <span data-ttu-id="19f68-123">若要查看设置<xref:System.Xml.Serialization.XmlTypeAttribute>类属性的结果，请将应用程序编译为可执行文件或 DLL，并将生成的文件传递给[XML 架构定义工具（xsd.exe）](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md)。</span><span class="sxs-lookup"><span data-stu-id="19f68-123">To see the results of setting the properties of the <xref:System.Xml.Serialization.XmlTypeAttribute> class, compile your application as an executable or DLL, and pass the resulting file to the [XML Schema Definition Tool (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md).</span></span> <span data-ttu-id="19f68-124">该工具会写入架构，包括类型定义。</span><span class="sxs-lookup"><span data-stu-id="19f68-124">The tool writes the schema, including the type definition.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19f68-125">下面的示例创建<xref:System.Xml.Serialization.XmlTypeAttribute>类的两个实例，该类用于重写两个类的序列化。</span><span class="sxs-lookup"><span data-stu-id="19f68-125">The following example creates two instances of the <xref:System.Xml.Serialization.XmlTypeAttribute> class that are used to override the serialization of the two classes.</span></span>  
  
 [!code-cpp[XMLTypeAttribute1_2#2](~/samples/snippets/cpp/VS_Snippets_Remoting/XMLTypeAttribute1_2/CPP/xmltypeattribute1_2.cpp#2)]
 [!code-csharp[XMLTypeAttribute1_2#2](~/samples/snippets/csharp/VS_Snippets_Remoting/XMLTypeAttribute1_2/CS/xmltypeattribute1_2.cs#2)]
 [!code-vb[XMLTypeAttribute1_2#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XMLTypeAttribute1_2/VB/xmltypeattribute1_2.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AnonymousType">
      <MemberSignature Language="C#" Value="public bool AnonymousType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AnonymousType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlTypeAttribute.AnonymousType" />
      <MemberSignature Language="VB.NET" Value="Public Property AnonymousType As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AnonymousType { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AnonymousType : bool with get, set" Usage="System.Xml.Serialization.XmlTypeAttribute.AnonymousType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="19f68-126">获取或设置一个值，该值确定生成的构架类型是否为 XSD 匿名类型。</span><span class="sxs-lookup"><span data-stu-id="19f68-126">Gets or sets a value that determines whether the resulting schema type is an XSD anonymous type.</span></span></summary>
        <value><span data-ttu-id="19f68-127">如果结果架构类型为 XSD 匿名类型，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="19f68-127"><see langword="true" />, if the resulting schema type is an XSD anonymous type; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeInSchema">
      <MemberSignature Language="C#" Value="public bool IncludeInSchema { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeInSchema" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlTypeAttribute.IncludeInSchema" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeInSchema As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeInSchema { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IncludeInSchema : bool with get, set" Usage="System.Xml.Serialization.XmlTypeAttribute.IncludeInSchema" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="19f68-128">获取或设置一个值，该值指示是否要在 XML 架构文档中包含该类型。</span><span class="sxs-lookup"><span data-stu-id="19f68-128">Gets or sets a value that indicates whether to include the type in XML schema documents.</span></span></summary>
        <value><span data-ttu-id="19f68-129">若要将此类型包括到 XML 架构文档中，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="19f68-129"><see langword="true" /> to include the type in XML schema documents; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19f68-130">将应用<xref:System.Xml.Serialization.XmlTypeAttribute>到类，以指定 xml 类型的命名空间、xml 类型名称，以及是否要在 XML 架构文档中包括该类型。</span><span class="sxs-lookup"><span data-stu-id="19f68-130">Apply the <xref:System.Xml.Serialization.XmlTypeAttribute> to a class to specify the XML type's namespace, the XML type name, and whether to include the type in the XML schema document.</span></span> <span data-ttu-id="19f68-131">若要查看设置<xref:System.Xml.Serialization.XmlTypeAttribute>类属性的结果，请将应用程序编译为可执行文件或 DLL，并将生成的文件传递给 XML 架构定义工具（xsd.exe）。</span><span class="sxs-lookup"><span data-stu-id="19f68-131">To see the results of setting the properties of the <xref:System.Xml.Serialization.XmlTypeAttribute> class, compile your application as an executable or DLL, and pass the resulting file to the XML Schema Definition tool (XSD.exe).</span></span> <span data-ttu-id="19f68-132">该工具会写入架构，包括类型定义。</span><span class="sxs-lookup"><span data-stu-id="19f68-132">The tool writes the schema, including the type definition.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19f68-133">下面的示例将应用<xref:System.Xml.Serialization.XmlTypeAttribute> `ExtraneousInfo`到类，并将<xref:System.Xml.Serialization.XmlTypeAttribute.IncludeInSchema%2A>属性设置为`false`。</span><span class="sxs-lookup"><span data-stu-id="19f68-133">The following example applies the <xref:System.Xml.Serialization.XmlTypeAttribute> to the `ExtraneousInfo` class, setting the <xref:System.Xml.Serialization.XmlTypeAttribute.IncludeInSchema%2A> property to `false`.</span></span>  
  
 [!code-cpp[Classic XmlTypeAttribute.IncludeInSchema Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlTypeAttribute.IncludeInSchema Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlTypeAttribute.IncludeInSchema Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlTypeAttribute.IncludeInSchema Example/CS/source.cs#1)]
 [!code-vb[Classic XmlTypeAttribute.IncludeInSchema Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlTypeAttribute.IncludeInSchema Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlTypeAttribute.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : string with get, set" Usage="System.Xml.Serialization.XmlTypeAttribute.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="19f68-134">获取或设置 XML 类型的命名空间。</span><span class="sxs-lookup"><span data-stu-id="19f68-134">Gets or sets the namespace of the XML type.</span></span></summary>
        <value><span data-ttu-id="19f68-135">XML 类型的命名空间。</span><span class="sxs-lookup"><span data-stu-id="19f68-135">The namespace of the XML type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="19f68-136">下面的示例在<xref:System.Xml.Serialization.XmlTypeAttribute> <xref:System.Xml.Serialization.XmlTypeAttribute.Namespace%2A>设置属性时将应用于类。</span><span class="sxs-lookup"><span data-stu-id="19f68-136">The following example applies the <xref:System.Xml.Serialization.XmlTypeAttribute> to a class while setting the <xref:System.Xml.Serialization.XmlTypeAttribute.Namespace%2A> property.</span></span>  
  
 [!code-cpp[Classic XmlTypeAttribute.Namespace Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlTypeAttribute.Namespace Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlTypeAttribute.Namespace Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlTypeAttribute.Namespace Example/CS/source.cs#1)]
 [!code-vb[Classic XmlTypeAttribute.Namespace Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlTypeAttribute.Namespace Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeName">
      <MemberSignature Language="C#" Value="public string TypeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TypeName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlTypeAttribute.TypeName" />
      <MemberSignature Language="VB.NET" Value="Public Property TypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TypeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TypeName : string with get, set" Usage="System.Xml.Serialization.XmlTypeAttribute.TypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="19f68-137">获取或设置 XML 类型的名称。</span><span class="sxs-lookup"><span data-stu-id="19f68-137">Gets or sets the name of the XML type.</span></span></summary>
        <value><span data-ttu-id="19f68-138">XML 类型的名称。</span><span class="sxs-lookup"><span data-stu-id="19f68-138">The name of the XML type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19f68-139">将应用<xref:System.Xml.Serialization.XmlTypeAttribute>到类，以指定 xml 类型的命名空间、xml 类型名称，以及是否要在 XML 架构文档中包括该类型。</span><span class="sxs-lookup"><span data-stu-id="19f68-139">Apply the <xref:System.Xml.Serialization.XmlTypeAttribute> to a class to specify the XML type's namespace, the XML type name, and whether to include the type in the XML schema document.</span></span> <span data-ttu-id="19f68-140">若要查看设置<xref:System.Xml.Serialization.XmlTypeAttribute>类属性的结果，请将应用程序编译为可执行文件或 DLL，并将生成的文件传递给[XML 架构定义工具（xsd.exe）](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md)。</span><span class="sxs-lookup"><span data-stu-id="19f68-140">To see the results of setting the properties of the <xref:System.Xml.Serialization.XmlTypeAttribute> class, compile your application as an executable or DLL, and pass the resulting file to the [XML Schema Definition Tool (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md).</span></span> <span data-ttu-id="19f68-141">该工具会写入架构，包括类型定义。</span><span class="sxs-lookup"><span data-stu-id="19f68-141">The tool writes the schema, including the type definition.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19f68-142">下面的示例将应用<xref:System.Xml.Serialization.XmlTypeAttribute> `Person`于和`Job`类。</span><span class="sxs-lookup"><span data-stu-id="19f68-142">The following example applies the <xref:System.Xml.Serialization.XmlTypeAttribute> to the `Person` and `Job` classes.</span></span> <span data-ttu-id="19f68-143">如果编译类并将生成的可执行文件传递到 XML 架构定义工具，则架构将显示在 "输出" 部分中。</span><span class="sxs-lookup"><span data-stu-id="19f68-143">If you compile the class and pass the resulting executable file to the XML Schema Definition tool, the schema is displayed in the Output section.</span></span>  
  
 [!code-cpp[Classic XmlTypeAttribute.TypeName Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlTypeAttribute.TypeName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlTypeAttribute.TypeName Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlTypeAttribute.TypeName Example/CS/source.cs#1)]
 [!code-vb[Classic XmlTypeAttribute.TypeName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlTypeAttribute.TypeName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
