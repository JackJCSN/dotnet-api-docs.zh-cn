<Type Name="XmlArrayAttribute" FullName="System.Xml.Serialization.XmlArrayAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6ccfb406e7b3dc9f10a363d4df30fe073be1fc92" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70689789" /></Metadata><TypeSignature Language="C#" Value="public class XmlArrayAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlArrayAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlArrayAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlArrayAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlArrayAttribute : Attribute" />
  <TypeSignature Language="F#" Value="type XmlArrayAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.Serialization</AssemblyName>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netstandard-2.0;netcore-2.2;dotnet-uwp-10.0;netstandard-2.1">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.Property | System.AttributeTargets.ReturnValue, AllowMultiple=false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.ReturnValue, AllowMultiple=false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.ReturnValue)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="0ee17-101">指定 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 必须将特定的类成员序列化为 XML 元素的数组。</span><span class="sxs-lookup"><span data-stu-id="0ee17-101">Specifies that the <see cref="T:System.Xml.Serialization.XmlSerializer" /> must serialize a particular class member as an array of XML elements.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ee17-102">属于一系列属性，这些属性控制<xref:System.Xml.Serialization.XmlSerializer>序列化或反序列化对象的方式。 <xref:System.Xml.Serialization.XmlArrayAttribute></span><span class="sxs-lookup"><span data-stu-id="0ee17-102">The <xref:System.Xml.Serialization.XmlArrayAttribute> belongs to a family of attributes that controls how the <xref:System.Xml.Serialization.XmlSerializer> serializes or deserializes an object.</span></span> <span data-ttu-id="0ee17-103">有关类似属性的完整列表，请参阅[控制 XML 序列化的属性](~/docs/standard/serialization/attributes-that-control-xml-serialization.md)。</span><span class="sxs-lookup"><span data-stu-id="0ee17-103">For a complete list of similar attributes, see [Attributes That Control XML Serialization](~/docs/standard/serialization/attributes-that-control-xml-serialization.md).</span></span>  
  
 <span data-ttu-id="0ee17-104">你可以将应用<xref:System.Xml.Serialization.XmlArrayAttribute>到返回对象数组的公共字段或读/写属性。</span><span class="sxs-lookup"><span data-stu-id="0ee17-104">You can apply the <xref:System.Xml.Serialization.XmlArrayAttribute> to a public field or read/write property that returns an array of objects.</span></span> <span data-ttu-id="0ee17-105">你还可以将其应用于返回<xref:System.Collections.ArrayList>或任何返回<xref:System.Collections.IEnumerable>实现接口的对象的字段的集合和字段。</span><span class="sxs-lookup"><span data-stu-id="0ee17-105">You can also apply it to collections and fields that return an <xref:System.Collections.ArrayList> or any field that returns an object that implements the <xref:System.Collections.IEnumerable> interface.</span></span>  
  
 <span data-ttu-id="0ee17-106">将应用<xref:System.Xml.Serialization.XmlArrayAttribute>到类成员时<xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> ， <xref:System.Xml.Serialization.XmlSerializer>类的方法会从该成员生成嵌套的 XML 元素序列。</span><span class="sxs-lookup"><span data-stu-id="0ee17-106">When you apply the <xref:System.Xml.Serialization.XmlArrayAttribute> to a class member, the <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> method of the <xref:System.Xml.Serialization.XmlSerializer> class generates a nested sequence of XML elements from that member.</span></span> <span data-ttu-id="0ee17-107">XML 架构文档（.xsd 文件）将此类数组表示为`complexType`。</span><span class="sxs-lookup"><span data-stu-id="0ee17-107">An XML schema document (an .xsd file), indicates such an array as a `complexType`.</span></span> <span data-ttu-id="0ee17-108">例如，如果要序列化的类表示采购订单，则可以通过<xref:System.Xml.Serialization.XmlArrayAttribute>将应用于返回表示订单项的对象的数组的公共字段，来生成购买项的数组。</span><span class="sxs-lookup"><span data-stu-id="0ee17-108">For example, if the class to be serialized represents a purchase order, you can generate an array of purchased items by applying the <xref:System.Xml.Serialization.XmlArrayAttribute> to a public field that returns an array of objects that represent order items.</span></span>  
  
 <span data-ttu-id="0ee17-109">如果没有属性应用于返回复杂或基元类型对象数组的公共字段或属性，则<xref:System.Xml.Serialization.XmlSerializer>默认情况下会生成一个嵌套的 XML 元素序列。</span><span class="sxs-lookup"><span data-stu-id="0ee17-109">If no attributes are applied to a public field or property that returns an array of complex or primitive type objects, the <xref:System.Xml.Serialization.XmlSerializer> generates a nested sequence of XML elements by default.</span></span> <span data-ttu-id="0ee17-110">若要更精确地控制生成的 XML 元素，请<xref:System.Xml.Serialization.XmlArrayItemAttribute>将<xref:System.Xml.Serialization.XmlArrayAttribute>和应用于字段或属性。</span><span class="sxs-lookup"><span data-stu-id="0ee17-110">To more precisely control what XML elements are generated, apply an <xref:System.Xml.Serialization.XmlArrayItemAttribute> and an <xref:System.Xml.Serialization.XmlArrayAttribute> to the field or property.</span></span> <span data-ttu-id="0ee17-111">例如，默认情况下，生成的 xml 元素的名称派生自成员标识符，可以通过设置<xref:System.Xml.Serialization.XmlArrayAttribute.ElementName%2A>属性来更改生成的 xml 元素的名称。</span><span class="sxs-lookup"><span data-stu-id="0ee17-111">For example, by default, the name of the generated XML element is derived from the member identifier You can change the name of the generated XML element by setting the <xref:System.Xml.Serialization.XmlArrayAttribute.ElementName%2A> property.</span></span>  
  
 <span data-ttu-id="0ee17-112">如果序列化的数组包含特定类型的项和从该类型派生的所有类，则必须使用<xref:System.Xml.Serialization.XmlArrayItemAttribute>来声明每个类型。</span><span class="sxs-lookup"><span data-stu-id="0ee17-112">If you serialize an array that contains items of a specific type and all the classes derived from that type, you must use the <xref:System.Xml.Serialization.XmlArrayItemAttribute> to declare each of the types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0ee17-113">您可以在`XmlArray`代码中使用，而不是<xref:System.Xml.Serialization.XmlArrayAttribute>更长的时间。</span><span class="sxs-lookup"><span data-stu-id="0ee17-113">You can use `XmlArray` in your code instead of the longer <xref:System.Xml.Serialization.XmlArrayAttribute>.</span></span>  
  
 <span data-ttu-id="0ee17-114">有关使用特性的详细信息，请参阅[特性](~/docs/standard/attributes/index.md)。</span><span class="sxs-lookup"><span data-stu-id="0ee17-114">For more information about using attributes, see [Attributes](~/docs/standard/attributes/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ee17-115">下面的示例将类实例序列化为包含多个对象数组的 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="0ee17-115">The following example serializes a class instance into an XML document that contains several object arrays.</span></span> <span data-ttu-id="0ee17-116"><xref:System.Xml.Serialization.XmlArrayAttribute>应用于成为 XML 元素数组的成员。</span><span class="sxs-lookup"><span data-stu-id="0ee17-116">The <xref:System.Xml.Serialization.XmlArrayAttribute> is applied to the members that become XML element arrays.</span></span>  
  
 [!code-cpp[Classic XmlArrayAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Xml.Serialization.XmlAttributes.XmlArray" />
    <altmember cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />
    <altmember cref="T:System.Xml.Serialization.XmlAttributeOverrides" />
    <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
    <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md"><span data-ttu-id="0ee17-117">XML 序列化简介</span><span class="sxs-lookup"><span data-stu-id="0ee17-117">Introducing XML Serialization</span></span></related>
    <related type="Article" href="~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md"><span data-ttu-id="0ee17-118">如何：指定 XML 流的替代元素名称</span><span class="sxs-lookup"><span data-stu-id="0ee17-118">How to: Specify an Alternate Element Name for an XML Stream</span></span></related>
    <related type="Article" href="~/docs/standard/serialization/controlling-xml-serialization-using-attributes.md"><span data-ttu-id="0ee17-119">使用属性控制 XML 序列化</span><span class="sxs-lookup"><span data-stu-id="0ee17-119">Controlling XML Serialization Using Attributes</span></span></related>
    <related type="Article" href="~/docs/standard/serialization/examples-of-xml-serialization.md"><span data-ttu-id="0ee17-120">XML 序列化示例</span><span class="sxs-lookup"><span data-stu-id="0ee17-120">Examples of XML Serialization</span></span></related>
    <related type="Article" href="~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md"><span data-ttu-id="0ee17-121">XML Schema Definition Tool (Xsd.exe)</span><span class="sxs-lookup"><span data-stu-id="0ee17-121">XML Schema Definition Tool (Xsd.exe)</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0ee17-122">初始化 <see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="0ee17-122">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlArrayAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlArrayAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlArrayAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0ee17-123">初始化 <see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="0ee17-123">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ee17-124">有关使用特性的详细信息，请参阅[特性](~/docs/standard/attributes/index.md)。</span><span class="sxs-lookup"><span data-stu-id="0ee17-124">For more information about using attributes, see [Attributes](~/docs/standard/attributes/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ee17-125">下面的示例将赋值<xref:System.Xml.Serialization.XmlArrayAttribute>给两个数组。</span><span class="sxs-lookup"><span data-stu-id="0ee17-125">The following example assigns the <xref:System.Xml.Serialization.XmlArrayAttribute> to two arrays.</span></span>  
  
 [!code-cpp[Classic XmlArrayAttribute.XmlArrayAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayAttribute.XmlArrayAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayAttribute.XmlArrayAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayAttribute.XmlArrayAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayAttribute.XmlArrayAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayAttribute.XmlArrayAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />
        <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlArrayAttribute (string elementName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string elementName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlArrayAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (elementName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlArrayAttribute(System::String ^ elementName);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlArrayAttribute : string -&gt; System.Xml.Serialization.XmlArrayAttribute" Usage="new System.Xml.Serialization.XmlArrayAttribute elementName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="elementName"><span data-ttu-id="0ee17-126"><see cref="T:System.Xml.Serialization.XmlSerializer" /> 生成的 XML 元素的名称。</span><span class="sxs-lookup"><span data-stu-id="0ee17-126">The name of the XML element that the <see cref="T:System.Xml.Serialization.XmlSerializer" /> generates.</span></span></param>
        <summary><span data-ttu-id="0ee17-127">初始化 <see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> 类的新实例，并指定在 XML 文档实例中生成的 XML 元素名称。</span><span class="sxs-lookup"><span data-stu-id="0ee17-127">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> class and specifies the XML element name generated in the XML document instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ee17-128">有关使用特性的详细信息，请参阅[特性](~/docs/standard/attributes/index.md)。</span><span class="sxs-lookup"><span data-stu-id="0ee17-128">For more information about using attributes, see [Attributes](~/docs/standard/attributes/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ee17-129">下面的示例将赋值<xref:System.Xml.Serialization.XmlArrayAttribute>给两个数组，并序列化包含这些数组的类实例。</span><span class="sxs-lookup"><span data-stu-id="0ee17-129">The following example assigns the <xref:System.Xml.Serialization.XmlArrayAttribute> to two arrays, and serializes a class instance that contains those arrays.</span></span>  
  
 [!code-cpp[Classic XmlArrayAttribute.XmlArrayAttribute1 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayAttribute.XmlArrayAttribute1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayAttribute.XmlArrayAttribute1 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayAttribute.XmlArrayAttribute1 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayAttribute.XmlArrayAttribute1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayAttribute.XmlArrayAttribute1 Example/VB/source.vb#1)]
 [!code-xml[Classic XmlArrayAttribute.XmlArrayAttribute1 Example#1](~/samples/snippets/common/VS_Snippets_Remoting/Classic XmlArrayAttribute.XmlArrayAttribute1 Example/Common/MyClass1.xml#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />
        <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
      </Docs>
    </Member>
    <Member MemberName="ElementName">
      <MemberSignature Language="C#" Value="public string ElementName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ElementName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlArrayAttribute.ElementName" />
      <MemberSignature Language="VB.NET" Value="Public Property ElementName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ElementName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ElementName : string with get, set" Usage="System.Xml.Serialization.XmlArrayAttribute.ElementName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0ee17-130">获取或设置提供给序列化数组的 XML 元素名称。</span><span class="sxs-lookup"><span data-stu-id="0ee17-130">Gets or sets the XML element name given to the serialized array.</span></span></summary>
        <value><span data-ttu-id="0ee17-131">序列化数组的 XML 元素名称。</span><span class="sxs-lookup"><span data-stu-id="0ee17-131">The XML element name of the serialized array.</span></span> <span data-ttu-id="0ee17-132">默认值为向其分配 <see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> 的成员的名称。</span><span class="sxs-lookup"><span data-stu-id="0ee17-132">The default is the name of the member to which the <see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> is assigned.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ee17-133"><xref:System.Xml.Serialization.XmlArrayAttribute.ElementName%2A>如果希望生成的 XML 元素名称与成员的标识符不同，请指定。</span><span class="sxs-lookup"><span data-stu-id="0ee17-133">Specify an <xref:System.Xml.Serialization.XmlArrayAttribute.ElementName%2A> when you want the generated XML element name to differ from the member's identifier.</span></span>  
  
 <span data-ttu-id="0ee17-134">可以将相同<xref:System.Xml.Serialization.XmlArrayAttribute.ElementName%2A>的值设置为多个成员，只要生成的 xml 文档使用 XML 命名空间来区分同名成员。</span><span class="sxs-lookup"><span data-stu-id="0ee17-134">You can set the same <xref:System.Xml.Serialization.XmlArrayAttribute.ElementName%2A> value to more than one member as long as the generated XML document uses XML namespaces to distinguish between the identically named members.</span></span> <span data-ttu-id="0ee17-135">有关使用命名空间并在 XML 文档中创建前缀名称的更多详细<xref:System.Xml.Serialization.XmlSerializerNamespaces>信息，请参阅。</span><span class="sxs-lookup"><span data-stu-id="0ee17-135">For more details about using namespaces and creating prefixed names in the XML document, see <xref:System.Xml.Serialization.XmlSerializerNamespaces>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ee17-136">下面的示例对`Library`类的实例进行序列化，该类包含一个名为`Books` `Book`的属性，该属性返回项的数组。</span><span class="sxs-lookup"><span data-stu-id="0ee17-136">The following example serializes an instance of the `Library` class that contains a property named `Books` that returns an array of `Book` items.</span></span> <span data-ttu-id="0ee17-137">该示例使用<xref:System.Xml.Serialization.XmlArrayAttribute.ElementName%2A>属性指定应将 XML 元素的数组命名为`My_Books`而不`Books`是。</span><span class="sxs-lookup"><span data-stu-id="0ee17-137">The example uses the <xref:System.Xml.Serialization.XmlArrayAttribute.ElementName%2A> property to specify that the array of XML elements should be named `My_Books` rather than `Books`.</span></span>  
  
 [!code-cpp[Classic XmlArrayAttribute.ElementName Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayAttribute.ElementName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayAttribute.ElementName Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayAttribute.ElementName Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayAttribute.ElementName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayAttribute.ElementName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
        <altmember cref="P:System.Xml.Serialization.XmlArrayAttribute.Namespace" />
        <altmember cref="P:System.Xml.Serialization.XmlArrayAttribute.Form" />
      </Docs>
    </Member>
    <Member MemberName="Form">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaForm Form { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.Schema.XmlSchemaForm Form" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlArrayAttribute.Form" />
      <MemberSignature Language="VB.NET" Value="Public Property Form As XmlSchemaForm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaForm Form { System::Xml::Schema::XmlSchemaForm get(); void set(System::Xml::Schema::XmlSchemaForm value); };" />
      <MemberSignature Language="F#" Value="member this.Form : System.Xml.Schema.XmlSchemaForm with get, set" Usage="System.Xml.Serialization.XmlArrayAttribute.Form" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaForm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0ee17-138">获取或设置一个值，该值指示 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 生成的 XML 元素名称是限定的还是非限定的。</span><span class="sxs-lookup"><span data-stu-id="0ee17-138">Gets or sets a value that indicates whether the XML element name generated by the <see cref="T:System.Xml.Serialization.XmlSerializer" /> is qualified or unqualified.</span></span></summary>
        <value><span data-ttu-id="0ee17-139"><see cref="T:System.Xml.Schema.XmlSchemaForm" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="0ee17-139">One of the <see cref="T:System.Xml.Schema.XmlSchemaForm" /> values.</span></span> <span data-ttu-id="0ee17-140">默认值为 <see langword="XmlSchemaForm.None" />。</span><span class="sxs-lookup"><span data-stu-id="0ee17-140">The default is <see langword="XmlSchemaForm.None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ee17-141"><xref:System.Xml.Serialization.XmlArrayAttribute.Form%2A>属性确定 XML 元素名称是限定的还是非限定的。</span><span class="sxs-lookup"><span data-stu-id="0ee17-141">The <xref:System.Xml.Serialization.XmlArrayAttribute.Form%2A> property determines whether an XML element name is qualified or unqualified.</span></span> <span data-ttu-id="0ee17-142">属性符合名为[XML 中的命名空间](https://www.w3.org/TR/1999/REC-xml-names-19990114/)的1999万维网联合会文档。 <xref:System.Xml.Serialization.XmlArrayAttribute.Form%2A></span><span class="sxs-lookup"><span data-stu-id="0ee17-142">The <xref:System.Xml.Serialization.XmlArrayAttribute.Form%2A> property conforms to the 1999 World Wide Web Consortium document titled [Namespaces in XML](https://www.w3.org/TR/1999/REC-xml-names-19990114/).</span></span>
  
 <span data-ttu-id="0ee17-143">如果将<xref:System.Xml.Serialization.XmlElementAttribute.Form%2A> `XmlSchemaForm.Unqualified`属性设置为任何值，尝试将属性设置为会引发异常。 <xref:System.Xml.Serialization.XmlAttributeAttribute.Namespace%2A></span><span class="sxs-lookup"><span data-stu-id="0ee17-143">If the <xref:System.Xml.Serialization.XmlAttributeAttribute.Namespace%2A> property is set to any value, attempting to set the <xref:System.Xml.Serialization.XmlElementAttribute.Form%2A> property to `XmlSchemaForm.Unqualified` throws an exception.</span></span>  
  
 <span data-ttu-id="0ee17-144">默认设置`XmlSchemaForm.None` <xref:System.Xml.Serialization.XmlSerializer>指示检查 XML 文档的架构，以确定命名空间是否是限定的。</span><span class="sxs-lookup"><span data-stu-id="0ee17-144">The default setting, `XmlSchemaForm.None`, instructs the <xref:System.Xml.Serialization.XmlSerializer> to check the schema for the XML document to determine whether the namespace is qualified.</span></span> <span data-ttu-id="0ee17-145">如果架构未指定单个元素或属性的值，则将<xref:System.Xml.Serialization.XmlSerializer> `elementFormDefault`使用和`attributeFormDefault`值来确定是否限定了某个元素或属性。</span><span class="sxs-lookup"><span data-stu-id="0ee17-145">If the schema does not specify a value for an individual element or attribute, the <xref:System.Xml.Serialization.XmlSerializer> uses the `elementFormDefault` and `attributeFormDefault` values to determine whether an element or attribute is qualified.</span></span> <span data-ttu-id="0ee17-146">以下 XML 代码显示了一个架构：</span><span class="sxs-lookup"><span data-stu-id="0ee17-146">The following XML code shows a schema:</span></span>  
  
```  
<schema elementFormDefault="qualified"   
attributeFormDefault="unqualified"... >  
   <element name="Name"/>  
   <attribute name="Number"/>  
</schema>  
```  
  
 <span data-ttu-id="0ee17-147"><xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A> `XmlSchemaForm.None` `Number`当读取架构时， `Name`和`Number`的值为，但`Name`元素是限定的，而元素是非限定的。 <xref:System.Xml.Serialization.XmlSerializer></span><span class="sxs-lookup"><span data-stu-id="0ee17-147">When the <xref:System.Xml.Serialization.XmlSerializer> reads the schema, the <xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A> value for both the `Name` and `Number` is `XmlSchemaForm.None`, but the `Name` element is qualified, while the `Number` element is unqualified.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ee17-148">下面的示例序列化`Enterprises`类的实例。</span><span class="sxs-lookup"><span data-stu-id="0ee17-148">The following example serializes an instance of the `Enterprises` class.</span></span> <span data-ttu-id="0ee17-149">两个 XML 元素具有相同的本地名称`Company`（），但具有不同的前缀。</span><span class="sxs-lookup"><span data-stu-id="0ee17-149">Two XML elements have the same local name (`Company`) but different prefixes.</span></span> <span data-ttu-id="0ee17-150">此示例将<xref:System.Xml.Serialization.XmlArrayAttribute.Form%2A>属性设置为`XmlForm.Qualified` ，以确保在 XML 实例中出现限定名称。</span><span class="sxs-lookup"><span data-stu-id="0ee17-150">The example sets the <xref:System.Xml.Serialization.XmlArrayAttribute.Form%2A> property is set to `XmlForm.Qualified` to ensure that the qualified names occur in the XML instance.</span></span>  
  
 [!code-cpp[Classic XmlArrayAttribute.Form Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayAttribute.Form Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayAttribute.Form Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayAttribute.Form Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayAttribute.Form Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayAttribute.Form Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)" />
        <altmember cref="P:System.Xml.Serialization.XmlArrayAttribute.ElementName" />
        <altmember cref="P:System.Xml.Serialization.XmlArrayAttribute.Namespace" />
      </Docs>
    </Member>
    <Member MemberName="IsNullable">
      <MemberSignature Language="C#" Value="public bool IsNullable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNullable" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlArrayAttribute.IsNullable" />
      <MemberSignature Language="VB.NET" Value="Public Property IsNullable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNullable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsNullable : bool with get, set" Usage="System.Xml.Serialization.XmlArrayAttribute.IsNullable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0ee17-151">获取或设置一个值，该值指示 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 是否必须将成员序列化为 <see langword="xsi:nil" /> 属性设置为 <see langword="true" /> 的 XML 空标记。</span><span class="sxs-lookup"><span data-stu-id="0ee17-151">Gets or sets a value that indicates whether the <see cref="T:System.Xml.Serialization.XmlSerializer" /> must serialize a member as an empty XML tag with the <see langword="xsi:nil" /> attribute set to <see langword="true" />.</span></span></summary>
        <value><span data-ttu-id="0ee17-152">如果 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 生成 <see langword="true" /> 属性，则为 <see langword="xsi:nil" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0ee17-152"><see langword="true" /> if the <see cref="T:System.Xml.Serialization.XmlSerializer" /> generates the <see langword="xsi:nil" /> attribute; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ee17-153">结构的 XML 架构规范允许 XML 文档显式通知缺少某个元素的内容。</span><span class="sxs-lookup"><span data-stu-id="0ee17-153">The XML schema specification for structures allows an XML document to explicitly signal that an element's content is missing.</span></span> <span data-ttu-id="0ee17-154">此类元素包含将特性`xsi:nil`设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="0ee17-154">Such an element contains the attribute `xsi:nil` set to `true`.</span></span> <span data-ttu-id="0ee17-155">有关详细信息，请参阅名为[XML 架构第1部分：结构](https://www.w3.org/TR/xmlschema-1/)的万维网联合会规范。</span><span class="sxs-lookup"><span data-stu-id="0ee17-155">For more information, see the World Wide Web Consortium specification titled [XML Schema Part 1: Structures](https://www.w3.org/TR/xmlschema-1/).</span></span>
  
 <span data-ttu-id="0ee17-156">如果将`true` `xsi:nil`属性设置为，则为已设置为`null`的类成员生成属性。 <xref:System.Xml.Serialization.XmlArrayAttribute.IsNullable%2A></span><span class="sxs-lookup"><span data-stu-id="0ee17-156">If the <xref:System.Xml.Serialization.XmlArrayAttribute.IsNullable%2A> property is set to `true`, the `xsi:nil` attribute is generated for class members that have been set to `null`.</span></span> <span data-ttu-id="0ee17-157">例如，如果将名`MyStringArray`为的字段设置为`null`，则<xref:System.Xml.Serialization.XmlSerializer>会生成以下 XML 代码。</span><span class="sxs-lookup"><span data-stu-id="0ee17-157">For example, if you set a field named `MyStringArray` to `null`, the <xref:System.Xml.Serialization.XmlSerializer> generates the following XML code.</span></span>  
  
```  
<MyStringArray xsi:nil = "true" />  
```  
  
 <span data-ttu-id="0ee17-158">如果属性为`false`，则不生成 XML 元素。 <xref:System.Xml.Serialization.XmlArrayAttribute.IsNullable%2A></span><span class="sxs-lookup"><span data-stu-id="0ee17-158">If the <xref:System.Xml.Serialization.XmlArrayAttribute.IsNullable%2A> property is `false`, no XML element is generated.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0ee17-159">不能将<xref:System.Xml.Serialization.XmlArrayAttribute.IsNullable%2A>属性应用于类型为值类型的成员，因为值类型不能包含`null`。</span><span class="sxs-lookup"><span data-stu-id="0ee17-159">You cannot apply the <xref:System.Xml.Serialization.XmlArrayAttribute.IsNullable%2A> property to a member typed as a value type because a value type cannot contain `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ee17-160">下面的示例包含两<xref:System.Xml.Serialization.XmlArrayAttribute.IsNullable%2A>个数组：一个属性设置为`true` <xref:System.Xml.Serialization.XmlArrayAttribute.IsNullable%2A> ，另一个的属性设置为`false`。</span><span class="sxs-lookup"><span data-stu-id="0ee17-160">The following example contains two arrays: one with the <xref:System.Xml.Serialization.XmlArrayAttribute.IsNullable%2A> property set to `true`, and another with the <xref:System.Xml.Serialization.XmlArrayAttribute.IsNullable%2A> property set to `false`.</span></span>  
  
 [!code-cpp[Classic XmlArrayAttribute.IsNullable Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayAttribute.IsNullable Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayAttribute.IsNullable Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayAttribute.IsNullable Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayAttribute.IsNullable Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayAttribute.IsNullable Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlArrayAttribute.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : string with get, set" Usage="System.Xml.Serialization.XmlArrayAttribute.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0ee17-161">获取或设置 XML 元素的命名空间。</span><span class="sxs-lookup"><span data-stu-id="0ee17-161">Gets or sets the namespace of the XML element.</span></span></summary>
        <value><span data-ttu-id="0ee17-162">XML 元素的命名空间。</span><span class="sxs-lookup"><span data-stu-id="0ee17-162">The namespace of the XML element.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ee17-163"><xref:System.Xml.Serialization.XmlArrayAttribute.Namespace%2A>属性允许您创建限定的 XML 元素名称。</span><span class="sxs-lookup"><span data-stu-id="0ee17-163">The <xref:System.Xml.Serialization.XmlArrayAttribute.Namespace%2A> property allows you to create qualified XML element names.</span></span> <span data-ttu-id="0ee17-164">属性符合用于创建 xml 命名空间的规则，该规则在标题为 xml 中的[命名空间](https://www.w3.org/TR/1999/REC-xml-names-19990114/)的1999万维网联合会文档中找到。 <xref:System.Xml.Serialization.XmlArrayAttribute.Namespace%2A></span><span class="sxs-lookup"><span data-stu-id="0ee17-164">The <xref:System.Xml.Serialization.XmlArrayAttribute.Namespace%2A> property conforms to the rules for creating an XML namespace as found in the 1999 World Wide Web Consortium document titled [Namespaces in XML](https://www.w3.org/TR/1999/REC-xml-names-19990114/).</span></span>
  
 <span data-ttu-id="0ee17-165">若要创建与前缀关联的命名空间，必须创建<xref:System.Xml.Serialization.XmlSerializerNamespaces>类的实例，该实例包含 XML 文档中使用的命名空间和前缀。</span><span class="sxs-lookup"><span data-stu-id="0ee17-165">To create namespaces that are associated with a prefix, you must create an instance of the <xref:System.Xml.Serialization.XmlSerializerNamespaces> class that contains the namespaces and prefixes used in the XML document.</span></span> <span data-ttu-id="0ee17-166">当你为每个<xref:System.Xml.Serialization.XmlArrayAttribute>设置命名空间时，它必须匹配<xref:System.Xml.Serialization.XmlSerializerNamespaces>中的一个命名空间。</span><span class="sxs-lookup"><span data-stu-id="0ee17-166">As you set the namespace for each <xref:System.Xml.Serialization.XmlArrayAttribute>, it must match one of the namespaces in the <xref:System.Xml.Serialization.XmlSerializerNamespaces>.</span></span> <span data-ttu-id="0ee17-167">生成 XML 时，每个数组都以与指定命名空间关联的前缀正确地加上前缀。</span><span class="sxs-lookup"><span data-stu-id="0ee17-167">When the XML is generated, each array is correctly prefixed with the prefix associated with the specified namespace.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ee17-168">下面的示例序列化包含两个`Library`成员的类的实例，其中一个成员包含书籍标题，另一个包含期刊标题。</span><span class="sxs-lookup"><span data-stu-id="0ee17-168">The following example serializes an instance of the `Library` class that contains two members, one that contain book titles, and another that contain periodical titles.</span></span> <span data-ttu-id="0ee17-169">尽管两个 XML 元素都`Titles`命名为，但每个元素都包含不同的前缀。</span><span class="sxs-lookup"><span data-stu-id="0ee17-169">Although both XML elements are named `Titles`, each contains a different prefix.</span></span> <span data-ttu-id="0ee17-170">该示例还包括<xref:System.Xml.Serialization.XmlSerializerNamespaces>类的实例，该类包含用于限定两个元素名称的命名空间和前缀。</span><span class="sxs-lookup"><span data-stu-id="0ee17-170">The example also includes an instance of the <xref:System.Xml.Serialization.XmlSerializerNamespaces> class that contains the namespaces and prefixes used to qualify the two element names.</span></span>  
  
 [!code-cpp[Classic XmlArrayAttribute.Namespace Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayAttribute.Namespace Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayAttribute.Namespace Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayAttribute.Namespace Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayAttribute.Namespace Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayAttribute.Namespace Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)" />
        <altmember cref="P:System.Xml.Serialization.XmlArrayAttribute.ElementName" />
        <altmember cref="P:System.Xml.Serialization.XmlArrayAttribute.Form" />
      </Docs>
    </Member>
    <Member MemberName="Order">
      <MemberSignature Language="C#" Value="public int Order { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Order" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlArrayAttribute.Order" />
      <MemberSignature Language="VB.NET" Value="Public Property Order As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Order { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Order : int with get, set" Usage="System.Xml.Serialization.XmlArrayAttribute.Order" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0ee17-171">获取或设置序列化或反序列化元素的显式顺序。</span><span class="sxs-lookup"><span data-stu-id="0ee17-171">Gets or sets the explicit order in which the elements are serialized or deserialized.</span></span></summary>
        <value><span data-ttu-id="0ee17-172">代码生成的顺序。</span><span class="sxs-lookup"><span data-stu-id="0ee17-172">The order of the code generation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ee17-173">使用枚举来<xref:System.Web.Services.Description.ServiceDescriptionImporter> 指示 <xref:System.Xml.Serialization.XmlElementAttribute.Order%2A> 生成用于设置属性的代码。 <xref:System.Xml.Serialization.CodeGenerationOptions.GenerateOrder></span><span class="sxs-lookup"><span data-stu-id="0ee17-173">Use the <xref:System.Xml.Serialization.CodeGenerationOptions.GenerateOrder> enumeration to instruct the <xref:System.Web.Services.Description.ServiceDescriptionImporter> to generate code that sets the <xref:System.Xml.Serialization.XmlElementAttribute.Order%2A> property.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="0ee17-174">在类型<xref:System.Xml.Serialization.XmlElementAttribute.Order%2A>中的一个公共属性或字段上使用该属性后，必须将该属性应用于该类型和所有继承类型的所有公共属性和字段。</span><span class="sxs-lookup"><span data-stu-id="0ee17-174">Once the <xref:System.Xml.Serialization.XmlElementAttribute.Order%2A> property has been used on one public property or field in a type, it must be applied to all public properties and fields for that type and all inherited types.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
