<Type Name="XmlTextAttribute" FullName="System.Xml.Serialization.XmlTextAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8ed400fa848ef087190091c074bfb225d7662da6" /><Meta Name="ms.sourcegitcommit" Value="bc24a3ba616ee1df8b858f9400cae4f058ea3a7e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="06/19/2019" /><Meta Name="ms.locfileid" Value="67250337" /></Metadata><TypeSignature Language="C#" Value="public class XmlTextAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlTextAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlTextAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlTextAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlTextAttribute : Attribute" />
  <TypeSignature Language="F#" Value="type XmlTextAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.Serialization</AssemblyName>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netstandard-2.0;netcore-2.2;dotnet-uwp-10.0;netstandard-2.1">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.Property | System.AttributeTargets.ReturnValue)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.ReturnValue)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="1fd6f-101">当串行化或反序列化包含该成员的类时，向 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 指示应将该成员作为 XML 文本处理。</span><span class="sxs-lookup"><span data-stu-id="1fd6f-101">Indicates to the <see cref="T:System.Xml.Serialization.XmlSerializer" /> that the member must be treated as XML text when the class that contains it is serialized or deserialized.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fd6f-102"><xref:System.Xml.Serialization.XmlTextAttribute>属于一系列属性，用于控制如何<xref:System.Xml.Serialization.XmlSerializer>序列化和反序列化对象 (通过其<xref:System.Xml.Serialization.XmlSerializer.Serialize%2A>和<xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A>方法)。</span><span class="sxs-lookup"><span data-stu-id="1fd6f-102">The <xref:System.Xml.Serialization.XmlTextAttribute> belongs to a family of attributes that controls how the <xref:System.Xml.Serialization.XmlSerializer> serializes and deserializes an object (through its <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> and <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> methods).</span></span> <span data-ttu-id="1fd6f-103">有关类似属性的完整列表，请参阅[Attributes That Control XML Serialization](~/docs/standard/serialization/attributes-that-control-xml-serialization.md)。</span><span class="sxs-lookup"><span data-stu-id="1fd6f-103">For a complete list of similar attributes, see [Attributes That Control XML Serialization](~/docs/standard/serialization/attributes-that-control-xml-serialization.md).</span></span>  
  
 <span data-ttu-id="1fd6f-104">只有一个实例<xref:System.Xml.Serialization.XmlTextAttribute>类可以应用在类中。</span><span class="sxs-lookup"><span data-stu-id="1fd6f-104">Only one instance of the <xref:System.Xml.Serialization.XmlTextAttribute> class can be applied in a class.</span></span>  
  
 <span data-ttu-id="1fd6f-105">您可以将应用<xref:System.Xml.Serialization.XmlTextAttribute>公共字段和公共读/写属性的返回类型的基元和枚举类型。</span><span class="sxs-lookup"><span data-stu-id="1fd6f-105">You can apply the <xref:System.Xml.Serialization.XmlTextAttribute> to public fields and public read/write properties that return primitive and enumeration types.</span></span>  
  
 <span data-ttu-id="1fd6f-106">您可以将应用<xref:System.Xml.Serialization.XmlTextAttribute>到字段或属性返回一个字符串数组。</span><span class="sxs-lookup"><span data-stu-id="1fd6f-106">You can apply the <xref:System.Xml.Serialization.XmlTextAttribute> to a field or property that returns an array of strings.</span></span> <span data-ttu-id="1fd6f-107">您还可以将特性应用于类型的数组<xref:System.Object>必须设置但<xref:System.Xml.Serialization.XmlTextAttribute.Type%2A>属性设置为字符串。</span><span class="sxs-lookup"><span data-stu-id="1fd6f-107">You can also apply the attribute to an array of type <xref:System.Object> but you must set the <xref:System.Xml.Serialization.XmlTextAttribute.Type%2A> property to string.</span></span> <span data-ttu-id="1fd6f-108">在这种情况下，插入到数组中的任何字符串都序列化为 XML 文本。</span><span class="sxs-lookup"><span data-stu-id="1fd6f-108">In that case, any strings inserted into the array are serialized as XML text.</span></span>  
  
 <span data-ttu-id="1fd6f-109"><xref:System.Xml.Serialization.XmlTextAttribute>还可应用于返回的字段<xref:System.Xml.XmlNode>或一组<xref:System.Xml.XmlNode>对象。</span><span class="sxs-lookup"><span data-stu-id="1fd6f-109">The <xref:System.Xml.Serialization.XmlTextAttribute> can also be applied to a field that returns an <xref:System.Xml.XmlNode> or an array of <xref:System.Xml.XmlNode> objects.</span></span>  
  
 <span data-ttu-id="1fd6f-110">默认情况下，<xref:System.Xml.Serialization.XmlSerializer>序列化的 XML 元素形式的类成员。</span><span class="sxs-lookup"><span data-stu-id="1fd6f-110">By default, the <xref:System.Xml.Serialization.XmlSerializer> serializes a class member as an XML element.</span></span> <span data-ttu-id="1fd6f-111">但是，如果将应用<xref:System.Xml.Serialization.XmlTextAttribute>给成员<xref:System.Xml.Serialization.XmlSerializer>它的值转换为 XML 文本。</span><span class="sxs-lookup"><span data-stu-id="1fd6f-111">However, if you apply the <xref:System.Xml.Serialization.XmlTextAttribute> to a member, the <xref:System.Xml.Serialization.XmlSerializer> translates its value into XML text.</span></span> <span data-ttu-id="1fd6f-112">这意味着值被编码为 XML 元素的内容。</span><span class="sxs-lookup"><span data-stu-id="1fd6f-112">This means that the value is encoded into the content of an XML element.</span></span>  
  
 <span data-ttu-id="1fd6f-113">[XML 架构定义工具 (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md)偶尔生成<xref:System.Xml.Serialization.XmlTextAttribute>从 XML 架构定义 (XSD) 文件创建类时。</span><span class="sxs-lookup"><span data-stu-id="1fd6f-113">The [XML Schema Definition Tool (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md) occasionally generates the <xref:System.Xml.Serialization.XmlTextAttribute> when creating classes from an XML Schema definition (XSD) file.</span></span> <span data-ttu-id="1fd6f-114">发生这种情况时的架构包含`complexType`这种情况下，具有混合内容; 相应的类包含向其返回的字符串数组的成员<xref:System.Xml.Serialization.XmlTextAttribute>应用。</span><span class="sxs-lookup"><span data-stu-id="1fd6f-114">This occurs when the schema contains a `complexType` with mixed content; in that case, the corresponding class contains a member that returns a string array to which the <xref:System.Xml.Serialization.XmlTextAttribute> is applied.</span></span> <span data-ttu-id="1fd6f-115">例如，当`Xml Schema Definition`工具处理此架构：</span><span class="sxs-lookup"><span data-stu-id="1fd6f-115">For example, when the `Xml Schema Definition` tool processes this schema:</span></span>  
  
```xml  
<xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace=""   
xmlns:xs="http://www.w3.org/2001/XMLSchema">  
  <xs:element name="LinkList" type="LinkList" />  
  <xs:complexType name="LinkList" mixed="true">  
    <xs:sequence>  
      <xs:element minOccurs="1" maxOccurs="1" name="id" type="xs:int" />  
      <xs:element minOccurs="0" maxOccurs="1" name="name" type="xs:string" />  
      <xs:element minOccurs="0" maxOccurs="1" name="next" type="LinkList" />  
    </xs:sequence>  
  </xs:complexType>  
</xs:schema>  
```  
  
 <span data-ttu-id="1fd6f-116">生成下面的类 （多余的空格和备注已删除）：</span><span class="sxs-lookup"><span data-stu-id="1fd6f-116">the following class is generated (extra spaces and remarks have been removed):</span></span>  
  
 [!code-csharp[XmlTextAttribute#0](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlTextAttribute/cs/source.cs#0)]
 [!code-vb[XmlTextAttribute#0](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XmlTextAttribute/vb/source.vb#0)]  
  
 <span data-ttu-id="1fd6f-117">有关使用属性的详细信息，请参阅[属性](~/docs/standard/attributes/index.md)。</span><span class="sxs-lookup"><span data-stu-id="1fd6f-117">For more information about using attributes, see [Attributes](~/docs/standard/attributes/index.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1fd6f-118">可以使用单词`XmlText`而不是较长在代码中<xref:System.Xml.Serialization.XmlTextAttribute>。</span><span class="sxs-lookup"><span data-stu-id="1fd6f-118">You can use the word `XmlText` in your code instead of the longer <xref:System.Xml.Serialization.XmlTextAttribute>.</span></span>  
  
   
  
## Examples  
 [!code-cpp[Classic XmlTextAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlTextAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlTextAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlTextAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlTextAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlTextAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.Serialization.XmlAttributeOverrides" />
    <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
    <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
    <altmember cref="P:System.Xml.Serialization.XmlAttributes.XmlText" />
    <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md"><span data-ttu-id="1fd6f-119">XML 序列化简介</span><span class="sxs-lookup"><span data-stu-id="1fd6f-119">Introducing XML Serialization</span></span></related>
    <related type="Article" href="~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md"><span data-ttu-id="1fd6f-120">如何：指定 XML 流的替代元素名称</span><span class="sxs-lookup"><span data-stu-id="1fd6f-120">How to: Specify an Alternate Element Name for an XML Stream</span></span></related>
    <related type="Article" href="~/docs/standard/serialization/controlling-xml-serialization-using-attributes.md"><span data-ttu-id="1fd6f-121">使用属性控制 XML 序列化</span><span class="sxs-lookup"><span data-stu-id="1fd6f-121">Controlling XML Serialization Using Attributes</span></span></related>
    <related type="Article" href="~/docs/standard/serialization/examples-of-xml-serialization.md"><span data-ttu-id="1fd6f-122">XML 序列化示例</span><span class="sxs-lookup"><span data-stu-id="1fd6f-122">Examples of XML Serialization</span></span></related>
    <related type="Article" href="~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md"><span data-ttu-id="1fd6f-123">XML Schema Definition Tool (Xsd.exe)</span><span class="sxs-lookup"><span data-stu-id="1fd6f-123">XML Schema Definition Tool (Xsd.exe)</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1fd6f-124">初始化 <see cref="T:System.Xml.Serialization.XmlTextAttribute" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="1fd6f-124">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlTextAttribute" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlTextAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1fd6f-125">初始化 <see cref="T:System.Xml.Serialization.XmlTextAttribute" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="1fd6f-125">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlTextAttribute" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fd6f-126">可以重写的方式的<xref:System.Xml.Serialization.XmlSerializer>通过创建序列化公共字段或公共读/写属性<xref:System.Xml.Serialization.XmlAttributes>，并设置其<xref:System.Xml.Serialization.XmlAttributes.XmlText%2A>属性设置为<xref:System.Xml.Serialization.XmlTextAttribute>。</span><span class="sxs-lookup"><span data-stu-id="1fd6f-126">You can override the way that the <xref:System.Xml.Serialization.XmlSerializer> serializes a public field or public read/write property by creating an <xref:System.Xml.Serialization.XmlAttributes>, and setting its <xref:System.Xml.Serialization.XmlAttributes.XmlText%2A> property to an <xref:System.Xml.Serialization.XmlTextAttribute>.</span></span> <span data-ttu-id="1fd6f-127">有关更多详细信息，请参见 <xref:System.Xml.Serialization.XmlAttributeOverrides> 类。</span><span class="sxs-lookup"><span data-stu-id="1fd6f-127">For more details, see the <xref:System.Xml.Serialization.XmlAttributeOverrides> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1fd6f-128">下面的示例序列化类包含公共字段，名为`Comment`。</span><span class="sxs-lookup"><span data-stu-id="1fd6f-128">The following example serializes a class that contains a public field, named `Comment`.</span></span> <span data-ttu-id="1fd6f-129">该示例将应用<xref:System.Xml.Serialization.XmlTextAttribute>到字段，从而重写其序列化作为 XML 元素，并改为将它序列化为作为 XML 文本。</span><span class="sxs-lookup"><span data-stu-id="1fd6f-129">The example applies an <xref:System.Xml.Serialization.XmlTextAttribute> to the field, thereby overriding its serialization as an XML element, and instead serializing it as XML text.</span></span>  
  
 [!code-cpp[Classic XmlTextAttribute.XmlTextAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlTextAttribute.XmlTextAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlTextAttribute.XmlTextAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlTextAttribute.XmlTextAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlTextAttribute.XmlTextAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlTextAttribute.XmlTextAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextAttribute (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlTextAttribute.#ctor(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextAttribute(Type ^ type);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlTextAttribute : Type -&gt; System.Xml.Serialization.XmlTextAttribute" Usage="new System.Xml.Serialization.XmlTextAttribute type" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="1fd6f-130">要进行串行化的成员的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="1fd6f-130">The <see cref="T:System.Type" /> of the member to be serialized.</span></span></param>
        <summary><span data-ttu-id="1fd6f-131">初始化 <see cref="T:System.Xml.Serialization.XmlTextAttribute" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="1fd6f-131">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlTextAttribute" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fd6f-132">可以重写的方式的<xref:System.Xml.Serialization.XmlSerializer>通过创建序列化公共字段或公共读/写属性<xref:System.Xml.Serialization.XmlAttributes>，并设置其<xref:System.Xml.Serialization.XmlAttributes.XmlText%2A>属性设置为<xref:System.Xml.Serialization.XmlTextAttribute>。</span><span class="sxs-lookup"><span data-stu-id="1fd6f-132">You can override the way that the <xref:System.Xml.Serialization.XmlSerializer> serializes a public field or public read/write property by creating an <xref:System.Xml.Serialization.XmlAttributes>, and setting its <xref:System.Xml.Serialization.XmlAttributes.XmlText%2A> property to an <xref:System.Xml.Serialization.XmlTextAttribute>.</span></span> <span data-ttu-id="1fd6f-133">有关更多详细信息，请参见 <xref:System.Xml.Serialization.XmlAttributeOverrides> 类。</span><span class="sxs-lookup"><span data-stu-id="1fd6f-133">For more details, see the <xref:System.Xml.Serialization.XmlAttributeOverrides> class.</span></span>  
  
   
  
## Examples  
 [!code-cpp[Classic XmlTextAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlTextAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlTextAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlTextAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlTextAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlTextAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataType">
      <MemberSignature Language="C#" Value="public string DataType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlTextAttribute.DataType" />
      <MemberSignature Language="VB.NET" Value="Public Property DataType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataType : string with get, set" Usage="System.Xml.Serialization.XmlTextAttribute.DataType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1fd6f-134">获取或设置由 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 生成的文本的 XML 架构定义语言 (XSD) 数据类型。</span><span class="sxs-lookup"><span data-stu-id="1fd6f-134">Gets or sets the XML Schema definition language (XSD) data type of the text generated by the <see cref="T:System.Xml.Serialization.XmlSerializer" />.</span></span></summary>
        <value><span data-ttu-id="1fd6f-135">XML 架构 (XSD) 数据类型。</span><span class="sxs-lookup"><span data-stu-id="1fd6f-135">An XML Schema (XSD) data type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fd6f-136">设置<xref:System.Xml.Serialization.XmlTextAttribute.DataType%2A>到 XML 架构简单数据类型的属性影响生成的 XML 的格式。</span><span class="sxs-lookup"><span data-stu-id="1fd6f-136">Setting the <xref:System.Xml.Serialization.XmlTextAttribute.DataType%2A> property to an XML Schema simple data type affects the format of the generated XML.</span></span> <span data-ttu-id="1fd6f-137">例如，将属性设置为"date"会导致生成的文本格式在常规日期样式中，例如：2001-08-31.</span><span class="sxs-lookup"><span data-stu-id="1fd6f-137">For example, setting the property to "date" causes the generated text to be formatted in the general date style, for example: 2001-08-31.</span></span> <span data-ttu-id="1fd6f-138">与此相反，将属性设置为"dateTime"结果中定义的国际组织特定时刻的标准化文档 8601，"表示形式的日期和时间"，例如：2001-08-15T06:59:11.0508456-07:00.</span><span class="sxs-lookup"><span data-stu-id="1fd6f-138">By contrast, setting the property to "dateTime" results in a specific instant as defined by the International Organization for Standardization document 8601, "Representations of Dates and Times", for example: 2001-08-15T06:59:11.0508456-07:00.</span></span>  
  
 <span data-ttu-id="1fd6f-139">设置的效果<xref:System.Xml.Serialization.XmlTextAttribute.DataType%2A>使用时，也可以查看属性[XML 架构定义工具 (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md)生成已编译文件的 XML 架构。</span><span class="sxs-lookup"><span data-stu-id="1fd6f-139">The effect of setting the <xref:System.Xml.Serialization.XmlTextAttribute.DataType%2A> property can also be seen when using the [XML Schema Definition Tool (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md) to generate the XML Schema for a compiled file.</span></span> <span data-ttu-id="1fd6f-140">有关使用该工具的详细信息，请参阅[XML 架构定义工具和 XML 序列化](~/docs/standard/serialization/the-xml-schema-definition-tool-and-xml-serialization.md)。</span><span class="sxs-lookup"><span data-stu-id="1fd6f-140">For more information on using the tool, see [The XML Schema Definition Tool and XML Serialization](~/docs/standard/serialization/the-xml-schema-definition-tool-and-xml-serialization.md).</span></span>  
  
 <span data-ttu-id="1fd6f-141">下表列出了 XML 架构简单数据类型及其.NET 等效项。</span><span class="sxs-lookup"><span data-stu-id="1fd6f-141">The following table lists the XML Schema simple data types with their .NET equivalents.</span></span>  
  
 <span data-ttu-id="1fd6f-142">为 XML 架构`base64Binary`并`hexBinary`数据类型使用的数组<xref:System.Byte>结构，并将应用<xref:System.Xml.Serialization.XmlTextAttribute>与<xref:System.Xml.Serialization.XmlTextAttribute.DataType%2A>设置为"base64Binary"或"hexBinary"根据需要。</span><span class="sxs-lookup"><span data-stu-id="1fd6f-142">For the XML Schema `base64Binary` and `hexBinary` data types, use an array of <xref:System.Byte> structures, and apply a <xref:System.Xml.Serialization.XmlTextAttribute> with the <xref:System.Xml.Serialization.XmlTextAttribute.DataType%2A> set to "base64Binary" or "hexBinary", as appropriate.</span></span> <span data-ttu-id="1fd6f-143">为 XML 架构`time`并`date`数据类型，使用<xref:System.DateTime>键入并应用<xref:System.Xml.Serialization.XmlTextAttribute>与<xref:System.Xml.Serialization.XmlTextAttribute.DataType%2A>设置为"日期"或"时间"。</span><span class="sxs-lookup"><span data-stu-id="1fd6f-143">For the XML Schema `time` and `date` data types, use the <xref:System.DateTime> type and apply the <xref:System.Xml.Serialization.XmlTextAttribute> with the <xref:System.Xml.Serialization.XmlTextAttribute.DataType%2A> set to "date" or "time".</span></span>  
  
 <span data-ttu-id="1fd6f-144">对于映射到一个字符串，每个 XML 架构数据类型，将应用于<xref:System.Xml.Serialization.XmlTextAttribute>使用其<xref:System.Xml.Serialization.XmlTextAttribute.DataType%2A>属性设置为 XML 架构数据类型。</span><span class="sxs-lookup"><span data-stu-id="1fd6f-144">For every XML Schema data type that is mapped to a string, apply the <xref:System.Xml.Serialization.XmlTextAttribute> with its <xref:System.Xml.Serialization.XmlTextAttribute.DataType%2A> property set to the XML Schema data type.</span></span> <span data-ttu-id="1fd6f-145">请注意这不会更改序列化格式，仅该成员的架构。</span><span class="sxs-lookup"><span data-stu-id="1fd6f-145">Note that this does not change the serialization format, only the schema for the member.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1fd6f-146">属性是区分大小写，因此必须将其设置与 XML 架构数据类型之一完全。</span><span class="sxs-lookup"><span data-stu-id="1fd6f-146">The property is case-sensitive, so you must set it exactly to one of the XML Schema data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1fd6f-147">将二进制数据作为 XML 元素是将其作为 XML 特性传递比效率更高。</span><span class="sxs-lookup"><span data-stu-id="1fd6f-147">Passing binary data as an XML element is more efficient than passing it as an XML attribute.</span></span>  
  
 <span data-ttu-id="1fd6f-148">有关 XML 架构数据类型的详细信息，请参阅名为 World Wide Web 联合会文档[XML 架构第 2 部分：数据类型](https://www.w3.org/TR/xmlschema-2/)。</span><span class="sxs-lookup"><span data-stu-id="1fd6f-148">For more information about XML Schema data types, see the World Wide Web Consortium document named [XML Schema Part 2: Datatypes](https://www.w3.org/TR/xmlschema-2/).</span></span>  
  
|<span data-ttu-id="1fd6f-149">XSD 数据类型</span><span class="sxs-lookup"><span data-stu-id="1fd6f-149">XSD data type</span></span>|<span data-ttu-id="1fd6f-150">.NET 数据类型</span><span class="sxs-lookup"><span data-stu-id="1fd6f-150">.NET data type</span></span>|  
|-------------------|--------------------|  
|<span data-ttu-id="1fd6f-151">anyURI</span><span class="sxs-lookup"><span data-stu-id="1fd6f-151">anyURI</span></span>|<xref:System.String>|  
|<span data-ttu-id="1fd6f-152">base64Binary</span><span class="sxs-lookup"><span data-stu-id="1fd6f-152">base64Binary</span></span>|<span data-ttu-id="1fd6f-153">数组<xref:System.Byte>对象</span><span class="sxs-lookup"><span data-stu-id="1fd6f-153">Array of <xref:System.Byte> objects</span></span>|  
|<span data-ttu-id="1fd6f-154">boolean</span><span class="sxs-lookup"><span data-stu-id="1fd6f-154">boolean</span></span>|<xref:System.Boolean>|  
|<span data-ttu-id="1fd6f-155">byte</span><span class="sxs-lookup"><span data-stu-id="1fd6f-155">byte</span></span>|<xref:System.SByte>|  
|<span data-ttu-id="1fd6f-156">date</span><span class="sxs-lookup"><span data-stu-id="1fd6f-156">date</span></span>|<xref:System.DateTime>|  
|<span data-ttu-id="1fd6f-157">dateTime</span><span class="sxs-lookup"><span data-stu-id="1fd6f-157">dateTime</span></span>|<xref:System.DateTime>|  
|<span data-ttu-id="1fd6f-158">decimal</span><span class="sxs-lookup"><span data-stu-id="1fd6f-158">decimal</span></span>|<xref:System.Decimal>|  
|<span data-ttu-id="1fd6f-159">double</span><span class="sxs-lookup"><span data-stu-id="1fd6f-159">double</span></span>|<xref:System.Double>|  
|<span data-ttu-id="1fd6f-160">ENTITY</span><span class="sxs-lookup"><span data-stu-id="1fd6f-160">ENTITY</span></span>|<xref:System.String>|  
|<span data-ttu-id="1fd6f-161">实体</span><span class="sxs-lookup"><span data-stu-id="1fd6f-161">ENTITIES</span></span>|<xref:System.String>|  
|<span data-ttu-id="1fd6f-162">float</span><span class="sxs-lookup"><span data-stu-id="1fd6f-162">float</span></span>|<xref:System.Single>|  
|<span data-ttu-id="1fd6f-163">gDay</span><span class="sxs-lookup"><span data-stu-id="1fd6f-163">gDay</span></span>|<xref:System.String>|  
|<span data-ttu-id="1fd6f-164">gMonth</span><span class="sxs-lookup"><span data-stu-id="1fd6f-164">gMonth</span></span>|<xref:System.String>|  
|<span data-ttu-id="1fd6f-165">gMonthDay</span><span class="sxs-lookup"><span data-stu-id="1fd6f-165">gMonthDay</span></span>|<xref:System.String>|  
|<span data-ttu-id="1fd6f-166">gYear</span><span class="sxs-lookup"><span data-stu-id="1fd6f-166">gYear</span></span>|<xref:System.String>|  
|<span data-ttu-id="1fd6f-167">gYearMonth</span><span class="sxs-lookup"><span data-stu-id="1fd6f-167">gYearMonth</span></span>|<xref:System.String>|  
|<span data-ttu-id="1fd6f-168">hexBinary</span><span class="sxs-lookup"><span data-stu-id="1fd6f-168">hexBinary</span></span>|<span data-ttu-id="1fd6f-169">数组<xref:System.Byte>对象</span><span class="sxs-lookup"><span data-stu-id="1fd6f-169">Array of <xref:System.Byte> objects</span></span>|  
|<span data-ttu-id="1fd6f-170">Id</span><span class="sxs-lookup"><span data-stu-id="1fd6f-170">ID</span></span>|<xref:System.String>|  
|<span data-ttu-id="1fd6f-171">IDREF</span><span class="sxs-lookup"><span data-stu-id="1fd6f-171">IDREF</span></span>|<xref:System.String>|  
|<span data-ttu-id="1fd6f-172">IDREFS</span><span class="sxs-lookup"><span data-stu-id="1fd6f-172">IDREFS</span></span>|<xref:System.String>|  
|<span data-ttu-id="1fd6f-173">int</span><span class="sxs-lookup"><span data-stu-id="1fd6f-173">int</span></span>|<xref:System.Int32>|  
|<span data-ttu-id="1fd6f-174">整数</span><span class="sxs-lookup"><span data-stu-id="1fd6f-174">integer</span></span>|<xref:System.String>|  
|<span data-ttu-id="1fd6f-175">语言</span><span class="sxs-lookup"><span data-stu-id="1fd6f-175">language</span></span>|<xref:System.String>|  
|<span data-ttu-id="1fd6f-176">long</span><span class="sxs-lookup"><span data-stu-id="1fd6f-176">long</span></span>|<xref:System.Int64>|  
|<span data-ttu-id="1fd6f-177">name</span><span class="sxs-lookup"><span data-stu-id="1fd6f-177">Name</span></span>|<xref:System.String>|  
|<span data-ttu-id="1fd6f-178">NCName</span><span class="sxs-lookup"><span data-stu-id="1fd6f-178">NCName</span></span>|<xref:System.String>|  
|<span data-ttu-id="1fd6f-179">negativeInteger</span><span class="sxs-lookup"><span data-stu-id="1fd6f-179">negativeInteger</span></span>|<xref:System.String>|  
|<span data-ttu-id="1fd6f-180">NMTOKEN</span><span class="sxs-lookup"><span data-stu-id="1fd6f-180">NMTOKEN</span></span>|<xref:System.String>|  
|<span data-ttu-id="1fd6f-181">NMTOKENS</span><span class="sxs-lookup"><span data-stu-id="1fd6f-181">NMTOKENS</span></span>|<xref:System.String>|  
|<span data-ttu-id="1fd6f-182">normalizedString</span><span class="sxs-lookup"><span data-stu-id="1fd6f-182">normalizedString</span></span>|<xref:System.String>|  
|<span data-ttu-id="1fd6f-183">nonNegativeInteger</span><span class="sxs-lookup"><span data-stu-id="1fd6f-183">nonNegativeInteger</span></span>|<xref:System.String>|  
|<span data-ttu-id="1fd6f-184">nonPositiveInteger</span><span class="sxs-lookup"><span data-stu-id="1fd6f-184">nonPositiveInteger</span></span>|<xref:System.String>|  
|<span data-ttu-id="1fd6f-185">NOTATION</span><span class="sxs-lookup"><span data-stu-id="1fd6f-185">NOTATION</span></span>|<xref:System.String>|  
|<span data-ttu-id="1fd6f-186">positiveInteger</span><span class="sxs-lookup"><span data-stu-id="1fd6f-186">positiveInteger</span></span>|<xref:System.String>|  
|<span data-ttu-id="1fd6f-187">QName</span><span class="sxs-lookup"><span data-stu-id="1fd6f-187">QName</span></span>|<xref:System.Xml.XmlQualifiedName>|  
|<span data-ttu-id="1fd6f-188">duration</span><span class="sxs-lookup"><span data-stu-id="1fd6f-188">duration</span></span>|<xref:System.String>|  
|<span data-ttu-id="1fd6f-189">string</span><span class="sxs-lookup"><span data-stu-id="1fd6f-189">string</span></span>|<xref:System.String>|  
|<span data-ttu-id="1fd6f-190">short</span><span class="sxs-lookup"><span data-stu-id="1fd6f-190">short</span></span>|<xref:System.Int16>|  
|<span data-ttu-id="1fd6f-191">时间</span><span class="sxs-lookup"><span data-stu-id="1fd6f-191">time</span></span>|<xref:System.DateTime>|  
|<span data-ttu-id="1fd6f-192">token</span><span class="sxs-lookup"><span data-stu-id="1fd6f-192">token</span></span>|<xref:System.String>|  
|<span data-ttu-id="1fd6f-193">unsignedByte</span><span class="sxs-lookup"><span data-stu-id="1fd6f-193">unsignedByte</span></span>|<xref:System.Byte>|  
|<span data-ttu-id="1fd6f-194">unsignedInt</span><span class="sxs-lookup"><span data-stu-id="1fd6f-194">unsignedInt</span></span>|<xref:System.UInt32>|  
|<span data-ttu-id="1fd6f-195">unsignedLong</span><span class="sxs-lookup"><span data-stu-id="1fd6f-195">unsignedLong</span></span>|<xref:System.UInt64>|  
|<span data-ttu-id="1fd6f-196">unsignedShort</span><span class="sxs-lookup"><span data-stu-id="1fd6f-196">unsignedShort</span></span>|<xref:System.UInt16>|  
  
   
  
## Examples  
 [!code-cpp[Classic XmlTextAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlTextAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlTextAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlTextAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlTextAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlTextAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception"><span data-ttu-id="1fd6f-197">已指定的 XML 架构数据类型无法映射到 .NET 数据类型。</span><span class="sxs-lookup"><span data-stu-id="1fd6f-197">The XML Schema data type you have specified cannot be mapped to the .NET data type.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1fd6f-198">已指定的 XML 架构数据类型对该属性无效，且无法转换为成员类型。</span><span class="sxs-lookup"><span data-stu-id="1fd6f-198">The XML Schema data type you have specified is invalid for the property and cannot be converted to the member type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Type Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Type" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlTextAttribute.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ Type { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Type : Type with get, set" Usage="System.Xml.Serialization.XmlTextAttribute.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1fd6f-199">获取或设置成员的类型。</span><span class="sxs-lookup"><span data-stu-id="1fd6f-199">Gets or sets the type of the member.</span></span></summary>
        <value><span data-ttu-id="1fd6f-200">成员的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="1fd6f-200">The <see cref="T:System.Type" /> of the member.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fd6f-201"><xref:System.Type>属性只能设置为基元类型和枚举。</span><span class="sxs-lookup"><span data-stu-id="1fd6f-201">The <xref:System.Type> property can only be set to primitive types and enumerations.</span></span>  
  
 <span data-ttu-id="1fd6f-202"><xref:System.Xml.Serialization.XmlTextAttribute>还可应用于返回的字段<xref:System.Xml.XmlNode>或一组<xref:System.Xml.XmlNode>对象。</span><span class="sxs-lookup"><span data-stu-id="1fd6f-202">The <xref:System.Xml.Serialization.XmlTextAttribute> can also be applied to a field that returns an <xref:System.Xml.XmlNode> or an array of <xref:System.Xml.XmlNode> objects.</span></span>  
  
 <span data-ttu-id="1fd6f-203">您可以将应用<xref:System.Xml.Serialization.XmlTextAttribute>到字段或属性返回一个字符串数组。</span><span class="sxs-lookup"><span data-stu-id="1fd6f-203">You can apply the <xref:System.Xml.Serialization.XmlTextAttribute> to a field or property that returns an array of strings.</span></span> <span data-ttu-id="1fd6f-204">您还可以将特性应用于类型的数组<xref:System.Object>必须设置但<xref:System.Xml.Serialization.XmlTextAttribute.Type%2A>属性设置为字符串。</span><span class="sxs-lookup"><span data-stu-id="1fd6f-204">You can also apply the attribute to an array of type <xref:System.Object> but you must set the <xref:System.Xml.Serialization.XmlTextAttribute.Type%2A> property to string.</span></span> <span data-ttu-id="1fd6f-205">在这种情况下，插入到数组中的任何字符串都序列化为 XML 文本。</span><span class="sxs-lookup"><span data-stu-id="1fd6f-205">In that case, any strings inserted into the array are serialized as XML text.</span></span>  
  
   
  
## Examples  
 [!code-cpp[Classic XmlTextAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlTextAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlTextAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlTextAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlTextAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlTextAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>