<Type Name="SoapElementAttribute" FullName="System.Xml.Serialization.SoapElementAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8940674439eca4c8b97ae890e9d43ef1e5655e1f" /><Meta Name="ms.sourcegitcommit" Value="f55040f35c19a83c85beb55243330558f6e369be" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="06/10/2019" /><Meta Name="ms.locfileid" Value="66819293" /></Metadata><TypeSignature Language="C#" Value="public class SoapElementAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SoapElementAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.SoapElementAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class SoapElementAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoapElementAttribute : Attribute" />
  <TypeSignature Language="F#" Value="type SoapElementAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netstandard-2.0;netcore-2.2;netcore-3.0;netstandard-2.1">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.Property | System.AttributeTargets.ReturnValue)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.ReturnValue)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>指定公共成员值由 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 序列化为经过编码的 SOAP XML 元素。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Serialization.SoapElementAttribute>类属于一系列属性，用于控制如何<xref:System.Xml.Serialization.XmlSerializer>序列化或反序列化为编码的 SOAP XML 的对象。 生成的 XML 符合万维网联合会文档的第 5 节[简单对象访问协议 (SOAP) 1.1](https://www.w3.org/TR/2000/NOTE-SOAP-20000508/)。 有关类似属性的完整列表，请参阅[属性 That Control Encoded SOAP Serialization](~/docs/standard/serialization/attributes-that-control-encoded-soap-serialization.md)。  
  
 若要编码的 SOAP 消息将对象序列化为，必须构造<xref:System.Xml.Serialization.XmlSerializer>使用<xref:System.Xml.Serialization.XmlTypeMapping>附带<xref:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping%2A>方法的<xref:System.Xml.Serialization.SoapReflectionImporter>类。  
  
 将应用<xref:System.Xml.Serialization.SoapElementAttribute>公共字段，以将定向到<xref:System.Xml.Serialization.XmlSerializer>要序列化的编码的 SOAP XML 元素形式的字段。  
  
 有关使用属性的详细信息，请参阅[属性](~/docs/standard/attributes/index.md)。  
  
   
  
## Examples  
 下面的示例将名为的类的实例序列化为`Transportation`，其中包含一个名为字段`Vehicle`。 一个<xref:System.Xml.Serialization.SoapElementAttribute>应用于字段。 当序列化字段时，XML 元素名称是"辅助"而不是"Vehicle"。 `SerializeOverride`方法创建<xref:System.Xml.Serialization.SoapElementAttribute>，并设置<xref:System.Xml.Serialization.SoapAttributes.SoapElement%2A>的属性<xref:System.Xml.Serialization.SoapAttributes>到<xref:System.Xml.Serialization.SoapElementAttribute>。 <xref:System.Xml.Serialization.SoapAttributes>添加到<xref:System.Xml.Serialization.SoapAttributeOverrides>用于创建<xref:System.Xml.Serialization.XmlTypeMapping>。 <xref:System.Xml.Serialization.XmlSerializer>使用构造<xref:System.Xml.Serialization.XmlTypeMapping>，和的实例`Transportation`再次序列化类。 因为<xref:System.Xml.Serialization.SoapElementAttribute>是用于重写序列化，生成的 XML 元素名称现在是"Truck"而不是"辅助"。  
  
 [!code-cpp[SoapElementOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapElementOverrides/CPP/soapelementoverrides.cpp#1)]
 [!code-csharp[SoapElementOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapElementOverrides/CS/soapelementoverrides.cs#1)]
 [!code-vb[SoapElementOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapElementOverrides/VB/soapelementoverrides.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Xml.Serialization.SoapElementAttribute" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapElementAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapElementAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapElementAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Xml.Serialization.SoapElementAttribute" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的示例将名为的类的实例序列化为`Transportation`，其中包含一个名为字段`Vehicle`。 一个<xref:System.Xml.Serialization.SoapElementAttribute>应用于字段。 当序列化字段时，XML 元素名称是"辅助"而不是"Vehicle"。 `SerializeOverride`方法创建<xref:System.Xml.Serialization.SoapElementAttribute>，并设置<xref:System.Xml.Serialization.SoapAttributes.SoapElement%2A>的属性<xref:System.Xml.Serialization.SoapAttributes>到<xref:System.Xml.Serialization.SoapElementAttribute>。 <xref:System.Xml.Serialization.SoapAttributes>添加到<xref:System.Xml.Serialization.SoapAttributeOverrides>用于创建<xref:System.Xml.Serialization.XmlTypeMapping>。 <xref:System.Xml.Serialization.XmlSerializer>使用构造<xref:System.Xml.Serialization.XmlTypeMapping>，和的实例`Transportation`再次序列化类。 因为<xref:System.Xml.Serialization.SoapElementAttribute>是用于重写序列化，生成的 XML 元素名称现在是"Truck"而不是"辅助"。  
  
 [!code-cpp[SoapElementOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapElementOverrides/CPP/soapelementoverrides.cpp#1)]
 [!code-csharp[SoapElementOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapElementOverrides/CS/soapelementoverrides.cs#1)]
 [!code-vb[SoapElementOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapElementOverrides/VB/soapelementoverrides.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapElementAttribute (string elementName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string elementName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapElementAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (elementName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapElementAttribute(System::String ^ elementName);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.SoapElementAttribute : string -&gt; System.Xml.Serialization.SoapElementAttribute" Usage="new System.Xml.Serialization.SoapElementAttribute elementName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="elementName">序列化成员的 XML 元素名。</param>
        <summary>初始化 <see cref="T:System.Xml.Serialization.SoapElementAttribute" /> 类的新实例，并指定 XML 元素的名称。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的示例将名为的类的实例序列化为`Transportation`，其中包含一个名为字段`Vehicle`。 一个<xref:System.Xml.Serialization.SoapElementAttribute>应用于字段。 当序列化字段时，XML 元素名称是"辅助"而不是"Vehicle"。 `SerializeOverride`方法创建<xref:System.Xml.Serialization.SoapElementAttribute>，并设置<xref:System.Xml.Serialization.SoapAttributes.SoapElement%2A>的属性<xref:System.Xml.Serialization.SoapAttributes>到<xref:System.Xml.Serialization.SoapElementAttribute>。 <xref:System.Xml.Serialization.SoapAttributes>添加到<xref:System.Xml.Serialization.SoapAttributeOverrides>用于创建<xref:System.Xml.Serialization.XmlTypeMapping>。 <xref:System.Xml.Serialization.XmlSerializer>使用构造<xref:System.Xml.Serialization.XmlTypeMapping>，和的实例`Transportation`再次序列化类。 因为<xref:System.Xml.Serialization.SoapElementAttribute>是用于重写序列化，生成的 XML 元素名称现在是"Truck"而不是"辅助"。  
  
 [!code-cpp[SoapElementOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapElementOverrides/CPP/soapelementoverrides.cpp#1)]
 [!code-csharp[SoapElementOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapElementOverrides/CS/soapelementoverrides.cs#1)]
 [!code-vb[SoapElementOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapElementOverrides/VB/soapelementoverrides.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataType">
      <MemberSignature Language="C#" Value="public string DataType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.SoapElementAttribute.DataType" />
      <MemberSignature Language="VB.NET" Value="Public Property DataType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataType : string with get, set" Usage="System.Xml.Serialization.SoapElementAttribute.DataType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置生成的 XML 元素的“XML 架构”定义语言 (XSD) 数据类型。</summary>
        <value>“XML 架构”数据类型之一。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 下表列出了 XML 架构简单数据类型及其.NET 等效项。  
  
 为 XML 架构`base64Binary`并`hexBinary`数据类型使用的数组<xref:System.Byte>结构，并将应用<xref:System.Xml.Serialization.SoapElementAttribute>与<xref:System.Xml.Serialization.SoapAttributeAttribute.DataType%2A>设置为"base64Binary"或"hexBinary"根据需要。 为 XML 架构`time`并`date`数据类型，使用<xref:System.DateTime>键入并应用<xref:System.Xml.Serialization.SoapElementAttribute>与<xref:System.Xml.Serialization.SoapElementAttribute.DataType%2A>设置为"日期"或"时间"。  
  
 对于映射到一个字符串，每个 XML 架构数据类型，将应用于<xref:System.Xml.Serialization.SoapElementAttribute>使用其<xref:System.Xml.Serialization.SoapElementAttribute.DataType%2A>属性设置为 XML 架构类型。 请注意这不会更改序列化格式，仅该成员的架构。  
  
> [!NOTE]
>  属性是区分大小写，因此必须将其设置与 XML 架构数据类型之一完全。  
  
> [!NOTE]
>  将二进制数据作为 XML 元素是将其作为 XML 特性传递比效率更高。  
  
 有关 XML 数据类型的详细信息，请参阅万维网联合会文档[XML 架构第 2 部分：数据类型](https://www.w3.org/TR/xmlschema-2/)。  
  
|XSD 数据类型|.NET 数据类型|  
|-------------------|--------------------|  
|anyURI|<xref:System.String>|  
|base64Binary|数组<xref:System.Byte>对象|  
|boolean|<xref:System.Boolean>|  
|byte|<xref:System.SByte>|  
|date|<xref:System.DateTime>|  
|dateTime|<xref:System.DateTime>|  
|decimal|<xref:System.Decimal>|  
|double|<xref:System.Double>|  
|ENTITY|<xref:System.String>|  
|实体|<xref:System.String>|  
|float|<xref:System.Single>|  
|gDay|<xref:System.String>|  
|gMonth|<xref:System.String>|  
|gMonthDay|<xref:System.String>|  
|gYear|<xref:System.String>|  
|gYearMonth|<xref:System.String>|  
|hexBinary|数组<xref:System.Byte>对象|  
|Id|<xref:System.String>|  
|IDREF|<xref:System.String>|  
|IDREFS|<xref:System.String>|  
|int|<xref:System.Int32>|  
|整数|<xref:System.String>|  
|语言|<xref:System.String>|  
|long|<xref:System.Int64>|  
|name|<xref:System.String>|  
|NCName|<xref:System.String>|  
|negativeInteger|<xref:System.String>|  
|NMTOKEN|<xref:System.String>|  
|NMTOKENS|<xref:System.String>|  
|normalizedString|<xref:System.String>|  
|nonNegativeInteger|<xref:System.String>|  
|nonPositiveInteger|<xref:System.String>|  
|NOTATION|<xref:System.String>|  
|positiveInteger|<xref:System.String>|  
|QName|<xref:System.Xml.XmlQualifiedName>|  
|duration|<xref:System.String>|  
|string|<xref:System.String>|  
|short|<xref:System.Int16>|  
|时间|<xref:System.DateTime>|  
|token|<xref:System.String>|  
|unsignedByte|<xref:System.Byte>|  
|unsignedInt|<xref:System.UInt32>|  
|unsignedLong|<xref:System.UInt64>|  
|unsignedShort|<xref:System.UInt16>|  
  
   
  
## Examples  
 下面的示例将名为的类的实例序列化为`Transportation`，其中包含一个名为字段`Vehicle`。 一个<xref:System.Xml.Serialization.SoapElementAttribute>应用于字段。 当序列化字段时，XML 元素名称是"辅助"而不是"Vehicle"。 `SerializeOverride`方法创建<xref:System.Xml.Serialization.SoapElementAttribute>，并设置<xref:System.Xml.Serialization.SoapAttributes.SoapElement%2A>的属性<xref:System.Xml.Serialization.SoapAttributes>到<xref:System.Xml.Serialization.SoapElementAttribute>。 <xref:System.Xml.Serialization.SoapAttributes>添加到<xref:System.Xml.Serialization.SoapAttributeOverrides>用于创建<xref:System.Xml.Serialization.XmlTypeMapping>。 <xref:System.Xml.Serialization.XmlSerializer>使用构造<xref:System.Xml.Serialization.XmlTypeMapping>，和的实例`Transportation`再次序列化类。 因为<xref:System.Xml.Serialization.SoapElementAttribute>是用于重写序列化，生成的 XML 元素名称现在是"Truck"而不是"辅助"。  
  
 [!code-cpp[SoapElementOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapElementOverrides/CPP/soapelementoverrides.cpp#1)]
 [!code-csharp[SoapElementOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapElementOverrides/CS/soapelementoverrides.cs#1)]
 [!code-vb[SoapElementOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapElementOverrides/VB/soapelementoverrides.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ElementName">
      <MemberSignature Language="C#" Value="public string ElementName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ElementName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.SoapElementAttribute.ElementName" />
      <MemberSignature Language="VB.NET" Value="Public Property ElementName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ElementName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ElementName : string with get, set" Usage="System.Xml.Serialization.SoapElementAttribute.ElementName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置生成的 XML 元素的名称。</summary>
        <value>生成的 XML 元素的名称。 默认值为成员标识符。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的示例将名为的类的实例序列化为`Transportation`，其中包含一个名为字段`Vehicle`。 一个<xref:System.Xml.Serialization.SoapElementAttribute>应用于字段。 当序列化字段时，XML 元素名称是"辅助"而不是"Vehicle"。 `SerializeOverride`方法创建<xref:System.Xml.Serialization.SoapElementAttribute>，并设置<xref:System.Xml.Serialization.SoapAttributes.SoapElement%2A>的属性<xref:System.Xml.Serialization.SoapAttributes>到<xref:System.Xml.Serialization.SoapElementAttribute>。 <xref:System.Xml.Serialization.SoapAttributes>添加到<xref:System.Xml.Serialization.SoapAttributeOverrides>用于创建<xref:System.Xml.Serialization.XmlTypeMapping>。 <xref:System.Xml.Serialization.XmlSerializer>使用构造<xref:System.Xml.Serialization.XmlTypeMapping>，和的实例`Transportation`再次序列化类。 因为<xref:System.Xml.Serialization.SoapElementAttribute>是用于重写序列化，生成的 XML 元素名称现在是"Truck"而不是"辅助"。  
  
 [!code-cpp[SoapElementOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapElementOverrides/CPP/soapelementoverrides.cpp#1)]
 [!code-csharp[SoapElementOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapElementOverrides/CS/soapelementoverrides.cs#1)]
 [!code-vb[SoapElementOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapElementOverrides/VB/soapelementoverrides.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNullable">
      <MemberSignature Language="C#" Value="public bool IsNullable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNullable" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.SoapElementAttribute.IsNullable" />
      <MemberSignature Language="VB.NET" Value="Public Property IsNullable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNullable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsNullable : bool with get, set" Usage="System.Xml.Serialization.SoapElementAttribute.IsNullable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或者设置一个值，该值指示 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 是否必须序列化一个 <see langword="xsi:null" /> 特性设置为“1”的成员。</summary>
        <value>如果 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 生成 <see langword="true" /> 属性，则为 <see langword="xsi:null" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 结构的 XML 架构规范允许 XML 文档以显式指示缺少指定元素的内容。 此类元素包含属性`xsi:null`设置为"1"。 有关详细信息，请参阅名为 World Wide Web Consortium 规范[XML 架构第 1 部分：结构](https://www.w3.org/TR/xmlschema-1/)。  
  
 如果<xref:System.Xml.Serialization.SoapElementAttribute.IsNullable%2A>属性设置为`true`，则`xsi:null`已设置为的类成员生成属性`null`。 例如，如果将一个名为字段`MyStringArray`到`null`，则<xref:System.Xml.Serialization.XmlSerializer>生成以下 XML 代码。  
  
```  
<MyStringArray xsi:null = "1" />  
```  
  
 如果<xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A>属性是`false`，会生成任何 XML 元素。  
  
> [!NOTE]
>  无法应用<xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A>属性绑定到成员类型为值类型，因为值类型不能包含`null`。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>