<Type Name="SoapEnumAttribute" FullName="System.Xml.Serialization.SoapEnumAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e2ca35e1c548a94fcce6f56e6293baf6e9a514b9" /><Meta Name="ms.sourcegitcommit" Value="f55040f35c19a83c85beb55243330558f6e369be" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="06/10/2019" /><Meta Name="ms.locfileid" Value="66817563" /></Metadata><TypeSignature Language="C#" Value="public class SoapEnumAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SoapEnumAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.SoapEnumAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class SoapEnumAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoapEnumAttribute : Attribute" />
  <TypeSignature Language="F#" Value="type SoapEnumAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>控制 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 如何序列化枚举成员。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Serialization.SoapEnumAttribute>类属于一系列属性，用于控制如何<xref:System.Xml.Serialization.XmlSerializer>序列化或反序列化为编码的 SOAP XML 的对象。 生成的 XML 符合万维网联合会文档的第 5 节[简单对象访问协议 (SOAP) 1.1](https://www.w3.org/TR/2000/NOTE-SOAP-20000508/)。 有关类似属性的完整列表，请参阅[属性 That Control Encoded SOAP Serialization](~/docs/standard/serialization/attributes-that-control-encoded-soap-serialization.md)。  
  
 若要编码的 SOAP 消息将对象序列化为，必须构造<xref:System.Xml.Serialization.XmlSerializer>使用<xref:System.Xml.Serialization.XmlTypeMapping>附带<xref:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping%2A>方法的<xref:System.Xml.Serialization.SoapReflectionImporter>类。  
  
 使用<xref:System.Xml.Serialization.SoapEnumAttribute>若要更改枚举的<xref:System.Xml.Serialization.XmlSerializer>生成或识别的 （时序列化或反序列化一个类，分别）。 例如，如果一个枚举，包含一个名为`One`，但您更喜欢使用的 XML 输出，将命名为`Single`，将应用<xref:System.Xml.Serialization.SoapEnumAttribute>到枚举成员和集<xref:System.Xml.Serialization.SoapEnumAttribute.Name%2A>属性设置为"Single"。  
  
 您可以重写<xref:System.Xml.Serialization.SoapEnumAttribute.Name%2A>属性值为<xref:System.Xml.Serialization.SoapEnumAttribute>创建的一个实例<xref:System.Xml.Serialization.SoapEnumAttribute>类并将其分配给<xref:System.Xml.Serialization.SoapAttributes.SoapEnum%2A>属性<xref:System.Xml.Serialization.SoapAttributes>。 有关详细信息，请参阅<xref:System.Xml.Serialization.SoapAttributeOverrides>类概述。  
  
 若要编码的 SOAP 消息将对象序列化为，必须构造<xref:System.Xml.Serialization.XmlSerializer>使用<xref:System.Xml.Serialization.XmlTypeMapping>附带<xref:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping%2A>方法的<xref:System.Xml.Serialization.SoapReflectionImporter>类。  
  
> [!NOTE]
>  可以使用单词`SoapEnum`而不是较长在代码中<xref:System.Xml.Serialization.SoapEnumAttribute>。  
  
 有关使用属性的详细信息，请参阅[属性](~/docs/standard/attributes/index.md)。  
  
   
  
## Examples  
 下面的示例使用<xref:System.Xml.Serialization.XmlSerializer>来序列化的类名为`Food`，其中包含名为枚举`FoodType`。 `FoodType`枚举通过创建中被重写<xref:System.Xml.Serialization.SoapEnumAttribute>为每个枚举和设置<xref:System.Xml.Serialization.SoapAttributes.SoapEnum%2A>的属性<xref:System.Xml.Serialization.SoapAttributes>到<xref:System.Xml.Serialization.SoapEnumAttribute>。 <xref:System.Xml.Serialization.SoapAttributes>添加到<xref:System.Xml.Serialization.SoapAttributeOverrides>用于创建<xref:System.Xml.Serialization.XmlSerializer>。  
  
 [!code-cpp[SoapEnumOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapEnumOverrides/CPP/soapenumoverrides.cpp#1)]
 [!code-csharp[SoapEnumOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapEnumOverrides/CS/soapenumoverrides.cs#1)]
 [!code-vb[SoapEnumOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapEnumOverrides/VB/soapenumoverrides.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Xml.Serialization.SoapEnumAttribute" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapEnumAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapEnumAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapEnumAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Xml.Serialization.SoapEnumAttribute" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Xml.Serialization.SoapEnumAttribute.%23ctor%2A>重写现有的枚举。 创建一个新<xref:System.Xml.Serialization.SoapEnumAttribute>、 设置其属性和分配给对象<xref:System.Xml.Serialization.SoapAttributes.SoapEnum%2A>属性的<xref:System.Xml.Serialization.SoapAttributes>。 对于每个枚举的成员，必须创建一个新<xref:System.Xml.Serialization.SoapAttributes>并将其添加到<xref:System.Xml.Serialization.SoapAttributeOverrides>。 有关更多详细信息，请参阅<xref:System.Xml.Serialization.SoapAttributeOverrides>类概述。  
  
> [!NOTE]
>  可以使用单词`SoapEnum`而不是较长在代码中<xref:System.Xml.Serialization.SoapEnumAttribute>。  
  
   
  
## Examples  
 下面的示例使用<xref:System.Xml.Serialization.XmlSerializer>来序列化的类名为`Food`，其中包含名为枚举`FoodType`。 `FoodType`枚举通过创建中被重写<xref:System.Xml.Serialization.SoapEnumAttribute>为每个枚举和设置<xref:System.Xml.Serialization.SoapAttributes.SoapEnum%2A>的属性<xref:System.Xml.Serialization.SoapAttributes>到<xref:System.Xml.Serialization.SoapEnumAttribute>。 <xref:System.Xml.Serialization.SoapAttributes>添加到<xref:System.Xml.Serialization.SoapAttributeOverrides>用于创建<xref:System.Xml.Serialization.XmlSerializer>。  
  
 [!code-cpp[SoapEnumOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapEnumOverrides/CPP/soapenumoverrides.cpp#1)]
 [!code-csharp[SoapEnumOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapEnumOverrides/CS/soapenumoverrides.cs#1)]
 [!code-vb[SoapEnumOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapEnumOverrides/VB/soapenumoverrides.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapEnumAttribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapEnumAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapEnumAttribute(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.SoapEnumAttribute : string -&gt; System.Xml.Serialization.SoapEnumAttribute" Usage="new System.Xml.Serialization.SoapEnumAttribute name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">由 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 生成的 XML 元素名称。</param>
        <summary>使用指定的元素名称初始化 <see cref="T:System.Xml.Serialization.SoapEnumAttribute" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 指定<xref:System.Xml.Serialization.SoapEnumAttribute.Name%2A>何时生成的 XML 枚举器，不同于枚举器在枚举中找到。  
  
> [!NOTE]
>  可以使用单词`SoapEnum`而不是较长在代码中<xref:System.Xml.Serialization.SoapEnumAttribute>。  
  
   
  
## Examples  
 下面的示例使用<xref:System.Xml.Serialization.XmlSerializer>来序列化的类名为`Food`，其中包含名为枚举`FoodType`。 `FoodType`枚举通过创建中被重写<xref:System.Xml.Serialization.SoapEnumAttribute>为每个枚举和设置<xref:System.Xml.Serialization.SoapAttributes.SoapEnum%2A>的属性<xref:System.Xml.Serialization.SoapAttributes>到<xref:System.Xml.Serialization.SoapEnumAttribute>。 <xref:System.Xml.Serialization.SoapAttributes>添加到<xref:System.Xml.Serialization.SoapAttributeOverrides>用于创建<xref:System.Xml.Serialization.XmlSerializer>。  
  
 [!code-cpp[SoapEnumOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapEnumOverrides/CPP/soapenumoverrides.cpp#1)]
 [!code-csharp[SoapEnumOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapEnumOverrides/CS/soapenumoverrides.cs#1)]
 [!code-vb[SoapEnumOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapEnumOverrides/VB/soapenumoverrides.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.SoapEnumAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Xml.Serialization.SoapEnumAttribute.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值在 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 序列化枚举时在 XML 文档中生成，或在它反序列化该枚举成员时被识别。</summary>
        <value>当 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 序列化枚举时在 XML 文档中生成的值，或当它反序列化该枚举成员时识别的值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 指定<xref:System.Xml.Serialization.SoapEnumAttribute.Name%2A>何时生成的 XML 枚举器，不同于枚举器在枚举中找到。  
  
> [!NOTE]
>  可以使用单词`SoapEnum`而不是较长<xref:System.Xml.Serialization.SoapEnumAttribute>。  
  
   
  
## Examples  
 下面的示例使用<xref:System.Xml.Serialization.XmlSerializer>来序列化的类名为`Food`，其中包含名为枚举`FoodType`。 `FoodType`枚举通过创建中被重写<xref:System.Xml.Serialization.SoapEnumAttribute>为每个枚举和设置<xref:System.Xml.Serialization.SoapAttributes.SoapEnum%2A>的属性<xref:System.Xml.Serialization.SoapAttributes>到<xref:System.Xml.Serialization.SoapEnumAttribute>。 <xref:System.Xml.Serialization.SoapAttributes>添加到<xref:System.Xml.Serialization.SoapAttributeOverrides>用于创建<xref:System.Xml.Serialization.XmlSerializer>。  
  
 [!code-cpp[SoapEnumOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapEnumOverrides/CPP/soapenumoverrides.cpp#1)]
 [!code-csharp[SoapEnumOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapEnumOverrides/CS/soapenumoverrides.cs#1)]
 [!code-vb[SoapEnumOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapEnumOverrides/VB/soapenumoverrides.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>