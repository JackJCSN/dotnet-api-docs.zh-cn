<Type Name="XmlAnyElementAttribute" FullName="System.Xml.Serialization.XmlAnyElementAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a48bfbf4f9350b284f18d895b838b1f657d32b6d" /><Meta Name="ms.sourcegitcommit" Value="bc24a3ba616ee1df8b858f9400cae4f058ea3a7e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="06/19/2019" /><Meta Name="ms.locfileid" Value="67245551" /></Metadata><TypeSignature Language="C#" Value="public class XmlAnyElementAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlAnyElementAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlAnyElementAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlAnyElementAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlAnyElementAttribute : Attribute" />
  <TypeSignature Language="F#" Value="type XmlAnyElementAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.Serialization</AssemblyName>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netstandard-2.0;netcore-2.2;dotnet-uwp-10.0;netstandard-2.1">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.Property | System.AttributeTargets.ReturnValue, AllowMultiple=true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.ReturnValue, AllowMultiple=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>指定成员（返回 <see cref="T:System.Xml.XmlElement" /> 或 <see cref="T:System.Xml.XmlNode" /> 对象的数组的字段）可以包含对象，该对象表示在序列化或反序列化的对象中没有相应成员的所有 XML 元素。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!TIP]
>  当使用可移植类库中，例如 Silverlight、 Windows Phone 或 Windows 应用商店应用程序项目，以及您使用的.NET Framework 4.0.3 和更高版本，使用<xref:System.Xml.Linq.XElement>或<xref:System.Xml.Linq.XNode>来代替<xref:System.Xml.XmlElement>和<xref:System.Xml.XmlNode>。  
  
 使用<xref:System.Xml.Serialization.XmlAnyElementAttribute>包含可以作为 XML 文档，如作为文档的一部分发送的元数据的一部分发送的任意数据 （作为 XML 元素）。  
  
 将应用<xref:System.Xml.Serialization.XmlAnyElementAttribute>返回的数组的字段<xref:System.Xml.XmlElement>或<xref:System.Xml.XmlNode>对象。 此类字段可在两种方法，具体取决于是否是对象的序列化或反序列化。 序列化时，该对象会转换为 XML 元素或节点，即使它们不具有相应的成员 （或成员） 的对象中正在序列化。 如果指定<xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A>属性值应用该属性时所有<xref:System.Xml.XmlElement>或<xref:System.Xml.XmlNode>对象插入到数组必须具有相同元素名称和默认的命名空间，或引发异常。 如果您设置<xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A>属性值必须设置<xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A>属性，并<xref:System.Xml.XmlElement>或<xref:System.Xml.XmlNode>对象还必须具有相同的名称和命名空间值。 如果没有<xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A>指定值，则<xref:System.Xml.XmlElement>或<xref:System.Xml.XmlNode>对象可以具有任何元素的名称。  
  
 当您调用<xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A>方法的<xref:System.Xml.Serialization.XmlSerializer>类，在要反序列化的对象中没有相应成员的所有元素收集到数组中。 反序列化之后, 循环访问集合的<xref:System.Xml.XmlElement>要处理的数据的项。 如果指定<xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A>值，该数组只包含 XML 元素具有该名称。 如果未指定<xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A>值，该数组包含不具有相应成员的类中的所有元素。 如果类包含多个特性应用于字段，使用<xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A>，或<xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A>和<xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A>属性来区分的数组的内容。 如果 （具有多个字段） 这样的类还包含具有不区分设置的属性值的一个字段 (即，<xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A>和<xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A>) 在反序列化，此数组包含尚未包含任何未知的 XML 元素在其他数组。 如果类包含多个字段没有区分<xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A>，或<xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A>和<xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A>反序列化期间的行为是未指定的值集。  
  
 您还可以应用<xref:System.Xml.Serialization.XmlAnyElementAttribute>返回单个字段<xref:System.Xml.XmlElement>对象。 如果这样做，则必须使用的属性和方法的<xref:System.Xml.XmlElement>类以递归方式循环访问未知元素。  
  
 您可以将应用的多个实例<xref:System.Xml.Serialization.XmlAnyElementAttribute>于类成员，但每个实例必须具有不同<xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A>属性值。 或者，如果相同<xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A>属性设置为每个实例，非重复<xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A>属性值必须设置为每个实例。  
  
 <xref:System.Xml.Serialization.XmlSerializer.UnknownNode>并<xref:System.Xml.Serialization.XmlSerializer.UnknownAttribute>的事件<xref:System.Xml.Serialization.XmlSerializer>如果应用不会发生<xref:System.Xml.Serialization.XmlAnyElementAttribute>到类的成员。  
  
> [!NOTE]
>  可以使用单词`XmlAnyElement`而不是较长在代码中<xref:System.Xml.Serialization.XmlAnyElementAttribute>。  
  
 有关使用属性的详细信息，请参阅[属性](~/docs/standard/attributes/index.md)。  
  
   
  
## Examples  
 下面的示例应用<xref:System.Xml.Serialization.XmlAnyElementAttribute>到一个名为字段`AllElements`返回的数组<xref:System.Xml.XmlElement>对象。  
  
 [!code-cpp[Classic XmlAnyElementAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAnyElementAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAnyElementAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAnyElementAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAnyElementAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAnyElementAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" />
    <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md">XML 序列化简介</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlAnyElementAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlAnyElementAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Xml.Serialization.XmlAnyElementAttribute>构造函数时将重写字段的序列化。 有关重写序列化的更多详细信息，请参阅<xref:System.Xml.Serialization.XmlAttributeOverrides>类。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlAnyElementAttribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlAnyElementAttribute(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlAnyElementAttribute : string -&gt; System.Xml.Serialization.XmlAnyElementAttribute" Usage="new System.Xml.Serialization.XmlAnyElementAttribute name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><see cref="T:System.Xml.Serialization.XmlSerializer" /> 生成的 XML 元素的名称。</param>
        <summary>初始化 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> 类的新实例并指定在 XML 文档中生成的 XML 元素名称。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Xml.Serialization.XmlAnyElementAttribute>构造函数时将重写字段的序列化。 有关重写序列化的更多详细信息，请参阅<xref:System.Xml.Serialization.XmlAttributeOverrides>类。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlAnyElementAttribute (string name, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlAnyElementAttribute(System::String ^ name, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlAnyElementAttribute : string * string -&gt; System.Xml.Serialization.XmlAnyElementAttribute" Usage="new System.Xml.Serialization.XmlAnyElementAttribute (name, ns)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><see cref="T:System.Xml.Serialization.XmlSerializer" /> 生成的 XML 元素的名称。</param>
        <param name="ns">XML 元素的 XML 命名空间。</param>
        <summary>初始化 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> 类的新实例并指定在 XML 文档中生成的 XML 元素名称及其 XML 命名空间。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Xml.Serialization.XmlAnyElementAttribute>构造函数时将重写字段的序列化。 有关重写序列化的更多详细信息，请参阅<xref:System.Xml.Serialization.XmlAttributeOverrides>类。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAnyElementAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Xml.Serialization.XmlAnyElementAttribute.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 XML 元素名。</summary>
        <value>XML 元素的名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果指定<xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A>属性值应用该属性时所有<xref:System.Xml.XmlElement>或<xref:System.Xml.XmlNode>对象插入到数组必须具有相同元素名称和默认的命名空间，或引发异常。 如果您设置<xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A>属性值必须设置<xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A>属性，并<xref:System.Xml.XmlElement>或<xref:System.Xml.XmlNode>对象还必须具有相同的名称和命名空间值。 如果没有<xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A>指定值，则<xref:System.Xml.XmlElement>或<xref:System.Xml.XmlNode>对象可以具有任何元素的名称。  
  
 当您调用<xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A>方法的<xref:System.Xml.Serialization.XmlSerializer>类，在要反序列化的对象中没有相应成员的所有属性收集到数组中。 如果指定<xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A>值，该数组只包含 XML 元素具有该名称。 如果未指定<xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A>值，该数组包含不具有相应成员的类中的所有元素。 如果类包含多个特性应用于字段，使用<xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A>和<xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A>属性来区分的数组的内容。 如果 （具有多个字段） 这样的类还包含具有不区分设置的属性值的一个字段 (即<xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A>和<xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A>) 在反序列化，该数组包含尚未包含的其他任何 XML 元素数组。 如果添加多个字段没有区分<xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A>或<xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A>设置值后，在类中的最后一个字段包含不在数组中已包含的所有未知的元素和任何其他字段设置为`null`。  
  
 您可以将应用的多个实例<xref:System.Xml.Serialization.XmlAnyElementAttribute>于类成员，但每个实例必须具有不同<xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A>属性值。 或者，如果相同<xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A>属性设置为每个实例，非重复<xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A>属性值必须设置为每个实例。  
  
   
  
## Examples  
 [!code-cpp[XmlAnyElementAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlAnyElementAttribute Example/CPP/anyelement.cpp#1)]
 [!code-csharp[XmlAnyElementAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlAnyElementAttribute Example/CS/anyelement.cs#1)]
 [!code-vb[XmlAnyElementAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XmlAnyElementAttribute Example/VB/anyelement.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">数组成员的元素名称与 <see cref="P:System.Xml.Serialization.XmlAnyElementAttribute.Name" /> 属性指定的元素名称不匹配。</exception>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAnyElementAttribute.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : string with get, set" Usage="System.Xml.Serialization.XmlAnyElementAttribute.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置在 XML 文档中生成的 XML 命名空间。</summary>
        <value>一个 XML 命名空间。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A>属性，可设置的 XML 特性的唯一名称。 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A>属性符合用于创建 XML 命名空间中找到的规则[XML 中的命名空间](https://www.w3.org/TR/xml-names/)文档由 World Wide Web Consortium。
  
 若要设置<xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A>属性设置为带有前缀的名称，创建<xref:System.Xml.Serialization.XmlSerializerNamespaces>，其中包含命名空间和 XML 文档中使用的前缀。 设置<xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A>属性中的命名空间之一<xref:System.Xml.Serialization.XmlSerializerNamespaces>。 当生成 XML 时，属性名称是正确加上与指定的命名空间关联的前缀。  
  
   
  
## Examples  
 [!code-cpp[XmlAnyElementAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlAnyElementAttribute Example/CPP/anyelement.cpp#1)]
 [!code-csharp[XmlAnyElementAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlAnyElementAttribute Example/CS/anyelement.cs#1)]
 [!code-vb[XmlAnyElementAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XmlAnyElementAttribute Example/VB/anyelement.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Order">
      <MemberSignature Language="C#" Value="public int Order { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Order" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAnyElementAttribute.Order" />
      <MemberSignature Language="VB.NET" Value="Public Property Order As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Order { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Order : int with get, set" Usage="System.Xml.Serialization.XmlAnyElementAttribute.Order" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置序列化或反序列化元素的显式顺序。</summary>
        <value>代码生成的顺序。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Xml.Serialization.CodeGenerationOptions.GenerateOrder>枚举来指示<xref:System.Web.Services.Description.ServiceDescriptionImporter>生成代码来设置<xref:System.Xml.Serialization.XmlElementAttribute.Order%2A>属性。  
  
> [!IMPORTANT]
>  一次<xref:System.Xml.Serialization.XmlElementAttribute.Order%2A>属性有一个公共属性或类型中的字段上、 必须应用到所有公共属性和该类型以及所有继承的类型的字段。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>