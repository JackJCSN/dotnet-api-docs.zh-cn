<Type Name="SoapAttributeOverrides" FullName="System.Xml.Serialization.SoapAttributeOverrides">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bb17fd930c1ca6dcc770bb701ba89554c61f2f91" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70568798" /></Metadata><TypeSignature Language="C#" Value="public class SoapAttributeOverrides" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SoapAttributeOverrides extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.SoapAttributeOverrides" />
  <TypeSignature Language="VB.NET" Value="Public Class SoapAttributeOverrides" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoapAttributeOverrides" />
  <TypeSignature Language="F#" Value="type SoapAttributeOverrides = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>允许您在使用 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 将对象序列化或反序列化为编码的 SOAP 时重写应用于属性、字段和类的特性。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Serialization.SoapAttributeOverrides> 类 <xref:System.Xml.Serialization.XmlSerializer> 使可以重写序列化一组对象的默认方式。 以这种方式重写序列化具有两个用途：首先，可以控制和增加 DLL 中找到的对象的序列化，即使您不具有对源的访问权限也是如此。其次，您可以创建一组可序列化类，但可以通过多种方式序列化这些对象。 例如，可以将类实例的成员作为 xml 属性进行序列化，而不是将其序列化为 xml 元素，从而使传输的文档更有效。  
  
 创建<xref:System.Xml.Serialization.SoapAttributeOverrides>后，可以<xref:System.Xml.Serialization.XmlTypeMapping> <xref:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping%2A>使用类的方法创建。 <xref:System.Xml.Serialization.SoapReflectionImporter> 将生成的对象作为参数传递到<xref:System.Xml.Serialization.XmlSerializer.%23ctor%2A>构造函数。 生成<xref:System.Xml.Serialization.XmlSerializer>的使用所包含<xref:System.Xml.Serialization.SoapAttributeOverrides>的数据来重写属性，这些属性可控制对象的序列化方式。 若要实现此目的<xref:System.Xml.Serialization.SoapAttributeOverrides> ，包含被重写的对象类型的集合，以及与每个<xref:System.Xml.Serialization.SoapAttributes>被重写的对象类型相关联的。 每<xref:System.Xml.Serialization.SoapAttributes>个都包含一组适当的属性对象，这些对象控制如何序列化每个字段、属性或类。  
  
 创建和使用<xref:System.Xml.Serialization.SoapAttributeOverrides>的过程如下所示：  
  
1.  创建 <xref:System.Xml.Serialization.SoapAttributes>。  
  
2.  创建适合要重写的对象的属性对象。 例如，若要重写字段或属性，请使用<xref:System.Xml.Serialization.SoapElementAttribute>新的派生类型创建。 您可以选择分配一个新<xref:System.Xml.Serialization.SoapElementAttribute.ElementName%2A>的，它重写基类的属性名称或命名空间。  
  
3.  将特性对象添加到相应<xref:System.Xml.Serialization.SoapAttributes>的属性或集合。 例如，你可以将<xref:System.Xml.Serialization.SoapAttributes.SoapElement%2A> <xref:System.Xml.Serialization.SoapAttributes>对象的属性设置为<xref:System.Xml.Serialization.SoapElementAttribute> ，并指定要重写的成员名称。  
  
4.  创建 <xref:System.Xml.Serialization.SoapAttributeOverrides>。  
  
5.  使用方法将添加 <xref:System.Xml.Serialization.SoapAttributes> 到。 <xref:System.Xml.Serialization.SoapAttributeOverrides> <xref:System.Xml.Serialization.XmlAttributeOverrides.Add%2A> 如果要重写的对象是<xref:System.Xml.Serialization.SoapTypeAttribute>，则只需要指定重写的对象的类型。 但如果要重写字段或属性，还必须指定重写成员的名称。  
  
6.  <xref:System.Xml.Serialization.XmlTypeMapping> 使用 <xref:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping%2A> 类的方法创建。 <xref:System.Xml.Serialization.SoapReflectionImporter>  
  
7.  构造<xref:System.Xml.Serialization.XmlSerializer>时，将<xref:System.Xml.Serialization.XmlTypeMapping>传递到<xref:System.Xml.Serialization.XmlSerializer.%23ctor%2A>构造函数。  
  
8.  使用生成<xref:System.Xml.Serialization.XmlSerializer>的序列化或反序列化类对象。  
  
   
  
## Examples  
 下面的示例对名为`Group`的类进行序列化。 重写`GroupName`和`IgnoreThis`字段的序列化`GroupType`和枚举的成员。 在方法中，创建<xref:System.Xml.Serialization.SoapAttributeOverrides>一个，对于每个重写的<xref:System.Xml.Serialization.SoapAttributes>成员或枚举，将使用适当的属性集创建，并将其<xref:System.Xml.Serialization.SoapAttributeOverrides>添加到中。 `CreateOverrideSerializer` 是使用创建<xref:System.Xml.Serialization.XmlSerializer>的<xref:System.Xml.Serialization.XmlTypeMapping> ，并且用于创建重写默认序列化的。 <xref:System.Xml.Serialization.SoapAttributeOverrides> <xref:System.Xml.Serialization.XmlTypeMapping>  
  
 [!code-cpp[SoapAttributesOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapAttributesOverrides/CPP/soapover.cpp#1)]
 [!code-csharp[SoapAttributesOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapAttributesOverrides/CS/soapover.cs#1)]
 [!code-vb[SoapAttributesOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapAttributesOverrides/VB/SoapOver.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
    <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md">XML 序列化简介</related>
    <related type="Article" href="~/docs/standard/serialization/how-to-serialize-an-object-as-a-soap-encoded-xml-stream.md">如何：将对象序列化为 SOAP 编码的 XML 流</related>
    <related type="Article" href="~/docs/standard/serialization/attributes-that-control-encoded-soap-serialization.md">用来控制编码的 SOAP 序列化的属性</related>
    <related type="Article" href="~/docs/standard/serialization/examples-of-xml-serialization.md">XML 序列化示例</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapAttributeOverrides ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapAttributeOverrides.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapAttributeOverrides();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Xml.Serialization.SoapAttributeOverrides" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的示例对名为`Group`的类进行序列化。 重写`GroupName`和`IgnoreThis`字段的序列化`GroupType`和枚举的成员。 在方法中，创建<xref:System.Xml.Serialization.SoapAttributeOverrides>一个，对于每个重写的<xref:System.Xml.Serialization.SoapAttributes>成员或枚举，将使用适当的属性集创建，并将其<xref:System.Xml.Serialization.SoapAttributeOverrides>添加到中。 `CreateOverrideSerializer` 是使用创建<xref:System.Xml.Serialization.XmlSerializer>的<xref:System.Xml.Serialization.XmlTypeMapping> ，并且用于创建重写默认序列化的。 <xref:System.Xml.Serialization.SoapAttributeOverrides> <xref:System.Xml.Serialization.XmlTypeMapping>  
  
 [!code-cpp[SoapAttributesOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapAttributesOverrides/CPP/soapover.cpp#1)]
 [!code-csharp[SoapAttributesOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapAttributesOverrides/CS/soapover.cs#1)]
 [!code-vb[SoapAttributesOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapAttributesOverrides/VB/SoapOver.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>将 <see cref="T:System.Xml.Serialization.SoapAttributes" /> 添加到 <see cref="T:System.Xml.Serialization.SoapAttributes" /> 所包含的 <see cref="T:System.Xml.Serialization.SoapAttributeOverrides" /> 对象的集合中。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Type type, System.Xml.Serialization.SoapAttributes attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Type type, class System.Xml.Serialization.SoapAttributes attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapAttributeOverrides.Add(System.Type,System.Xml.Serialization.SoapAttributes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(Type ^ type, System::Xml::Serialization::SoapAttributes ^ attributes);" />
      <MemberSignature Language="F#" Value="member this.Add : Type * System.Xml.Serialization.SoapAttributes -&gt; unit" Usage="soapAttributeOverrides.Add (type, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="attributes" Type="System.Xml.Serialization.SoapAttributes" />
      </Parameters>
      <Docs>
        <param name="type">所替代的对象的 <see cref="T:System.Type" />。</param>
        <param name="attributes">表示重写特性的 <see cref="T:System.Xml.Serialization.SoapAttributes" />。</param>
        <summary>将 <see cref="T:System.Xml.Serialization.SoapAttributes" /> 添加到 <see cref="T:System.Xml.Serialization.SoapAttributes" /> 对象的集合。 <paramref name="type" /> 参数指定由 <see cref="T:System.Xml.Serialization.SoapAttributes" /> 重写的对象。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 包含特性对象的联合，这将<xref:System.Xml.Serialization.XmlSerializer>导致为一组对象重写其默认序列化行为。 <xref:System.Xml.Serialization.SoapAttributes> 选择要放置在中<xref:System.Xml.Serialization.SoapAttributes>的特性对象，具体取决于要重写的特定行为。 例如，默认情况<xref:System.Xml.Serialization.XmlSerializer>下，将类成员序列化为 XML 元素。 如果希望将成员作为 XML 特性序列化<xref:System.Xml.Serialization.SoapAttributeAttribute>，则需要创建，并将其分配<xref:System.Xml.Serialization.SoapAttributes.SoapAttribute%2A>给的属性<xref:System.Xml.Serialization.SoapAttributes>，并将添加<xref:System.Xml.Serialization.XmlAttributes>到<xref:System.Xml.Serialization.SoapAttributeOverrides>。 使用方法可<xref:System.Xml.Serialization.SoapAttributes>将添加到 <xref:System.Xml.Serialization.SoapAttributeOverrides> 。  <xref:System.Xml.Serialization.SoapAttributeOverrides.Add%2A>  
  
 使用此重载添加一个<xref:System.Xml.Serialization.SoapAttributes> <xref:System.Xml.Serialization.SoapTypeAttribute>包含的。 由于将<xref:System.Xml.Serialization.SoapTypeAttribute>重写类的序列化，因此无需指定要重写的类的成员，而只需指定类的类型。  
  
   
  
## Examples  
 下面的示例对名为`Group`的类进行序列化。 重写`GroupName`和`IgnoreThis`字段的序列化`GroupType`和枚举的成员。 在方法中，创建<xref:System.Xml.Serialization.SoapAttributeOverrides>一个，对于每个重写的<xref:System.Xml.Serialization.SoapAttributes>成员或枚举，将使用适当的属性集创建，并将其<xref:System.Xml.Serialization.SoapAttributeOverrides>添加到中。 `CreateOverrideSerializer` 是使用创建<xref:System.Xml.Serialization.XmlSerializer>的<xref:System.Xml.Serialization.XmlTypeMapping> ，并且用于创建重写默认序列化的。 <xref:System.Xml.Serialization.SoapAttributeOverrides> <xref:System.Xml.Serialization.XmlTypeMapping>  
  
 [!code-cpp[SoapAttributesOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapAttributesOverrides/CPP/soapover.cpp#1)]
 [!code-csharp[SoapAttributesOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapAttributesOverrides/CS/soapover.cs#1)]
 [!code-vb[SoapAttributesOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapAttributesOverrides/VB/SoapOver.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Type type, string member, System.Xml.Serialization.SoapAttributes attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Type type, string member, class System.Xml.Serialization.SoapAttributes attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapAttributeOverrides.Add(System.Type,System.String,System.Xml.Serialization.SoapAttributes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(Type ^ type, System::String ^ member, System::Xml::Serialization::SoapAttributes ^ attributes);" />
      <MemberSignature Language="F#" Value="member this.Add : Type * string * System.Xml.Serialization.SoapAttributes -&gt; unit" Usage="soapAttributeOverrides.Add (type, member, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="member" Type="System.String" />
        <Parameter Name="attributes" Type="System.Xml.Serialization.SoapAttributes" />
      </Parameters>
      <Docs>
        <param name="type">要替代的对象的 <see cref="T:System.Type" />。</param>
        <param name="member">要替代的成员的名称。</param>
        <param name="attributes">表示重写特性的 <see cref="T:System.Xml.Serialization.SoapAttributes" />。</param>
        <summary>将 <see cref="T:System.Xml.Serialization.SoapAttributes" /> 添加到 <see cref="T:System.Xml.Serialization.SoapAttributes" /> 所包含的 <see cref="T:System.Xml.Serialization.SoapAttributeOverrides" /> 对象的集合中。 <paramref name="type" /> 参数指定由 <see cref="T:System.Xml.Serialization.SoapAttributes" /> 重写的对象。 <paramref name="member" /> 参数指定所替代的成员名称。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 包含特性对象的联合，这将<xref:System.Xml.Serialization.XmlSerializer>导致为一组对象重写其默认序列化行为。 <xref:System.Xml.Serialization.SoapAttributes> 选择要放置在中<xref:System.Xml.Serialization.SoapAttributes>的特性对象，具体取决于要重写的特定行为。 例如，默认情况<xref:System.Xml.Serialization.XmlSerializer>下，将类成员序列化为 XML 元素。 如果希望将成员作为 SOAP 特性序列化，请创建一个<xref:System.Xml.Serialization.SoapAttributeAttribute>，将其分配<xref:System.Xml.Serialization.SoapAttributes.SoapAttribute%2A>给的属性<xref:System.Xml.Serialization.SoapAttributes>，并将添加<xref:System.Xml.Serialization.XmlAttributes>到<xref:System.Xml.Serialization.SoapAttributeOverrides>。 使用方法可<xref:System.Xml.Serialization.SoapAttributes>将添加到 <xref:System.Xml.Serialization.SoapAttributeOverrides> 。  <xref:System.Xml.Serialization.SoapAttributeOverrides.Add%2A>  
  
 当<xref:System.Xml.Serialization.SoapAttributes> <xref:System.Xml.Serialization.SoapElementAttribute> <xref:System.ComponentModel.DefaultValueAttribute>包含、、 <xref:System.Xml.Serialization.SoapEnumAttribute> 或时，请使用此方法 <xref:System.Xml.Serialization.SoapIgnoreAttribute> 。  <xref:System.Xml.Serialization.SoapAttributeAttribute>  
  
   
  
## Examples  
 下面的示例对名为`Group`的类进行序列化。 重写`GroupName`和`IgnoreThis`字段的序列化`GroupType`和枚举的成员。 在方法中，创建<xref:System.Xml.Serialization.SoapAttributeOverrides>一个，对于每个重写的<xref:System.Xml.Serialization.SoapAttributes>成员或枚举，将使用适当的属性集创建，并将其<xref:System.Xml.Serialization.SoapAttributeOverrides>添加到中。 `CreateOverrideSerializer` 是使用创建<xref:System.Xml.Serialization.XmlSerializer>的<xref:System.Xml.Serialization.XmlTypeMapping> ，并且用于创建重写默认序列化的。 <xref:System.Xml.Serialization.SoapAttributeOverrides> <xref:System.Xml.Serialization.XmlTypeMapping>  
  
 [!code-cpp[SoapAttributesOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapAttributesOverrides/CPP/soapover.cpp#1)]
 [!code-csharp[SoapAttributesOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapAttributesOverrides/CS/soapover.cs#1)]
 [!code-vb[SoapAttributesOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapAttributesOverrides/VB/SoapOver.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>获取一个对象，该对象表示重写的 SOAP 特性的集合。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.SoapAttributes this[Type type] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.SoapAttributes Item(class System.Type)" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.SoapAttributeOverrides.Item(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(type As Type) As SoapAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::SoapAttributes ^ default[Type ^] { System::Xml::Serialization::SoapAttributes ^ get(Type ^ type); };" />
      <MemberSignature Language="F#" Value="member this.Item(Type) : System.Xml.Serialization.SoapAttributes" Usage="System.Xml.Serialization.SoapAttributeOverrides.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.SoapAttributes</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">与要检索的属性的集合相关联的基类 <see cref="T:System.Type" />。</param>
        <summary>获取与指定（基类）类型关联的对象。</summary>
        <value>表示重写特性集合的 <see cref="T:System.Xml.Serialization.SoapAttributes" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此重载可返回<xref:System.Xml.Serialization.SoapAttributes>包含的属性<xref:System.Xml.Serialization.SoapTypeAttribute>的。  
  
   
  
## Examples  
 下面的示例创建一个<xref:System.Xml.Serialization.SoapAttributeOverrides> ，用于重写`Group`类的实例的序列化。 该示例还使用<xref:System.Xml.Serialization.SoapAttributeOverrides.Item%2A>属性来<xref:System.Xml.Serialization.SoapAttributes>检索用于指定如何重写序列化的。  
  
 [!code-cpp[SoapAttributeOverrides.Item property 2#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapAttributeOverrides.Item property 2/CPP/attadd2.cpp#1)]
 [!code-csharp[SoapAttributeOverrides.Item property 2#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapAttributeOverrides.Item property 2/CS/attadd2.cs#1)]
 [!code-vb[SoapAttributeOverrides.Item property 2#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapAttributeOverrides.Item property 2/VB/attadd2.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.SoapAttributes this[Type type, string member] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.SoapAttributes Item(class System.Type, string)" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.SoapAttributeOverrides.Item(System.Type,System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(type As Type, member As String) As SoapAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::SoapAttributes ^ default[Type ^, System::String ^] { System::Xml::Serialization::SoapAttributes ^ get(Type ^ type, System::String ^ member); };" />
      <MemberSignature Language="F#" Value="member this.Item(Type * string) : System.Xml.Serialization.SoapAttributes" Usage="System.Xml.Serialization.SoapAttributeOverrides.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.SoapAttributes</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="member" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">与要重写的特性的集合关联的基类 <see cref="T:System.Type" />。</param>
        <param name="member">指定要返回的 <see cref="T:System.Xml.Serialization.SoapAttributes" /> 的替代成员名称。</param>
        <summary>获取与指定（基类）类型关联的对象。 <paramref name="member" /> 参数指定被重写的基类成员。</summary>
        <value>表示重写特性集合的 <see cref="T:System.Xml.Serialization.SoapAttributes" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此重载<xref:System.Xml.Serialization.SoapAttributes>返回一个，它包含<xref:System.Xml.Serialization.SoapAttributeAttribute>重写、 <xref:System.Xml.Serialization.SoapElementAttribute> <xref:System.Xml.Serialization.SoapIgnoreAttribute>、或<xref:System.Xml.Serialization.SoapEnumAttribute>的属性。 你还可以返回<xref:System.Xml.Serialization.SoapAttributes> ，其中包含<xref:System.ComponentModel.DefaultValueAttribute>使用的默认值的重写。  
  
 <xref:System.Xml.Serialization.SoapAttributes> 如果 <xref:System.Xml.Serialization.SoapTypeAttribute> 包含，则必须使用仅指定重写类型的重载。  
  
   
  
## Examples  
 下面的示例创建一个<xref:System.Xml.Serialization.SoapAttributeOverrides> ，用于重写`Group`类的实例的序列化。 该示例还使用<xref:System.Xml.Serialization.SoapAttributeOverrides.Item%2A>属性来<xref:System.Xml.Serialization.SoapAttributes>检索用于指定如何重写序列化的。  
  
 [!code-cpp[SoapAttributeOverrides.Item property 1#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapAttributeOverrides.Item property 1/CPP/attadd.cpp#1)]
 [!code-csharp[SoapAttributeOverrides.Item property 1#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapAttributeOverrides.Item property 1/CS/attadd.cs#1)]
 [!code-vb[SoapAttributeOverrides.Item property 1#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapAttributeOverrides.Item property 1/VB/attadd.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
