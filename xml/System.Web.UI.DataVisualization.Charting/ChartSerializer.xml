<Type Name="ChartSerializer" FullName="System.Web.UI.DataVisualization.Charting.ChartSerializer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b068e64fce2d0c45832844045864d0044982d2a9" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69256126" /></Metadata><TypeSignature Language="C#" Value="public class ChartSerializer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ChartSerializer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.DataVisualization.Charting.ChartSerializer" />
  <TypeSignature Language="VB.NET" Value="Public Class ChartSerializer" />
  <TypeSignature Language="C++ CLI" Value="public ref class ChartSerializer" />
  <TypeSignature Language="F#" Value="type ChartSerializer = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DataVisualization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Format")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="348ae-101">启用 <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> 控件的序列化功能。</span><span class="sxs-lookup"><span data-stu-id="348ae-101">Enables serialization of the <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> control.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="348ae-102">此类公开为<xref:System.Web.UI.DataVisualization.Charting.Chart.Serializer%2A>根<xref:System.Web.UI.DataVisualization.Charting.Chart>类的属性。</span><span class="sxs-lookup"><span data-stu-id="348ae-102">This class is exposed as the <xref:System.Web.UI.DataVisualization.Charting.Chart.Serializer%2A> property of the root <xref:System.Web.UI.DataVisualization.Charting.Chart> class.</span></span>  
  
 <span data-ttu-id="348ae-103">序列化会保存图表的状态, 还会提供将序列化数据加载到图表中的选项。</span><span class="sxs-lookup"><span data-stu-id="348ae-103">Serialization saves the state of the chart and also provides the option to load the serialized data into the chart.</span></span> <span data-ttu-id="348ae-104">所有图表属性都可以保留, 包括图表的数据。</span><span class="sxs-lookup"><span data-stu-id="348ae-104">All chart properties can be persisted, including the chart's data.</span></span> <span data-ttu-id="348ae-105">此外, 可以重置标记为要进行序列化的所有图表属性。</span><span class="sxs-lookup"><span data-stu-id="348ae-105">In addition, all chart properties marked for serialization can be reset.</span></span>  
  
 <span data-ttu-id="348ae-106">当管理用户定义的视图状态时, 可以选择使用此类。</span><span class="sxs-lookup"><span data-stu-id="348ae-106">This class can optionally be used when managing user-defined view state.</span></span> <span data-ttu-id="348ae-107">其中一`Save`种方法可用于加载视图状态,在设置视图状态时,可以使用其中`Load`一种方法。</span><span class="sxs-lookup"><span data-stu-id="348ae-107">One of its `Load` methods can be used to load the view state, and one of the `Save` methods can be used when setting the view state.</span></span>  
  
 <span data-ttu-id="348ae-108">XML 或二进制格式可用于存储序列化数据。</span><span class="sxs-lookup"><span data-stu-id="348ae-108">The XML or binary formats can be used to store serialized data.</span></span> <span data-ttu-id="348ae-109">默认情况下使用 XML, 但你可以使用<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Format%2A>属性来更改格式。</span><span class="sxs-lookup"><span data-stu-id="348ae-109">XML is used by default, but you can change the format with the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Format%2A> property.</span></span>  
  
 <span data-ttu-id="348ae-110">分别使用`Save`和`Load`方法保存和加载图表属性。</span><span class="sxs-lookup"><span data-stu-id="348ae-110">Chart properties are saved and loaded using the `Save` and `Load` methods, respectively.</span></span> <span data-ttu-id="348ae-111">请注意, 将只保存具有非默认值的属性。</span><span class="sxs-lookup"><span data-stu-id="348ae-111">Note that only properties with non-default values will be saved.</span></span> <span data-ttu-id="348ae-112">可以使用文件、 <xref:System.IO.TextWriter>流、 <xref:System.Xml.XmlWriter> 、 <xref:System.IO.TextReader>和<xref:System.Xml.XmlReader>对象保存和/或加载数据。</span><span class="sxs-lookup"><span data-stu-id="348ae-112">Data can be saved and/or loaded using a file, stream, <xref:System.IO.TextWriter>, <xref:System.IO.TextReader>, <xref:System.Xml.XmlWriter> and <xref:System.Xml.XmlReader> objects.</span></span> <span data-ttu-id="348ae-113"><xref:System.IO.TextReader>使用从<xref:System.IO.TextWriter> 、或<xref:System.Xml.XmlWriter>类派生的对象保存和/或加载数据时, 数据的格式必须是 XML。 <xref:System.Xml.XmlReader></span><span class="sxs-lookup"><span data-stu-id="348ae-113">When saving and/or loading data using an object derived from the <xref:System.IO.TextReader>, <xref:System.IO.TextWriter>, <xref:System.Xml.XmlReader> or <xref:System.Xml.XmlWriter> classes, the format of the data must be XML.</span></span>  
  
 <span data-ttu-id="348ae-114">以下列表描述了三种从基本到高级的技术, 用于定义可序列化的数据。</span><span class="sxs-lookup"><span data-stu-id="348ae-114">The following list describes three techniques, from basic to advanced, used to define serializable data.</span></span> <span data-ttu-id="348ae-115">请注意, 也可以定义不可序列化的数据。</span><span class="sxs-lookup"><span data-stu-id="348ae-115">Note that it is also possible to define non-serializable data.</span></span> <span data-ttu-id="348ae-116">下一段中描述了此方法。</span><span class="sxs-lookup"><span data-stu-id="348ae-116">This technique is described in the next paragraph.</span></span>  
  
-   <span data-ttu-id="348ae-117">使用和<xref:System.Web.UI.DataVisualization.Charting.Chart> 方法`Load`序列化, 而无需指定任何可序列化的属性`Save` 。</span><span class="sxs-lookup"><span data-stu-id="348ae-117">Serialize the <xref:System.Web.UI.DataVisualization.Charting.Chart> using the `Save` and `Load` methods, without specifying any serializable properties.</span></span> <span data-ttu-id="348ae-118">将序列化所有具有非默认值的图表属性, 其中包括图表数据。</span><span class="sxs-lookup"><span data-stu-id="348ae-118">All chart properties with non-default values, which includes chart data, will be serialized.</span></span>  
  
-   <span data-ttu-id="348ae-119">序列化由<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>属性指定的图表属性。</span><span class="sxs-lookup"><span data-stu-id="348ae-119">Serialize the chart properties specified by the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> property.</span></span> <span data-ttu-id="348ae-120"><xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>属性将要序列化的图表属性分组为不同的类别, 如数据、外观等。</span><span class="sxs-lookup"><span data-stu-id="348ae-120">The <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> property groups the chart properties to be serialized into categories such as Data, Appearance, and so forth.</span></span> <span data-ttu-id="348ae-121">请注意, <xref:System.Web.UI.DataVisualization.Charting.ChartArea>和<xref:System.Web.UI.DataVisualization.Charting.Series>对象的名称会自动序列化; 然后, 在加载时, 序列化的数据将应用于现有的图表区域和序列。</span><span class="sxs-lookup"><span data-stu-id="348ae-121">Note that the names of <xref:System.Web.UI.DataVisualization.Charting.ChartArea> and <xref:System.Web.UI.DataVisualization.Charting.Series> objects are automatically serialized; the serialized data is then applied to existing chart areas and series when loaded.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="348ae-122">此属性由控件在内部实现, 作为<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A>属性 <xref:System.Web.UI.DataVisualization.Charting.Chart> <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A></span><span class="sxs-lookup"><span data-stu-id="348ae-122">The <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> property is implemented internally by the <xref:System.Web.UI.DataVisualization.Charting.Chart> control as the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> property</span></span>  
  
-   <span data-ttu-id="348ae-123">由<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A>属性指定的图表属性的序列化。</span><span class="sxs-lookup"><span data-stu-id="348ae-123">Serialization of chart properties specified by the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> property.</span></span> <span data-ttu-id="348ae-124">这是一个逗号分隔列表, 其中列出了可序列化的所有图表属性。</span><span class="sxs-lookup"><span data-stu-id="348ae-124">This is a comma-separated listing of all chart properties that are serializable.</span></span> <span data-ttu-id="348ae-125">将此属性设置为显式值后, 开发人员负责指定要保存的所有属性。</span><span class="sxs-lookup"><span data-stu-id="348ae-125">After this property is set to an explicit value, it is the responsibility of the developer to specify all properties to be saved.</span></span> <span data-ttu-id="348ae-126">换句话说, 与<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>属性不同, 图表区和系列的名称将不会自动保留。</span><span class="sxs-lookup"><span data-stu-id="348ae-126">In other words, unlike the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> property, the names of chart areas and series will not be automatically persisted.</span></span> <span data-ttu-id="348ae-127"><xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> 和<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A>属性也可以结合使用。</span><span class="sxs-lookup"><span data-stu-id="348ae-127">The <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> and <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> properties can also be used in conjunction.</span></span> <span data-ttu-id="348ae-128">但是, 请确保<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A>在设置时与自身连接, 否则<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>由属性指定的图表属性将被重写。</span><span class="sxs-lookup"><span data-stu-id="348ae-128">However, make sure that <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> is concatenated with itself when being set, otherwise the chart properties specified by the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> property will be overridden.</span></span>  
  
 <span data-ttu-id="348ae-129">若要禁止对某些属性进行序列化, <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A>请使用属性。</span><span class="sxs-lookup"><span data-stu-id="348ae-129">To prohibit certain properties from being serialized, use the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> property.</span></span> <span data-ttu-id="348ae-130">如果一个属性设置为可序列化且不可序列化 (这在使用通配符时很常见) <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> , 则属性优先。</span><span class="sxs-lookup"><span data-stu-id="348ae-130">When one property is set as serializable and non-serializable, which is common when wildcards are used, the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> property has precedence.</span></span> <span data-ttu-id="348ae-131">但是, 优先顺序还取决于在指定属性时使用了多少个通配符。</span><span class="sxs-lookup"><span data-stu-id="348ae-131">However, precedence also depends on how many wildcards were used when a property was specified.</span></span>  
  
 <span data-ttu-id="348ae-132">默认情况下, 可序列化属性在加载前将重置为其默认值。</span><span class="sxs-lookup"><span data-stu-id="348ae-132">By default, serializable properties are reset to their defaults before they are loaded.</span></span> <span data-ttu-id="348ae-133">此行为可以使用<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading%2A>属性更改。</span><span class="sxs-lookup"><span data-stu-id="348ae-133">This behavior can be changed using the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading%2A> property.</span></span> <span data-ttu-id="348ae-134"><xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Reset%2A>方法还可用于将图表属性显式重置为其默认值。</span><span class="sxs-lookup"><span data-stu-id="348ae-134">The <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Reset%2A> method can also be used to explicitly reset chart properties to their default values.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Content">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.SerializationContents Content { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.SerializationContents Content" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content" />
      <MemberSignature Language="VB.NET" Value="Public Property Content As SerializationContents" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::SerializationContents Content { System::Web::UI::DataVisualization::Charting::SerializationContents get(); void set(System::Web::UI::DataVisualization::Charting::SerializationContents value); };" />
      <MemberSignature Language="F#" Value="member this.Content : System.Web.UI.DataVisualization.Charting.SerializationContents with get, set" Usage="System.Web.UI.DataVisualization.Charting.ChartSerializer.Content" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Web.UI.DataVisualization.Charting.SerializationContents), "Default")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.SerializationContents</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="348ae-135">获取或设置要序列化的图表内容的类型。</span><span class="sxs-lookup"><span data-stu-id="348ae-135">Gets or sets the type of chart content to be serialized.</span></span></summary>
        <value><span data-ttu-id="348ae-136">一个 <see cref="T:System.Web.UI.DataVisualization.Charting.SerializationContents" /> 枚举值，该值表示将在加载、保存或重置操作期间执行序列化的图表内容。</span><span class="sxs-lookup"><span data-stu-id="348ae-136">A <see cref="T:System.Web.UI.DataVisualization.Charting.SerializationContents" /> enumeration value that represents the chart content that will be serialized during a load, save or reset operation.</span></span> <span data-ttu-id="348ae-137">默认情况下，将保留所有非默认图表属性，包括数据。</span><span class="sxs-lookup"><span data-stu-id="348ae-137">By default, all non-default chart properties, including data, are persisted.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="348ae-138">默认情况下, 当调用任何`Save`和`Load`方法时, 将序列化所有图表属性。</span><span class="sxs-lookup"><span data-stu-id="348ae-138">By default, all chart properties will be serialized when any of the `Save` and `Load` methods are called.</span></span> <span data-ttu-id="348ae-139">若要更好地控制序列化的内容, <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>请使用属性。</span><span class="sxs-lookup"><span data-stu-id="348ae-139">To provide more control over what is serialized, use the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> property.</span></span> <span data-ttu-id="348ae-140">请注意, <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>和属性也可以与属性一起使用。 <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A></span><span class="sxs-lookup"><span data-stu-id="348ae-140">Note that the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> and <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> properties can also be used along with the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> property.</span></span>  
  
 > [!IMPORTANT]
 > <span data-ttu-id="348ae-141">属性确定要序列化的图表特征 (如 "外观") 的类型, 实际上在内部实现<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A>为属性。 <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A></span><span class="sxs-lookup"><span data-stu-id="348ae-141">The <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> property determines types of chart characteristics, such as "appearance", to be serialized, and is actually implemented internally as the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> property.</span></span> <span data-ttu-id="348ae-142">这意味着<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> , 如果<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> 已<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A>连接, 则设置属性并设置属性将导致重写属性值。</span><span class="sxs-lookup"><span data-stu-id="348ae-142">This means that setting the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> property and then setting the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> property will result in the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> property value being overridden, unless <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> is concatenated.</span></span> <span data-ttu-id="348ae-143">有关此过程的示例, 请参阅下面的示例代码。</span><span class="sxs-lookup"><span data-stu-id="348ae-143">See the sample code below for an example of this procedure.</span></span>  
  
 <span data-ttu-id="348ae-144">如果设置<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>属性, 则所有<xref:System.Web.UI.DataVisualization.Charting.ChartArea>和<xref:System.Web.UI.DataVisualization.Charting.Series>对象名称都将自动进行序列化; 这意味着, 与图表区和序列有关的序列化数据将在加载时应用于现有对象。</span><span class="sxs-lookup"><span data-stu-id="348ae-144">If you set the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> property, all <xref:System.Web.UI.DataVisualization.Charting.ChartArea> and <xref:System.Web.UI.DataVisualization.Charting.Series> objects names will automatically be serialized; this means that serialized data that pertains to chart areas and series will be applied to existing objects when loaded.</span></span>  
  
 <span data-ttu-id="348ae-145">设置此属性将影响所有加载、保存和重置操作。</span><span class="sxs-lookup"><span data-stu-id="348ae-145">Setting this property affects all load, save and reset operations.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.SerializationFormat Format { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.SerializationFormat Format" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartSerializer.Format" />
      <MemberSignature Language="VB.NET" Value="Public Property Format As SerializationFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::SerializationFormat Format { System::Web::UI::DataVisualization::Charting::SerializationFormat get(); void set(System::Web::UI::DataVisualization::Charting::SerializationFormat value); };" />
      <MemberSignature Language="F#" Value="member this.Format : System.Web.UI.DataVisualization.Charting.SerializationFormat with get, set" Usage="System.Web.UI.DataVisualization.Charting.ChartSerializer.Format" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Web.UI.DataVisualization.Charting.SerializationFormat), "Xml")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.SerializationFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="348ae-146">获取或设置序列化图表时所使用的格式。</span><span class="sxs-lookup"><span data-stu-id="348ae-146">Gets or sets the format used when the chart is serialized.</span></span></summary>
        <value><span data-ttu-id="348ae-147">一个 <see cref="T:System.Web.UI.DataVisualization.Charting.SerializationFormat" /> 枚举值，该值表示已序列化的数据的格式。</span><span class="sxs-lookup"><span data-stu-id="348ae-147">A <see cref="T:System.Web.UI.DataVisualization.Charting.SerializationFormat" /> enumeration value that represents the format of the serialized data.</span></span> <span data-ttu-id="348ae-148">默认值为 XML。</span><span class="sxs-lookup"><span data-stu-id="348ae-148">The default value is XML.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="348ae-149">数据可以采用 XML 格式或二进制格式序列化。</span><span class="sxs-lookup"><span data-stu-id="348ae-149">Data can be serialized in either an XML or binary format.</span></span> <span data-ttu-id="348ae-150">二进制格式是紧凑的, 使用的存储比 XML 少。</span><span class="sxs-lookup"><span data-stu-id="348ae-150">Binary format is compact, and takes less storage than XML.</span></span> <span data-ttu-id="348ae-151">不过, XML 是一个文本格式, 它是用户可读的。</span><span class="sxs-lookup"><span data-stu-id="348ae-151">XML, however, is a text format that is human-readable.</span></span>  
  
 <span data-ttu-id="348ae-152">保存或加载序列化数据时, 格式必须是 XML。</span><span class="sxs-lookup"><span data-stu-id="348ae-152">When you save or load serialized data, the format must be XML.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContentString">
      <MemberSignature Language="C#" Value="protected string GetContentString (System.Web.UI.DataVisualization.Charting.SerializationContents content, bool serializable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string GetContentString(valuetype System.Web.UI.DataVisualization.Charting.SerializationContents content, bool serializable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.ChartSerializer.GetContentString(System.Web.UI.DataVisualization.Charting.SerializationContents,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetContentString (content As SerializationContents, serializable As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ GetContentString(System::Web::UI::DataVisualization::Charting::SerializationContents content, bool serializable);" />
      <MemberSignature Language="F#" Value="member this.GetContentString : System.Web.UI.DataVisualization.Charting.SerializationContents * bool -&gt; string" Usage="chartSerializer.GetContentString (content, serializable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="System.Web.UI.DataVisualization.Charting.SerializationContents" />
        <Parameter Name="serializable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="content"><span data-ttu-id="348ae-153">可序列化的内容。</span><span class="sxs-lookup"><span data-stu-id="348ae-153">The serializable content.</span></span></param>
        <param name="serializable"><span data-ttu-id="348ae-154">如果要获取可序列化的字符串，则为 <see langword="true" />；如果要获取不可序列化的字符串，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="348ae-154"><see langword="true" /> to get a serializable string; <see langword="false" /> to get a non serializable string.</span></span></param>
        <summary><span data-ttu-id="348ae-155">返回可序列化或不可序列化的类和/或属性名称，可否序列化取决于具体的标志值。</span><span class="sxs-lookup"><span data-stu-id="348ae-155">Returns a serializable or non serializable class and/or property names, depending on the specific flag value.</span></span></summary>
        <returns><span data-ttu-id="348ae-156">一个 <see langword="string" /> 值，表示可序列化或不可序列化的类和/或属性名称。</span><span class="sxs-lookup"><span data-stu-id="348ae-156">A <see langword="string" /> value that represents the serializable or non serializable class and/or property names.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsResetWhenLoading">
      <MemberSignature Language="C#" Value="public bool IsResetWhenLoading { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsResetWhenLoading" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading" />
      <MemberSignature Language="VB.NET" Value="Public Property IsResetWhenLoading As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsResetWhenLoading { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsResetWhenLoading : bool with get, set" Usage="System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="348ae-157">获取或设置一个标志，该标志指示是否将对象属性重置为加载之前的默认值。</span><span class="sxs-lookup"><span data-stu-id="348ae-157">Gets or sets a flag that indicates whether object properties are reset to default values before loading.</span></span></summary>
        <value><span data-ttu-id="348ae-158">如果对象属性重置为加载之前的默认值，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="348ae-158"><see langword="true" /> if object properties are reset to default values before loading; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTemplateMode">
      <MemberSignature Language="C#" Value="public bool IsTemplateMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTemplateMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsTemplateMode" />
      <MemberSignature Language="VB.NET" Value="Public Property IsTemplateMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsTemplateMode { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsTemplateMode : bool with get, set" Usage="System.Web.UI.DataVisualization.Charting.ChartSerializer.IsTemplateMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="348ae-159">获取或设置指示图表序列化程序是否在模板创建模式下运行的标志。</span><span class="sxs-lookup"><span data-stu-id="348ae-159">Gets or sets a flag that indicates whether the chart serializer is working in template-creation mode.</span></span></summary>
        <value><span data-ttu-id="348ae-160">如果图表序列化程序在模板创建模式下运行，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="348ae-160"><see langword="true" /> if the chart serializer is working in template-creation mode; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUnknownAttributeIgnored">
      <MemberSignature Language="C#" Value="public bool IsUnknownAttributeIgnored { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUnknownAttributeIgnored" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsUnknownAttributeIgnored" />
      <MemberSignature Language="VB.NET" Value="Public Property IsUnknownAttributeIgnored As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsUnknownAttributeIgnored { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsUnknownAttributeIgnored : bool with get, set" Usage="System.Web.UI.DataVisualization.Charting.ChartSerializer.IsUnknownAttributeIgnored" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="348ae-161">获取或设置指示是否忽略未知 XML 属性和元素而不引发异常的标志。</span><span class="sxs-lookup"><span data-stu-id="348ae-161">Gets or sets a flag that indicates whether unknown XML properties and elements will be ignored without throwing an exception.</span></span></summary>
        <value><span data-ttu-id="348ae-162">如果忽略未知 XML 属性和元素而不引发异常，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="348ae-162"><see langword="true" /> if unknown XML properties and elements are ignored without throwing an exception; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="348ae-163">将已序列化的数据加载到 <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> 控件。</span><span class="sxs-lookup"><span data-stu-id="348ae-163">Loads serialized data into the <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> control.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.ChartSerializer.Load(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="member this.Load : System.IO.Stream -&gt; unit" Usage="chartSerializer.Load stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="348ae-164">一个从 <see cref="T:System.IO.Stream" /> 类派生的对象，如 <see cref="T:System.IO.MemoryStream" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="348ae-164">An object derived from the <see cref="T:System.IO.Stream" /> class, for example, a <see cref="T:System.IO.MemoryStream" /> object.</span></span></param>
        <summary><span data-ttu-id="348ae-165">将已序列化的数据从派生自 <see cref="T:System.IO.Stream" /> 类的对象加载到控件。</span><span class="sxs-lookup"><span data-stu-id="348ae-165">Loads serialized data into the control from an object derived from the <see cref="T:System.IO.Stream" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="348ae-166">调用此方法可将序列化数据加载<xref:System.Web.UI.DataVisualization.Charting.Chart>到控件中。</span><span class="sxs-lookup"><span data-stu-id="348ae-166">Call this method to load serialized data into the <xref:System.Web.UI.DataVisualization.Charting.Chart> control.</span></span>  
  
 <span data-ttu-id="348ae-167">当发生加载操作时, 默认情况下, 可序列化的属性将首先重置为其默认值, 然后将其设置为持久值 (如果已保存)。</span><span class="sxs-lookup"><span data-stu-id="348ae-167">When a load operation occurs, serializable properties are, by default, first reset to their default values before they are set to the persisted values, if saved.</span></span> <span data-ttu-id="348ae-168">若要更改此行为, 请<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading%2A>使用属性。</span><span class="sxs-lookup"><span data-stu-id="348ae-168">To change this behavior, use the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading%2A> property.</span></span>  
  
 <span data-ttu-id="348ae-169">默认情况下, 将加载所有序列化的图表属性。</span><span class="sxs-lookup"><span data-stu-id="348ae-169">By default, all serialized chart properties will be loaded.</span></span> <span data-ttu-id="348ae-170">若要加载特定的<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A>序列化属性, 请<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A>在加载数据之前设置或属性。</span><span class="sxs-lookup"><span data-stu-id="348ae-170">To load specific serialized properties, set the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> , <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> or <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> properties before loading the data.</span></span>  
  
 <span data-ttu-id="348ae-171">请注意, 在使用`Save`方法保存数据时, 只会对具有非默认值的属性进行实际序列化。</span><span class="sxs-lookup"><span data-stu-id="348ae-171">Note that when data is saved using a `Save` method, only those properties that have non-default values are actually serialized.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.IO.TextReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.IO.TextReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.ChartSerializer.Load(System.IO.TextReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (reader As TextReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::IO::TextReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.Load : System.IO.TextReader -&gt; unit" Usage="chartSerializer.Load reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.IO.TextReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="348ae-172">从抽象的 <see cref="T:System.IO.StringReader" /> 类派生的读取器，如 <see cref="T:System.IO.TextReader" />。</span><span class="sxs-lookup"><span data-stu-id="348ae-172">A reader, such as <see cref="T:System.IO.StringReader" />, that is derived from the abstract <see cref="T:System.IO.TextReader" /> class.</span></span></param>
        <summary><span data-ttu-id="348ae-173">将已序列化的数据从派生自 <see cref="T:System.IO.TextReader" /> 类的读取器对象加载到控件。</span><span class="sxs-lookup"><span data-stu-id="348ae-173">Loads serialized data into the control from a reader object that derives from the <see cref="T:System.IO.TextReader" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="348ae-174">调用此方法可将序列化数据加载<xref:System.Web.UI.DataVisualization.Charting.Chart>到控件中。</span><span class="sxs-lookup"><span data-stu-id="348ae-174">Call this method to load serialized data into the <xref:System.Web.UI.DataVisualization.Charting.Chart> control.</span></span>  
  
 <span data-ttu-id="348ae-175">当发生加载操作时, 默认情况下, 可序列化属性首先重置为默认值, 然后将其设置为持久值 (如果已保存)。</span><span class="sxs-lookup"><span data-stu-id="348ae-175">When a load operation occurs, by default the serializable properties are first reset to their default values before they are set to the persisted values, if saved.</span></span> <span data-ttu-id="348ae-176">若要更改此行为, 请<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading%2A>使用属性。</span><span class="sxs-lookup"><span data-stu-id="348ae-176">To change this behavior, use the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading%2A> property.</span></span>  
  
 <span data-ttu-id="348ae-177">默认情况下, 将加载所有序列化的图表属性。</span><span class="sxs-lookup"><span data-stu-id="348ae-177">By default, all serialized chart properties will be loaded.</span></span> <span data-ttu-id="348ae-178">通过设置<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A>或属性,可以加载一组特定属性。<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A></span><span class="sxs-lookup"><span data-stu-id="348ae-178">By setting the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>, <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> or <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> properties, a specific set of properties can be loaded.</span></span>  
  
 <span data-ttu-id="348ae-179">如果使用此定义, 请注意, 由<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Format%2A>属性设置的格式必须是 XML。</span><span class="sxs-lookup"><span data-stu-id="348ae-179">If you use this definition, note that the format, which is set by the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Format%2A> property, must be XML.</span></span>  
  
 <span data-ttu-id="348ae-180">如果<xref:System.Web.UI.DataVisualization.Charting.Chart>控件<xref:System.Web.UI.DataVisualization.Charting.Chart.ViewStateData%2A>的属性用于保存状态, 则此方法可用于将客户端发布的序列化数据加载回<xref:System.Web.UI.DataVisualization.Charting.Chart>控件。</span><span class="sxs-lookup"><span data-stu-id="348ae-180">If the <xref:System.Web.UI.DataVisualization.Charting.Chart.ViewStateData%2A> property of the <xref:System.Web.UI.DataVisualization.Charting.Chart> control is used to persist state, this method can be used to load the serialized data that is posted by the client back to the <xref:System.Web.UI.DataVisualization.Charting.Chart> control.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.ChartSerializer.Load(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.Load : string -&gt; unit" Usage="chartSerializer.Load fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="348ae-181">用于存储序列化数据的文件的相对路径或绝对路径。</span><span class="sxs-lookup"><span data-stu-id="348ae-181">The relative or absolute path of the file used to store the serialized data.</span></span> <span data-ttu-id="348ae-182">如果指定了相对路径，则该路径将是相对于当前目录的路径。</span><span class="sxs-lookup"><span data-stu-id="348ae-182">If a relative path is specified, the path will be relative to the current directory.</span></span></param>
        <summary><span data-ttu-id="348ae-183">将已保存到磁盘的序列化数据加载到 <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> 控件。</span><span class="sxs-lookup"><span data-stu-id="348ae-183">Loads serialized data saved to disk into the <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="348ae-184">调用此方法可将序列化数据加载<xref:System.Web.UI.DataVisualization.Charting.Chart>到控件中。</span><span class="sxs-lookup"><span data-stu-id="348ae-184">Call this method to load serialized data into the <xref:System.Web.UI.DataVisualization.Charting.Chart> control.</span></span>  
  
 <span data-ttu-id="348ae-185">当发生加载操作时, 默认情况下, 可序列化的属性将首先重置为其默认值, 然后将其设置为持久值 (如果已保存)。</span><span class="sxs-lookup"><span data-stu-id="348ae-185">When a load operation occurs, serializable properties are, by default, first reset to their default values before they are set to the persisted values, if saved.</span></span> <span data-ttu-id="348ae-186">若要更改此行为, 请<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading%2A>使用属性。</span><span class="sxs-lookup"><span data-stu-id="348ae-186">To change this behavior, use the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading%2A> property.</span></span>  
  
 <span data-ttu-id="348ae-187">默认情况下, 将加载所有序列化的图表属性。</span><span class="sxs-lookup"><span data-stu-id="348ae-187">By default, all serialized chart properties will be loaded.</span></span> <span data-ttu-id="348ae-188">若要加载特定的<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A>序列化属性, 请<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A>在加载数据之前设置或属性。</span><span class="sxs-lookup"><span data-stu-id="348ae-188">To load specific serialized properties, set the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> , <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> or <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> properties before loading the data.</span></span>  
  
 <span data-ttu-id="348ae-189">请注意, 在使用`Save`方法保存数据时, 只会对具有非默认值的属性进行实际序列化。</span><span class="sxs-lookup"><span data-stu-id="348ae-189">Note that when data is saved using a `Save` method, only those properties that have non-default values are actually serialized.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.ChartSerializer.Load(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (reader As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XmlReader -&gt; unit" Usage="chartSerializer.Load reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="348ae-190">要从中读取所保留的数据的对象。</span><span class="sxs-lookup"><span data-stu-id="348ae-190">An object from which to read the persisted data.</span></span> <span data-ttu-id="348ae-191">该对象派生自 <see cref="T:System.Xml.XmlReader" /> 类，可以是 .NET Framework 对象或用户定义的对象。</span><span class="sxs-lookup"><span data-stu-id="348ae-191">The object is derived from the <see cref="T:System.Xml.XmlReader" /> class, and can be a .NET Framework object or a user-defined object.</span></span></param>
        <summary><span data-ttu-id="348ae-192">将已序列化的数据从派生自 <see cref="T:System.Xml.XmlReader" /> 类的对象加载到控件。</span><span class="sxs-lookup"><span data-stu-id="348ae-192">Loads serialized data into the control from an object derived from the <see cref="T:System.Xml.XmlReader" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="348ae-193">调用此方法可将序列化数据加载<xref:System.Web.UI.DataVisualization.Charting.Chart>到控件中。</span><span class="sxs-lookup"><span data-stu-id="348ae-193">Call this method to load serialized data into the <xref:System.Web.UI.DataVisualization.Charting.Chart> control.</span></span>  
  
 <span data-ttu-id="348ae-194">当发生加载操作时, 默认情况下, 可序列化属性首先重置为默认值, 然后将其设置为持久值 (如果已保存)。</span><span class="sxs-lookup"><span data-stu-id="348ae-194">When a load operation occurs, by default serializable properties are first reset to their default values before they are set to the persisted values, if saved.</span></span> <span data-ttu-id="348ae-195">若要更改此行为, 请<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading%2A>使用属性。</span><span class="sxs-lookup"><span data-stu-id="348ae-195">To change this behavior, use the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading%2A> property.</span></span>  
  
 <span data-ttu-id="348ae-196">默认情况下, 将加载所有序列化的图表属性。</span><span class="sxs-lookup"><span data-stu-id="348ae-196">By default, all serialized chart properties will be loaded.</span></span> <span data-ttu-id="348ae-197">如果设置<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A>或属性,可以加载一组特定属性。<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A></span><span class="sxs-lookup"><span data-stu-id="348ae-197">If you set the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>, <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> or <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> properties, a specific set of properties can be loaded.</span></span>  
  
 <span data-ttu-id="348ae-198">使用此定义时, 格式必须为 XML;可以通过<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Format%2A>属性来更改它。</span><span class="sxs-lookup"><span data-stu-id="348ae-198">When you use this definition, the format must be XML; it can be changed with the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Format%2A> property.</span></span>  
  
 <span data-ttu-id="348ae-199">处理 XML 格式文本文件时, 为简单起见<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Load%2A> , 请改用方法。</span><span class="sxs-lookup"><span data-stu-id="348ae-199">When you work with XML format text files, for simplicity use the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Load%2A> method instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NonSerializableContent">
      <MemberSignature Language="C#" Value="public string NonSerializableContent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NonSerializableContent" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent" />
      <MemberSignature Language="VB.NET" Value="Public Property NonSerializableContent As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NonSerializableContent { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NonSerializableContent : string with get, set" Usage="System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="348ae-200">获取或设置不进行序列化的图表属性。</span><span class="sxs-lookup"><span data-stu-id="348ae-200">Gets or sets the chart properties that will not be serialized.</span></span></summary>
        <value><span data-ttu-id="348ae-201">一个用逗号分隔的 <see langword="string" /> 表达式，表示不进行序列化的图表属性。</span><span class="sxs-lookup"><span data-stu-id="348ae-201">A comma-separated <see langword="string" /> expression that represents the chart properties that will not be serialized.</span></span> <span data-ttu-id="348ae-202">语法为“Class.Property[,Class.Property]”。</span><span class="sxs-lookup"><span data-stu-id="348ae-202">The syntax is "Class.Property[,Class.Property]".</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="348ae-203">默认情况下`Save` , 当调用和方法时, `Load`将序列化所有图表属性。</span><span class="sxs-lookup"><span data-stu-id="348ae-203">By default all chart properties will be serialized when the `Save` and `Load` methods are called.</span></span> <span data-ttu-id="348ae-204">您可以使用<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A>属性来限制要序列化的图表特征, <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A>以及和<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="348ae-204">You can use the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> property to limit chart characteristics to be serialized, along with the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> and <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> properties.</span></span>  
  
 <span data-ttu-id="348ae-205">此属性确定不会序列化哪些图表特征。</span><span class="sxs-lookup"><span data-stu-id="348ae-205">This property determines which chart characteristics will not be serialized.</span></span> <span data-ttu-id="348ae-206">可以在字符串表达式中使用通配符, 其方式<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A>与属性相同。</span><span class="sxs-lookup"><span data-stu-id="348ae-206">Wildcards can be used in the string expression, in the same manner as the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> property.</span></span> <span data-ttu-id="348ae-207">例如, 若要从序列化`BackColor`中排除所有图表属性, 请将此属性设置为 "\*"。背景色 "。</span><span class="sxs-lookup"><span data-stu-id="348ae-207">For example, to exclude all chart `BackColor` properties from serialization, set this property to "\*.BackColor".</span></span>  
  
 <span data-ttu-id="348ae-208">有时, 可以将属性设置为序列化和不序列化, 这在使用通配符时很常见。</span><span class="sxs-lookup"><span data-stu-id="348ae-208">Sometimes, a property can be set to be both serialized and not serialized, which is common when wildcards are used.</span></span> <span data-ttu-id="348ae-209">与表达式<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A>相比,表达式的优先级较低。<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A></span><span class="sxs-lookup"><span data-stu-id="348ae-209">The <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> expression has a lower priority when compared to the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> expression.</span></span> <span data-ttu-id="348ae-210">但请注意, 使用通配符的字符串表达式的权重更小。</span><span class="sxs-lookup"><span data-stu-id="348ae-210">However, note that less weight is given to string expressions that use wildcards.</span></span> <span data-ttu-id="348ae-211">例如, 如果<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A>将属性设置为 "\*"。背景色 ", <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A>并将属性设置<xref:System.Web.UI.DataVisualization.Charting.ChartArea.BackColor%2A>为, 则`ackColor`将序列化<xref:System.Web.UI.DataVisualization.Charting.ChartArea>除对象之外的所有 B 属性。</span><span class="sxs-lookup"><span data-stu-id="348ae-211">For example, if the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> property is set to "\*.BackColor" and the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> property is set to <xref:System.Web.UI.DataVisualization.Charting.ChartArea.BackColor%2A>, all B`ackColor` properties except for <xref:System.Web.UI.DataVisualization.Charting.ChartArea> objects will be serialized.</span></span>  
  
 <span data-ttu-id="348ae-212">如果已<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>设置该属性, 则优先级取决于<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A>表达式中使用的通配符数量。</span><span class="sxs-lookup"><span data-stu-id="348ae-212">If the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> property has been set, the priority depends on how many wild cards are used in the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> expression.</span></span> <span data-ttu-id="348ae-213">例如, 将<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>属性设置为<xref:System.Web.UI.DataVisualization.Charting.SerializationContents.Appearance>将导致<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A>属性包含 ""\*。Back\*"表达式。</span><span class="sxs-lookup"><span data-stu-id="348ae-213">For example, setting the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> property to <xref:System.Web.UI.DataVisualization.Charting.SerializationContents.Appearance> will result in the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> property containing a "\*.Back\*" expression.</span></span> <span data-ttu-id="348ae-214">如果该<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A>属性设置为 ""\*。后退\*", 所有`Back*` 图表属性`BackColor`(例如、等)仍将进行序列化。`BackGradient`</span><span class="sxs-lookup"><span data-stu-id="348ae-214">If the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> property is set to "\*.Back\*", all `Back*` chart properties such as `BackColor`, `BackGradient`, and so forth, will still be serialized.</span></span> <span data-ttu-id="348ae-215">这是因为在<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A>与<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A>属性进行比较时, 属性值具有更高的优先级。</span><span class="sxs-lookup"><span data-stu-id="348ae-215">This is because the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> property value has higher priority when compared to the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> property.</span></span>  
  
 <span data-ttu-id="348ae-216">此属性会影响所有 save、load 和 reset 操作。</span><span class="sxs-lookup"><span data-stu-id="348ae-216">This property affects all save, load and reset operations.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.ChartSerializer.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberSignature Language="F#" Value="member this.Reset : unit -&gt; unit" Usage="chartSerializer.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="348ae-217">重置所有标记为要进行序列化的图表属性。</span><span class="sxs-lookup"><span data-stu-id="348ae-217">Resets all chart properties marked for serialization.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="348ae-218">默认情况下, 此方法将所有图表属性重置为其默认值。</span><span class="sxs-lookup"><span data-stu-id="348ae-218">By default, this method resets all chart properties to their default values.</span></span>  
  
 <span data-ttu-id="348ae-219">若要将重置的图表属性限制为默认值, 请<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>使用<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> 、 <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A>和属性。</span><span class="sxs-lookup"><span data-stu-id="348ae-219">To limit the chart properties that are reset to their defaults, use the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>, <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> and <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> properties.</span></span>  
  
 <span data-ttu-id="348ae-220">请注意, 当使用`Load`方法<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading%2A>并且属性设置为`true`时, 也会自动调用此方法。</span><span class="sxs-lookup"><span data-stu-id="348ae-220">Note that this method is also called automatically when a `Load` method is used and the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading%2A> property is set to `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Save">
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="348ae-221">保存具有非默认值的图表属性。</span><span class="sxs-lookup"><span data-stu-id="348ae-221">Saves chart properties that have non-default values.</span></span> <span data-ttu-id="348ae-222">可以对所有图表属性进行序列化，其中包括数据。</span><span class="sxs-lookup"><span data-stu-id="348ae-222">All chart properties can be serialized; this includes data.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.ChartSerializer.Save(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="member this.Save : System.IO.Stream -&gt; unit" Usage="chartSerializer.Save stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="348ae-223">从 <see cref="T:System.IO.Stream" /> 类派生的用于保存图表属性的对象，如 <see cref="T:System.IO.MemoryStream" />。</span><span class="sxs-lookup"><span data-stu-id="348ae-223">An object derived from the <see cref="T:System.IO.Stream" /> class, such as <see cref="T:System.IO.MemoryStream" />, that is used to save chart properties.</span></span></param>
        <summary><span data-ttu-id="348ae-224">将具有非默认值的图表数据和属性保存到派生自 <see cref="T:System.IO.Stream" /> 类的对象。</span><span class="sxs-lookup"><span data-stu-id="348ae-224">Saves chart data and properties with non-default values to an object that derives from the <see cref="T:System.IO.Stream" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="348ae-225">默认情况下, 当调用此方法时, 将序列化所有具有非默认值的图表属性, 这些属性包含数据点。</span><span class="sxs-lookup"><span data-stu-id="348ae-225">By default, all chart properties with non-default values, which includes data points, will be serialized when this method is called.</span></span> <span data-ttu-id="348ae-226">若要控制要序列化的图表特征, <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>请<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A>使用<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> 、和属性。</span><span class="sxs-lookup"><span data-stu-id="348ae-226">To control chart characteristics to be serialized, use the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>, <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> and <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> properties.</span></span>  
  
 <span data-ttu-id="348ae-227">如果使用此方法将外观属性保存为模板, 请确保<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsTemplateMode%2A>先将<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer>对象的属性设置为`true` , 然后再调用此方法。</span><span class="sxs-lookup"><span data-stu-id="348ae-227">If this method is used to save appearance properties as a template, make sure that the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsTemplateMode%2A> property of the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer> object is first set to `true` before calling this method.</span></span>  
  
 <span data-ttu-id="348ae-228">作为模板的图表序列化与非模板序列化的发生方式不同;模板序列化着重于外观属性。</span><span class="sxs-lookup"><span data-stu-id="348ae-228">Serialization of a chart as a template occurs differently from non-template serialization; template serialization concentrates on Appearance properties.</span></span>  
  
 <span data-ttu-id="348ae-229">序列化模板时, <xref:System.Web.UI.DataVisualization.Charting.Chart.LoadTemplate%2A>可以使用方法加载模板, 以提供图表的外观属性。</span><span class="sxs-lookup"><span data-stu-id="348ae-229">When a template is serialized, the <xref:System.Web.UI.DataVisualization.Charting.Chart.LoadTemplate%2A> method can be used to load the template, to provide the Appearance properties for a chart.</span></span>  
  
 <span data-ttu-id="348ae-230">模板可用于模拟自定义调色板。</span><span class="sxs-lookup"><span data-stu-id="348ae-230">Templates can be used to simulate custom palettes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.ChartSerializer.Save(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::IO::TextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="member this.Save : System.IO.TextWriter -&gt; unit" Usage="chartSerializer.Save writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="348ae-231">从 <see cref="T:System.IO.TextWriter" /> 类派生的用于保存图表属性的对象，如 <see cref="T:System.IO.StringWriter" />。</span><span class="sxs-lookup"><span data-stu-id="348ae-231">An object derived from <see cref="T:System.IO.TextWriter" /> class, for example, <see cref="T:System.IO.StringWriter" />, that is used to save chart properties.</span></span></param>
        <summary><span data-ttu-id="348ae-232">将具有非默认值的图表数据和属性保存到派生自 <see cref="T:System.IO.TextWriter" /> 类的给定对象中。</span><span class="sxs-lookup"><span data-stu-id="348ae-232">Saves chart data and properties with non-default values to the given object that is derived from the <see cref="T:System.IO.TextWriter" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="348ae-233">默认情况下, 当调用此方法时, 将序列化所有具有非默认值的图表属性, 这些属性包含数据点。</span><span class="sxs-lookup"><span data-stu-id="348ae-233">By default, all chart properties with non-default values, which includes data points, will be serialized when this method is called.</span></span> <span data-ttu-id="348ae-234">若要控制序列化哪些图表特征, 请<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>使用<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> 、 <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A>和属性。</span><span class="sxs-lookup"><span data-stu-id="348ae-234">To control which chart characteristics are serialized, use the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>, <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> and <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> properties.</span></span>  
  
 <span data-ttu-id="348ae-235">使用此定义时, 格式必须为 XML;可以通过<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Format%2A>属性设置格式。</span><span class="sxs-lookup"><span data-stu-id="348ae-235">When you use this definition, the format must be XML; the format can be set with the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Format%2A> property.</span></span>  
  
 <span data-ttu-id="348ae-236">如果<xref:System.Web.UI.DataVisualization.Charting.Chart>控件<xref:System.Web.UI.DataVisualization.Charting.Chart.ViewStateData%2A>的属性用于保存状态, 则可以使用此方法将序列化的数据保存到派生自<xref:System.IO.TextWriter>的对象, <xref:System.Web.UI.DataVisualization.Charting.Chart.ViewStateData%2A>然后使用该对象将数据写入到属性。</span><span class="sxs-lookup"><span data-stu-id="348ae-236">If the <xref:System.Web.UI.DataVisualization.Charting.Chart.ViewStateData%2A> property of the <xref:System.Web.UI.DataVisualization.Charting.Chart> control is used to persist state, this method can be used to save the serialized data to an object derived from <xref:System.IO.TextWriter>, which is then used to write the data to the <xref:System.Web.UI.DataVisualization.Charting.Chart.ViewStateData%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.ChartSerializer.Save(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.Save : string -&gt; unit" Usage="chartSerializer.Save fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="348ae-237">用于存储序列化数据的文件的相对路径或绝对路径。</span><span class="sxs-lookup"><span data-stu-id="348ae-237">The relative or absolute path of the file used to store the serialized data.</span></span> <span data-ttu-id="348ae-238">请注意，如果指定了相对路径，则该路径将是相对于当前目录的路径。</span><span class="sxs-lookup"><span data-stu-id="348ae-238">Note that if a relative path is specified, the path will be relative to the current directory.</span></span></param>
        <summary><span data-ttu-id="348ae-239">将具有非默认值的图表数据和属性保存到给定文件中。</span><span class="sxs-lookup"><span data-stu-id="348ae-239">Saves chart data and properties with non-default values to the given file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="348ae-240">默认情况下, 当调用此方法时, 将序列化所有具有非默认值的图表属性, 这些属性包含数据点。</span><span class="sxs-lookup"><span data-stu-id="348ae-240">By default all chart properties with non-default values, which includes data points, will be serialized when this method is called.</span></span> <span data-ttu-id="348ae-241">若要控制要序列化的<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>图表特征, 请使用、 <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A>和<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="348ae-241">To control chart characteristics to be serialized use the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>, <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> and <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> properties.</span></span>  
  
 <span data-ttu-id="348ae-242">默认情况下, 数据以 XML 格式保存。</span><span class="sxs-lookup"><span data-stu-id="348ae-242">By default data is saved in an XML format.</span></span> <span data-ttu-id="348ae-243">若要以二进制格式保存数据, 请使用<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Format%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="348ae-243">To save the data in a binary format, use the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Format%2A> property.</span></span>  
  
 <span data-ttu-id="348ae-244">请注意, 必须为存储文件的目录启用写入权限。</span><span class="sxs-lookup"><span data-stu-id="348ae-244">Note that Write permissions must be enabled for the directory in which the file is stored.</span></span> <span data-ttu-id="348ae-245">默认情况下, 这是应用程序的 Bin 文件夹。</span><span class="sxs-lookup"><span data-stu-id="348ae-245">By default, this is the Bin folder of the application.</span></span>  
  
 <span data-ttu-id="348ae-246">如果使用此方法将外观属性保存为模板, 请确保<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsTemplateMode%2A>先将属性设置为`true` , 然后再调用此方法。</span><span class="sxs-lookup"><span data-stu-id="348ae-246">If this method is being used to save Appearance properties as a template, make sure that the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsTemplateMode%2A> property is first set to `true` before calling this method.</span></span>  
  
 <span data-ttu-id="348ae-247">作为模板的图表序列化与非模板序列化的方式不同, 主要是因为模板序列化会集中于外观属性。</span><span class="sxs-lookup"><span data-stu-id="348ae-247">Serialization of a chart as a template proceeds differently from non-template serialization, primarily because template serialization concentrates on Appearance properties.</span></span>  
  
 <span data-ttu-id="348ae-248">序列化模板时, <xref:System.Web.UI.DataVisualization.Charting.Chart.LoadTemplate%2A>可以使用方法加载模板, 以提供图表的外观属性。</span><span class="sxs-lookup"><span data-stu-id="348ae-248">When a template is serialized, the <xref:System.Web.UI.DataVisualization.Charting.Chart.LoadTemplate%2A> method can be used to load the template, to provide the Appearance properties for a chart.</span></span>  
  
 <span data-ttu-id="348ae-249">模板可用于模拟自定义调色板。</span><span class="sxs-lookup"><span data-stu-id="348ae-249">Templates can be used to simulate custom palettes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.ChartSerializer.Save(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (writer As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::Xml::XmlWriter ^ writer);" />
      <MemberSignature Language="F#" Value="member this.Save : System.Xml.XmlWriter -&gt; unit" Usage="chartSerializer.Save writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="348ae-250">一个从 <see cref="T:System.Xml.XmlWriter" /> 派生的用于保存 <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> 属性的对象。</span><span class="sxs-lookup"><span data-stu-id="348ae-250">An object derived from <see cref="T:System.Xml.XmlWriter" /> used to save <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> properties.</span></span></param>
        <summary><span data-ttu-id="348ae-251">将具有非默认值的图表数据和属性保存到派生自 <see cref="T:System.Xml.XmlWriter" /> 类的给定对象中。</span><span class="sxs-lookup"><span data-stu-id="348ae-251">Saves chart data and properties with non-default values to the given object that is derived from the <see cref="T:System.Xml.XmlWriter" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="348ae-252">默认情况下, 当调用此方法时, 将序列化所有具有非默认值的图表属性, 这些属性包含数据点。</span><span class="sxs-lookup"><span data-stu-id="348ae-252">By default, all chart properties with non-default values, which includes data points, will be serialized when this method is called.</span></span> <span data-ttu-id="348ae-253">若要控制序列化哪些图表特征, 请<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>使用<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> 、 <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A>和属性。</span><span class="sxs-lookup"><span data-stu-id="348ae-253">To control which chart characteristics are serialized, use the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>, <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> and <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> properties.</span></span>  
  
 <span data-ttu-id="348ae-254">使用此定义时, 格式必须为 XML;可以用<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Format%2A>属性更改格式。</span><span class="sxs-lookup"><span data-stu-id="348ae-254">When you use this definition, the format must be XML; the format can be changed with the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Format%2A> property.</span></span>  
  
 <span data-ttu-id="348ae-255">处理 XML 格式文本文件时, 为简单起见<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Save%2A> , 请改用方法。</span><span class="sxs-lookup"><span data-stu-id="348ae-255">When you work with XML format text files, for simplicity use the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Save%2A> method instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializableContent">
      <MemberSignature Language="C#" Value="public string SerializableContent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SerializableContent" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent" />
      <MemberSignature Language="VB.NET" Value="Public Property SerializableContent As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SerializableContent { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SerializableContent : string with get, set" Usage="System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="348ae-256">获取或设置可以序列化的图表属性。</span><span class="sxs-lookup"><span data-stu-id="348ae-256">Gets or sets the chart properties that can be serialized.</span></span></summary>
        <value><span data-ttu-id="348ae-257">一个用逗号分隔的 <see langword="string" /> 表达式，表示要序列化的图表属性。</span><span class="sxs-lookup"><span data-stu-id="348ae-257">A comma-separated <see langword="string" /> expression that represents the chart properties to be serialized.</span></span> <span data-ttu-id="348ae-258">语法为“Class.Property[,Class.Property]”。</span><span class="sxs-lookup"><span data-stu-id="348ae-258">The syntax is "Class.Property[,Class.Property]".</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="348ae-259">默认情况下`Save` , 当调用和方法时, `Load`将序列化所有图表属性。</span><span class="sxs-lookup"><span data-stu-id="348ae-259">By default all chart properties will be serialized when the `Save` and `Load` methods are called.</span></span> <span data-ttu-id="348ae-260">您可以使用<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A>属性来限制要序列化的图表特征, <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A>以及和<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="348ae-260">You can use the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> property to limit chart characteristics to be serialized, along with the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> and <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> properties.</span></span>  
  
 <span data-ttu-id="348ae-261"><xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A>属性决定将序列化哪些图表特征。</span><span class="sxs-lookup"><span data-stu-id="348ae-261">The <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> property determines which chart characteristics will be serialized.</span></span> <span data-ttu-id="348ae-262">可以在字符串表达式中使用通配符, 其方式<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A>与属性相同。</span><span class="sxs-lookup"><span data-stu-id="348ae-262">Wildcards can be used in the string expression, in the same manner as the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> property.</span></span> <span data-ttu-id="348ae-263">例如, 若要序列化所有`BackColor`图表属性, 请将此属性设置为 "\*"。背景色 "。</span><span class="sxs-lookup"><span data-stu-id="348ae-263">For example, to serialize all chart `BackColor` properties, set this property to "\*.BackColor".</span></span>  
  
 <span data-ttu-id="348ae-264">如果<xref:System.Web.UI.DataVisualization.Charting.ChartArea>指定了和<xref:System.Web.UI.DataVisualization.Charting.Series> /或子属性, 则还必须指定所有<xref:System.Web.UI.DataVisualization.Charting.ChartArea>和<xref:System.Web.UI.DataVisualization.Charting.Series>对象的名称, 以使持久的数据应用于现有<xref:System.Web.UI.DataVisualization.Charting.ChartArea>和<xref:System.Web.UI.DataVisualization.Charting.Series>对象;也就是说, 必须指定 "Series.Name" 和 "ChartArea.Name" 表达式。</span><span class="sxs-lookup"><span data-stu-id="348ae-264">If <xref:System.Web.UI.DataVisualization.Charting.ChartArea> and/or <xref:System.Web.UI.DataVisualization.Charting.Series> child properties are specified, then the names of all <xref:System.Web.UI.DataVisualization.Charting.ChartArea> and <xref:System.Web.UI.DataVisualization.Charting.Series> objects must be also specified to enable the persisted data to be applied to existing <xref:System.Web.UI.DataVisualization.Charting.ChartArea> and <xref:System.Web.UI.DataVisualization.Charting.Series> objects; that is, you must specify "Series.Name" and "ChartArea.Name" expressions.</span></span> <span data-ttu-id="348ae-265">有关此过程的示例, 请参阅下面的示例代码。</span><span class="sxs-lookup"><span data-stu-id="348ae-265">See the sample code below for an example of this procedure.</span></span> <span data-ttu-id="348ae-266">同样, 如果使用多个图表区, 则还<xref:System.Web.UI.DataVisualization.Charting.Series.ChartArea%2A>必须保存所有绘图<xref:System.Web.UI.DataVisualization.Charting.Series>的属性。</span><span class="sxs-lookup"><span data-stu-id="348ae-266">Similarly, if multiple chart areas are being used, the <xref:System.Web.UI.DataVisualization.Charting.Series.ChartArea%2A> property of all plotted <xref:System.Web.UI.DataVisualization.Charting.Series> must also be saved.</span></span>  
  
 <span data-ttu-id="348ae-267">有时, 可以将属性设置为序列化和不序列化, 这在使用通配符时很常见。</span><span class="sxs-lookup"><span data-stu-id="348ae-267">Sometimes, a property can be set to be both serialized and not serialized, which is common when wildcards are used.</span></span> <span data-ttu-id="348ae-268">与表达式<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A>相比,表达式的优先级较低。<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A></span><span class="sxs-lookup"><span data-stu-id="348ae-268">The <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> expression has a lower priority when compared to the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> expression.</span></span> <span data-ttu-id="348ae-269">但请注意, 使用通配符的字符串表达式的权重更小。</span><span class="sxs-lookup"><span data-stu-id="348ae-269">However, note that less weight is given to string expressions that use wildcards.</span></span> <span data-ttu-id="348ae-270">例如, 如果<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A>将属性设置为 "\*"。背景色 ", <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A>并将属性设置<xref:System.Web.UI.DataVisualization.Charting.ChartArea.BackColor%2A>为, 则`ackColor`将序列化<xref:System.Web.UI.DataVisualization.Charting.ChartArea>除对象之外的所有 B 属性。</span><span class="sxs-lookup"><span data-stu-id="348ae-270">For example, if the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> property is set to "\*.BackColor" and the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> property is set to <xref:System.Web.UI.DataVisualization.Charting.ChartArea.BackColor%2A>, all B`ackColor` properties except for <xref:System.Web.UI.DataVisualization.Charting.ChartArea> objects will be serialized.</span></span>  
  
 <span data-ttu-id="348ae-271">如果设置了<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>属性, 将在<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A>内部设置该属性。</span><span class="sxs-lookup"><span data-stu-id="348ae-271">If you set the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> property, the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> property will be set internally.</span></span> <span data-ttu-id="348ae-272">如果已<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>设置该属性, 但需要序列化另一个属性, 请确保在指定该<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A>额外属性时连接属性。</span><span class="sxs-lookup"><span data-stu-id="348ae-272">If the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> property is already set but another property needs to be serialized, make sure to concatenate the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> property when specifying that extra property.</span></span> <span data-ttu-id="348ae-273">有关此过程的示例, 请参阅下面的示例代码。</span><span class="sxs-lookup"><span data-stu-id="348ae-273">See the sample code below for an example of this procedure.</span></span>  
  
 <span data-ttu-id="348ae-274">此属性会影响所有 save、load 和 reset 操作。</span><span class="sxs-lookup"><span data-stu-id="348ae-274">This property affects all save, load and reset operations.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
