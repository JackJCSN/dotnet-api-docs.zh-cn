<Type Name="FlowControl" FullName="Microsoft.VisualBasic.CompilerServices.FlowControl">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5ae6c8f5620ab0286d49d93ab750c8ae462057ab" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70588618" /></Metadata><TypeSignature Language="C#" Value="public sealed class FlowControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed FlowControl extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.CompilerServices.FlowControl" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class FlowControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class FlowControl sealed" />
  <TypeSignature Language="F#" Value="type FlowControl = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>Microsoft.VisualBasic.CompilerServices.StandardModule</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="cc2e9-101">向 Visual Basic 编译器提供用于编译 <see langword="For...Next" /> 和 <see langword="For Each" /> 循环的服务。</span><span class="sxs-lookup"><span data-stu-id="cc2e9-101">Provides services to the Visual Basic compiler for compiling <see langword="For...Next" /> and <see langword="For Each" /> loops.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc2e9-102">此类支持 Visual Basic 编译器，不应在代码中直接使用。</span><span class="sxs-lookup"><span data-stu-id="cc2e9-102">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
    <related type="Article" href="~/docs/visual-basic/language-reference/statements/for-next-statement.md"><span data-ttu-id="cc2e9-103">For...Next 语句 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="cc2e9-103">For...Next Statement (Visual Basic)</span></span></related>
    <related type="Article" href="~/docs/visual-basic/language-reference/statements/for-each-next-statement.md"><span data-ttu-id="cc2e9-104">For Each...Next 语句 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="cc2e9-104">For Each...Next Statement (Visual Basic)</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="CheckForSyncLockOnValueType">
      <MemberSignature Language="C#" Value="public static void CheckForSyncLockOnValueType (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public static void CheckForSyncLockOnValueType(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.FlowControl.CheckForSyncLockOnValueType(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub CheckForSyncLockOnValueType (obj As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CheckForSyncLockOnValueType(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="static member CheckForSyncLockOnValueType : obj -&gt; unit" Usage="Microsoft.VisualBasic.CompilerServices.FlowControl.CheckForSyncLockOnValueType obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="cc2e9-105">检查同步锁的数据类型。</span><span class="sxs-lookup"><span data-stu-id="cc2e9-105">The data type for which to check for synchronization lock.</span></span></param>
        <summary><span data-ttu-id="cc2e9-106">检查指定类型上的同步锁。</span><span class="sxs-lookup"><span data-stu-id="cc2e9-106">Checks for a synchronization lock on the specified type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc2e9-107">此类支持 Visual Basic 编译器，不应在代码中直接使用。</span><span class="sxs-lookup"><span data-stu-id="cc2e9-107">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/for-next-statement.md"><span data-ttu-id="cc2e9-108">For...Next 语句 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="cc2e9-108">For...Next Statement (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/for-each-next-statement.md"><span data-ttu-id="cc2e9-109">For Each...Next 语句 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="cc2e9-109">For Each...Next Statement (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ForEachInArr">
      <MemberSignature Language="C#" Value="public static System.Collections.IEnumerator ForEachInArr (Array ary);" />
      <MemberSignature Language="ILAsm" Value=".method public static class System.Collections.IEnumerator ForEachInArr(class System.Array ary) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.FlowControl.ForEachInArr(System.Array)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ForEachInArr (ary As Array) As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::IEnumerator ^ ForEachInArr(Array ^ ary);" />
      <MemberSignature Language="F#" Value="static member ForEachInArr : Array -&gt; System.Collections.IEnumerator" Usage="Microsoft.VisualBasic.CompilerServices.FlowControl.ForEachInArr ary" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ary" Type="System.Array" />
      </Parameters>
      <Docs>
        <param name="ary"><span data-ttu-id="cc2e9-110">要在 <see langword="For Each" /> 循环中循环访问的数组。</span><span class="sxs-lookup"><span data-stu-id="cc2e9-110">An array being iterated over in a <see langword="For Each" /> loop.</span></span></param>
        <summary><span data-ttu-id="cc2e9-111">获取要在 <see langword="For Each" /> 循环中循环访问的数组的枚举数。</span><span class="sxs-lookup"><span data-stu-id="cc2e9-111">Gets the enumerator for an array being iterated over in a <see langword="For Each" /> loop.</span></span></summary>
        <returns><span data-ttu-id="cc2e9-112"><paramref name="ary" /> 的枚举数。</span><span class="sxs-lookup"><span data-stu-id="cc2e9-112">The enumerator for <paramref name="ary" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc2e9-113">此类支持 Visual Basic 编译器，不应在代码中直接使用。</span><span class="sxs-lookup"><span data-stu-id="cc2e9-113">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/for-each-next-statement.md"><span data-ttu-id="cc2e9-114">For Each...Next 语句 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="cc2e9-114">For Each...Next Statement (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ForEachInObj">
      <MemberSignature Language="C#" Value="public static System.Collections.IEnumerator ForEachInObj (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public static class System.Collections.IEnumerator ForEachInObj(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.FlowControl.ForEachInObj(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ForEachInObj (obj As Object) As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::IEnumerator ^ ForEachInObj(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="static member ForEachInObj : obj -&gt; System.Collections.IEnumerator" Usage="Microsoft.VisualBasic.CompilerServices.FlowControl.ForEachInObj obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="cc2e9-115">要在 <see langword="For Each" /> 循环中循环访问的对象。</span><span class="sxs-lookup"><span data-stu-id="cc2e9-115">An object being iterated over in a <see langword="For Each" /> loop.</span></span></param>
        <summary><span data-ttu-id="cc2e9-116">获取要在 <see langword="For Each" /> 循环中循环访问的对象的枚举数。</span><span class="sxs-lookup"><span data-stu-id="cc2e9-116">Gets the enumerator for an object being iterated over in a <see langword="For Each" /> loop.</span></span></summary>
        <returns><span data-ttu-id="cc2e9-117"><paramref name="obj" /> 的枚举数。</span><span class="sxs-lookup"><span data-stu-id="cc2e9-117">The enumerator for <paramref name="obj" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc2e9-118">此类支持 Visual Basic 编译器，不应在代码中直接使用。</span><span class="sxs-lookup"><span data-stu-id="cc2e9-118">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/for-each-next-statement.md"><span data-ttu-id="cc2e9-119">For Each...Next 语句 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="cc2e9-119">For Each...Next Statement (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ForEachNextObj">
      <MemberSignature Language="C#" Value="public static bool ForEachNextObj (ref object obj, System.Collections.IEnumerator enumerator);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ForEachNextObj(object&amp; obj, class System.Collections.IEnumerator enumerator) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.FlowControl.ForEachNextObj(System.Object@,System.Collections.IEnumerator)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ForEachNextObj (ByRef obj As Object, enumerator As IEnumerator) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ForEachNextObj(System::Object ^ % obj, System::Collections::IEnumerator ^ enumerator);" />
      <MemberSignature Language="F#" Value="static member ForEachNextObj :  * System.Collections.IEnumerator -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.FlowControl.ForEachNextObj (obj, enumerator)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" RefType="ref" />
        <Parameter Name="enumerator" Type="System.Collections.IEnumerator" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="cc2e9-120"><see langword="For Each" /> 循环的范围变量。</span><span class="sxs-lookup"><span data-stu-id="cc2e9-120">The range variable of the <see langword="For Each" /> loop.</span></span></param>
        <param name="enumerator"><span data-ttu-id="cc2e9-121">要在 <see langword="For Each" /> 循环中循环访问的对象的 <see cref="T:System.Collections.IEnumerator" />。</span><span class="sxs-lookup"><span data-stu-id="cc2e9-121">The <see cref="T:System.Collections.IEnumerator" /> of the object being iterated over in the <see langword="For Each" /> loop.</span></span></param>
        <summary><span data-ttu-id="cc2e9-122">设置对 <see langword="For Each" /> 循环中下一个对象的引用。</span><span class="sxs-lookup"><span data-stu-id="cc2e9-122">Sets a reference to the next object in a <see langword="For Each" /> loop.</span></span></summary>
        <returns><span data-ttu-id="cc2e9-123">如果 <paramref name="obj" /> 引用了下一个对象，则为 <see langword="True" />；如果不再有其他对象并且 <paramref name="obj" /> 是 <see langword="False" />，则为 <see langword="Nothing" />。</span><span class="sxs-lookup"><span data-stu-id="cc2e9-123"><see langword="True" /> if <paramref name="obj" /> refers to the next object; <see langword="False" /> if there are no more objects and <paramref name="obj" /> is <see langword="Nothing" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc2e9-124">此类支持 Visual Basic 编译器，不应在代码中直接使用。</span><span class="sxs-lookup"><span data-stu-id="cc2e9-124">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/for-each-next-statement.md"><span data-ttu-id="cc2e9-125">For Each...Next 语句 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="cc2e9-125">For Each...Next Statement (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ForLoopInitObj">
      <MemberSignature Language="C#" Value="public static bool ForLoopInitObj (object Counter, object Start, object Limit, object StepValue, ref object LoopForResult, ref object CounterResult);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ForLoopInitObj(object Counter, object Start, object Limit, object StepValue, object&amp; LoopForResult, object&amp; CounterResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.FlowControl.ForLoopInitObj(System.Object,System.Object,System.Object,System.Object,System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ForLoopInitObj (Counter As Object, Start As Object, Limit As Object, StepValue As Object, ByRef LoopForResult As Object, ByRef CounterResult As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ForLoopInitObj(System::Object ^ Counter, System::Object ^ Start, System::Object ^ Limit, System::Object ^ StepValue, System::Object ^ % LoopForResult, System::Object ^ % CounterResult);" />
      <MemberSignature Language="F#" Value="static member ForLoopInitObj : obj * obj * obj * obj *  *  -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.FlowControl.ForLoopInitObj (Counter, Start, Limit, StepValue, LoopForResult, CounterResult)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Counter" Type="System.Object" />
        <Parameter Name="Start" Type="System.Object" />
        <Parameter Name="Limit" Type="System.Object" />
        <Parameter Name="StepValue" Type="System.Object" />
        <Parameter Name="LoopForResult" Type="System.Object" RefType="ref" />
        <Parameter Name="CounterResult" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Counter"><span data-ttu-id="cc2e9-126">循环计数器变量。</span><span class="sxs-lookup"><span data-stu-id="cc2e9-126">The loop counter variable.</span></span></param>
        <param name="Start"><span data-ttu-id="cc2e9-127">循环计数器的初始值。</span><span class="sxs-lookup"><span data-stu-id="cc2e9-127">The initial value of the loop counter.</span></span></param>
        <param name="Limit"><span data-ttu-id="cc2e9-128"><see langword="To" /> 选项的值。</span><span class="sxs-lookup"><span data-stu-id="cc2e9-128">The value of the <see langword="To" /> option.</span></span></param>
        <param name="StepValue"><span data-ttu-id="cc2e9-129"><see langword="Step" /> 选项的值。</span><span class="sxs-lookup"><span data-stu-id="cc2e9-129">The value of the <see langword="Step" /> option.</span></span></param>
        <param name="LoopForResult"><span data-ttu-id="cc2e9-130">一个对象，其中包含循环值的已验证值。</span><span class="sxs-lookup"><span data-stu-id="cc2e9-130">An object that contains verified values for loop values.</span></span></param>
        <param name="CounterResult"><span data-ttu-id="cc2e9-131">下一个循环迭代的计数器值。</span><span class="sxs-lookup"><span data-stu-id="cc2e9-131">The counter value for the next loop iteration.</span></span></param>
        <summary><span data-ttu-id="cc2e9-132">初始化一个 <see langword="For...Next" /> 循环。</span><span class="sxs-lookup"><span data-stu-id="cc2e9-132">Initializes a <see langword="For...Next" /> loop.</span></span></summary>
        <returns><span data-ttu-id="cc2e9-133">如果循环已终止，则为 <see langword="False" />；否则为 <see langword="True" />。</span><span class="sxs-lookup"><span data-stu-id="cc2e9-133"><see langword="False" /> if the loop has terminated; otherwise, <see langword="True" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc2e9-134">此类支持 Visual Basic 编译器，不应在代码中直接使用。</span><span class="sxs-lookup"><span data-stu-id="cc2e9-134">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/for-next-statement.md"><span data-ttu-id="cc2e9-135">For...Next 语句 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="cc2e9-135">For...Next Statement (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ForNextCheckDec">
      <MemberSignature Language="C#" Value="public static bool ForNextCheckDec (decimal count, decimal limit, decimal StepValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ForNextCheckDec(valuetype System.Decimal count, valuetype System.Decimal limit, valuetype System.Decimal StepValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.FlowControl.ForNextCheckDec(System.Decimal,System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ForNextCheckDec (count As Decimal, limit As Decimal, StepValue As Decimal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ForNextCheckDec(System::Decimal count, System::Decimal limit, System::Decimal StepValue);" />
      <MemberSignature Language="F#" Value="static member ForNextCheckDec : decimal * decimal * decimal -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.FlowControl.ForNextCheckDec (count, limit, StepValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.Decimal" />
        <Parameter Name="limit" Type="System.Decimal" />
        <Parameter Name="StepValue" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="count"><span data-ttu-id="cc2e9-136">必需。</span><span class="sxs-lookup"><span data-stu-id="cc2e9-136">Required.</span></span> <span data-ttu-id="cc2e9-137">一个 <see langword="Decimal" /> 值，表示为循环计数器变量传递的初始值。</span><span class="sxs-lookup"><span data-stu-id="cc2e9-137">A <see langword="Decimal" /> value that represents the initial value passed for the loop counter variable.</span></span></param>
        <param name="limit"><span data-ttu-id="cc2e9-138">必需。</span><span class="sxs-lookup"><span data-stu-id="cc2e9-138">Required.</span></span> <span data-ttu-id="cc2e9-139">一个 <see langword="Decimal" /> 值，表示使用 <see langword="To" /> 关键字传递的值。</span><span class="sxs-lookup"><span data-stu-id="cc2e9-139">A <see langword="Decimal" /> value that represents the value passed by using the <see langword="To" /> keyword.</span></span></param>
        <param name="StepValue"><span data-ttu-id="cc2e9-140">必需。</span><span class="sxs-lookup"><span data-stu-id="cc2e9-140">Required.</span></span> <span data-ttu-id="cc2e9-141">一个 <see langword="Decimal" /> 值，表示使用 <see langword="Step" /> 关键字传递的值。</span><span class="sxs-lookup"><span data-stu-id="cc2e9-141">A <see langword="Decimal" /> value that represents the value passed by using the <see langword="Step" /> keyword.</span></span></param>
        <summary><span data-ttu-id="cc2e9-142">检查循环计数器的有效值以及 <see langword="Step" /> 和 <see langword="To" /> 值。</span><span class="sxs-lookup"><span data-stu-id="cc2e9-142">Checks for valid values for the loop counter, <see langword="Step" />, and <see langword="To" /> values.</span></span></summary>
        <returns><span data-ttu-id="cc2e9-143">如果 <paramref name="StepValue" /> 大于零且 <paramref name="count" /> 小于或等于 <paramref name="limit" />，或者 <paramref name="StepValue" /> 小于或等于零且 <paramref name="count" /> 大于或等于 <paramref name="limit" />，则为 <see langword="True" />；否则为 <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="cc2e9-143"><see langword="True" /> if <paramref name="StepValue" /> is greater than zero and <paramref name="count" /> is less than or equal to <paramref name="limit" />, or if <paramref name="StepValue" /> is less than or equal to zero and <paramref name="count" /> is greater than or equal to <paramref name="limit" />; otherwise, <see langword="False" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc2e9-144">此类支持 Visual Basic 编译器，不应在代码中直接使用。</span><span class="sxs-lookup"><span data-stu-id="cc2e9-144">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/for-next-statement.md"><span data-ttu-id="cc2e9-145">For...Next 语句 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="cc2e9-145">For...Next Statement (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ForNextCheckObj">
      <MemberSignature Language="C#" Value="public static bool ForNextCheckObj (object Counter, object LoopObj, ref object CounterResult);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ForNextCheckObj(object Counter, object LoopObj, object&amp; CounterResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.FlowControl.ForNextCheckObj(System.Object,System.Object,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ForNextCheckObj (Counter As Object, LoopObj As Object, ByRef CounterResult As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ForNextCheckObj(System::Object ^ Counter, System::Object ^ LoopObj, System::Object ^ % CounterResult);" />
      <MemberSignature Language="F#" Value="static member ForNextCheckObj : obj * obj *  -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.FlowControl.ForNextCheckObj (Counter, LoopObj, CounterResult)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Counter" Type="System.Object" />
        <Parameter Name="LoopObj" Type="System.Object" />
        <Parameter Name="CounterResult" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Counter"><span data-ttu-id="cc2e9-146">循环计数器变量。</span><span class="sxs-lookup"><span data-stu-id="cc2e9-146">The loop counter variable.</span></span></param>
        <param name="LoopObj"><span data-ttu-id="cc2e9-147">一个对象，其中包含循环值的已验证值。</span><span class="sxs-lookup"><span data-stu-id="cc2e9-147">An object that contains verified values for loop values.</span></span></param>
        <param name="CounterResult"><span data-ttu-id="cc2e9-148">下一个循环迭代的计数器值。</span><span class="sxs-lookup"><span data-stu-id="cc2e9-148">The counter value for the next loop iteration.</span></span></param>
        <summary><span data-ttu-id="cc2e9-149">使 <see langword="For...Next" /> 循环次数递增。</span><span class="sxs-lookup"><span data-stu-id="cc2e9-149">Increments a <see langword="For...Next" /> loop.</span></span></summary>
        <returns><span data-ttu-id="cc2e9-150">如果循环已终止，则为 <see langword="False" />；否则为 <see langword="True" />。</span><span class="sxs-lookup"><span data-stu-id="cc2e9-150"><see langword="False" /> if the loop has terminated; otherwise, <see langword="True" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc2e9-151">此类支持 Visual Basic 编译器，不应在代码中直接使用。</span><span class="sxs-lookup"><span data-stu-id="cc2e9-151">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/for-next-statement.md"><span data-ttu-id="cc2e9-152">For...Next 语句 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="cc2e9-152">For...Next Statement (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ForNextCheckR4">
      <MemberSignature Language="C#" Value="public static bool ForNextCheckR4 (float count, float limit, float StepValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ForNextCheckR4(float32 count, float32 limit, float32 StepValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.FlowControl.ForNextCheckR4(System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ForNextCheckR4 (count As Single, limit As Single, StepValue As Single) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ForNextCheckR4(float count, float limit, float StepValue);" />
      <MemberSignature Language="F#" Value="static member ForNextCheckR4 : single * single * single -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.FlowControl.ForNextCheckR4 (count, limit, StepValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.Single" />
        <Parameter Name="limit" Type="System.Single" />
        <Parameter Name="StepValue" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="count"><span data-ttu-id="cc2e9-153">必需。</span><span class="sxs-lookup"><span data-stu-id="cc2e9-153">Required.</span></span> <span data-ttu-id="cc2e9-154">一个 <see langword="Single" /> 值，表示为循环计数器变量传递的初始值。</span><span class="sxs-lookup"><span data-stu-id="cc2e9-154">A <see langword="Single" /> value that represents the initial value passed for the loop counter variable.</span></span></param>
        <param name="limit"><span data-ttu-id="cc2e9-155">必需。</span><span class="sxs-lookup"><span data-stu-id="cc2e9-155">Required.</span></span> <span data-ttu-id="cc2e9-156">一个 <see langword="Single" /> 值，表示使用 <see langword="To" /> 关键字传递的值。</span><span class="sxs-lookup"><span data-stu-id="cc2e9-156">A <see langword="Single" /> value that represents the value passed by using the <see langword="To" /> keyword.</span></span></param>
        <param name="StepValue"><span data-ttu-id="cc2e9-157">必需。</span><span class="sxs-lookup"><span data-stu-id="cc2e9-157">Required.</span></span> <span data-ttu-id="cc2e9-158">一个 <see langword="Single" /> 值，表示使用 <see langword="Step" /> 关键字传递的值。</span><span class="sxs-lookup"><span data-stu-id="cc2e9-158">A <see langword="Single" /> value that represents the value passed by using the <see langword="Step" /> keyword.</span></span></param>
        <summary><span data-ttu-id="cc2e9-159">检查循环计数器的有效值以及 <see langword="Step" /> 和 <see langword="To" /> 值。</span><span class="sxs-lookup"><span data-stu-id="cc2e9-159">Checks for valid values for the loop counter, <see langword="Step" />, and <see langword="To" /> values.</span></span></summary>
        <returns><span data-ttu-id="cc2e9-160">如果 <paramref name="StepValue" /> 大于零且 <paramref name="count" /> 小于或等于 <paramref name="limit" />，或者 <paramref name="StepValue" /> 小于或等于零且 <paramref name="count" /> 大于或等于 <paramref name="limit" />，则为 <see langword="True" />；否则为 <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="cc2e9-160"><see langword="True" /> if <paramref name="StepValue" /> is greater than zero and <paramref name="count" /> is less than or equal to <paramref name="limit" />, or if <paramref name="StepValue" /> is less than or equal to zero and <paramref name="count" /> is greater than or equal to <paramref name="limit" />; otherwise, <see langword="False" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc2e9-161">此类支持 Visual Basic 编译器，不应在代码中直接使用。</span><span class="sxs-lookup"><span data-stu-id="cc2e9-161">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/for-next-statement.md"><span data-ttu-id="cc2e9-162">For...Next 语句 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="cc2e9-162">For...Next Statement (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ForNextCheckR8">
      <MemberSignature Language="C#" Value="public static bool ForNextCheckR8 (double count, double limit, double StepValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ForNextCheckR8(float64 count, float64 limit, float64 StepValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.FlowControl.ForNextCheckR8(System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ForNextCheckR8 (count As Double, limit As Double, StepValue As Double) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ForNextCheckR8(double count, double limit, double StepValue);" />
      <MemberSignature Language="F#" Value="static member ForNextCheckR8 : double * double * double -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.FlowControl.ForNextCheckR8 (count, limit, StepValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.Double" />
        <Parameter Name="limit" Type="System.Double" />
        <Parameter Name="StepValue" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="count"><span data-ttu-id="cc2e9-163">必需。</span><span class="sxs-lookup"><span data-stu-id="cc2e9-163">Required.</span></span> <span data-ttu-id="cc2e9-164">一个 <see langword="Double" /> 值，表示为循环计数器变量传递的初始值。</span><span class="sxs-lookup"><span data-stu-id="cc2e9-164">A <see langword="Double" /> value that represents the initial value passed for the loop counter variable.</span></span></param>
        <param name="limit"><span data-ttu-id="cc2e9-165">必需。</span><span class="sxs-lookup"><span data-stu-id="cc2e9-165">Required.</span></span> <span data-ttu-id="cc2e9-166">一个 <see langword="Double" /> 值，表示使用 <see langword="To" /> 关键字传递的值。</span><span class="sxs-lookup"><span data-stu-id="cc2e9-166">A <see langword="Double" /> value that represents the value passed by using the <see langword="To" /> keyword.</span></span></param>
        <param name="StepValue"><span data-ttu-id="cc2e9-167">必需。</span><span class="sxs-lookup"><span data-stu-id="cc2e9-167">Required.</span></span> <span data-ttu-id="cc2e9-168">一个 <see langword="Double" /> 值，表示使用 <see langword="Step" /> 关键字传递的值。</span><span class="sxs-lookup"><span data-stu-id="cc2e9-168">A <see langword="Double" /> value that represents the value passed by using the <see langword="Step" /> keyword.</span></span></param>
        <summary><span data-ttu-id="cc2e9-169">检查循环计数器的有效值以及 <see langword="Step" /> 和 <see langword="To" /> 值。</span><span class="sxs-lookup"><span data-stu-id="cc2e9-169">Checks for valid values for the loop counter, <see langword="Step" />, and <see langword="To" /> values.</span></span></summary>
        <returns><span data-ttu-id="cc2e9-170">如果 <paramref name="StepValue" /> 大于零且 <paramref name="count" /> 小于或等于 <paramref name="limit" />，或者 <paramref name="StepValue" /> 小于或等于零且 <paramref name="count" /> 大于或等于 <paramref name="limit" />，则为 <see langword="True" />；否则为 <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="cc2e9-170"><see langword="True" /> if <paramref name="StepValue" /> is greater than zero and <paramref name="count" /> is less than or equal to <paramref name="limit" />, or if <paramref name="StepValue" /> is less than or equal to zero and <paramref name="count" /> is greater than or equal to <paramref name="limit" />; otherwise, <see langword="False" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc2e9-171">此类支持 Visual Basic 编译器，不应在代码中直接使用。</span><span class="sxs-lookup"><span data-stu-id="cc2e9-171">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/for-next-statement.md"><span data-ttu-id="cc2e9-172">For...Next 语句 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="cc2e9-172">For...Next Statement (Visual Basic)</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
