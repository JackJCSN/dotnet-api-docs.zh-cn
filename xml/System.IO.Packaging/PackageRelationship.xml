<Type Name="PackageRelationship" FullName="System.IO.Packaging.PackageRelationship">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6c3802747d6733e8b784df553ec29a854d0272a4" /><Meta Name="ms.sourcegitcommit" Value="59288d18b8fbc142a5d38d416d6fdfb982023216" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="08/28/2019" /><Meta Name="ms.locfileid" Value="70116088" /></Metadata><TypeSignature Language="C#" Value="public class PackageRelationship" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PackageRelationship extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IO.Packaging.PackageRelationship" />
  <TypeSignature Language="VB.NET" Value="Public Class PackageRelationship" />
  <TypeSignature Language="C++ CLI" Value="public ref class PackageRelationship" />
  <TypeSignature Language="F#" Value="type PackageRelationship = class" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Packaging</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
    <AssemblyVersion>4.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>表示源 <see cref="T:System.IO.Packaging.Package" /> 或 <see cref="T:System.IO.Packaging.PackagePart" /> 与可以为 <see cref="T:System.IO.Packaging.PackagePart" /> 或外部资源的目标对象之间的关联。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 *定义源*或目标<xref:System.IO.Packaging.PackagePart> 或外部资源之间的关联。<xref:System.IO.Packaging.PackagePart> <xref:System.IO.Packaging.Package> <xref:System.IO.Packaging.PackageRelationship>  源对象被视为关系的 "所有者"。  
  
 <xref:System.IO.Packaging.PackageRelationship>类没有公共构造函数, 而是使用两个 Create 方法:  
  
|||  
|-|-|  
|<xref:System.IO.Packaging.Package>.<xref:System.IO.Packaging.Package.CreateRelationship%2A>|创建从包到指定部分或外部资源的 "包级别" 关系。|  
|<xref:System.IO.Packaging.PackagePart>.<xref:System.IO.Packaging.PackagePart.CreateRelationship%2A>|创建 "部分级" 关系-从一个部分到另一个部分或外部资源。|  
  
 源包或部分由<xref:System.IO.Packaging.PackageRelationship.SourceUri%2A>关系的属性标识。  目标部分或外部资源由<xref:System.IO.Packaging.PackageRelationship.TargetUri%2A>关系的属性标识。  
  
 创建或删除关系不会以任何方式影响源对象或目标对象。  
  
 如果删除源对象, 则也将删除该对象拥有的所有关系。  
  
 关系允许在文档中和文档之间导航。  关系还支持文档对象模型服务, 例如在打印时<xref:System.Printing.PrintTicket>将链接到特定的文档元素。  
  
 有关<xref:System.IO.Packaging.PackageRelationship>元素的详细信息, 请参阅*开放打包约定*规范中<https://go.microsoft.com/fwlink/?LinkID=71255>可供下载的1.3 节中的 "关系"。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public string Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageRelationship.Id" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Id As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Id { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Id : string" Usage="System.IO.Packaging.PackageRelationship.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取标识关系的字符串。</summary>
        <value>标识关系的字符串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 对于包或部分拥有的所有关系,属性字符串是唯一的。<xref:System.IO.Packaging.PackageRelationship.Id%2A> <xref:System.IO.Packaging.PackageRelationship.SourceUri%2A>  
  
 在对包的调用中指定。  <xref:System.IO.Packaging.PackageRelationship.Id%2A><xref:System.IO.Packaging.Package.CreateRelationship%2A> 或**PackagePart**。<xref:System.IO.Packaging.PackagePart.CreateRelationship%2A> 创建关系的方法。  创建关系后, 将<xref:System.IO.Packaging.PackageRelationship.Id%2A>无法更改。  
  
 <xref:System.IO.Packaging.PackageRelationship.Id%2A>属性字符串是有效的 XML 标识符。 类型为 xsd: ID, 必须遵循*XML 架构第2部分中规定的命名约定: <xref:System.IO.Packaging.PackageRelationship.Id%2A>数据*类型规范 ( [https://www.w3.org/TR/xmlschema-2/#ID](https://www.w3.org/TR/xmlschema-2/#ID)请参阅)。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" />
        <altmember cref="P:System.IO.Packaging.PackageRelationship.SourceUri" />
        <altmember cref="P:System.IO.Packaging.PackageRelationship.TargetUri" />
      </Docs>
    </Member>
    <Member MemberName="Package">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.Package Package { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Packaging.Package Package" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageRelationship.Package" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Package As Package" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Packaging::Package ^ Package { System::IO::Packaging::Package ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Package : System.IO.Packaging.Package" Usage="System.IO.Packaging.PackageRelationship.Package" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.Package</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取包含此关系的 <see cref="T:System.IO.Packaging.Package" />。</summary>
        <value>包含此关系的包。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 有关<xref:System.IO.Packaging.Package>元素的详细信息, 请参阅中的<https://docs.microsoft.com/previous-versions/windows/hardware/design/dn614032(v=vs.85)#open-packaging-conventions-and-open-xml-markup-compatibility>*开放打包约定*。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RelationshipType">
      <MemberSignature Language="C#" Value="public string RelationshipType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RelationshipType" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageRelationship.RelationshipType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RelationshipType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RelationshipType { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RelationshipType : string" Usage="System.IO.Packaging.PackageRelationship.RelationshipType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取关系的限定类型名称。</summary>
        <value>关系的限定类型名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在对包的调用中指定。  <xref:System.IO.Packaging.PackageRelationship.RelationshipType%2A><xref:System.IO.Packaging.Package.CreateRelationship%2A> 或**PackagePart**。<xref:System.IO.Packaging.PackagePart.CreateRelationship%2A> 创建关系的方法。  创建关系后, 将<xref:System.IO.Packaging.PackageRelationship.RelationshipType%2A>无法更改。  
  
 <xref:System.IO.Packaging.PackageRelationship.RelationshipType%2A>在类似 URI 的语法中定义并标识关系的角色。 例如, `"http://schemas.microsoft.com/xps/2005/06/required-resource"`标识与作为 "required 资源" 的目标部分的关系。  
  
 **包范围关系类型**  
  
|说明|关系类型|  
|-----------------|-----------------------|  
|核心属性|`http://schemas.microsoft.com/package/2006/relationships/metadata/core-properties`|  
|数字签名|`http://schemas.microsoft.com/package/2006/relationships/digital-signature/signature`|  
|数字签名证书|`http://schemas.microsoft.com/package/2006/relationships/digital-signature/certificate`|  
|数字签名源|`http://schemas.microsoft.com/package/2006/relationships/digital-signature/origin`|  
|缩略图|`http://schemas.microsoft.com/package/2006/relationships/metadata/thumbnail`|  
  
 有关包关系类型的详细信息, 请参阅可供下载<https://go.microsoft.com/fwlink/?LinkID=71255>的*开放打包约定*规范的第3章和附录 I。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.Packaging.PackageRelationship.Id" />
      </Docs>
    </Member>
    <Member MemberName="SourceUri">
      <MemberSignature Language="C#" Value="public Uri SourceUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri SourceUri" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageRelationship.SourceUri" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SourceUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ SourceUri { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SourceUri : Uri" Usage="System.IO.Packaging.PackageRelationship.SourceUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取拥有关系的包或部分的 [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]。</summary>
        <value>拥有关系的 <see cref="T:System.IO.Packaging.Package" /> 或 <see cref="T:System.IO.Packaging.PackagePart" /> 的 [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果关系由所有<xref:System.IO.Packaging.Package>, <xref:System.IO.Packaging.PackageRelationship.SourceUri%2A>则返回 URI "/"。  
  
 如果关系由所有<xref:System.IO.Packaging.PackagePart>, <xref:System.IO.Packaging.PackageRelationship.SourceUri%2A>则返回部分的 URI。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.Packaging.PackageRelationship.TargetUri" />
      </Docs>
    </Member>
    <Member MemberName="TargetMode">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.TargetMode TargetMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Packaging.TargetMode TargetMode" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageRelationship.TargetMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetMode As TargetMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Packaging::TargetMode TargetMode { System::IO::Packaging::TargetMode get(); };" />
      <MemberSignature Language="F#" Value="member this.TargetMode : System.IO.Packaging.TargetMode" Usage="System.IO.Packaging.PackageRelationship.TargetMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.TargetMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示关系的目标是否是到 <see cref="F:System.IO.Packaging.TargetMode.Internal" /> 的 <see cref="F:System.IO.Packaging.TargetMode.External" /> 或 <see cref="T:System.IO.Packaging.Package" />。</summary>
        <value>指示 <see cref="P:System.IO.Packaging.PackageRelationship.TargetUri" /> 是否引用到 <see cref="F:System.IO.Packaging.TargetMode.Internal" /> 的资源 <see cref="F:System.IO.Packaging.TargetMode.External" /> 或 <see cref="T:System.IO.Packaging.Package" /> 的枚举值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在对包的调用中指定。  <xref:System.IO.Packaging.PackageRelationship.TargetMode%2A><xref:System.IO.Packaging.Package.CreateRelationship%2A> 或**PackagePart**。<xref:System.IO.Packaging.PackagePart.CreateRelationship%2A> 创建关系的方法。 创建关系后, <xref:System.IO.Packaging.PackageRelationship.TargetMode%2A>无法更改。  
  
 当<xref:System.IO.Packaging.PackageRelationship.TargetMode%2A>为<xref:System.IO.Packaging.TargetMode.Internal>时,<xref:System.IO.Packaging.PackageRelationship.TargetUri%2A>必须是相对引用。  对于包级别关系, 相对于拥有和包含关系的<xref:System.IO.Packaging.PackageRelationship.TargetUri%2A>源包的 pack URI, 解析的相对引用。  (示例源包包 URI: "pack://http:,,, datapak, files,/"。)对于部件级关系, <xref:System.IO.Packaging.PackageRelationship.TargetUri%2A>相对于拥有关系的源部分解析 (<xref:System.IO.Packaging.PackageRelationship.TargetUri%2A>相对<xref:System.IO.Packaging.PackageRelationship.SourceUri%2A>于)。  
  
 当<xref:System.IO.Packaging.PackageRelationship.TargetMode%2A>为<xref:System.IO.Packaging.TargetMode.External>时,<xref:System.IO.Packaging.PackageRelationship.TargetUri%2A>可以是相对引用或完全限定 URI。  如果是相对引用, 则引用将被解释为相对于包含此关系的的<xref:System.IO.Packaging.Package>位置。 <xref:System.IO.Packaging.PackageRelationship.TargetUri%2A>  
  
 有关详细信息<xref:System.IO.Packaging.PackageRelationship.TargetMode%2A> , 请参阅<https://go.microsoft.com/fwlink/?LinkID=71255>可供下载的*开放打包约定*规范的 "关系标记" 部分1.3.3。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.Packaging.PackageRelationship.TargetUri" />
        <altmember cref="P:System.IO.Packaging.PackageRelationship.SourceUri" />
      </Docs>
    </Member>
    <Member MemberName="TargetUri">
      <MemberSignature Language="C#" Value="public Uri TargetUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri TargetUri" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageRelationship.TargetUri" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ TargetUri { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TargetUri : Uri" Usage="System.IO.Packaging.PackageRelationship.TargetUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取关系的目标资源的 [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]。</summary>
        <value>目标资源的 [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在对包的调用中指定。  <xref:System.IO.Packaging.PackageRelationship.TargetUri%2A><xref:System.IO.Packaging.Package.CreateRelationship%2A> 或**PackagePart**。<xref:System.IO.Packaging.PackagePart.CreateRelationship%2A> 创建关系的方法。 创建关系后, <xref:System.IO.Packaging.PackageRelationship.TargetUri%2A>无法更改。  
  
 当<xref:System.IO.Packaging.PackageRelationship.TargetMode%2A>为<xref:System.IO.Packaging.TargetMode.Internal>时,<xref:System.IO.Packaging.PackageRelationship.TargetUri%2A>必须是相对引用。  对于包级别关系, 相对于拥有和包含关系的<xref:System.IO.Packaging.PackageRelationship.TargetUri%2A>源包的 pack URI, 解析的相对引用。  (示例源包包 URI: "pack://http:,,, datapak, files,/"。)对于部件级关系, <xref:System.IO.Packaging.PackageRelationship.TargetUri%2A>相对于拥有关系的源部分解析 (<xref:System.IO.Packaging.PackageRelationship.TargetUri%2A>相对<xref:System.IO.Packaging.PackageRelationship.SourceUri%2A>于)。  
  
 当<xref:System.IO.Packaging.PackageRelationship.TargetMode%2A>为<xref:System.IO.Packaging.TargetMode.External>时,<xref:System.IO.Packaging.PackageRelationship.TargetUri%2A>可以是相对引用或完全限定 URI。  如果是相对引用, 则引用将被解释为相对于包含此关系的的<xref:System.IO.Packaging.Package>位置。 <xref:System.IO.Packaging.PackageRelationship.TargetUri%2A>  
  
 有关详细信息<xref:System.IO.Packaging.PackageRelationship.TargetUri%2A> , 请参阅<https://go.microsoft.com/fwlink/?LinkID=71255>可供下载的*开放打包约定*规范的 "关系标记" 部分1.3.3。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.Packaging.PackageRelationship.SourceUri" />
        <altmember cref="P:System.IO.Packaging.PackageRelationship.TargetMode" />
      </Docs>
    </Member>
  </Members>
</Type>
