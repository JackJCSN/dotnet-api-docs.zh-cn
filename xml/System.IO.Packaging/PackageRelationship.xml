<Type Name="PackageRelationship" FullName="System.IO.Packaging.PackageRelationship">
  <Metadata><Meta Name="ms.openlocfilehash" Value="98248d6cc49764310740d64be030b1010edca69a" /><Meta Name="ms.sourcegitcommit" Value="d273738f2e9a7125fddf20a2da56406d86290ce9" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/10/2019" /><Meta Name="ms.locfileid" Value="67724781" /></Metadata><TypeSignature Language="C#" Value="public class PackageRelationship" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PackageRelationship extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IO.Packaging.PackageRelationship" />
  <TypeSignature Language="VB.NET" Value="Public Class PackageRelationship" />
  <TypeSignature Language="C++ CLI" Value="public ref class PackageRelationship" />
  <TypeSignature Language="F#" Value="type PackageRelationship = class" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Packaging</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
    <AssemblyVersion>4.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Represents an association between a source <see cref="T:System.IO.Packaging.Package" /> or <see cref="T:System.IO.Packaging.PackagePart" />, and a target object which can be a <see cref="T:System.IO.Packaging.PackagePart" /> or external resource.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 一个<xref:System.IO.Packaging.PackageRelationship>定义之间的关联*源*<xref:System.IO.Packaging.Package>或<xref:System.IO.Packaging.PackagePart>到*目标*<xref:System.IO.Packaging.PackagePart>或外部资源。  源对象被当作关系的"所有者"。  
  
 <xref:System.IO.Packaging.PackageRelationship>类没有公共构造函数; 相反，使用两种创建方法：  
  
|||  
|-|-|  
|<xref:System.IO.Packaging.Package>.<xref:System.IO.Packaging.Package.CreateRelationship%2A>|创建的"包级别"关系的从指定的部件或外部资源包。|  
|<xref:System.IO.Packaging.PackagePart>.<xref:System.IO.Packaging.PackagePart.CreateRelationship%2A>|创建"部分级"关系-从一部分到另一个部件或外部资源。|  
  
 源数据包或部件由<xref:System.IO.Packaging.PackageRelationship.SourceUri%2A>关系的属性。  目标部件或外部资源由<xref:System.IO.Packaging.PackageRelationship.TargetUri%2A>关系的属性。  
  
 创建或删除的关系不会影响任何方式中的源或目标对象。  
  
 如果删除源对象，则也将删除对象拥有的所有关系。  
  
 关系使在文档中，在文档之间导航。  关系还支持文档对象模型服务，如链接<xref:System.Printing.PrintTicket>打印时的特定文档元素。  
  
 有关详细信息<xref:System.IO.Packaging.PackageRelationship>元素中，请参见"关系"1.3 节*开放打包约定*规范可在下载<https://go.microsoft.com/fwlink/?LinkID=71255>。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public string Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageRelationship.Id" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Id As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Id { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Id : string" Usage="System.IO.Packaging.PackageRelationship.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a string that identifies the relationship.</summary>
        <value>一个字符串，标识关系。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Packaging.PackageRelationship.Id%2A>属性字符串是唯一拥有的所有关系的<xref:System.IO.Packaging.PackageRelationship.SourceUri%2A>数据包或部件。  
  
 <xref:System.IO.Packaging.PackageRelationship.Id%2A>调用中指定**包**。<xref:System.IO.Packaging.Package.CreateRelationship%2A> 或**PackagePart**。<xref:System.IO.Packaging.PackagePart.CreateRelationship%2A> 创建关系的方法。  创建关系后，<xref:System.IO.Packaging.PackageRelationship.Id%2A>不能更改。  
  
 <xref:System.IO.Packaging.PackageRelationship.Id%2A>属性字符串是有效的 XML 标识符。 <xref:System.IO.Packaging.PackageRelationship.Id%2A>类型是 xsd:ID，而且必须遵循中所规定的命名约定*XML 架构第 2 部分：数据类型*规范 (请参阅[ https://www.w3.org/TR/xmlschema-2/#ID ](https://www.w3.org/TR/xmlschema-2/#ID))。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" />
        <altmember cref="P:System.IO.Packaging.PackageRelationship.SourceUri" />
        <altmember cref="P:System.IO.Packaging.PackageRelationship.TargetUri" />
      </Docs>
    </Member>
    <Member MemberName="Package">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.Package Package { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Packaging.Package Package" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageRelationship.Package" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Package As Package" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Packaging::Package ^ Package { System::IO::Packaging::Package ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Package : System.IO.Packaging.Package" Usage="System.IO.Packaging.PackageRelationship.Package" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.Package</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.IO.Packaging.Package" /> that contains this relationship.</summary>
        <value>包含此关系的包。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 有关详细信息<xref:System.IO.Packaging.Package>元素，请参见*开放打包约定*在<https://docs.microsoft.com/en-us/previous-versions/windows/hardware/design/dn614032(v=vs.85)#open-packaging-conventions-and-open-xml-markup-compatibility>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RelationshipType">
      <MemberSignature Language="C#" Value="public string RelationshipType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RelationshipType" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageRelationship.RelationshipType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RelationshipType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RelationshipType { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RelationshipType : string" Usage="System.IO.Packaging.PackageRelationship.RelationshipType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the qualified type name of the relationship.</summary>
        <value>关系的限定的类型名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Packaging.PackageRelationship.RelationshipType%2A>调用中指定**包**。<xref:System.IO.Packaging.Package.CreateRelationship%2A> 或**PackagePart**。<xref:System.IO.Packaging.PackagePart.CreateRelationship%2A> 创建关系的方法。  创建关系后，<xref:System.IO.Packaging.PackageRelationship.RelationshipType%2A>不能更改。  
  
 <xref:System.IO.Packaging.PackageRelationship.RelationshipType%2A> 在类似于 URI 的语法中定义并标识关系的角色。 例如，`"http://schemas.microsoft.com/xps/2005/06/required-resource"`标识与"所需的资源。"的目标部件之间的关系  
  
 **包级关系类型**  
  
|描述|关系类型|  
|-----------------|-----------------------|  
|核心属性|`http://schemas.microsoft.com/package/2006/relationships/metadata/core-properties`|  
|数字签名|`http://schemas.microsoft.com/package/2006/relationships/digital-signature/signature`|  
|数字签名证书|`http://schemas.microsoft.com/package/2006/relationships/digital-signature/certificate`|  
|数字签名源|`http://schemas.microsoft.com/package/2006/relationships/digital-signature/origin`|  
|缩略图|`http://schemas.microsoft.com/package/2006/relationships/metadata/thumbnail`|  
  
 有关包关系有关的详细信息类型请参阅第 3 章和附录 I*开放打包约定*规范可在下载<https://go.microsoft.com/fwlink/?LinkID=71255>。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.Packaging.PackageRelationship.Id" />
      </Docs>
    </Member>
    <Member MemberName="SourceUri">
      <MemberSignature Language="C#" Value="public Uri SourceUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri SourceUri" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageRelationship.SourceUri" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SourceUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ SourceUri { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SourceUri : Uri" Usage="System.IO.Packaging.PackageRelationship.SourceUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] of the package or part that owns the relationship.</summary>
        <value>[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]的<see cref="T:System.IO.Packaging.Package" />或<see cref="T:System.IO.Packaging.PackagePart" />拥有关系。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果关系归<xref:System.IO.Packaging.Package>，<xref:System.IO.Packaging.PackageRelationship.SourceUri%2A>返回的 URI"/"。  
  
 如果关系归<xref:System.IO.Packaging.PackagePart>，<xref:System.IO.Packaging.PackageRelationship.SourceUri%2A>返回部件的 URI。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.Packaging.PackageRelationship.TargetUri" />
      </Docs>
    </Member>
    <Member MemberName="TargetMode">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.TargetMode TargetMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Packaging.TargetMode TargetMode" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageRelationship.TargetMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetMode As TargetMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Packaging::TargetMode TargetMode { System::IO::Packaging::TargetMode get(); };" />
      <MemberSignature Language="F#" Value="member this.TargetMode : System.IO.Packaging.TargetMode" Usage="System.IO.Packaging.PackageRelationship.TargetMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.TargetMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether the target of the relationship is <see cref="F:System.IO.Packaging.TargetMode.Internal" /> or <see cref="F:System.IO.Packaging.TargetMode.External" /> to the <see cref="T:System.IO.Packaging.Package" />.</summary>
        <value>一个枚举值，它指示 <see cref="P:System.IO.Packaging.PackageRelationship.TargetUri" /> 是否引用指向 <see cref="T:System.IO.Packaging.Package" /> 的 <see cref="F:System.IO.Packaging.TargetMode.Internal" /> 或 <see cref="F:System.IO.Packaging.TargetMode.External" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Packaging.PackageRelationship.TargetMode%2A>调用中指定**包**。<xref:System.IO.Packaging.Package.CreateRelationship%2A> 或**PackagePart**。<xref:System.IO.Packaging.PackagePart.CreateRelationship%2A> 创建关系的方法。 创建关系后<xref:System.IO.Packaging.PackageRelationship.TargetMode%2A>不能更改。  
  
 当<xref:System.IO.Packaging.PackageRelationship.TargetMode%2A>是<xref:System.IO.Packaging.TargetMode.Internal>，则<xref:System.IO.Packaging.PackageRelationship.TargetUri%2A>必须是相对引用。  为包级别关系的相对引用<xref:System.IO.Packaging.PackageRelationship.TargetUri%2A>解析为相对于拥有和包含关系的源包的包 URI。  (示例源包包 URI:"pack://http:、 www.adatum.com、 files,datapak.package/"。)对于部件级关系，可<xref:System.IO.Packaging.PackageRelationship.TargetUri%2A>解析相对于拥有关系的源部件 (<xref:System.IO.Packaging.PackageRelationship.TargetUri%2A>解释相对于<xref:System.IO.Packaging.PackageRelationship.SourceUri%2A>)。  
  
 当<xref:System.IO.Packaging.PackageRelationship.TargetMode%2A>是<xref:System.IO.Packaging.TargetMode.External>，则<xref:System.IO.Packaging.PackageRelationship.TargetUri%2A>可以是相对引用或完全限定的 URI。  如果<xref:System.IO.Packaging.PackageRelationship.TargetUri%2A>是相对引用，该引用解释为相对于的位置<xref:System.IO.Packaging.Package>，其中包含此关系。  
  
 有关详细信息<xref:System.IO.Packaging.PackageRelationship.TargetMode%2A>的"关系标记"看到部分 1.3.3*开放打包约定*规范可在下载<https://go.microsoft.com/fwlink/?LinkID=71255>。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.Packaging.PackageRelationship.TargetUri" />
        <altmember cref="P:System.IO.Packaging.PackageRelationship.SourceUri" />
      </Docs>
    </Member>
    <Member MemberName="TargetUri">
      <MemberSignature Language="C#" Value="public Uri TargetUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri TargetUri" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageRelationship.TargetUri" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ TargetUri { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TargetUri : Uri" Usage="System.IO.Packaging.PackageRelationship.TargetUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] of the target resource of the relationship.</summary>
        <value>目标资源的 [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Packaging.PackageRelationship.TargetUri%2A>调用中指定**包**。<xref:System.IO.Packaging.Package.CreateRelationship%2A> 或**PackagePart**。<xref:System.IO.Packaging.PackagePart.CreateRelationship%2A> 创建关系的方法。 创建关系后<xref:System.IO.Packaging.PackageRelationship.TargetUri%2A>不能更改。  
  
 当<xref:System.IO.Packaging.PackageRelationship.TargetMode%2A>是<xref:System.IO.Packaging.TargetMode.Internal>，则<xref:System.IO.Packaging.PackageRelationship.TargetUri%2A>必须是相对引用。  为包级别关系的相对引用<xref:System.IO.Packaging.PackageRelationship.TargetUri%2A>解析为相对于拥有和包含关系的源包的包 URI。  (示例源包包 URI:"pack://http:、 www.adatum.com、 files,datapak.package/"。)对于部件级关系，可<xref:System.IO.Packaging.PackageRelationship.TargetUri%2A>解析相对于拥有关系的源部件 (<xref:System.IO.Packaging.PackageRelationship.TargetUri%2A>解释相对于<xref:System.IO.Packaging.PackageRelationship.SourceUri%2A>)。  
  
 当<xref:System.IO.Packaging.PackageRelationship.TargetMode%2A>是<xref:System.IO.Packaging.TargetMode.External>，则<xref:System.IO.Packaging.PackageRelationship.TargetUri%2A>可以是相对引用或完全限定的 URI。  如果<xref:System.IO.Packaging.PackageRelationship.TargetUri%2A>是相对引用，该引用解释为相对于的位置<xref:System.IO.Packaging.Package>，其中包含此关系。  
  
 有关详细信息<xref:System.IO.Packaging.PackageRelationship.TargetUri%2A>的"关系标记"看到部分 1.3.3*开放打包约定*规范可在下载<https://go.microsoft.com/fwlink/?LinkID=71255>。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.Packaging.PackageRelationship.SourceUri" />
        <altmember cref="P:System.IO.Packaging.PackageRelationship.TargetMode" />
      </Docs>
    </Member>
  </Members>
</Type>
