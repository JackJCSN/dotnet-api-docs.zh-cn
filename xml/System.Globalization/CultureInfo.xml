<Type Name="CultureInfo" FullName="System.Globalization.CultureInfo">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3a08fa7376e5eece102261e6c6e2759776b96508" /><Meta Name="ms.sourcegitcommit" Value="bc24a3ba616ee1df8b858f9400cae4f058ea3a7e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="06/19/2019" /><Meta Name="ms.locfileid" Value="67244341" /></Metadata><TypeSignature Language="C#" Value="public class CultureInfo : ICloneable, IFormatProvider" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable beforefieldinit CultureInfo extends System.Object implements class System.ICloneable, class System.IFormatProvider" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.CultureInfo" />
  <TypeSignature Language="VB.NET" Value="Public Class CultureInfo&#xA;Implements ICloneable, IFormatProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class CultureInfo : ICloneable, IFormatProvider" />
  <TypeSignature Language="F#" Value="type CultureInfo = class&#xA;    interface ICloneable&#xA;    interface IFormatProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormatProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="36b46-101">提供有关特定区域性（对于非托管代码开发，则称为“区域设置”）的信息。</span><span class="sxs-lookup"><span data-stu-id="36b46-101">Provides information about a specific culture (called a *locale* for unmanaged code development).</span></span> <span data-ttu-id="36b46-102">这些信息包括区域性的名称、书写系统、使用的日历、字符串的排序顺序以及对日期和数字的格式化设置。</span><span class="sxs-lookup"><span data-stu-id="36b46-102">The information includes the names for the culture, the writing system, the calendar used, the sort order of strings, and formatting for dates and numbers.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36b46-103"><xref:System.Globalization.CultureInfo>类提供特定于区域性的信息，如语言、 子语言、 国家/地区、 日历和与特定区域性关联的约定。</span><span class="sxs-lookup"><span data-stu-id="36b46-103">The <xref:System.Globalization.CultureInfo> class provides culture-specific information, such as the language, sublanguage, country/region, calendar, and conventions associated with a particular culture.</span></span> <span data-ttu-id="36b46-104">此类还提供对特定于区域性的实例的访问<xref:System.Globalization.DateTimeFormatInfo>， <xref:System.Globalization.NumberFormatInfo>， <xref:System.Globalization.CompareInfo>，和<xref:System.Globalization.TextInfo>对象。</span><span class="sxs-lookup"><span data-stu-id="36b46-104">This class also provides access to culture-specific instances of the <xref:System.Globalization.DateTimeFormatInfo>, <xref:System.Globalization.NumberFormatInfo>, <xref:System.Globalization.CompareInfo>, and <xref:System.Globalization.TextInfo> objects.</span></span> <span data-ttu-id="36b46-105">这些对象包含特定于区域性的操作，如大小写、 格式化日期和数字，并比较字符串所需的信息。</span><span class="sxs-lookup"><span data-stu-id="36b46-105">These objects contain the information required for culture-specific operations, such as casing, formatting dates and numbers, and comparing strings.</span></span> <span data-ttu-id="36b46-106"><xref:System.Globalization.CultureInfo>类由直接或间接类设置的格式、 分析，或处理特定于区域性的数据，如<xref:System.String>， <xref:System.DateTime>， <xref:System.DateTimeOffset>，与数值类型。</span><span class="sxs-lookup"><span data-stu-id="36b46-106">The <xref:System.Globalization.CultureInfo> class is used either directly or indirectly by classes that format, parse, or manipulate culture-specific data, such as <xref:System.String>, <xref:System.DateTime>, <xref:System.DateTimeOffset>, and the numeric types.</span></span>  
  
 <span data-ttu-id="36b46-107">本节内容：</span><span class="sxs-lookup"><span data-stu-id="36b46-107">In this section:</span></span>  
  
 <span data-ttu-id="36b46-108">[区域性名称和标识符](#CultureNames) </span><span class="sxs-lookup"><span data-stu-id="36b46-108">[Culture names and identifiers](#CultureNames) </span></span>  
 <span data-ttu-id="36b46-109">[不变、 中立和特定区域性](#Invariant) </span><span class="sxs-lookup"><span data-stu-id="36b46-109">[Invariant, neutral, and specific cultures](#Invariant) </span></span>  
 <span data-ttu-id="36b46-110">[自定义区域性](#Custom) </span><span class="sxs-lookup"><span data-stu-id="36b46-110">[Custom cultures](#Custom) </span></span>  
 <span data-ttu-id="36b46-111">[动态区域性数据](#Dynamic) </span><span class="sxs-lookup"><span data-stu-id="36b46-111">[Dynamic culture data](#Dynamic) </span></span>  
 <span data-ttu-id="36b46-112">[CultureInfo 和文化的数据](#cultureinfo-and-cultural-data)[当前区域性和当前 UI 区域性](#Current) </span><span class="sxs-lookup"><span data-stu-id="36b46-112">[CultureInfo and cultural data](#cultureinfo-and-cultural-data) [The current culture and current UI culture](#Current) </span></span>  
 <span data-ttu-id="36b46-113">[获取所有区域性](#GetAll) </span><span class="sxs-lookup"><span data-stu-id="36b46-113">[Getting all cultures](#GetAll) </span></span>  
 <span data-ttu-id="36b46-114">[区域性和线程](#Threads) </span><span class="sxs-lookup"><span data-stu-id="36b46-114">[Culture and threads](#Threads) </span></span>  
 <span data-ttu-id="36b46-115">[区域性和应用程序域](#AppDomain) </span><span class="sxs-lookup"><span data-stu-id="36b46-115">[Culture and application domains](#AppDomain) </span></span>  
 <span data-ttu-id="36b46-116">[区域性和基于任务的异步操作](#Async) </span><span class="sxs-lookup"><span data-stu-id="36b46-116">[Culture and task-based asynchronous operations](#Async) </span></span>  
 <span data-ttu-id="36b46-117">[CultureInfo 对象序列化](#Serialization) </span><span class="sxs-lookup"><span data-stu-id="36b46-117">[CultureInfo object serialization](#Serialization) </span></span>  
 <span data-ttu-id="36b46-118">[控件面板重写](#CPanel) </span><span class="sxs-lookup"><span data-stu-id="36b46-118">[Control Panel overrides](#CPanel) </span></span>  
 <span data-ttu-id="36b46-119">[替代排序顺序](#AlternateSort) </span><span class="sxs-lookup"><span data-stu-id="36b46-119">[Alternate sort orders](#AlternateSort) </span></span>  
 [<span data-ttu-id="36b46-120">区域性和 Windows 应用</span><span class="sxs-lookup"><span data-stu-id="36b46-120">Culture and Windows apps</span></span>](#Windows)  

<a name="CultureNames"></a>   
## <a name="culture-names-and-identifiers"></a><span data-ttu-id="36b46-121">区域性名称和标识符</span><span class="sxs-lookup"><span data-stu-id="36b46-121">Culture names and identifiers</span></span>  
 <span data-ttu-id="36b46-122"><xref:System.Globalization.CultureInfo>类指定为每个区域性，基于 RFC 4646 的唯一名称。</span><span class="sxs-lookup"><span data-stu-id="36b46-122">The <xref:System.Globalization.CultureInfo> class specifies a unique name for each culture, based on RFC 4646.</span></span> <span data-ttu-id="36b46-123">名称是与语言相关的 ISO 639 双小写字母的区域性代码和与国家或地区相关的 ISO 3166 双字母的大写字母子区域性代码的组合。</span><span class="sxs-lookup"><span data-stu-id="36b46-123">The name is a combination of an ISO 639 two-letter lowercase culture code associated with a language and an ISO 3166 two-letter uppercase subculture code associated with a country or region.</span></span> <span data-ttu-id="36b46-124">此外，对于面向应用[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]或更高版本并在 Windows 10 或更高版本，对应于有效的 BCP-47 语言标记受支持的区域性名称运行。</span><span class="sxs-lookup"><span data-stu-id="36b46-124">In addition, for apps that target [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] or later and are running under Windows 10 or later, culture names that correspond to valid BCP-47 language tags are supported.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="36b46-125">当区域性名称传递给类构造函数或方法诸如<xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A>或<xref:System.Globalization.CultureInfo>，其大小写并不重要。</span><span class="sxs-lookup"><span data-stu-id="36b46-125">When a culture name is passed to a class constructor or a method such as <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A> or <xref:System.Globalization.CultureInfo>, its case is not significant.</span></span>  
  
 <span data-ttu-id="36b46-126">根据 RFC 4646 的区域性名称的格式是*languagecode2*>-*country/regioncode2*，其中*languagecode2*是两个字母的语言代码并*country/regioncode2*是两个字母子区域性代码。</span><span class="sxs-lookup"><span data-stu-id="36b46-126">The format for the culture name based on RFC 4646 is *languagecode2*>-*country/regioncode2*, where *languagecode2* is the two-letter language code and *country/regioncode2* is the two-letter subculture code.</span></span> <span data-ttu-id="36b46-127">示例包括 JA-JP 日语 （日本） 和美国英语 （美国）。</span><span class="sxs-lookup"><span data-stu-id="36b46-127">Examples include ja-JP for Japanese (Japan) and en-US for English (United States).</span></span> <span data-ttu-id="36b46-128">在两个字母的语言代码不可用的情况下，使用派生自 ISO 639-2 的三个字母代码。</span><span class="sxs-lookup"><span data-stu-id="36b46-128">In cases where a two-letter language code is not available, a three-letter code derived from ISO 639-2 is used.</span></span>  
  
 <span data-ttu-id="36b46-129">请注意，某些区域性名称还指定 ISO 15924 书写符号。</span><span class="sxs-lookup"><span data-stu-id="36b46-129">Note that some culture names also specify an ISO 15924 script.</span></span> <span data-ttu-id="36b46-130">例如，符号指定西里尔语脚本和 Latn 指定拉丁语脚本。</span><span class="sxs-lookup"><span data-stu-id="36b46-130">For example, Cyrl specifies the Cyrillic script and Latn specifies the Latin script.</span></span> <span data-ttu-id="36b46-131">包含的脚本的区域性名称使用模式*languagecode2*-*scripttag*-*country/regioncode2*。</span><span class="sxs-lookup"><span data-stu-id="36b46-131">A culture name that includes a script uses the pattern *languagecode2*-*scripttag*-*country/regioncode2*.</span></span> <span data-ttu-id="36b46-132">这种类型的区域性名称的一个示例是 uz 符号-UZ 为乌兹别克语 （西里尔文，乌兹别克斯坦）。</span><span class="sxs-lookup"><span data-stu-id="36b46-132">An example of this type of culture name is uz-Cyrl-UZ for Uzbek (Cyrillic, Uzbekistan).</span></span> <span data-ttu-id="36b46-133">在 Windows Vista 之前的 Windows 操作系统，包括脚本的区域性名称使用模式*languagecode2*-*country/regioncode2* - *scripttag*，例如，uz UZ-符号的乌兹别克语 （西里尔文，乌兹别克斯坦）。</span><span class="sxs-lookup"><span data-stu-id="36b46-133">On Windows operating systems before Windows Vista, a culture name that includes a script uses the pattern *languagecode2*-*country/regioncode2*-*scripttag*, for example, uz-UZ-Cyrl for Uzbek (Cyrillic, Uzbekistan).</span></span>  
  
 <span data-ttu-id="36b46-134">只有两个字母的小写字母语言代码指定一个非特定区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-134">A neutral culture is specified by only the two-letter lowercase language code.</span></span> <span data-ttu-id="36b46-135">例如，fr 为法语，指定的非特定区域性，de 代表德语指定非特定区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-135">For example, fr specifies the neutral culture for French, and de specifies the neutral culture for German.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="36b46-136">有两个区域性名称不符合此规则。</span><span class="sxs-lookup"><span data-stu-id="36b46-136">There are two culture names that contradict this rule.</span></span> <span data-ttu-id="36b46-137">区域性中文 （简体）-Zh-hans，名为和中文 （繁体），名为 Zh-hant，是非特定区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-137">The cultures Chinese (Simplified), named zh-Hans, and Chinese (Traditional), named zh-Hant, are neutral cultures.</span></span> <span data-ttu-id="36b46-138">区域性名称表示当前的标准，并且应使用，除非使用旧名称 ZH-CHS 和 ZH-CHT 的理由需要。</span><span class="sxs-lookup"><span data-stu-id="36b46-138">The culture names represent the current standard and should be used unless you have a reason for using the older names zh-CHS and zh-CHT.</span></span>  
  
 <span data-ttu-id="36b46-139">区域性标识符是标准的国际号码缩写，具有唯一标识的已安装的区域性之一的所需的组件。</span><span class="sxs-lookup"><span data-stu-id="36b46-139">A culture identifier is a standard international numeric abbreviation and has the components necessary to uniquely identify one of the installed cultures.</span></span> <span data-ttu-id="36b46-140">你的应用程序可以使用预定义的区域性标识符，或定义自定义的标识符。</span><span class="sxs-lookup"><span data-stu-id="36b46-140">Your application can use predefined culture identifiers or define custom identifiers.</span></span>  
  
 <span data-ttu-id="36b46-141">某些预定义的区域性名称和标识符使用的此类和中的其他类<xref:System.Globalization?displayProperty=nameWithType>命名空间。</span><span class="sxs-lookup"><span data-stu-id="36b46-141">Certain predefined culture names and identifiers are used by this and other classes in the <xref:System.Globalization?displayProperty=nameWithType> namespace.</span></span> <span data-ttu-id="36b46-142">Windows 系统的详细的区域性信息，请参阅**语言标记**中的列[支持的 Windows 的语言/区域名称的列表](https://docs.microsoft.com/openspecs/windows_protocols/ms-lcid/a9eac961-e77d-41a6-90a5-ce1a8b0cdb9c)。</span><span class="sxs-lookup"><span data-stu-id="36b46-142">For detailed culture information for Windows systems, see the **Language tag** column in the [list of language/region names supported by Windows](https://docs.microsoft.com/openspecs/windows_protocols/ms-lcid/a9eac961-e77d-41a6-90a5-ce1a8b0cdb9c).</span></span> <span data-ttu-id="36b46-143">区域性名称遵循由定义的标准[BCP 47](https://tools.ietf.org/html/bcp47)。</span><span class="sxs-lookup"><span data-stu-id="36b46-143">Culture names follow the standard defined by [BCP 47](https://tools.ietf.org/html/bcp47).</span></span>  
  
 <span data-ttu-id="36b46-144">请记住的区域性名称和标识符表示可在特定计算机找到的区域性的一个子集。</span><span class="sxs-lookup"><span data-stu-id="36b46-144">Remember that the culture names and identifiers represent only a subset of cultures that can be found on a particular computer.</span></span> <span data-ttu-id="36b46-145">Windows 版本或 service pack 可以更改的可用区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-145">Windows versions or service packs can change the available cultures.</span></span> <span data-ttu-id="36b46-146">应用程序添加自定义区域性使用<xref:System.Globalization.CultureAndRegionInfoBuilder>类。</span><span class="sxs-lookup"><span data-stu-id="36b46-146">Applications add custom cultures using the <xref:System.Globalization.CultureAndRegionInfoBuilder> class.</span></span> <span data-ttu-id="36b46-147">用户将添加使用 Microsoft Locale Builder 工具自己自定义区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-147">Users add their own custom cultures using the Microsoft Locale Builder tool.</span></span> <span data-ttu-id="36b46-148">Microsoft Locale Builder 编写在托管的代码中使用`CultureAndRegionInfoBuilder`类。</span><span class="sxs-lookup"><span data-stu-id="36b46-148">Microsoft Locale Builder is written in managed code using the `CultureAndRegionInfoBuilder` class.</span></span>  
  
 <span data-ttu-id="36b46-149">多个不同的名称是一种文化，值得注意的是与以下的类成员关联的名称与紧密关联：</span><span class="sxs-lookup"><span data-stu-id="36b46-149">Several distinct names are closely associated with a culture, notably the names associated with the following class members:</span></span>  
  
-   <xref:System.Globalization.CultureInfo.ToString%2A?displayProperty=nameWithType>  
  
-   <xref:System.Globalization.CultureInfo.Name%2A?displayProperty=nameWithType>  
  
-   <xref:System.Globalization.CompareInfo.Name%2A?displayProperty=nameWithType>  
  
<a name="Invariant"></a>   
## <a name="invariant-neutral-and-specific-cultures"></a><span data-ttu-id="36b46-150">不变、 中立和特定区域性</span><span class="sxs-lookup"><span data-stu-id="36b46-150">Invariant, neutral, and specific cultures</span></span>  
 <span data-ttu-id="36b46-151">区域性通常分为三个集合： 固定区域性、 非特定区域性和特定区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-151">The cultures are generally grouped into three sets: invariant cultures, neutral cultures, and specific cultures.</span></span>  
  
 <span data-ttu-id="36b46-152">固定区域性是不区分区域性的。</span><span class="sxs-lookup"><span data-stu-id="36b46-152">An invariant culture is culture-insensitive.</span></span> <span data-ttu-id="36b46-153">你的应用程序指定固定区域性的名称使用空字符串 ("") 或由其标识符。</span><span class="sxs-lookup"><span data-stu-id="36b46-153">Your application specifies the invariant culture by name using an empty string ("") or by its identifier.</span></span> <span data-ttu-id="36b46-154"><xref:System.Globalization.CultureInfo.InvariantCulture%2A> 定义固定区域性的实例。</span><span class="sxs-lookup"><span data-stu-id="36b46-154"><xref:System.Globalization.CultureInfo.InvariantCulture%2A> defines an instance of the invariant culture.</span></span> <span data-ttu-id="36b46-155">它是关联与英语语言，但不能与任何国家/地区。</span><span class="sxs-lookup"><span data-stu-id="36b46-155">It is associated with the English language but not with any country/region.</span></span> <span data-ttu-id="36b46-156">几乎所有方法中使用`Globalization`要求区域性的命名空间。</span><span class="sxs-lookup"><span data-stu-id="36b46-156">It is used in almost any method in the `Globalization` namespace that requires a culture.</span></span>  
  
 <span data-ttu-id="36b46-157">非特定区域性是关联的区域性与一种语言，但不能与国家/地区。</span><span class="sxs-lookup"><span data-stu-id="36b46-157">A neutral culture is a culture that is associated with a language but not with a country/region.</span></span> <span data-ttu-id="36b46-158">特定区域性是一个区域性与一种语言和国家/地区相关联。</span><span class="sxs-lookup"><span data-stu-id="36b46-158">A specific culture is a culture that is associated with a language and a country/region.</span></span> <span data-ttu-id="36b46-159">例如，fr 是法语区域的非特定语言名称和 FR-FR 是特定的法语 （法国） 区域性的名称。</span><span class="sxs-lookup"><span data-stu-id="36b46-159">For example, fr is the neutral name for the French culture, and fr-FR is the name of the specific French (France) culture.</span></span> <span data-ttu-id="36b46-160">请注意，中文 （简体） 和中文 （繁体） 也被视为非特定区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-160">Note that Chinese (Simplified) and Chinese (Traditional) are also considered neutral cultures.</span></span>  
  
 <span data-ttu-id="36b46-161">创建实例的<xref:System.Globalization.CompareInfo>类不建议一个非特定区域性，因为其包含的数据是任意的。</span><span class="sxs-lookup"><span data-stu-id="36b46-161">Creating an instance of a <xref:System.Globalization.CompareInfo> class for a neutral culture is not recommended because the data it contains is arbitrary.</span></span> <span data-ttu-id="36b46-162">若要显示和对数据进行排序，指定的语言和区域。</span><span class="sxs-lookup"><span data-stu-id="36b46-162">To display and sort data, specify both the language and region.</span></span> <span data-ttu-id="36b46-163">此外，<xref:System.Globalization.CompareInfo.Name%2A>属性的<xref:System.Globalization.CompareInfo>对象创建一个非特定区域性返回仅的国家/地区，并且不包含区域。</span><span class="sxs-lookup"><span data-stu-id="36b46-163">Additionally, the <xref:System.Globalization.CompareInfo.Name%2A> property of a <xref:System.Globalization.CompareInfo> object created for a neutral culture returns only the country and does not include the region.</span></span>  
  
 <span data-ttu-id="36b46-164">定义的区域性具有层次结构中的特定区域性的父级是一个非特定区域性和非特定区域性的父级是固定的区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-164">The defined cultures have a hierarchy in which the parent of a specific culture is a neutral culture and the parent of a neutral culture is the invariant culture.</span></span> <span data-ttu-id="36b46-165"><xref:System.Globalization.CultureInfo.Parent%2A>属性包含与特定区域性关联的非特定区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-165">The <xref:System.Globalization.CultureInfo.Parent%2A> property contains the neutral culture associated with a specific culture.</span></span> <span data-ttu-id="36b46-166">自定义区域性应<xref:System.Globalization.CultureInfo.Parent%2A>为了符合此模式的属性。</span><span class="sxs-lookup"><span data-stu-id="36b46-166">Custom cultures should define the <xref:System.Globalization.CultureInfo.Parent%2A> property in conformance with this pattern.</span></span>  
  
 <span data-ttu-id="36b46-167">如果针对特定区域性资源不可用在操作系统中，将使用关联的非特定区域性的资源。</span><span class="sxs-lookup"><span data-stu-id="36b46-167">If the resources for a specific culture are not available in the operating system, the resources for the associated neutral culture are used.</span></span> <span data-ttu-id="36b46-168">如果非特定区域性资源不可用，则使用嵌入在主程序集中的资源。</span><span class="sxs-lookup"><span data-stu-id="36b46-168">If the resources for the neutral culture are not available, the resources embedded in the main assembly are used.</span></span> <span data-ttu-id="36b46-169">资源回退进程的详细信息，请参阅[打包和部署资源](~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md)。</span><span class="sxs-lookup"><span data-stu-id="36b46-169">For more information on the resource fallback process, see [Packaging and Deploying Resources](~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md).</span></span>  
  
 <span data-ttu-id="36b46-170">Windows API 中的区域设置的列表是略有不同的.NET Framework 支持的区域性列表。</span><span class="sxs-lookup"><span data-stu-id="36b46-170">The list of locales in the Windows API is slightly different from the list of cultures supported by the .NET Framework.</span></span> <span data-ttu-id="36b46-171">如果需要与 Windows 互操作性，例如，通过 p/invoke 机制，应用程序应使用特定区域性定义的操作系统。</span><span class="sxs-lookup"><span data-stu-id="36b46-171">If interoperability with Windows is required, for example, through the p/invoke mechanism, the application should use a specific culture that is defined for the operating system.</span></span> <span data-ttu-id="36b46-172">使用特定区域性可确保与等效的 Windows 区域设置，会使用相同的区域设置标识符来标识的一致性<xref:System.Globalization.CultureInfo.LCID%2A>。</span><span class="sxs-lookup"><span data-stu-id="36b46-172">Use of the specific culture ensures consistency with the equivalent Windows locale, which is identified with a locale identifier that is the same as <xref:System.Globalization.CultureInfo.LCID%2A>.</span></span>  
  
 <span data-ttu-id="36b46-173">一个<xref:System.Globalization.DateTimeFormatInfo>或<xref:System.Globalization.NumberFormatInfo>可以创建仅用于固定区域性或特定区域性，不能为非特定区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-173">A <xref:System.Globalization.DateTimeFormatInfo> or a <xref:System.Globalization.NumberFormatInfo> can be created only for the invariant culture or for specific cultures, not for neutral cultures.</span></span>  
  
 <span data-ttu-id="36b46-174">如果<xref:System.Globalization.DateTimeFormatInfo.Calendar%2A?displayProperty=nameWithType>是<xref:System.Globalization.TaiwanCalendar>但<xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType>未设置为 ZH-TW，然后<xref:System.Globalization.DateTimeFormatInfo.NativeCalendarName%2A?displayProperty=nameWithType>， <xref:System.Globalization.DateTimeFormatInfo.GetEraName%2A?displayProperty=nameWithType>，并<xref:System.Globalization.DateTimeFormatInfo.GetAbbreviatedEraName%2A?displayProperty=nameWithType>返回空字符串 ("")。</span><span class="sxs-lookup"><span data-stu-id="36b46-174">If <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A?displayProperty=nameWithType> is the <xref:System.Globalization.TaiwanCalendar> but the <xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType> is not set to zh-TW, then <xref:System.Globalization.DateTimeFormatInfo.NativeCalendarName%2A?displayProperty=nameWithType>, <xref:System.Globalization.DateTimeFormatInfo.GetEraName%2A?displayProperty=nameWithType>, and <xref:System.Globalization.DateTimeFormatInfo.GetAbbreviatedEraName%2A?displayProperty=nameWithType> return an empty string ("").</span></span>  
  
<a name="Custom"></a>   
## <a name="custom-cultures"></a><span data-ttu-id="36b46-175">自定义区域性</span><span class="sxs-lookup"><span data-stu-id="36b46-175">Custom cultures</span></span>  
 <span data-ttu-id="36b46-176">除了 Windows 操作系统和.NET Framework 支持的预定义区域性，.NET Framework 支持三种类型的自定义区域性：</span><span class="sxs-lookup"><span data-stu-id="36b46-176">In addition to the predefined cultures supported by the Windows operating system and the .NET Framework, the .NET Framework supports three types of custom cultures:</span></span>  
  
-   <span data-ttu-id="36b46-177">新补充 Windows 或.NET Framework 中可用的区域性的区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-177">New cultures that supplement the cultures available in Windows or the .NET Framework.</span></span> <span data-ttu-id="36b46-178">例如，应用程序无法安装<xref:System.Globalization.CultureInfo>表示 FJ-FJ （或 Fijan （斐济）） 区域性的系统上的对象。</span><span class="sxs-lookup"><span data-stu-id="36b46-178">For example, an application could install a <xref:System.Globalization.CultureInfo> object that represents the fj-FJ (or Fijan (Fiji)) culture on a system.</span></span>  
  
-   <span data-ttu-id="36b46-179">其属性是不同于 Windows 和.NET Framework 支持标准区域性的属性的替换区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-179">Replacement cultures whose properties are different from the properties of the standard cultures supported by Windows and the .NET Framework.</span></span>  
  
-   <span data-ttu-id="36b46-180">通过用户重写的标准区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-180">Standard cultures with user overrides.</span></span> <span data-ttu-id="36b46-181">用户可以使用**区域和语言**应用程序中**控制面板**自定义现有区域性的属性值。</span><span class="sxs-lookup"><span data-stu-id="36b46-181">The user can use the **Region and Language** application in **Control Panel** to customize an existing culture's property values.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="36b46-182">可以使用<xref:System.Globalization.CultureAndRegionInfoBuilder>类来定义、 保存和注册自定义区域性的补充或替换现有的区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-182">You can use the <xref:System.Globalization.CultureAndRegionInfoBuilder> class to define, save, and register custom cultures that either supplement or replace existing cultures.</span></span> <span data-ttu-id="36b46-183"><xref:System.Globalization.CultureAndRegionInfoBuilder.Save%2A?displayProperty=nameWithType>方法将创建可用于在目标系统上安装自定义区域性的区域设置数据标记语言 (LDML) 文件。</span><span class="sxs-lookup"><span data-stu-id="36b46-183">The <xref:System.Globalization.CultureAndRegionInfoBuilder.Save%2A?displayProperty=nameWithType> method creates a Locale Data Markup Language (LDML) file that can be used to install a custom culture on target systems.</span></span> <span data-ttu-id="36b46-184">有关分步步骤使用信息<xref:System.Globalization.CultureAndRegionInfoBuilder>要创建一个新类或替换区域性，请参阅<xref:System.Globalization.CultureAndRegionInfoBuilder>类主题。</span><span class="sxs-lookup"><span data-stu-id="36b46-184">For step-by step information on using the <xref:System.Globalization.CultureAndRegionInfoBuilder> class to create a new or replacement culture, see the <xref:System.Globalization.CultureAndRegionInfoBuilder> class topic.</span></span>  
  
 <span data-ttu-id="36b46-185">由于.NET Framework 支持自定义区域性，使用特定于区域性的数据时应考虑以下：</span><span class="sxs-lookup"><span data-stu-id="36b46-185">Because the .NET Framework supports custom cultures, you should consider the following when working with culture-specific data:</span></span>  
  
-   <span data-ttu-id="36b46-186">自定义区域性可以有超过预定义的区域性的范围的值。</span><span class="sxs-lookup"><span data-stu-id="36b46-186">Custom cultures can have values that exceed the ranges of the predefined cultures.</span></span> <span data-ttu-id="36b46-187">例如，某些区域性具有非常长月份名称、 意外的日期或时间格式或其他不常见的数据。</span><span class="sxs-lookup"><span data-stu-id="36b46-187">For example, some cultures have unusually long month names, unexpected date or time formats, or other unusual data.</span></span>  
  
-   <span data-ttu-id="36b46-188">当在用户界面中显示特定于区域性的数据时，应遵守用户的自定义项;例如，用户可能希望采用 24 小时制或 yyyyMMdd 日期格式。</span><span class="sxs-lookup"><span data-stu-id="36b46-188">When you display culture-specific data in the user interface, you should respect the user's customizations; for example, the user might want a 24-hour clock or a yyyyMMdd date format.</span></span>  
  
-   <span data-ttu-id="36b46-189">请记住，自定义区域性重写默认值。</span><span class="sxs-lookup"><span data-stu-id="36b46-189">Remember that custom cultures override default values.</span></span> <span data-ttu-id="36b46-190">因此，不能考虑区域性数据保持不变。</span><span class="sxs-lookup"><span data-stu-id="36b46-190">Therefore, you cannot consider culture data to be stable.</span></span> <span data-ttu-id="36b46-191">在将来可能会更改国家/地区名称、 数字和日期格式和拼写。</span><span class="sxs-lookup"><span data-stu-id="36b46-191">Country names, number and date formats, and spellings may change in the future.</span></span> <span data-ttu-id="36b46-192">如果你想要序列化区分区域性的数据，如要传递到的日期和时间分析函数的日期和时间字符串，应使用固定区域性或特定。</span><span class="sxs-lookup"><span data-stu-id="36b46-192">If you want to serialize culture-sensitive data such as date and time strings to be passed to the date and time parsing functions, you should use the invariant culture or a specific .</span></span>  
  
 <span data-ttu-id="36b46-193"><xref:System.Globalization.CultureInfo.CultureTypes%2A>的系统上安装的自定义区域性的属性值包含<xref:System.Globalization.CultureTypes?displayProperty=nameWithType>分配标志和自定义区域性<xref:System.Globalization.CultureInfo.LCID%2A>属性值为`LOCALE_CUSTOM_UNSPECIFIED`（0x1000 控制或 4096）。</span><span class="sxs-lookup"><span data-stu-id="36b46-193">The <xref:System.Globalization.CultureInfo.CultureTypes%2A> property value of custom cultures installed on a system includes the <xref:System.Globalization.CultureTypes?displayProperty=nameWithType> flag, and custom cultures are assigned an <xref:System.Globalization.CultureInfo.LCID%2A> property value of `LOCALE_CUSTOM_UNSPECIFIED` (0x1000, or 4096).</span></span> <span data-ttu-id="36b46-194">请注意，从 Windows 10 开始，此值也分配给缺少完整的文化数据的系统定义的区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-194">Note that, starting with Windows 10, this value is also assigned to system-defined cultures that lack complete cultural data.</span></span>  

## <a name="cultureinfo-and-cultural-data"></a><span data-ttu-id="36b46-195">CultureInfo 和文化的数据</span><span class="sxs-lookup"><span data-stu-id="36b46-195">CultureInfo and cultural data</span></span>

<span data-ttu-id="36b46-196">.NET 派生其区域性的数据从各种源，具体取决于实现、 平台和版本的一个：</span><span class="sxs-lookup"><span data-stu-id="36b46-196">.NET derives its cultural data from a one of a variety of sources, depending on implementation, platform, and version:</span></span>

- <span data-ttu-id="36b46-197">在.NET Framework 3.5 和更早版本中，区域性数据是由 Windows 操作系统和.NET Framework 提供的。</span><span class="sxs-lookup"><span data-stu-id="36b46-197">In .NET Framework 3.5 and earlier versions, cultural data is provided by both the Windows operating system and the .NET Framework.</span></span>

- <span data-ttu-id="36b46-198">在.NET Framework 4 和更高版本中，由 Windows 操作系统提供区域性的数据。</span><span class="sxs-lookup"><span data-stu-id="36b46-198">In .NET Framework 4 and later versions, cultural data is provided by the Windows operating system.</span></span>

- <span data-ttu-id="36b46-199">在所有版本的.NET Core 在 Windows 上运行，由 Windows 操作系统提供区域性的数据。</span><span class="sxs-lookup"><span data-stu-id="36b46-199">In all versions of .NET Core running on Windows, cultural data is provided by the Windows operating system.</span></span>

- <span data-ttu-id="36b46-200">在所有版本的 Unix 平台上运行的.NET Core，区域性数据由提供[International Components for Unicode (ICU) 库](http://site.icu-project.org/)。</span><span class="sxs-lookup"><span data-stu-id="36b46-200">In all versions of .NET Core running on Unix platforms, cultural data is provided by the [International Components for Unicode (ICU) Library](http://site.icu-project.org/).</span></span> <span data-ttu-id="36b46-201">ICU 库的特定版本取决于各个操作系统。</span><span class="sxs-lookup"><span data-stu-id="36b46-201">The specific version of the ICU Library depends on the individual operating system.</span></span>

<span data-ttu-id="36b46-202">因此，可在特定.NET 实现、 平台或版本上的区域性可能不可用不同.NET 实现、 平台或版本上。</span><span class="sxs-lookup"><span data-stu-id="36b46-202">Because of this, a culture available on a particular .NET implementation, platform, or version may not be available on a different .NET implementation, platform, or version.</span></span>

<span data-ttu-id="36b46-203">某些`CultureInfo`对象存在差异，具体取决于基础平台。</span><span class="sxs-lookup"><span data-stu-id="36b46-203">Some `CultureInfo` objects differ depending on the underlying platform.</span></span> <span data-ttu-id="36b46-204">具体而言，"zh CN"，或中文 （简体，中国） 和 ZH-TW，或中文 （繁体，台湾） 是 Windows 系统上的可用区域性，但它们是在 Unix 系统上的使用别名区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-204">In particular, "zh-CN", or Chinese (Simplified, China) and zh-TW, or Chinese (Traditional, Taiwan), are available cultures on Windows systems, but they are aliased cultures on Unix systems.</span></span> <span data-ttu-id="36b46-205">"zh CN"是"zh Hans CN"区域性的别名和"ZH-TW"是"不同-ZH-TW"区域性的别名。</span><span class="sxs-lookup"><span data-stu-id="36b46-205">"zh-CN" is an alias for the "zh-Hans-CN" culture, and "zh-TW" is an alias for the "zh-Hant-TW" culture.</span></span> <span data-ttu-id="36b46-206">使用别名的区域性不返回通过调用<xref:System.Globalization.CultureInfo.GetCultures%2A>方法并且可能具有不同的属性值，包括不同<xref:System.Globalization.CultureInfo.Parent>比对应的 Windows 的区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-206">Aliased cultures are not returned by calls to the <xref:System.Globalization.CultureInfo.GetCultures%2A> method and may have different property values, including different <xref:System.Globalization.CultureInfo.Parent> cultures, than their Windows counterparts.</span></span> <span data-ttu-id="36b46-207">对于 ZH-CN 和 ZH-TW 的区域性，这些 differenes 包括：</span><span class="sxs-lookup"><span data-stu-id="36b46-207">For the zh-CN and zh-TW cultures, these differenes include the following:</span></span>

- <span data-ttu-id="36b46-208">在 Windows 系统上的"zh CN"区域性的父区域性"Zh-hans"，"ZH-TW"区域性的父区域性"Zh-hant"。</span><span class="sxs-lookup"><span data-stu-id="36b46-208">On Windows systems, the parent culture of the "zh-CN" culture is "zh-Hans", and the parent culture of the "zh-TW" culture is "zh-Hant".</span></span> <span data-ttu-id="36b46-209">这两个这些区域性的父区域性是"zh"。</span><span class="sxs-lookup"><span data-stu-id="36b46-209">The parent culture of both these cultures is "zh".</span></span> <span data-ttu-id="36b46-210">在 Unix 系统上的这两个区域性父级的"zh"。</span><span class="sxs-lookup"><span data-stu-id="36b46-210">On Unix systems, the parents of both cultures are "zh".</span></span> <span data-ttu-id="36b46-211">这意味着，如果没有为"zh CN"或"ZH-TW"区域性提供特定于区域性的资源，但不要为非特定语言"-Zh-hans"或"Zh-hant"区域性提供资源，你的应用程序将加载在 Windows 上，但不是在 Unix 上的非特定区域性的资源.</span><span class="sxs-lookup"><span data-stu-id="36b46-211">This means that, if you don't provide culture-specific resources for the "zh-CN" or "zh-TW" cultures but do provide a resources for the neutral "zh-Hans" or "zh-Hant" culture, your application will load the resources for the neutral culture on Windows but not on Unix.</span></span> <span data-ttu-id="36b46-212">在 Unix 系统中，您必须显式设置线程的<xref:System.Globalization.CultureInfo.CurrentUICulture>"Zh-hans"或"Zh-hant"。</span><span class="sxs-lookup"><span data-stu-id="36b46-212">On Unix systems, you must explicitly set the thread's <xref:System.Globalization.CultureInfo.CurrentUICulture> to either "zh-Hans" or "zh-Hant".</span></span> 

- <span data-ttu-id="36b46-213">在 Windows 系统中，调用<xref:System.Globalization.CultureInfo.Equals%2A?displayProperty=nameWithType>实例上表示"zh CN"区域性，并将其传递"zh Hans CN"实例返回`true`。</span><span class="sxs-lookup"><span data-stu-id="36b46-213">On Windows systems, calling <xref:System.Globalization.CultureInfo.Equals%2A?displayProperty=nameWithType> on an instance that represents the "zh-CN" culture and passing it a "zh-Hans-CN" instance returns `true`.</span></span> <span data-ttu-id="36b46-214">在 Unix 系统上的方法调用返回`false`。</span><span class="sxs-lookup"><span data-stu-id="36b46-214">On Unix systems, the method call returns `false`.</span></span> <span data-ttu-id="36b46-215">此行为也适用于调用<xref:System.Globalization.CultureInfo.Equals%2A>上"ZH-TW"<xref:System.Globalization.CultureInfo>实例并将其传递"不同-Zh-tw"实例。</span><span class="sxs-lookup"><span data-stu-id="36b46-215">This behavior also applies to calling <xref:System.Globalization.CultureInfo.Equals%2A> on a "zh-TW" <xref:System.Globalization.CultureInfo> instance and passing it a "zh-Hant-Tw" instance.</span></span>

<a name="Dynamic"></a>   
## <a name="dynamic-culture-data"></a><span data-ttu-id="36b46-216">动态区域性数据</span><span class="sxs-lookup"><span data-stu-id="36b46-216">Dynamic culture data</span></span>  
 <span data-ttu-id="36b46-217">固定区域性，除区域性数据是动态的。</span><span class="sxs-lookup"><span data-stu-id="36b46-217">Except for the invariant culture, culture data is dynamic.</span></span> <span data-ttu-id="36b46-218">这是即使对于预定义的区域性，则返回 true。</span><span class="sxs-lookup"><span data-stu-id="36b46-218">This is true even for the predefined cultures.</span></span> <span data-ttu-id="36b46-219">例如，国家或地区采用新的货币、 更改其拼写的单词，或更改其首选的日历和区域性定义更改跟踪此事件。</span><span class="sxs-lookup"><span data-stu-id="36b46-219">For example, countries or regions adopt new currencies, change their spellings of words, or change their preferred calendar, and culture definitions change to track this.</span></span>  <span data-ttu-id="36b46-220">自定义区域性可能会有所变动，恕不另行通知，和任何特定区域性可能会被重写通过自定义替换区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-220">Custom cultures are subject to change without notice, and any specific culture might be overridden by a custom replacement culture.</span></span> <span data-ttu-id="36b46-221">此外，按如下所述，为单个用户可以重写区域首选项。</span><span class="sxs-lookup"><span data-stu-id="36b46-221">Also, as discussed below, an individual user can override cultural preferences.</span></span> <span data-ttu-id="36b46-222">应用程序应始终在运行时获取区域性的数据。</span><span class="sxs-lookup"><span data-stu-id="36b46-222">Applications should always obtain culture data at run time.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="36b46-223">保存数据时，应用程序应使用固定区域性、 二进制格式或特定于区域性的格式。</span><span class="sxs-lookup"><span data-stu-id="36b46-223">When saving data, your application should use the invariant culture, a binary format, or a specific culture-independent format.</span></span> <span data-ttu-id="36b46-224">根据特定区域性，而非固定区域性，与关联的当前值保存数据可能会变得不可读，或如果该区域性发生更改的含义可能会更改。</span><span class="sxs-lookup"><span data-stu-id="36b46-224">Data saved according to the current values associated with a particular culture, other than the invariant culture, might become unreadable or might change in meaning if that culture changes.</span></span>  
  
<a name="Current"></a>   
## <a name="the-current-culture-and-current-ui-culture"></a><span data-ttu-id="36b46-225">当前区域性和当前 UI 区域性</span><span class="sxs-lookup"><span data-stu-id="36b46-225">The current culture and current UI culture</span></span>  
 <span data-ttu-id="36b46-226">在.NET 应用程序中的每个线程都具有当前区域性和当前 UI 区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-226">Every thread in a .NET application has a current culture and a current UI culture.</span></span> <span data-ttu-id="36b46-227">当前区域性的日期、 时间、 数字和货币值、 文本、 大小写约定和比较字符串的方法的排序顺序确定的格式设置约定。</span><span class="sxs-lookup"><span data-stu-id="36b46-227">The current culture determines the formatting conventions for dates, times, numbers, and currency values, the sort order of text, casing conventions, and the ways in which strings are compared.</span></span> <span data-ttu-id="36b46-228">当前 UI 区域性用于检索在运行时特定于区域性的资源。</span><span class="sxs-lookup"><span data-stu-id="36b46-228">The current UI culture is used to retrieve culture-specific resources at runtime.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="36b46-229">有关如何针对每个线程确定当前和当前 UI 区域性的信息，请参阅[区域性和线程](#Threads)部分。</span><span class="sxs-lookup"><span data-stu-id="36b46-229">For information on how the current and current UI culture is determined on a per-thread basis, see the  [Culture and threads](#Threads) section.</span></span> <span data-ttu-id="36b46-230">了解如何将当前和当前 UI 区域性确定线程上执行新的应用程序域，并跨应用程序域边界的线程上请参阅[区域性和应用程序域](#AppDomain)部分。</span><span class="sxs-lookup"><span data-stu-id="36b46-230">For information on how the current and current UI culture is determined on threads executing in a new application domain, and on threads that cross application domain boundaries, see the [Culture and application domains](#AppDomain) section.</span></span> <span data-ttu-id="36b46-231">有关如何执行基于任务的异步操作的线程上确定当前的和当前的信息，请参阅[区域性和基于任务的异步操作](#Async)部分。</span><span class="sxs-lookup"><span data-stu-id="36b46-231">For information on how the current  and current is determined on  threads performing task-based asynchronous operations, see the [Culture and task-based asynchronous operations](#Async) section.</span></span>  
  
 <span data-ttu-id="36b46-232">有关详细的当前区域性的信息，请参阅<xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>属性主题。</span><span class="sxs-lookup"><span data-stu-id="36b46-232">For more detailed information on the current culture, see the <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> property topic.</span></span> <span data-ttu-id="36b46-233">有关详细的当前 UI 区域性的信息，请参阅<xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType>属性主题。</span><span class="sxs-lookup"><span data-stu-id="36b46-233">For more detailed information on the current UI culture, see the <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> property topic.</span></span>  
  
### <a name="retrieving-the-current-and-current-ui-cultures"></a><span data-ttu-id="36b46-234">检索当前和当前 UI 区域性</span><span class="sxs-lookup"><span data-stu-id="36b46-234">Retrieving the current and current UI cultures</span></span>  
 <span data-ttu-id="36b46-235">可以获取<xref:System.Globalization.CultureInfo>对象，表示当前区域性中通过两种方式：</span><span class="sxs-lookup"><span data-stu-id="36b46-235">You can get a <xref:System.Globalization.CultureInfo> object that represents the current culture in either of two ways:</span></span>  
  
-   <span data-ttu-id="36b46-236">通过检索的值<xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="36b46-236">By retrieving the value of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="36b46-237">通过检索的值[Thread.CurrentThread.CurrentCulture](<xref:System.Threading.Thread.CurrentCulture>)属性。</span><span class="sxs-lookup"><span data-stu-id="36b46-237">By retrieving the value of the [Thread.CurrentThread.CurrentCulture](<xref:System.Threading.Thread.CurrentCulture>) property.</span></span>  
  
 <span data-ttu-id="36b46-238">下面的示例检索这两个属性值，将其以显示它们相等，并显示当前区域性的名称进行比较。</span><span class="sxs-lookup"><span data-stu-id="36b46-238">The following example retrieves both property values, compares them to show that they are equal, and displays the name of the current culture.</span></span>  
  
 [!code-csharp[System.Globalization.CultureInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Globalization.CultureInfo/cs/Current1.cs#1)]
 [!code-vb[System.Globalization.CultureInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Globalization.CultureInfo/vb/Current1.vb#1)]  
  
 <span data-ttu-id="36b46-239">可以获取<xref:System.Globalization.CultureInfo>对象，表示当前 UI 区域性中通过两种方式：</span><span class="sxs-lookup"><span data-stu-id="36b46-239">You can get a <xref:System.Globalization.CultureInfo> object that represents the current UI culture in either of two ways:</span></span>  
  
-   <span data-ttu-id="36b46-240">通过检索的值<xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="36b46-240">By retrieving the value of the <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="36b46-241">通过检索的值[Thread.CurrentThread.CurrentUICulture](<xref:System.Threading.Thread.CurrentUICulture>)属性。</span><span class="sxs-lookup"><span data-stu-id="36b46-241">By retrieving the value of the [Thread.CurrentThread.CurrentUICulture](<xref:System.Threading.Thread.CurrentUICulture>) property.</span></span>  
  
 <span data-ttu-id="36b46-242">下面的示例检索这两个属性值，将其以显示它们相等，并显示当前 UI 区域性的名称进行比较。</span><span class="sxs-lookup"><span data-stu-id="36b46-242">The following example retrieves both property values, compares them to show that they are equal, and displays the name of the current UI culture.</span></span>  
  
 [!code-csharp[System.Globalization.CultureInfo#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Globalization.CultureInfo/cs/CurrentUI1.cs#2)]
 [!code-vb[System.Globalization.CultureInfo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Globalization.CultureInfo/vb/CurrentUI1.vb#2)]  
  
### <a name="setting-the-current-and-current-ui-cultures"></a><span data-ttu-id="36b46-243">设置当前和当前 UI 区域性</span><span class="sxs-lookup"><span data-stu-id="36b46-243">Setting the current and current UI cultures</span></span>  
 <span data-ttu-id="36b46-244">若要更改区域性和 UI 线程的区域性，请执行以下操作：</span><span class="sxs-lookup"><span data-stu-id="36b46-244">To change the culture and UI culture of a thread, do the following:</span></span>  
  
1.  <span data-ttu-id="36b46-245">实例化<xref:System.Globalization.CultureInfo>对象，通过调用表示该区域性<xref:System.Globalization.CultureInfo>类构造函数并将其传递区域性的名称。</span><span class="sxs-lookup"><span data-stu-id="36b46-245">Instantiate a <xref:System.Globalization.CultureInfo> object that represents that culture by calling a <xref:System.Globalization.CultureInfo> class constructor and passing it the name of the culture.</span></span> <span data-ttu-id="36b46-246"><xref:System.Globalization.CultureInfo.%23ctor%28System.String%29>构造函数实例化<xref:System.Globalization.CultureInfo>反映用户的对象重写的新区域性是否与当前的 Windows 区域性相同。</span><span class="sxs-lookup"><span data-stu-id="36b46-246">The <xref:System.Globalization.CultureInfo.%23ctor%28System.String%29> constructor instantiates a  <xref:System.Globalization.CultureInfo> object that reflects user overrides if the new culture is the same as the current Windows culture.</span></span>   <span data-ttu-id="36b46-247"><xref:System.Globalization.CultureInfo.%23ctor%28System.String%2CSystem.Boolean%29>构造函数允许您指定是否新实例化<xref:System.Globalization.CultureInfo>对象反映用户替代新区域性是否与当前的 Windows 区域性相同。</span><span class="sxs-lookup"><span data-stu-id="36b46-247">The <xref:System.Globalization.CultureInfo.%23ctor%28System.String%2CSystem.Boolean%29> constructor allows you to specify whether the newly instantiated <xref:System.Globalization.CultureInfo> object reflects user overrides if the new culture is the same as the current Windows culture.</span></span>  
  
2.  <span data-ttu-id="36b46-248">将分配<xref:System.Globalization.CultureInfo>对象传递给<xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>或<xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType>.NET Core 和.NET Framework 4.6 和更高版本上的属性。</span><span class="sxs-lookup"><span data-stu-id="36b46-248">Assign the <xref:System.Globalization.CultureInfo> object to the <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> or <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> property on .NET Core and .NET Framework 4.6 and later versions.</span></span> <span data-ttu-id="36b46-249">(在.NET Framework 4.5.2 及早期版本中，分配 youc`CultureInfo`对象传递给<xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType>或<xref:System.Threading.Thread.CurrentUICulture%2A?displayProperty=nameWithType>属性。)</span><span class="sxs-lookup"><span data-stu-id="36b46-249">(On .NET Framework 4.5.2 and earlier versions, youc an assign the `CultureInfo` object to the <xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType> or <xref:System.Threading.Thread.CurrentUICulture%2A?displayProperty=nameWithType> property.)</span></span>   
  
 <span data-ttu-id="36b46-250">下面的示例检索当前区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-250">The following example retrieves the current culture.</span></span> <span data-ttu-id="36b46-251">如果是法语 （法国） 区域性之外的任何内容，但它会将当前区域性更改为法语 （法国）。</span><span class="sxs-lookup"><span data-stu-id="36b46-251">If it is anything other than the French (France) culture, it changes the current culture to French (France).</span></span> <span data-ttu-id="36b46-252">否则，它将当前区域性更改为法语 （卢森堡）。</span><span class="sxs-lookup"><span data-stu-id="36b46-252">Otherwise, it changes the current culture to French (Luxembourg).</span></span>  
  
 [!code-csharp[System.Globalization.CultureInfo#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Globalization.CultureInfo/cs/Change1.cs#3)]
 [!code-vb[System.Globalization.CultureInfo#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Globalization.CultureInfo/vb/Change1.vb#3)]  
  
 <span data-ttu-id="36b46-253">下面的示例检索当前区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-253">The following example retrieves the current culture.</span></span> <span data-ttu-id="36b46-254">如果它是其他任何内容斯洛文尼亚语 （斯洛文尼亚） 区域性，它将当前区域性更改为斯洛文尼亚语 （斯洛文尼亚）。</span><span class="sxs-lookup"><span data-stu-id="36b46-254">If it is anything other the Slovenian (Slovenia) culture, it changes the current culture to Slovenian (Slovenia).</span></span> <span data-ttu-id="36b46-255">否则，它将当前区域性更改为克罗地亚语 （克罗地亚）。</span><span class="sxs-lookup"><span data-stu-id="36b46-255">Otherwise, it changes the current culture to Croatian (Croatia).</span></span>  
  
 [!code-csharp[System.Globalization.CultureInfo#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Globalization.CultureInfo/cs/ChangeUI1.cs#4)]
 [!code-vb[System.Globalization.CultureInfo#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Globalization.CultureInfo/vb/ChangeUI1.vb#4)]  
  
<a name="GetAll"></a>   
## <a name="getting-all-cultures"></a><span data-ttu-id="36b46-256">获取所有区域性</span><span class="sxs-lookup"><span data-stu-id="36b46-256">Getting all cultures</span></span>  
 <span data-ttu-id="36b46-257">可以通过调用检索数组特定的类别或本地计算机上的所有区域性的区域性<xref:System.Globalization.CultureInfo.GetCultures%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="36b46-257">You can retrieve an array specific categories of cultures or of all the cultures available on the local computer by calling the <xref:System.Globalization.CultureInfo.GetCultures%2A> method.</span></span> <span data-ttu-id="36b46-258">例如，您可以检索自定义区域性、 特定区域性或非特定区域性，单独使用或结合使用。</span><span class="sxs-lookup"><span data-stu-id="36b46-258">For example, you can retrieve custom cultures, specific cultures, or neutral cultures either alone or in combination.</span></span>  
  
 <span data-ttu-id="36b46-259">下面的示例调用<xref:System.Globalization.CultureInfo.GetCultures%2A>方法两次，第一次<xref:System.Globalization.CultureTypes?displayProperty=nameWithType>要检索所有自定义区域性的枚举成员，然后使用<xref:System.Globalization.CultureTypes?displayProperty=nameWithType>要检索所有替换区域性的枚举成员。</span><span class="sxs-lookup"><span data-stu-id="36b46-259">The following example calls the <xref:System.Globalization.CultureInfo.GetCultures%2A> method twice, first with the <xref:System.Globalization.CultureTypes?displayProperty=nameWithType> enumeration member to retrieve all custom cultures, and then with the <xref:System.Globalization.CultureTypes?displayProperty=nameWithType> enumeration member to retrieve all replacement cultures.</span></span>  
  
 [!code-csharp[System.Globalization.CultureInfo#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Globalization.CultureInfo/cs/GetCultures1.cs#5)]
 [!code-vb[System.Globalization.CultureInfo#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Globalization.CultureInfo/vb/GetCultures1.vb#5)]  
  
<a name="Threads"></a>   
## <a name="culture-and-threads"></a><span data-ttu-id="36b46-260">区域性和线程</span><span class="sxs-lookup"><span data-stu-id="36b46-260">Culture and threads</span></span>  
 <span data-ttu-id="36b46-261">当启动新的应用程序线程时，其当前区域性和当前 UI 区域性定义由当前系统区域性，而不是当前线程区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-261">When a new application thread is started, its current culture and current UI culture are defined by the current system culture, and not by the current thread culture.</span></span> <span data-ttu-id="36b46-262">以下示例演示了差异。</span><span class="sxs-lookup"><span data-stu-id="36b46-262">The following example illustrates the difference.</span></span> <span data-ttu-id="36b46-263">它将当前区域性和应用程序线程的当前 UI 区域性设置为法语 （法国） 区域性 (FR-FR)。</span><span class="sxs-lookup"><span data-stu-id="36b46-263">It sets the current culture and current UI culture of an application thread to the French (France) culture (fr-FR).</span></span> <span data-ttu-id="36b46-264">如果当前区域性已经-FR，该示例会将其设置为英语 （美国） 区域性 (EN-US)。</span><span class="sxs-lookup"><span data-stu-id="36b46-264">If the current culture is already fr-FR, the example sets it to the English (United States) culture (en-US).</span></span> <span data-ttu-id="36b46-265">它显示为货币值的三个随机数字，然后创建一个新线程，后者又将三个更随机数字显示为货币值。</span><span class="sxs-lookup"><span data-stu-id="36b46-265">It displays three random numbers as currency values and then creates a new thread, which, in turn, displays three more random numbers as currency values.</span></span> <span data-ttu-id="36b46-266">但如中的示例所示的输出，显示由新线程的货币值不能反映法语 （法国） 区域性，与主应用程序线程的输出不同的格式设置约定。</span><span class="sxs-lookup"><span data-stu-id="36b46-266">But as the output from the example shows, the currency values displayed by the new thread do not reflect the formatting conventions of the French (France) culture, unlike the output from the main application thread.</span></span>  
  
 [!code-csharp[System.Globalization.CultureInfo.Class.Thread#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.thread/cs/defaultthread1.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.Class.Thread#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.thread/vb/defaultthread1.vb#1)]  
  
 <span data-ttu-id="36b46-267">在之前的.NET framework 版本[!INCLUDE[net_v45](~/includes/net-v45-md.md)]、 最常用的方法，以确保主应用程序线程与所有其他工作线程共享相同的区域性是传递的应用程序范围内区域性名称或<xref:System.Globalization.CultureInfo>对象表示的应用程序范围内区域性<xref:System.Threading.ParameterizedThreadStart?displayProperty=nameWithType>委托。</span><span class="sxs-lookup"><span data-stu-id="36b46-267">In versions of the .NET Framework before the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], the most common way to ensure that the main application thread shares the same culture with all other worker threads is to pass either the name of the application-wide culture or a <xref:System.Globalization.CultureInfo> object that represents the application-wide culture to a <xref:System.Threading.ParameterizedThreadStart?displayProperty=nameWithType> delegate.</span></span> <span data-ttu-id="36b46-268">以下示例使用此方法以确保显示由两个线程的货币值反映相同的区域性的格式设置约定。</span><span class="sxs-lookup"><span data-stu-id="36b46-268">The following example uses this approach to ensure that the currency values displayed by two threads reflect the formatting conventions of the same culture.</span></span>  
  
 [!code-csharp[System.Globalization.CultureInfo.Class.Thread#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.thread/cs/perthread1.cs#2)]
 [!code-vb[System.Globalization.CultureInfo.Class.Thread#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.thread/vb/perthread1.vb#2)]  
  
 <span data-ttu-id="36b46-269">您可以设置区域性和 UI 区域性的线程池线程中类似的方式通过调用<xref:System.Threading.ThreadPool.QueueUserWorkItem%28System.Threading.WaitCallback%2CSystem.Object%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="36b46-269">You can set the culture and UI culture of thread pool threads in a similar manner by calling the <xref:System.Threading.ThreadPool.QueueUserWorkItem%28System.Threading.WaitCallback%2CSystem.Object%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="36b46-270">从开始[!INCLUDE[net_v45](~/includes/net-v45-md.md)]，你可以设置区域性和 UI 区域性，所有线程的应用程序域中更直接地通过分配<xref:System.Globalization.CultureInfo>对象，表示该区域性<xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A>和<xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="36b46-270">Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], you can set the culture and UI culture of all threads in an application domain more directly by assigning a <xref:System.Globalization.CultureInfo> object that represents that culture to the <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> and <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> properties.</span></span> <span data-ttu-id="36b46-271">下面的示例使用这些属性以确保在默认应用程序域中的所有线程都共享相同的区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-271">The following example uses these properties to ensure that all threads in the default application domain share the same culture.</span></span>  
  
 [!code-csharp[System.Globalization.CultureInfo.Class.Thread#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.thread/cs/setthreads1.cs#3)]
 [!code-vb[System.Globalization.CultureInfo.Class.Thread#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.thread/vb/setthreads1.vb#3)]  
  
> [!WARNING]
>  <span data-ttu-id="36b46-272">尽管<xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A>和<xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A>属性是静态成员，它们定义的默认区域性和仅适用于应用程序域的当前设置这些属性值时的默认 UI 区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-272">Although the <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> and <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> properties are static members, they define the default culture and default UI culture only for the application domain that is current at the time these property values are set.</span></span> <span data-ttu-id="36b46-273">有关详细信息，请参阅下一部分中，[区域性和应用程序域](#AppDomain)。</span><span class="sxs-lookup"><span data-stu-id="36b46-273">For more information, see the next section, [Culture and application domains](#AppDomain).</span></span>  
  
 <span data-ttu-id="36b46-274">在分配到的值<xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A>和<xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A>属性、 区域性和 UI 区域性的应用程序域中线程还更改如果它们未显式分配区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-274">When you assign values to the <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> and <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> properties, the culture and UI culture of the threads in the application domain also change if they have not explicitly been assigned a culture.</span></span> <span data-ttu-id="36b46-275">但是，这些线程反映新的区域性设置，仅当它们在当前应用程序域中执行时。</span><span class="sxs-lookup"><span data-stu-id="36b46-275">However, these threads reflect the new culture settings only while they execute in the current application domain.</span></span> <span data-ttu-id="36b46-276">如果在另一个应用程序域中执行这些线程，其区域性将成为该应用程序域定义的默认区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-276">If these threads execute in another application domain, their culture becomes the default culture defined for that application domain.</span></span> <span data-ttu-id="36b46-277">因此，我们建议你始终将主应用程序线程的区域性设置而不依赖<xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A>和<xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A>属性以更改它。</span><span class="sxs-lookup"><span data-stu-id="36b46-277">As a result, we recommend that you always set the culture of the main application thread, and not rely on the <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> and <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> properties to change it.</span></span>  
  
<a name="AppDomain"></a>   
## <a name="culture-and-application-domains"></a><span data-ttu-id="36b46-278">区域性和应用程序域</span><span class="sxs-lookup"><span data-stu-id="36b46-278">Culture and application domains</span></span>  
 <span data-ttu-id="36b46-279"><xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> 和<xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A>是显式定义仅适用于时设置或检索属性值的当前应用程序域默认区域性的静态属性。</span><span class="sxs-lookup"><span data-stu-id="36b46-279"><xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> and <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> are static properties that explicitly define a default culture only for the application domain that is current when the property value is set or retrieved.</span></span> <span data-ttu-id="36b46-280">下面的示例将默认应用程序域中的默认区域性和默认 UI 区域性设置为法语 （法国），然后使用<xref:System.AppDomainSetup>类和<xref:System.AppDomainInitializer>委托到一个新应用程序域中设置的默认区域性和 UI 区域性俄语 （俄罗斯）。</span><span class="sxs-lookup"><span data-stu-id="36b46-280">The following example sets the default culture and default UI culture in the default application domain to French (France), and then uses the <xref:System.AppDomainSetup> class and the <xref:System.AppDomainInitializer> delegate to set the default culture and UI culture in a new application domain to Russian (Russia).</span></span> <span data-ttu-id="36b46-281">单个线程然后执行每个应用程序域中的两种方法。</span><span class="sxs-lookup"><span data-stu-id="36b46-281">A single thread then executes two methods in each application domain.</span></span> <span data-ttu-id="36b46-282">请注意，线程的区域性和 UI 区域性没有显式设置;它们派生自的默认区域性和 UI 区域性，线程执行所在的应用程序域。</span><span class="sxs-lookup"><span data-stu-id="36b46-282">Note that the thread's culture and UI culture are not explicitly set; they are derived from the default culture and UI culture of the application domain in which the thread is executing.</span></span> <span data-ttu-id="36b46-283">另请注意<xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A>并<xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A>属性返回的默认<xref:System.Globalization.CultureInfo>进行方法调用时的当前应用程序域的值。</span><span class="sxs-lookup"><span data-stu-id="36b46-283">Note also that the <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> and <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> properties return the default <xref:System.Globalization.CultureInfo> values of the application domain that is current when the method call is made.</span></span>  
  
 [!code-csharp[System.Globalization.CultureInfo.Class.AppDomain#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.appdomain/cs/appdomainex1.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.Class.AppDomain#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.appdomain/vb/appdomainex1.vb#1)]  
  
 <span data-ttu-id="36b46-284">有关区域性和应用程序域的详细信息，请参阅中的"应用程序域和线程"一节[应用程序域](~/docs/framework/app-domains/application-domains.md)主题。</span><span class="sxs-lookup"><span data-stu-id="36b46-284">For more information about cultures and application domains, see the "Application Domains and Threads" section in the [Application Domains](~/docs/framework/app-domains/application-domains.md) topic.</span></span>  
  
<a name="Async"></a>   
## <a name="culture-and-task-based-asynchronous-operations"></a><span data-ttu-id="36b46-285">区域性和基于任务的异步操作</span><span class="sxs-lookup"><span data-stu-id="36b46-285">Culture and task-based asynchronous operations</span></span>  
 <span data-ttu-id="36b46-286">[基于任务的异步编程模式](~/docs/standard/parallel-programming/task-based-asynchronous-programming.md)使用<xref:System.Threading.Tasks.Task>和<xref:System.Threading.Tasks.Task%601>线程池线程对象上异步执行委托。</span><span class="sxs-lookup"><span data-stu-id="36b46-286">The [task-based asynchronous programming pattern](~/docs/standard/parallel-programming/task-based-asynchronous-programming.md) uses <xref:System.Threading.Tasks.Task> and <xref:System.Threading.Tasks.Task%601> objects to asynchronously execute delegates on thread pool threads.</span></span> <span data-ttu-id="36b46-287">运行特定任务的特定线程不提前已知，但仅在运行时确定。</span><span class="sxs-lookup"><span data-stu-id="36b46-287">The specific thread on which a particular task runs is not known in advance, but is determined only at runtime.</span></span>  
  
 <span data-ttu-id="36b46-288">对于面向应用[!INCLUDE[net_v46](~/includes/net-v46-md.md)]或更高版本、 区域性是一个异步操作的上下文的一部分。</span><span class="sxs-lookup"><span data-stu-id="36b46-288">For apps that target the [!INCLUDE[net_v46](~/includes/net-v46-md.md)] or later versions, culture is part of an asynchronous operation's context.</span></span> <span data-ttu-id="36b46-289">换而言之，应用程序起面向[!INCLUDE[net_v46](~/includes/net-v46-md.md)]，默认情况下异步操作继承的值<xref:System.Globalization.CultureInfo.CurrentCulture%2A>和<xref:System.Globalization.CultureInfo.CurrentUICulture%2A>从中启动的线程的属性。</span><span class="sxs-lookup"><span data-stu-id="36b46-289">In other words, starting with apps that target the [!INCLUDE[net_v46](~/includes/net-v46-md.md)], asynchronous operations by default inherit the values of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> and <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> properties of the thread from which they are launched.</span></span> <span data-ttu-id="36b46-290">如果当前区域性或当前 UI 区域性不同于系统区域性，当前区域性跨线程边界的部署，并将成为当前正在执行异步操作的线程池线程的区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-290">If the current culture or current UI culture differs from the system culture, the current culture crosses thread boundaries and becomes the current culture of the thread pool thread that is executing an asynchronous operation.</span></span>  
  
 <span data-ttu-id="36b46-291">下面的示例提供了简单的演示。</span><span class="sxs-lookup"><span data-stu-id="36b46-291">The following example provides a simple illustration.</span></span> <span data-ttu-id="36b46-292">它使用<xref:System.Runtime.Versioning.TargetFrameworkAttribute>属性设置为目标[!INCLUDE[net_v46](~/includes/net-v46-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="36b46-292">It uses the <xref:System.Runtime.Versioning.TargetFrameworkAttribute> attribute to target the [!INCLUDE[net_v46](~/includes/net-v46-md.md)].</span></span> <span data-ttu-id="36b46-293">该示例定义了<xref:System.Func%601>委派， `formatDelegate`，返回一些数字格式化为货币值。</span><span class="sxs-lookup"><span data-stu-id="36b46-293">The example defines a <xref:System.Func%601> delegate, `formatDelegate`, that returns some numbers formatted as currency values.</span></span> <span data-ttu-id="36b46-294">该示例将当前系统区域性更改为 French (France) 或法语 （法国） 已为当前区域性，英语 （美国）。</span><span class="sxs-lookup"><span data-stu-id="36b46-294">The example changes the current system culture to either French (France) or, if French (France) is already the current culture, English (United States).</span></span> <span data-ttu-id="36b46-295">然后它：</span><span class="sxs-lookup"><span data-stu-id="36b46-295">It then:</span></span>  
  
-   <span data-ttu-id="36b46-296">直接调用委托，以便使其在主应用线程上同步运行。</span><span class="sxs-lookup"><span data-stu-id="36b46-296">Invokes the delegate directly so that it runs synchronously on the main app thread.</span></span>  
  
-   <span data-ttu-id="36b46-297">创建线程池线程异步执行委托的任务。</span><span class="sxs-lookup"><span data-stu-id="36b46-297">Creates a task that executes the delegate asynchronously on a thread pool thread.</span></span>  
  
-   <span data-ttu-id="36b46-298">创建一个任务，该委托线程上同步执行主应用程序通过调用<xref:System.Threading.Tasks.Task.RunSynchronously%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="36b46-298">Creates a task that executes the delegate synchronously on the main app thread by calling the <xref:System.Threading.Tasks.Task.RunSynchronously%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="36b46-299">如示例输出所示，如果当前区域性更改为法语 （法国） 任务以异步方式调用从该线程的当前区域性将成为该异步操作的当前区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-299">As the output from the example shows, when the current culture is changed to French (France), the current culture of the thread from which tasks are invoked asynchronously becomes the current culture for that asynchronous operation.</span></span>  
  
 [!code-csharp[System.Globalization.CultureInfo.Class.Async#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.async/cs/asyncculture1.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.Class.Async#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.async/vb/asyncculture1.vb#1)]  
  
 <span data-ttu-id="36b46-300">对于面向版本之前的.NET Framework 的应用， [!INCLUDE[net_v46](~/includes/net-v46-md.md)]，或对于不面向特定版本的.NET framework 的应用，调用线程的区域性不是任务的上下文的一部分。</span><span class="sxs-lookup"><span data-stu-id="36b46-300">For apps that target versions of the .NET Framework prior to the [!INCLUDE[net_v46](~/includes/net-v46-md.md)], or for apps that do not target a particular version of the .NET Framework, the culture of the calling thread is not part of a task's context.</span></span> <span data-ttu-id="36b46-301">相反，除非已显式定义，默认情况下的新线程的区域性是系统区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-301">Instead, unless one is explicitly defined, the culture of new threads by default is the system culture.</span></span> <span data-ttu-id="36b46-302">以下示例中，这是与上一示例相同，不同之处在于它缺少<xref:System.Runtime.Versioning.TargetFrameworkAttribute>属性，阐释了这一点。</span><span class="sxs-lookup"><span data-stu-id="36b46-302">The following example, which is identical to the previous example except that it lacks the <xref:System.Runtime.Versioning.TargetFrameworkAttribute> attribute, illustrates this.</span></span> <span data-ttu-id="36b46-303">执行示例系统的系统区域性为英语 （美国），因为线程池线程异步执行的区域性是任务的 EN-US 而不是任务的 fr-fr。</span><span class="sxs-lookup"><span data-stu-id="36b46-303">Because the system culture of the system on which the example executed was English (United States), the culture of the task that executes asynchronously on a thread pool thread is en-US rather than fr-FR.</span></span>  
  
 [!code-csharp[System.Globalization.CultureInfo.Class.Async#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.async/cs/asyncculture2.cs#2)]
 [!code-vb[System.Globalization.CultureInfo.Class.Async#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.async/vb/asyncculture2.vb#2)]  
  
 <span data-ttu-id="36b46-304">从.NET Framework 目标版本的应用[!INCLUDE[net_v45](~/includes/net-v45-md.md)]和更高版本，但之前[!INCLUDE[net_v46](~/includes/net-v46-md.md)]，可以使用<xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A>和<xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A>属性以确保调用线程的区域性用于在异步任务在线程池线程上执行。</span><span class="sxs-lookup"><span data-stu-id="36b46-304">For apps that target versions of the .NET Framework from the [!INCLUDE[net_v45](~/includes/net-v45-md.md)] and later but prior to the [!INCLUDE[net_v46](~/includes/net-v46-md.md)], you can use the <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> and <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> properties to ensure that the culture of the calling thread is used in asynchronous tasks that execute on thread pool threads.</span></span> <span data-ttu-id="36b46-305">下面的示例等同于上一示例中，只不过它使用<xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A>属性以确保该线程池线程具有与主应用程序线程相同的区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-305">The following example is identical to the previous example, except that it uses the <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> property to ensure that thread pool threads have the same culture as the main app thread.</span></span>  
  
 [!code-csharp[System.Globalization.CultureInfo.Class.Async#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.async/cs/asyncculture3.cs#3)]
 [!code-vb[System.Globalization.CultureInfo.Class.Async#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.async/vb/asyncculture3.vb#3)]  
  
 <span data-ttu-id="36b46-306"><xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> 和<xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A>是每个应用域的属性; 也就是说，它们建立默认区域性的所有线程都未显式都分配区域性特定的应用程序域中。</span><span class="sxs-lookup"><span data-stu-id="36b46-306"><xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> and <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> are per-app domain properties; that is, they establish a default culture for all threads not explicitly assigned a culture in a specific application domain.</span></span> <span data-ttu-id="36b46-307">但是，对于面向应用[!INCLUDE[net_v46](~/includes/net-v46-md.md)]或更高版本，调用线程的区域性保持异步任务的上下文的一部分，即使跨应用程序域边界的部署任务。</span><span class="sxs-lookup"><span data-stu-id="36b46-307">However, for apps that target the [!INCLUDE[net_v46](~/includes/net-v46-md.md)] or later, the culture of the calling thread remains part of an asynchronous task's context even if the task crosses app domain boundaries.</span></span>  
  
 <span data-ttu-id="36b46-308">下面的示例显示了调用线程的区域性保持基于任务的异步操作的当前区域性，即使跨应用程序域边界的部署执行该任务的方法。</span><span class="sxs-lookup"><span data-stu-id="36b46-308">The following example shows that the calling thread's culture remains the current culture of a task-based asynchronous operation even if the method that the task is executing crosses application domain boundaries.</span></span> <span data-ttu-id="36b46-309">它定义了一个类`DataRetriever`，使用单个方法`GetFormattedNumber`，介于 1 和 1000 格式化为货币值之间返回一个随机的双精度浮点数。</span><span class="sxs-lookup"><span data-stu-id="36b46-309">It defines a class, `DataRetriever`, with a single method, `GetFormattedNumber`, that returns a random double-precision floating-point number between 1 and 1,000 formatted as a currency value.</span></span> <span data-ttu-id="36b46-310">第一个任务运行，只需实例化`DataRetriever`实例并调用其`GetFormattedNumber`方法。</span><span class="sxs-lookup"><span data-stu-id="36b46-310">A first task is run that simply instantiates a `DataRetriever` instance and calls its `GetFormattedNumber` method.</span></span> <span data-ttu-id="36b46-311">第二个任务报告其当前的应用程序域、 创建新的应用程序域、 实例化`DataRetriever`实例中新的应用程序域，并调用其`GetFormattedNumber`方法。</span><span class="sxs-lookup"><span data-stu-id="36b46-311">A second task reports its current application domain, creates a new application domain, instantiates a `DataRetriever` instance in the new application domain, and calls its `GetFormattedNumber` method.</span></span> <span data-ttu-id="36b46-312">如示例输出所示，当前区域性保持在调用线程，第一个任务和第二个任务都相同主应用程序域和第二个应用程序域中执行时。</span><span class="sxs-lookup"><span data-stu-id="36b46-312">As the output from the example shows, the current culture has remained the same in the calling thread, the first task, and the second task both when it was executing in the main application domain and the second application domain.</span></span>  
  
 [!code-csharp[System.Globalization.CultureInfo.Class.Async#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.async/cs/asyncculture4.cs#4)]
 [!code-vb[System.Globalization.CultureInfo.Class.Async#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.async/vb/asyncculture4.vb#4)]  
  
<a name="Serialization"></a>  
## <a name="cultureinfo-object-serialization"></a><span data-ttu-id="36b46-313">CultureInfo 对象序列化</span><span class="sxs-lookup"><span data-stu-id="36b46-313">CultureInfo object serialization</span></span>  
 <span data-ttu-id="36b46-314">当<xref:System.Globalization.CultureInfo>序列化对象，只实际存储<xref:System.Globalization.CultureInfo.Name%2A>和<xref:System.Globalization.CultureInfo.UseUserOverride%2A>。</span><span class="sxs-lookup"><span data-stu-id="36b46-314">When a <xref:System.Globalization.CultureInfo> object is serialized, all that is actually stored is <xref:System.Globalization.CultureInfo.Name%2A> and <xref:System.Globalization.CultureInfo.UseUserOverride%2A>.</span></span> <span data-ttu-id="36b46-315">它是仅在环境中成功反序列其中的<xref:System.Globalization.CultureInfo.Name%2A>具有相同的含义。</span><span class="sxs-lookup"><span data-stu-id="36b46-315">It is successfully de-serialized only in an environment where that <xref:System.Globalization.CultureInfo.Name%2A> has the same meaning.</span></span> <span data-ttu-id="36b46-316">以下三个示例演示这为什么不是始终用例：</span><span class="sxs-lookup"><span data-stu-id="36b46-316">The following three examples show why this is not always the case:</span></span>  
  
- <span data-ttu-id="36b46-317">如果<xref:System.Globalization.CultureInfo.CultureTypes%2A>属性值是<xref:System.Globalization.CultureTypes.InstalledWin32Cultures?displayProperty=nameWithType>，和特定版本的 Windows 操作系统中首次引入该区域性，如果不能在早期版本的 Windows 上反序列化。</span><span class="sxs-lookup"><span data-stu-id="36b46-317">If the <xref:System.Globalization.CultureInfo.CultureTypes%2A> property value is <xref:System.Globalization.CultureTypes.InstalledWin32Cultures?displayProperty=nameWithType>, and if that culture was first introduced in a particular version of the Windows operating system, it is not possible to deserialize it on an earlier version of Windows.</span></span> <span data-ttu-id="36b46-318">例如，如果在 Windows 10 中引入了一个区域性，它不能反序列化在 Windows 8 上。</span><span class="sxs-lookup"><span data-stu-id="36b46-318">For example, if a culture was introduced in Windows 10, it cannot be deserialized on Windows 8.</span></span>  
  
-   <span data-ttu-id="36b46-319">如果<xref:System.Globalization.CultureInfo.CultureTypes%2A>值是<xref:System.Globalization.CultureTypes.UserCustomCulture?displayProperty=nameWithType>，和它反序列化计算机没有安装此用户自定义区域性，不能以反序列化。</span><span class="sxs-lookup"><span data-stu-id="36b46-319">If the <xref:System.Globalization.CultureInfo.CultureTypes%2A> value is <xref:System.Globalization.CultureTypes.UserCustomCulture?displayProperty=nameWithType>, and the computer on which it is de-serialized does not have this user custom culture installed, it is not possible to deserialize it.</span></span>  
  
-   <span data-ttu-id="36b46-320">如果<xref:System.Globalization.CultureInfo.CultureTypes%2A>值是<xref:System.Globalization.CultureTypes.ReplacementCultures?displayProperty=nameWithType>，和它反序列化计算机不具有此替换区域性，其反序列化为相同的名称，但不是所有相同的特性。</span><span class="sxs-lookup"><span data-stu-id="36b46-320">If the <xref:System.Globalization.CultureInfo.CultureTypes%2A> value is <xref:System.Globalization.CultureTypes.ReplacementCultures?displayProperty=nameWithType>, and the computer on which it is de-serialized does not have this replacement culture, it de-serializes to the same name, but not all of the same characteristics.</span></span> <span data-ttu-id="36b46-321">例如，EN-US 是否在计算机 A，但不是在计算机 B 上, 一个替换区域性，如果<xref:System.Globalization.CultureInfo>对象引用此区域性是在计算机 A 上序列化和反序列化计算机 B 上则没有区域性的自定义特征传输。</span><span class="sxs-lookup"><span data-stu-id="36b46-321">For example, if en-US is a replacement culture on computer A, but not on computer B, and if a <xref:System.Globalization.CultureInfo> object referring to this culture is serialized on computer A and de-serialized on computer B, then none of the custom characteristics of the culture are transmitted.</span></span> <span data-ttu-id="36b46-322">已成功，但具有不同的含义，反序列化的区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-322">The culture deserializes successfully, but with a different meaning.</span></span>  
  
<a name="CPanel"></a>   
## <a name="control-panel-overrides"></a><span data-ttu-id="36b46-323">控件面板重写</span><span class="sxs-lookup"><span data-stu-id="36b46-323">Control Panel overrides</span></span>  
 <span data-ttu-id="36b46-324">用户可以选择重写一些与 Windows 通过控制面板的区域和语言选项部分的当前区域性关联的值。</span><span class="sxs-lookup"><span data-stu-id="36b46-324">The user might choose to override some of the values associated with the current culture of Windows through the regional and language options portion of Control Panel.</span></span> <span data-ttu-id="36b46-325">例如，用户可以选择以不同格式显示日期，或使用一种货币而不是默认区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-325">For example, the user might choose to display the date in a different format or to use a currency other than the default for the culture.</span></span> <span data-ttu-id="36b46-326">一般情况下，您的应用程序应遵循这些用户重写。</span><span class="sxs-lookup"><span data-stu-id="36b46-326">In general, your applications should honor these user overrides.</span></span>  
  
 <span data-ttu-id="36b46-327">如果<xref:System.Globalization.CultureInfo.UseUserOverride%2A>是`true`和指定的区域性匹配的 Windows，当前区域性<xref:System.Globalization.CultureInfo>使用这些重写值，其中包括用户设置的属性<xref:System.Globalization.DateTimeFormatInfo>返回实例<xref:System.Globalization.CultureInfo.DateTimeFormat%2A>属性，和的属性<xref:System.Globalization.NumberFormatInfo>返回实例<xref:System.Globalization.CultureInfo.NumberFormat%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="36b46-327">If <xref:System.Globalization.CultureInfo.UseUserOverride%2A> is `true` and the specified culture matches the current culture of Windows, the <xref:System.Globalization.CultureInfo> uses those overrides, including user settings for the properties of the <xref:System.Globalization.DateTimeFormatInfo> instance returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> property, and the properties of the <xref:System.Globalization.NumberFormatInfo> instance returned by the <xref:System.Globalization.CultureInfo.NumberFormat%2A> property.</span></span> <span data-ttu-id="36b46-328">如果用户设置与不兼容与关联的区域性<xref:System.Globalization.CultureInfo>，例如，如果在所选的日历不是之一<xref:System.Globalization.CultureInfo.OptionalCalendars%2A>，方法的结果和属性的值是不确定。</span><span class="sxs-lookup"><span data-stu-id="36b46-328">If the user settings are incompatible with the culture associated with the <xref:System.Globalization.CultureInfo>, for example, if the selected calendar is not one of the <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>, the results of the methods and the values of the properties are undefined.</span></span>  
  
<a name="AlternateSort"></a>   
## <a name="alternate-sort-orders"></a><span data-ttu-id="36b46-329">替代排序顺序</span><span class="sxs-lookup"><span data-stu-id="36b46-329">Alternate sort orders</span></span>  
 <span data-ttu-id="36b46-330">一些文化可支持多个排序顺序。</span><span class="sxs-lookup"><span data-stu-id="36b46-330">Some cultures support more than one sort order.</span></span> <span data-ttu-id="36b46-331">例如:</span><span class="sxs-lookup"><span data-stu-id="36b46-331">For example:</span></span>  
  
-   <span data-ttu-id="36b46-332">西班牙语 （西班牙） 区域性都有两种排序顺序： 默认国际排序顺序和传统的排序顺序。</span><span class="sxs-lookup"><span data-stu-id="36b46-332">The Spanish (Spain) culture has two sort orders: the default international sort order, and the traditional sort order.</span></span> <span data-ttu-id="36b46-333">当您实例化<xref:System.Globalization.CultureInfo>对象 ES-ES 区域性名称，则使用国际排序顺序。</span><span class="sxs-lookup"><span data-stu-id="36b46-333">When you instantiate a <xref:System.Globalization.CultureInfo> object with the es-ES culture name, the international sort order is used.</span></span> <span data-ttu-id="36b46-334">当您实例化<xref:System.Globalization.CultureInfo>对象具有 es ES tradnl 区域性名称，则使用传统的排序顺序。</span><span class="sxs-lookup"><span data-stu-id="36b46-334">When you instantiate a <xref:System.Globalization.CultureInfo> object with the es-ES-tradnl culture name, the traditional sort order is used.</span></span>  
  
-   <span data-ttu-id="36b46-335">ZH-CN （中文 （简体，中国）） 区域性支持两种排序顺序： 按发音 （默认值） 和按笔画数。</span><span class="sxs-lookup"><span data-stu-id="36b46-335">The zh-CN (Chinese (Simplified, PRC)) culture supports two sort orders:  by pronunciation (the default) and by stroke count.</span></span> <span data-ttu-id="36b46-336">当您实例化<xref:System.Globalization.CultureInfo>对象 ZH-CN 区域性名称，则使用默认排序顺序。</span><span class="sxs-lookup"><span data-stu-id="36b46-336">When you instantiate a <xref:System.Globalization.CultureInfo> object with the zh-CN culture name, the default sort order is used.</span></span> <span data-ttu-id="36b46-337">当您实例化<xref:System.Globalization.CultureInfo>对象 0x00020804 的本地标识符的字符串按笔画数排序。</span><span class="sxs-lookup"><span data-stu-id="36b46-337">When you instantiate a <xref:System.Globalization.CultureInfo> object with a local identifier of 0x00020804, strings are sorted by stroke count.</span></span>  
  
 <span data-ttu-id="36b46-338">下表列出了支持替代排序顺序和标识符的默认和替代排序顺序的区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-338">The following table lists the cultures that support alternate sort orders and the identifiers for the default and alternate sort orders.</span></span>  
  
|<span data-ttu-id="36b46-339">区域性名称</span><span class="sxs-lookup"><span data-stu-id="36b46-339">Culture name</span></span>|<span data-ttu-id="36b46-340">culture</span><span class="sxs-lookup"><span data-stu-id="36b46-340">Culture</span></span>|<span data-ttu-id="36b46-341">默认排序名称和标识符</span><span class="sxs-lookup"><span data-stu-id="36b46-341">Default sort name and identifier</span></span>|<span data-ttu-id="36b46-342">替代排序名称和标识符</span><span class="sxs-lookup"><span data-stu-id="36b46-342">Alternate sort name and identifier</span></span>|  
|------------------|-------------|--------------------------------------|----------------------------------------|  
|<span data-ttu-id="36b46-343">es-ES</span><span class="sxs-lookup"><span data-stu-id="36b46-343">es-ES</span></span>|<span data-ttu-id="36b46-344">西班牙语 （西班牙）</span><span class="sxs-lookup"><span data-stu-id="36b46-344">Spanish (Spain)</span></span>|<span data-ttu-id="36b46-345">国际：0x00000C0A</span><span class="sxs-lookup"><span data-stu-id="36b46-345">International: 0x00000C0A</span></span>|<span data-ttu-id="36b46-346">传统：0x0000040A</span><span class="sxs-lookup"><span data-stu-id="36b46-346">Traditional: 0x0000040A</span></span>|  
|<span data-ttu-id="36b46-347">zh-TW</span><span class="sxs-lookup"><span data-stu-id="36b46-347">zh-TW</span></span>|<span data-ttu-id="36b46-348">中文 （台湾）</span><span class="sxs-lookup"><span data-stu-id="36b46-348">Chinese (Taiwan)</span></span>|<span data-ttu-id="36b46-349">笔画数：0x00000404</span><span class="sxs-lookup"><span data-stu-id="36b46-349">Stroke Count: 0x00000404</span></span>|<span data-ttu-id="36b46-350">注音符号分类：0x00030404</span><span class="sxs-lookup"><span data-stu-id="36b46-350">Bopomofo: 0x00030404</span></span>|  
|<span data-ttu-id="36b46-351">zh-CN</span><span class="sxs-lookup"><span data-stu-id="36b46-351">zh-CN</span></span>|<span data-ttu-id="36b46-352">中文 （中华人民共和国）</span><span class="sxs-lookup"><span data-stu-id="36b46-352">Chinese (PRC)</span></span>|<span data-ttu-id="36b46-353">发音：0x00000804</span><span class="sxs-lookup"><span data-stu-id="36b46-353">Pronunciation: 0x00000804</span></span>|<span data-ttu-id="36b46-354">笔画数：0x00020804</span><span class="sxs-lookup"><span data-stu-id="36b46-354">Stroke Count: 0x00020804</span></span>|  
|<span data-ttu-id="36b46-355">zh-HK</span><span class="sxs-lookup"><span data-stu-id="36b46-355">zh-HK</span></span>|<span data-ttu-id="36b46-356">中文 （中国香港特别行政区）</span><span class="sxs-lookup"><span data-stu-id="36b46-356">Chinese (Hong Kong SAR)</span></span>|<span data-ttu-id="36b46-357">笔画数：0x00000c04</span><span class="sxs-lookup"><span data-stu-id="36b46-357">Stroke Count: 0x00000c04</span></span>|<span data-ttu-id="36b46-358">笔画数：0x00020c04</span><span class="sxs-lookup"><span data-stu-id="36b46-358">Stroke Count: 0x00020c04</span></span>|  
|<span data-ttu-id="36b46-359">zh-SG</span><span class="sxs-lookup"><span data-stu-id="36b46-359">zh-SG</span></span>|<span data-ttu-id="36b46-360">中文 （新加坡）</span><span class="sxs-lookup"><span data-stu-id="36b46-360">Chinese (Singapore)</span></span>|<span data-ttu-id="36b46-361">发音：0x00001004</span><span class="sxs-lookup"><span data-stu-id="36b46-361">Pronunciation: 0x00001004</span></span>|<span data-ttu-id="36b46-362">笔画数：0x00021004</span><span class="sxs-lookup"><span data-stu-id="36b46-362">Stroke Count: 0x00021004</span></span>|  
|<span data-ttu-id="36b46-363">zh-MO</span><span class="sxs-lookup"><span data-stu-id="36b46-363">zh-MO</span></span>|<span data-ttu-id="36b46-364">中文 （澳门特别行政区）</span><span class="sxs-lookup"><span data-stu-id="36b46-364">Chinese (Macao SAR)</span></span>|<span data-ttu-id="36b46-365">发音：0x00001404</span><span class="sxs-lookup"><span data-stu-id="36b46-365">Pronunciation: 0x00001404</span></span>|<span data-ttu-id="36b46-366">笔画数：0x00021404</span><span class="sxs-lookup"><span data-stu-id="36b46-366">Stroke Count: 0x00021404</span></span>|  
|<span data-ttu-id="36b46-367">ja-JP</span><span class="sxs-lookup"><span data-stu-id="36b46-367">ja-JP</span></span>|<span data-ttu-id="36b46-368">日语 （日本）</span><span class="sxs-lookup"><span data-stu-id="36b46-368">Japanese (Japan)</span></span>|<span data-ttu-id="36b46-369">默认：0x00000411</span><span class="sxs-lookup"><span data-stu-id="36b46-369">Default: 0x00000411</span></span>|<span data-ttu-id="36b46-370">Unicode：0x00010411</span><span class="sxs-lookup"><span data-stu-id="36b46-370">Unicode: 0x00010411</span></span>|  
|<span data-ttu-id="36b46-371">ko-KR</span><span class="sxs-lookup"><span data-stu-id="36b46-371">ko-KR</span></span>|<span data-ttu-id="36b46-372">朝鲜语 （韩国）</span><span class="sxs-lookup"><span data-stu-id="36b46-372">Korean (Korea)</span></span>|<span data-ttu-id="36b46-373">默认：0x00000412</span><span class="sxs-lookup"><span data-stu-id="36b46-373">Default: 0x00000412</span></span>|<span data-ttu-id="36b46-374">朝鲜语 Xwansung-Unicode:0x00010412</span><span class="sxs-lookup"><span data-stu-id="36b46-374">Korean Xwansung - Unicode: 0x00010412</span></span>|  
|<span data-ttu-id="36b46-375">de-DE</span><span class="sxs-lookup"><span data-stu-id="36b46-375">de-DE</span></span>|<span data-ttu-id="36b46-376">德语 （德国）</span><span class="sxs-lookup"><span data-stu-id="36b46-376">German (Germany)</span></span>|<span data-ttu-id="36b46-377">字典中：0x00000407</span><span class="sxs-lookup"><span data-stu-id="36b46-377">Dictionary: 0x00000407</span></span>|<span data-ttu-id="36b46-378">电话簿排序 DIN:0x00010407</span><span class="sxs-lookup"><span data-stu-id="36b46-378">Phone Book Sort DIN: 0x00010407</span></span>|  
|<span data-ttu-id="36b46-379">hu-HU</span><span class="sxs-lookup"><span data-stu-id="36b46-379">hu-HU</span></span>|<span data-ttu-id="36b46-380">匈牙利语 （匈牙利）</span><span class="sxs-lookup"><span data-stu-id="36b46-380">Hungarian (Hungary)</span></span>|<span data-ttu-id="36b46-381">默认：0x0000040e</span><span class="sxs-lookup"><span data-stu-id="36b46-381">Default: 0x0000040e</span></span>|<span data-ttu-id="36b46-382">技术排序：0x0001040e</span><span class="sxs-lookup"><span data-stu-id="36b46-382">Technical Sort: 0x0001040e</span></span>|  
|<span data-ttu-id="36b46-383">ka-GE</span><span class="sxs-lookup"><span data-stu-id="36b46-383">ka-GE</span></span>|<span data-ttu-id="36b46-384">格鲁吉亚语 （格鲁吉亚）</span><span class="sxs-lookup"><span data-stu-id="36b46-384">Georgian (Georgia)</span></span>|<span data-ttu-id="36b46-385">传统：0x00000437</span><span class="sxs-lookup"><span data-stu-id="36b46-385">Traditional: 0x00000437</span></span>|<span data-ttu-id="36b46-386">现代排序：0x00010437</span><span class="sxs-lookup"><span data-stu-id="36b46-386">Modern Sort: 0x00010437</span></span>|  
  
<a name="Windows"></a>   
## <a name="the-current-culture-and-uwp-apps"></a><span data-ttu-id="36b46-387">当前区域性和 UWP 应用</span><span class="sxs-lookup"><span data-stu-id="36b46-387">The current culture and UWP apps</span></span>  
 <span data-ttu-id="36b46-388">在通用 Windows 平台 (UWP) 应用中，<xref:System.Globalization.CultureInfo.CurrentCulture%2A>和<xref:System.Globalization.CultureInfo.CurrentUICulture%2A>属性是读写的就像它们是.NET Framework 和.NET Core 应用程序中。</span><span class="sxs-lookup"><span data-stu-id="36b46-388">In Universal Windows Platform (UWP) apps, the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> and <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> properties are read-write, just as they are in .NET Framework and .NET Core apps.</span></span> <span data-ttu-id="36b46-389">但是，UWP 应用识别单个区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-389">However, UWP apps recognize a single culture.</span></span> <span data-ttu-id="36b46-390"><xref:System.Globalization.CultureInfo.CurrentCulture%2A>并<xref:System.Globalization.CultureInfo.CurrentUICulture%2A>属性映射到的第一个值[Windows.ApplicationModel.Resources.Core.ResourceManager.DefaultContext.Languages](https://docs.microsoft.com/uwp/api/windows.applicationmodel.resources.core.resourcecontext#properties_)集合。</span><span class="sxs-lookup"><span data-stu-id="36b46-390">The <xref:System.Globalization.CultureInfo.CurrentCulture%2A> and <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> properties map to the first value in the [Windows.ApplicationModel.Resources.Core.ResourceManager.DefaultContext.Languages](https://docs.microsoft.com/uwp/api/windows.applicationmodel.resources.core.resourcecontext#properties_) collection.</span></span>  

<span data-ttu-id="36b46-391">在.NET Framework 和.NET Core 应用程序，当前区域性为每个线程设置，并<xref:System.Globalization.CultureInfo.CurrentCulture%2A>和<xref:System.Globalization.CultureInfo.CurrentUICulture%2A>属性反映了区域性和 UI 区域性的当前线程。</span><span class="sxs-lookup"><span data-stu-id="36b46-391">In .NET Framework and .NET Core apps, the current culture is a per-thread setting, and the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> and <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> properties reflect the culture and UI culture of the current thread only.</span></span> <span data-ttu-id="36b46-392">在 UWP 应用中，当前的区域性将映射到[Windows.ApplicationModel.Resources.Core.ResourceManager.DefaultContext.Languages](https://docs.microsoft.com/uwp/api/windows.applicationmodel.resources.core.resourcecontext#properties_)回收，这是一种全局设置。</span><span class="sxs-lookup"><span data-stu-id="36b46-392">In UWP apps, the current culture maps to the [Windows.ApplicationModel.Resources.Core.ResourceManager.DefaultContext.Languages](https://docs.microsoft.com/uwp/api/windows.applicationmodel.resources.core.resourcecontext#properties_) collection, which is a global setting.</span></span> <span data-ttu-id="36b46-393">设置<xref:System.Globalization.CultureInfo.CurrentCulture%2A>或<xref:System.Globalization.CultureInfo.CurrentUICulture%2A>属性发生更改的整个应用程序的区域性; 不能针对每个线程设置区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-393">Setting the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> or <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> property changes the culture of the entire app; culture cannot be set on a per-thread basis.</span></span>
  
## Examples  
 <span data-ttu-id="36b46-394">下面的示例演示如何创建<xref:System.Globalization.CultureInfo>西班牙语 （西班牙） 与国际排序，另一个对象<xref:System.Globalization.CultureInfo>使用传统排序的对象。</span><span class="sxs-lookup"><span data-stu-id="36b46-394">The following example shows how to create a <xref:System.Globalization.CultureInfo> object for Spanish (Spain) with the international sort and another <xref:System.Globalization.CultureInfo> object with the traditional sort.</span></span>  
  
 [!code-cpp[System.Globalization.CultureInfo_esES#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo_esES/CPP/spanishspain.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo_esES#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo_esES/CS/spanishspain.cs#1)]
 [!code-vb[System.Globalization.CultureInfo_esES#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo_esES/VB/spanishspain.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Globalization.CultureAndRegionInfoBuilder" />
    <altmember cref="T:System.Globalization.RegionInfo" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="36b46-395">初始化 <see cref="T:System.Globalization.CultureInfo" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="36b46-395">Initializes a new instance of the <see cref="T:System.Globalization.CultureInfo" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CultureInfo (int culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (culture As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CultureInfo(int culture);" />
      <MemberSignature Language="F#" Value="new System.Globalization.CultureInfo : int -&gt; System.Globalization.CultureInfo" Usage="new System.Globalization.CultureInfo culture" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="culture" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="culture"><span data-ttu-id="36b46-396">预定义的 <see cref="T:System.Globalization.CultureInfo" /> 标识符、现有 <see cref="T:System.Globalization.CultureInfo" /> 对象的 <see cref="P:System.Globalization.CultureInfo.LCID" /> 属性或仅 Windows 区域性标识符。</span><span class="sxs-lookup"><span data-stu-id="36b46-396">A predefined <see cref="T:System.Globalization.CultureInfo" /> identifier, <see cref="P:System.Globalization.CultureInfo.LCID" /> property of an existing <see cref="T:System.Globalization.CultureInfo" /> object, or Windows-only culture identifier.</span></span></param>
        <summary><span data-ttu-id="36b46-397">根据区域性标识符指定的区域性初始化 <see cref="T:System.Globalization.CultureInfo" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="36b46-397">Initializes a new instance of the <see cref="T:System.Globalization.CultureInfo" /> class based on the culture specified by the culture identifier.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks

<span data-ttu-id="36b46-398">中列出了 Windows 系统上可用的区域性的预定义的区域性标识符**语言标记**中的列[支持的 Windows 的语言/区域名称的列表](https://docs.microsoft.com/openspecs/windows_protocols/ms-lcid/a9eac961-e77d-41a6-90a5-ce1a8b0cdb9c)。</span><span class="sxs-lookup"><span data-stu-id="36b46-398">Predefined culture identifiers for cultures available on Windows system are listed in the **Language tag** column in the [list of language/region names supported by Windows](https://docs.microsoft.com/openspecs/windows_protocols/ms-lcid/a9eac961-e77d-41a6-90a5-ce1a8b0cdb9c).</span></span> <span data-ttu-id="36b46-399">区域性名称遵循由定义的标准[BCP 47](https://tools.ietf.org/html/bcp47)。</span><span class="sxs-lookup"><span data-stu-id="36b46-399">Culture names follow the standard defined by [BCP 47](https://tools.ietf.org/html/bcp47).</span></span>

 <span data-ttu-id="36b46-400">在大多数情况下，`culture`参数映射到相应的国家/地区语言支持 (NLS) 区域设置标识符。</span><span class="sxs-lookup"><span data-stu-id="36b46-400">In most cases, the `culture` parameter is mapped to the corresponding National Language Support (NLS) locale identifier.</span></span> <span data-ttu-id="36b46-401">值`culture`参数将成为的值<xref:System.Globalization.CultureInfo.LCID%2A>的新属性<xref:System.Globalization.CultureInfo>。</span><span class="sxs-lookup"><span data-stu-id="36b46-401">The value of the `culture` parameter becomes the value of the <xref:System.Globalization.CultureInfo.LCID%2A> property of the new <xref:System.Globalization.CultureInfo>.</span></span>  
  
 <span data-ttu-id="36b46-402">我们建议您调用的区域设置名称构造函数<xref:System.Globalization.CultureInfo.%23ctor%2A?displayProperty=nameWithType>，因为区域设置名称要优于 Lcid。</span><span class="sxs-lookup"><span data-stu-id="36b46-402">We recommend that you call the locale name constructor <xref:System.Globalization.CultureInfo.%23ctor%2A?displayProperty=nameWithType>, because locale names are preferable to LCIDs.</span></span> <span data-ttu-id="36b46-403">对于自定义区域设置，区域设置名称是必需的。</span><span class="sxs-lookup"><span data-stu-id="36b46-403">For custom locales, a locale name is required.</span></span>  
  
 <span data-ttu-id="36b46-404">用户可以选择重写一些与 Windows 通过控制面板的区域和语言选项部分的当前区域性关联的值。</span><span class="sxs-lookup"><span data-stu-id="36b46-404">The user might choose to override some of the values associated with the current culture of Windows through the regional and language options portion of Control Panel.</span></span> <span data-ttu-id="36b46-405">例如，用户可以选择以不同格式显示日期，或使用一种货币而不是默认区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-405">For example, the user might choose to display the date in a different format or to use a currency other than the default for the culture.</span></span> <span data-ttu-id="36b46-406">如果指定的区域性标识符与当前的 Windows 区域性的区域性标识符相匹配，此构造函数创建<xref:System.Globalization.CultureInfo>使用这些重写，其中包括的属性的用户设置<xref:System.Globalization.DateTimeFormatInfo>返回实例<xref:System.Globalization.CultureInfo.DateTimeFormat%2A>属性和属性的<xref:System.Globalization.NumberFormatInfo>返回实例<xref:System.Globalization.CultureInfo.NumberFormat%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="36b46-406">If the specified culture identifier matches the culture identifier of the current Windows culture, this constructor creates a <xref:System.Globalization.CultureInfo> that uses those overrides, including user settings for the properties of the <xref:System.Globalization.DateTimeFormatInfo> instance returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> property, and the properties of the <xref:System.Globalization.NumberFormatInfo> instance returned by the <xref:System.Globalization.CultureInfo.NumberFormat%2A> property.</span></span> <span data-ttu-id="36b46-407">如果用户设置与不兼容与关联的区域性<xref:System.Globalization.CultureInfo>(例如，如果在所选的日历不是之一<xref:System.Globalization.CultureInfo.OptionalCalendars%2A>) 方法的结果和属性的值是不确定。</span><span class="sxs-lookup"><span data-stu-id="36b46-407">If the user settings are incompatible with the culture associated with the <xref:System.Globalization.CultureInfo> (for example, if the selected calendar is not one of the <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>) the results of the methods and the values of the properties are undefined.</span></span>  
  
 <span data-ttu-id="36b46-408">如果指定的区域性标识符与当前的 Windows 区域性标识符不匹配，此构造函数创建<xref:System.Globalization.CultureInfo>，使用的默认值为指定的区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-408">If the specified culture identifier does not match the identifier of the current Windows culture, this constructor creates a <xref:System.Globalization.CultureInfo> that uses the default values for the specified culture.</span></span>  
  
 <span data-ttu-id="36b46-409"><xref:System.Globalization.CultureInfo.UseUserOverride%2A>属性始终设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="36b46-409">The <xref:System.Globalization.CultureInfo.UseUserOverride%2A> property is always set to `true`.</span></span>  
  
 <span data-ttu-id="36b46-410">例如，假设阿拉伯语 （沙特阿拉伯） 系统的当前 Windows 区域性并且用户已为公历从回历更改日历。</span><span class="sxs-lookup"><span data-stu-id="36b46-410">For example, suppose that Arabic (Saudi Arabia) is the current Windows culture and the user has changed the calendar from Hijri to Gregorian.</span></span>  
  
-   <span data-ttu-id="36b46-411">与`CultureInfo("0x0401")`（区域性名称 ar SA），<xref:System.Globalization.CultureInfo.Calendar%2A>设置为<xref:System.Globalization.GregorianCalendar>（这是用户设置） 和<xref:System.Globalization.CultureInfo.UseUserOverride%2A>设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="36b46-411">With `CultureInfo("0x0401")` (culture name ar-SA), <xref:System.Globalization.CultureInfo.Calendar%2A> is set to <xref:System.Globalization.GregorianCalendar> (which is the user setting) and <xref:System.Globalization.CultureInfo.UseUserOverride%2A> is set to `true`.</span></span>  
  
-   <span data-ttu-id="36b46-412">与`CultureInfo("0x041E")`（区域性名称 TH-TH），<xref:System.Globalization.CultureInfo.Calendar%2A>设置为<xref:System.Globalization.ThaiBuddhistCalendar>（这是 TH-TH 的默认日历） 和<xref:System.Globalization.CultureInfo.UseUserOverride%2A>设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="36b46-412">With `CultureInfo("0x041E")` (culture name th-TH), <xref:System.Globalization.CultureInfo.Calendar%2A> is set to <xref:System.Globalization.ThaiBuddhistCalendar> (which is the default calendar for th-TH) and <xref:System.Globalization.CultureInfo.UseUserOverride%2A> is set to `true`.</span></span>  
  
 <span data-ttu-id="36b46-413">对于使用欧元的区域性，情况下，.NET Framework 和 Windows XP 设置的默认货币为欧元。</span><span class="sxs-lookup"><span data-stu-id="36b46-413">For cultures that use the euro, the .NET Framework and Windows XP set the default currency as euro.</span></span> <span data-ttu-id="36b46-414">但是，较旧版本的 Windows 不这样做。</span><span class="sxs-lookup"><span data-stu-id="36b46-414">However, older versions of Windows do not.</span></span> <span data-ttu-id="36b46-415">因此，如果将较旧版本的 Windows 用户未更改的货币设置通过控制面板的区域和语言选项部分，货币可能不正确。</span><span class="sxs-lookup"><span data-stu-id="36b46-415">Therefore, if the user of an older version of Windows has not changed the currency setting through the regional and language options portion of Control Panel, the currency might be incorrect.</span></span> <span data-ttu-id="36b46-416">若要使用的货币和.NET Framework 默认设置，该应用程序应使用<xref:System.Globalization.CultureInfo>构造函数重载接受`useUserOverride`参数并将其设置为`false`。</span><span class="sxs-lookup"><span data-stu-id="36b46-416">To use the .NET Framework default setting for the currency, the application should use a <xref:System.Globalization.CultureInfo> constructor overload that accepts a `useUserOverride` parameter and set it to `false`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="36b46-417">有关向后兼容性，构造使用的区域性`culture`0x0004 或 0x7c04 参数将具有<xref:System.Globalization.CultureInfo.Name%2A>ZH-CHS 或 ZH-CHT 属性分别。</span><span class="sxs-lookup"><span data-stu-id="36b46-417">For backwards compatibility, a culture constructed using a `culture` parameter of 0x0004 or 0x7c04 will have a <xref:System.Globalization.CultureInfo.Name%2A> property of zh-CHS or zh-CHT, respectively.</span></span> <span data-ttu-id="36b46-418">应改为想要构造使用-Zh-hans 或此不同的当前标准区域性名称的区域性，除非已使用旧名称的原因。</span><span class="sxs-lookup"><span data-stu-id="36b46-418">You should instead prefer to construct the culture using the current standard culture names of zh-Hans or zh-Hant, unless you have a reason for using the older names.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="36b46-419"><paramref name="culture" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="36b46-419"><paramref name="culture" /> is less than zero.</span></span></exception>
        <exception cref="T:System.Globalization.CultureNotFoundException"><span data-ttu-id="36b46-420"><paramref name="culture" /> 不是有效的区域性标识符。</span><span class="sxs-lookup"><span data-stu-id="36b46-420"><paramref name="culture" /> is not a valid culture identifier.</span></span> <span data-ttu-id="36b46-421">有关详细信息，请参阅“调用方备注”部分。</span><span class="sxs-lookup"><span data-stu-id="36b46-421">See the Notes to Callers section for more information.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="36b46-422">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]和早期版本抛<see cref="T:System.ArgumentException" />如果<paramref name="culture" />不是有效的区域性标识符。</span><span class="sxs-lookup"><span data-stu-id="36b46-422">The [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] and earlier versions throw an <see cref="T:System.ArgumentException" /> if <paramref name="culture" /> is not a valid culture identifier.</span></span> <span data-ttu-id="36b46-423">从开始[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]，此构造函数引发<see cref="T:System.Globalization.CultureNotFoundException" />。</span><span class="sxs-lookup"><span data-stu-id="36b46-423">Starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], this constructor throws a <see cref="T:System.Globalization.CultureNotFoundException" />.</span></span> <span data-ttu-id="36b46-424">下运行的应用程序起[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]或更高版本 Windows 7 或更高版本，该方法尝试检索<see cref="T:System.Globalization.CultureInfo" />对象，其标识符为<paramref name="culture" />从操作系统; 如果操作系统不支持该区域性方法会抛出<see cref="T:System.Globalization.CultureNotFoundException" />异常。</span><span class="sxs-lookup"><span data-stu-id="36b46-424">Starting with apps that run under the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] or later on Windows 7 or later, the method attempts to retrieve a <see cref="T:System.Globalization.CultureInfo" /> object whose identifier is <paramref name="culture" /> from the operating system; if the operating system does not support that culture, the method throws a <see cref="T:System.Globalization.CultureNotFoundException" /> exception.</span></span></para></block>
        <altmember cref="P:System.Globalization.CultureInfo.LCID" />
        <altmember cref="P:System.Globalization.CultureInfo.UseUserOverride" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CultureInfo (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CultureInfo(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Globalization.CultureInfo : string -&gt; System.Globalization.CultureInfo" Usage="new System.Globalization.CultureInfo name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="36b46-425">预定义的 <see cref="T:System.Globalization.CultureInfo" /> 名称、现有 <see cref="T:System.Globalization.CultureInfo" /> 的 <see cref="P:System.Globalization.CultureInfo.Name" /> 或仅 Windows 区域性名称。</span><span class="sxs-lookup"><span data-stu-id="36b46-425">A predefined <see cref="T:System.Globalization.CultureInfo" /> name, <see cref="P:System.Globalization.CultureInfo.Name" /> of an existing <see cref="T:System.Globalization.CultureInfo" />, or Windows-only culture name.</span></span> <span data-ttu-id="36b46-426"><paramref name="name" /> 不区分大小写。</span><span class="sxs-lookup"><span data-stu-id="36b46-426"><paramref name="name" /> is not case-sensitive.</span></span></param>
        <summary><span data-ttu-id="36b46-427">根据由名称指定的区域性初始化 <see cref="T:System.Globalization.CultureInfo" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="36b46-427">Initializes a new instance of the <see cref="T:System.Globalization.CultureInfo" /> class based on the culture specified by name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks

<span data-ttu-id="36b46-428">在 Windows 系统上的预定义的区域性名称的列表，请参阅**语言标记**中的列[支持的 Windows 的语言/区域名称的列表](https://docs.microsoft.com/openspecs/windows_protocols/ms-lcid/a9eac961-e77d-41a6-90a5-ce1a8b0cdb9c)。</span><span class="sxs-lookup"><span data-stu-id="36b46-428">For a list of predefined culture names on Windows systems, see the **Language tag** column in the [list of language/region names supported by Windows](https://docs.microsoft.com/openspecs/windows_protocols/ms-lcid/a9eac961-e77d-41a6-90a5-ce1a8b0cdb9c).</span></span> <span data-ttu-id="36b46-429">区域性名称遵循由定义的标准[BCP 47](https://tools.ietf.org/html/bcp47)。</span><span class="sxs-lookup"><span data-stu-id="36b46-429">Culture names follow the standard defined by [BCP 47](https://tools.ietf.org/html/bcp47).</span></span> <span data-ttu-id="36b46-430">此外，从 Windows 10 开始`name`可以是任何有效的 BCP-47 语言标记。</span><span class="sxs-lookup"><span data-stu-id="36b46-430">In addition, starting with Windows 10, `name` can be any valid BCP-47 language tag.</span></span>  
  
 <span data-ttu-id="36b46-431">如果`name`是<xref:System.String.Empty?displayProperty=nameWithType>，在构造函数创建固定区域性的一个实例; 这等效于检索的值<xref:System.Globalization.CultureInfo.InvariantCulture%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="36b46-431">If `name` is <xref:System.String.Empty?displayProperty=nameWithType>, the constructor creates an instance of the invariant culture; this is equivalent to retrieving the value of the <xref:System.Globalization.CultureInfo.InvariantCulture%2A> property.</span></span>  
  
 <span data-ttu-id="36b46-432">用户可以选择重写一些与 Windows 通过控制面板的区域和语言选项部分的当前区域性关联的值。</span><span class="sxs-lookup"><span data-stu-id="36b46-432">The user might choose to override some of the values associated with the current culture of Windows through the regional and language options portion of Control Panel.</span></span> <span data-ttu-id="36b46-433">例如，用户可以选择以不同格式显示日期，或使用一种货币而不是默认区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-433">For example, the user might choose to display the date in a different format or to use a currency other than the default for the culture.</span></span> <span data-ttu-id="36b46-434">如果与关联的区域性标识符`name`匹配此构造函数的当前 Windows 区域性的区域性标识符创建<xref:System.Globalization.CultureInfo>对象，它使用这些重写值，其中包括用户设置的属性的<xref:System.Globalization.DateTimeFormatInfo>返回的实例<xref:System.Globalization.CultureInfo.DateTimeFormat%2A>属性和属性的<xref:System.Globalization.NumberFormatInfo>返回实例<xref:System.Globalization.CultureInfo.NumberFormat%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="36b46-434">If the culture identifier associated with `name` matches the culture identifier of the current Windows culture, this constructor creates a <xref:System.Globalization.CultureInfo> object that uses those overrides, including user settings for the properties of the <xref:System.Globalization.DateTimeFormatInfo> instance returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> property, and the properties of the <xref:System.Globalization.NumberFormatInfo> instance returned by the <xref:System.Globalization.CultureInfo.NumberFormat%2A> property.</span></span> <span data-ttu-id="36b46-435">如果用户设置与不兼容与关联的区域性<xref:System.Globalization.CultureInfo>，例如，如果在所选的日历不是之一<xref:System.Globalization.CultureInfo.OptionalCalendars%2A>，方法的结果和属性的值是不确定。</span><span class="sxs-lookup"><span data-stu-id="36b46-435">If the user settings are incompatible with the culture associated with the <xref:System.Globalization.CultureInfo>, for example, if the selected calendar is not one of the <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>, the results of the methods and the values of the properties are undefined.</span></span>  
  
 <span data-ttu-id="36b46-436">如果与关联的区域性标识符`name`不的匹配此构造函数的当前 Windows 区域性的区域性标识符创建<xref:System.Globalization.CultureInfo>使用的默认值为指定的区域性的对象。</span><span class="sxs-lookup"><span data-stu-id="36b46-436">If the culture identifier associated with `name` does not match the culture identifier of the current Windows culture, this constructor creates a <xref:System.Globalization.CultureInfo> object that uses the default values for the specified culture.</span></span>  
  
 <span data-ttu-id="36b46-437"><xref:System.Globalization.CultureInfo.UseUserOverride%2A>属性始终设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="36b46-437">The <xref:System.Globalization.CultureInfo.UseUserOverride%2A> property is always set to `true`.</span></span>  
  
 <span data-ttu-id="36b46-438">例如，假设阿拉伯语 （沙特阿拉伯） 是 Windows 的当前区域性和用户可更改回历为公历日历。</span><span class="sxs-lookup"><span data-stu-id="36b46-438">For example, suppose that Arabic (Saudi Arabia) is the current culture of Windows and the user changed the calendar from Hijri to Gregorian.</span></span>  
  
-   <span data-ttu-id="36b46-439">与`CultureInfo("ar-SA")`，<xref:System.Globalization.CultureInfo.Calendar%2A>设置为<xref:System.Globalization.GregorianCalendar>（这是用户设置） 和<xref:System.Globalization.CultureInfo.UseUserOverride%2A>设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="36b46-439">With `CultureInfo("ar-SA")`, <xref:System.Globalization.CultureInfo.Calendar%2A> is set to <xref:System.Globalization.GregorianCalendar> (which is the user setting) and <xref:System.Globalization.CultureInfo.UseUserOverride%2A> is set to `true`.</span></span>  
  
-   <span data-ttu-id="36b46-440">与`CultureInfo("th-TH")`，<xref:System.Globalization.CultureInfo.Calendar%2A>设置为<xref:System.Globalization.ThaiBuddhistCalendar>（这是 TH-TH 的默认日历） 和<xref:System.Globalization.CultureInfo.UseUserOverride%2A>设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="36b46-440">With `CultureInfo("th-TH")`, <xref:System.Globalization.CultureInfo.Calendar%2A> is set to <xref:System.Globalization.ThaiBuddhistCalendar> (which is the default calendar for th-TH) and <xref:System.Globalization.CultureInfo.UseUserOverride%2A> is set to `true`.</span></span>  
  
 <span data-ttu-id="36b46-441"><xref:System.Globalization.CultureInfo.LCID%2A>属性的新<xref:System.Globalization.CultureInfo>设置为与指定名称关联的区域性标识符。</span><span class="sxs-lookup"><span data-stu-id="36b46-441">The <xref:System.Globalization.CultureInfo.LCID%2A> property of the new <xref:System.Globalization.CultureInfo> is set to the culture identifier associated with the specified name.</span></span>  
  
 <span data-ttu-id="36b46-442">对于使用欧元的区域性，情况下，.NET Framework 和 Windows XP 设置的默认货币为欧元。</span><span class="sxs-lookup"><span data-stu-id="36b46-442">For cultures that use the euro, the .NET Framework and Windows XP set the default currency as euro.</span></span> <span data-ttu-id="36b46-443">但是，较旧版本的 Windows 不这样做。</span><span class="sxs-lookup"><span data-stu-id="36b46-443">However, older versions of Windows do not do this.</span></span> <span data-ttu-id="36b46-444">因此，如果将较旧版本的 Windows 用户未更改的货币设置通过控制面板的区域和语言选项部分，货币可能不正确。</span><span class="sxs-lookup"><span data-stu-id="36b46-444">Therefore, if the user of an older version of Windows has not changed the currency setting through the regional and language options portion of Control Panel, the currency might be incorrect.</span></span> <span data-ttu-id="36b46-445">若要使用的货币和.NET Framework 默认设置，该应用程序应使用<xref:System.Globalization.CultureInfo>构造函数重载接受`useUserOverride`参数并将其设置为`false`。</span><span class="sxs-lookup"><span data-stu-id="36b46-445">To use the .NET Framework default setting for the currency, the application should use a <xref:System.Globalization.CultureInfo> constructor overload that accepts a `useUserOverride` parameter and set it to `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36b46-446">下面的示例检索当前区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-446">The following example retrieves the current culture.</span></span> <span data-ttu-id="36b46-447">如果它不是法语 （法国） 区域性，则会调用<xref:System.Globalization.CultureInfo.%23ctor%28System.String%29>构造函数实例化<xref:System.Globalization.CultureInfo>表示法语 （法国） 区域性，并使其成为当前线程区域性的对象。</span><span class="sxs-lookup"><span data-stu-id="36b46-447">If it is anything other than the French (France) culture, it calls the <xref:System.Globalization.CultureInfo.%23ctor%28System.String%29> constructor to instantiate a <xref:System.Globalization.CultureInfo> object that represents the French (France) culture and makes it the current thread culture.</span></span> <span data-ttu-id="36b46-448">否则，它实例化<xref:System.Globalization.CultureInfo>表示法语 （卢森堡） 区域性，并使其当前区域性的对象。</span><span class="sxs-lookup"><span data-stu-id="36b46-448">Otherwise, it instantiates a <xref:System.Globalization.CultureInfo> object that represents the French (Luxembourg) culture and makes it the current culture.</span></span>  
  
 [!code-csharp[System.Globalization.CultureInfo#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Globalization.CultureInfo/cs/Change1.cs#3)]
 [!code-vb[System.Globalization.CultureInfo#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Globalization.CultureInfo/vb/Change1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="36b46-449"><paramref name="name" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="36b46-449"><paramref name="name" /> is null.</span></span></exception>
        <exception cref="T:System.Globalization.CultureNotFoundException"><span data-ttu-id="36b46-450"><paramref name="name" /> 不是有效的区域性名称。</span><span class="sxs-lookup"><span data-stu-id="36b46-450"><paramref name="name" /> is not a valid culture name.</span></span> <span data-ttu-id="36b46-451">有关详细信息，请参阅“对调用方的说明”部分。</span><span class="sxs-lookup"><span data-stu-id="36b46-451">For more information, see the Notes to Callers section.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="36b46-452">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]和早期版本抛<see cref="T:System.ArgumentException" />如果<paramref name="name" />不是有效的区域性名称。</span><span class="sxs-lookup"><span data-stu-id="36b46-452">The [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] and earlier versions throw an <see cref="T:System.ArgumentException" /> if <paramref name="name" /> is not a valid culture name.</span></span> <span data-ttu-id="36b46-453">从开始[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]，此构造函数引发<see cref="T:System.Globalization.CultureNotFoundException" />。</span><span class="sxs-lookup"><span data-stu-id="36b46-453">Starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], this constructor throws a <see cref="T:System.Globalization.CultureNotFoundException" />.</span></span> <span data-ttu-id="36b46-454">下运行的应用程序起[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]或更高版本 Windows 7 或更高版本，该方法尝试检索<see cref="T:System.Globalization.CultureInfo" />对象，其标识符为<paramref name="name" />从操作系统; 如果操作系统不支持该区域性，并且<paramref name="name" />不是补充或替换的区域性，该方法将引发名称<see cref="T:System.Globalization.CultureNotFoundException" />异常。</span><span class="sxs-lookup"><span data-stu-id="36b46-454">Starting with apps that run under the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] or later on Windows 7 or later, the method attempts to retrieve a <see cref="T:System.Globalization.CultureInfo" /> object whose identifier is <paramref name="name" /> from the operating system; if the operating system does not support that culture, and if <paramref name="name" /> is not the name of a supplementary or replacement culture, the method throws a <see cref="T:System.Globalization.CultureNotFoundException" /> exception.</span></span></para></block>
        <altmember cref="P:System.Globalization.CultureInfo.LCID" />
        <altmember cref="P:System.Globalization.CultureInfo.UseUserOverride" />
        <altmember cref="M:System.Globalization.CultureInfo.CreateSpecificCulture(System.String)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CultureInfo (int culture, bool useUserOverride);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 culture, bool useUserOverride) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.#ctor(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (culture As Integer, useUserOverride As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CultureInfo(int culture, bool useUserOverride);" />
      <MemberSignature Language="F#" Value="new System.Globalization.CultureInfo : int * bool -&gt; System.Globalization.CultureInfo" Usage="new System.Globalization.CultureInfo (culture, useUserOverride)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="culture" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="useUserOverride" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="culture"><span data-ttu-id="36b46-455">预定义的 <see cref="T:System.Globalization.CultureInfo" /> 标识符、现有 <see cref="T:System.Globalization.CultureInfo" /> 对象的 <see cref="P:System.Globalization.CultureInfo.LCID" /> 属性或仅 Windows 区域性标识符。</span><span class="sxs-lookup"><span data-stu-id="36b46-455">A predefined <see cref="T:System.Globalization.CultureInfo" /> identifier, <see cref="P:System.Globalization.CultureInfo.LCID" /> property of an existing <see cref="T:System.Globalization.CultureInfo" /> object, or Windows-only culture identifier.</span></span></param>
        <param name="useUserOverride"><span data-ttu-id="36b46-456">一个布尔值，它指示是使用用户选定的区域性设置 (<see langword="true" />)，还是使用默认区域性设置 (<see langword="false" />)。</span><span class="sxs-lookup"><span data-stu-id="36b46-456">A Boolean that denotes whether to use the user-selected culture settings (<see langword="true" />) or the default culture settings (<see langword="false" />).</span></span></param>
        <summary><span data-ttu-id="36b46-457">基于区域性标识符指定的区域性并基于布尔值（指定是否使用系统中用户选定的区域性设置）来初始化 <see cref="T:System.Globalization.CultureInfo" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="36b46-457">Initializes a new instance of the <see cref="T:System.Globalization.CultureInfo" /> class based on the culture specified by the culture identifier and on the Boolean that specifies whether to use the user-selected culture settings from the system.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks

<span data-ttu-id="36b46-458">中列出了在 Windows 系统上可用的预定义的区域性标识符**语言标记**中的列[支持的 Windows 的语言/区域名称的列表](https://docs.microsoft.com/openspecs/windows_protocols/ms-lcid/a9eac961-e77d-41a6-90a5-ce1a8b0cdb9c)。</span><span class="sxs-lookup"><span data-stu-id="36b46-458">Predefined culture identifiers available on Windows systems are listed in the **Language tag** column in the [list of language/region names supported by Windows](https://docs.microsoft.com/openspecs/windows_protocols/ms-lcid/a9eac961-e77d-41a6-90a5-ce1a8b0cdb9c).</span></span> <span data-ttu-id="36b46-459">区域性名称遵循由定义的标准[BCP 47](https://tools.ietf.org/html/bcp47)。</span><span class="sxs-lookup"><span data-stu-id="36b46-459">Culture names follow the standard defined by [BCP 47](https://tools.ietf.org/html/bcp47).</span></span>

 <span data-ttu-id="36b46-460">在大多数情况下，`culture`参数映射到相应的国家/地区语言支持 (NLS) 区域设置标识符。</span><span class="sxs-lookup"><span data-stu-id="36b46-460">In most cases, the `culture` parameter is mapped to the corresponding National Language Support (NLS) locale identifier.</span></span> <span data-ttu-id="36b46-461">值`culture`参数将成为的值<xref:System.Globalization.CultureInfo.LCID%2A>的新属性<xref:System.Globalization.CultureInfo>。</span><span class="sxs-lookup"><span data-stu-id="36b46-461">The value of the `culture` parameter becomes the value of the <xref:System.Globalization.CultureInfo.LCID%2A> property of the new <xref:System.Globalization.CultureInfo>.</span></span>  
  
 <span data-ttu-id="36b46-462">我们建议您调用的区域设置名称构造函数<xref:System.Globalization.CultureInfo.%23ctor%2A?displayProperty=nameWithType>，因为区域设置名称要优于 Lcid。</span><span class="sxs-lookup"><span data-stu-id="36b46-462">We recommend that you call the locale name constructor <xref:System.Globalization.CultureInfo.%23ctor%2A?displayProperty=nameWithType>, because locale names are preferable to LCIDs.</span></span> <span data-ttu-id="36b46-463">对于自定义区域设置，区域设置名称是必需的。</span><span class="sxs-lookup"><span data-stu-id="36b46-463">For custom locales, a locale name is required.</span></span>  
  
 <span data-ttu-id="36b46-464">用户可以选择重写一些与 Windows 通过控制面板的区域和语言选项部分的当前区域性关联的值。</span><span class="sxs-lookup"><span data-stu-id="36b46-464">The user might choose to override some of the values associated with the current culture of Windows through the regional and language options portion of Control Panel.</span></span> <span data-ttu-id="36b46-465">例如，用户可以选择以不同格式显示日期，或使用一种货币而不是默认区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-465">For example, the user might choose to display the date in a different format or to use a currency other than the default for the culture.</span></span>  
  
 <span data-ttu-id="36b46-466">应用程序通常应不禁止用户重写。</span><span class="sxs-lookup"><span data-stu-id="36b46-466">Applications should typically not disallow user overrides.</span></span> <span data-ttu-id="36b46-467">请注意，不允许重写不本身保证数据稳定性;请参阅博客文章[区域性数据不应视为稳定 （除外固定）](https://go.microsoft.com/fwlink/?LinkId=156850)。</span><span class="sxs-lookup"><span data-stu-id="36b46-467">Note that disallowing overrides does not itself guarantee data stability; see the blog entry [Culture data shouldn't be considered stable (except for Invariant)](https://go.microsoft.com/fwlink/?LinkId=156850).</span></span>  
  
 <span data-ttu-id="36b46-468">如果<xref:System.Globalization.CultureInfo.UseUserOverride%2A>属性设置为`true`并指定的区域性标识符匹配的当前 Windows 区域性标识符，此构造函数创建<xref:System.Globalization.CultureInfo>，使用这些重写值，包括以下属性的用户设置<xref:System.Globalization.DateTimeFormatInfo>返回实例<xref:System.Globalization.CultureInfo.DateTimeFormat%2A>属性和属性的<xref:System.Globalization.NumberFormatInfo>返回实例<xref:System.Globalization.CultureInfo.NumberFormat%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="36b46-468">If the <xref:System.Globalization.CultureInfo.UseUserOverride%2A> property is set to `true` and the specified culture identifier matches the identifier of the current Windows culture, this constructor creates a <xref:System.Globalization.CultureInfo> that uses those overrides, including user settings for the properties of the <xref:System.Globalization.DateTimeFormatInfo> instance returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> property, and the properties of the <xref:System.Globalization.NumberFormatInfo> instance returned by the <xref:System.Globalization.CultureInfo.NumberFormat%2A> property.</span></span> <span data-ttu-id="36b46-469">如果用户设置与不兼容与关联的区域性<xref:System.Globalization.CultureInfo>，例如，如果在所选的日历不是之一<xref:System.Globalization.CultureInfo.OptionalCalendars%2A>，方法的结果和属性的值是不确定。</span><span class="sxs-lookup"><span data-stu-id="36b46-469">If the user settings are incompatible with the culture associated with the <xref:System.Globalization.CultureInfo>, for example, if the selected calendar is not one of the <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>, the results of the methods and the values of the properties are undefined.</span></span>  
  
 <span data-ttu-id="36b46-470">否则，此构造函数创建<xref:System.Globalization.CultureInfo>，使用的默认值为指定的区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-470">Otherwise, this constructor creates a <xref:System.Globalization.CultureInfo> that uses the default values for the specified culture.</span></span>  
  
 <span data-ttu-id="36b46-471">值`useUserOverride`参数将成为的值<xref:System.Globalization.CultureInfo.UseUserOverride%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="36b46-471">The value of the `useUserOverride` parameter becomes the value of the <xref:System.Globalization.CultureInfo.UseUserOverride%2A> property.</span></span>  
  
 <span data-ttu-id="36b46-472">例如，假设阿拉伯语 （沙特阿拉伯） 是 Windows 的当前区域性和用户已在日历回历从更改为公历。</span><span class="sxs-lookup"><span data-stu-id="36b46-472">For example, suppose that Arabic (Saudi Arabia) is the current culture of Windows and the user has changed the calendar from Hijri to Gregorian.</span></span>  
  
-   <span data-ttu-id="36b46-473">与`CultureInfo("0x0401", true)`（区域性名称 ar SA），<xref:System.Globalization.CultureInfo.Calendar%2A>设置为<xref:System.Globalization.GregorianCalendar>（这是用户设置） 和<xref:System.Globalization.CultureInfo.UseUserOverride%2A>设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="36b46-473">With `CultureInfo("0x0401", true)` (culture name ar-SA), <xref:System.Globalization.CultureInfo.Calendar%2A> is set to <xref:System.Globalization.GregorianCalendar> (which is the user setting) and <xref:System.Globalization.CultureInfo.UseUserOverride%2A> is set to `true`.</span></span>  
  
-   <span data-ttu-id="36b46-474">与`CultureInfo("0x0401", false)`（区域性名称 ar SA），<xref:System.Globalization.CultureInfo.Calendar%2A>设置为<xref:System.Globalization.HijriCalendar>（这是 ar SA 的默认日历） 和<xref:System.Globalization.CultureInfo.UseUserOverride%2A>设置为`false`。</span><span class="sxs-lookup"><span data-stu-id="36b46-474">With `CultureInfo("0x0401", false)` (culture name ar-SA), <xref:System.Globalization.CultureInfo.Calendar%2A> is set to <xref:System.Globalization.HijriCalendar> (which is the default calendar for ar-SA) and <xref:System.Globalization.CultureInfo.UseUserOverride%2A> is set to `false`.</span></span>  
  
-   <span data-ttu-id="36b46-475">与`CultureInfo("0x041E", true)`（区域性名称 TH-TH），<xref:System.Globalization.CultureInfo.Calendar%2A>设置为<xref:System.Globalization.ThaiBuddhistCalendar>（这是 TH-TH 的默认日历） 和<xref:System.Globalization.CultureInfo.UseUserOverride%2A>设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="36b46-475">With `CultureInfo("0x041E", true)` (culture name th-TH), <xref:System.Globalization.CultureInfo.Calendar%2A> is set to <xref:System.Globalization.ThaiBuddhistCalendar> (which is the default calendar for th-TH) and <xref:System.Globalization.CultureInfo.UseUserOverride%2A> is set to `true`.</span></span>  
  
-   <span data-ttu-id="36b46-476">与`CultureInfo("0x041E", false)`（区域性名称 TH-TH），<xref:System.Globalization.CultureInfo.Calendar%2A>设置为<xref:System.Globalization.ThaiBuddhistCalendar>（这是 TH-TH 的默认日历） 和<xref:System.Globalization.CultureInfo.UseUserOverride%2A>设置为`false`。</span><span class="sxs-lookup"><span data-stu-id="36b46-476">With `CultureInfo("0x041E", false)` (culture name th-TH), <xref:System.Globalization.CultureInfo.Calendar%2A> is set to <xref:System.Globalization.ThaiBuddhistCalendar> (which is the default calendar for th-TH) and <xref:System.Globalization.CultureInfo.UseUserOverride%2A> is set to `false`.</span></span>  
  
 <span data-ttu-id="36b46-477">对于使用欧元的区域性，情况下，.NET Framework 和 Windows XP 设置的默认货币为欧元。</span><span class="sxs-lookup"><span data-stu-id="36b46-477">For cultures that use the euro, the .NET Framework and Windows XP set the default currency as euro.</span></span> <span data-ttu-id="36b46-478">但是，较旧版本的 Windows 不这样做。</span><span class="sxs-lookup"><span data-stu-id="36b46-478">However, older versions of Windows do not.</span></span> <span data-ttu-id="36b46-479">因此，如果将较旧版本的 Windows 用户未更改的货币设置通过控制面板的区域和语言选项部分，货币可能不正确。</span><span class="sxs-lookup"><span data-stu-id="36b46-479">Therefore, if the user of an older version of Windows has not changed the currency setting through the regional and language options portion of Control Panel, the currency might be incorrect.</span></span> <span data-ttu-id="36b46-480">若要使用的货币和.NET Framework 默认设置，该应用程序应设置`useUserOverride`参数`false`。</span><span class="sxs-lookup"><span data-stu-id="36b46-480">To use the .NET Framework default setting for the currency, the application should set the `useUserOverride` parameter to `false`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="36b46-481">有关向后兼容性，构造使用的区域性`culture`0x0004 或 0x7c04 参数将具有<xref:System.Globalization.CultureInfo.Name%2A>ZH-CHS 或 ZH-CHT 属性分别。</span><span class="sxs-lookup"><span data-stu-id="36b46-481">For backwards compatibility, a culture constructed using a `culture` parameter of 0x0004 or 0x7c04 will have a <xref:System.Globalization.CultureInfo.Name%2A> property of zh-CHS or zh-CHT, respectively.</span></span> <span data-ttu-id="36b46-482">应改为想要构造使用-Zh-hans 或此不同的当前标准区域性名称的区域性，除非已使用旧名称的原因。</span><span class="sxs-lookup"><span data-stu-id="36b46-482">You should instead prefer to construct the culture using the current standard culture names of zh-Hans or zh-Hant, unless you have a reason for using the older names.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="36b46-483"><paramref name="culture" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="36b46-483"><paramref name="culture" /> is less than zero.</span></span></exception>
        <exception cref="T:System.Globalization.CultureNotFoundException"><span data-ttu-id="36b46-484"><paramref name="culture" /> 不是有效的区域性标识符。</span><span class="sxs-lookup"><span data-stu-id="36b46-484"><paramref name="culture" /> is not a valid culture identifier.</span></span> <span data-ttu-id="36b46-485">有关详细信息，请参阅“调用方备注”部分。</span><span class="sxs-lookup"><span data-stu-id="36b46-485">See the Notes to Callers section for more information.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="36b46-486">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]和早期版本抛<see cref="T:System.ArgumentException" />如果<paramref name="culture" />不是有效的区域性标识符。</span><span class="sxs-lookup"><span data-stu-id="36b46-486">The [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] and earlier versions throw an <see cref="T:System.ArgumentException" /> if <paramref name="culture" /> is not a valid culture identifier.</span></span> <span data-ttu-id="36b46-487">从开始[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]，此构造函数引发<see cref="T:System.Globalization.CultureNotFoundException" />。</span><span class="sxs-lookup"><span data-stu-id="36b46-487">Starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], this constructor throws a <see cref="T:System.Globalization.CultureNotFoundException" />.</span></span> <span data-ttu-id="36b46-488">下运行的应用程序起[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]或更高版本 Windows 7 或更高版本，该方法尝试检索<see cref="T:System.Globalization.CultureInfo" />对象，其标识符为<paramref name="culture" />从操作系统; 如果操作系统不支持该区域性方法会抛出<see cref="T:System.Globalization.CultureNotFoundException" />异常。</span><span class="sxs-lookup"><span data-stu-id="36b46-488">Starting with apps that run under the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] or later on Windows 7 or later, the method attempts to retrieve a <see cref="T:System.Globalization.CultureInfo" /> object whose identifier is <paramref name="culture" /> from the operating system; if the operating system does not support that culture, the method throws a <see cref="T:System.Globalization.CultureNotFoundException" /> exception.</span></span></para></block>
        <altmember cref="P:System.Globalization.CultureInfo.LCID" />
        <altmember cref="P:System.Globalization.CultureInfo.UseUserOverride" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CultureInfo (string name, bool useUserOverride);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, bool useUserOverride) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.#ctor(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, useUserOverride As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CultureInfo(System::String ^ name, bool useUserOverride);" />
      <MemberSignature Language="F#" Value="new System.Globalization.CultureInfo : string * bool -&gt; System.Globalization.CultureInfo" Usage="new System.Globalization.CultureInfo (name, useUserOverride)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="useUserOverride" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="36b46-489">预定义的 <see cref="T:System.Globalization.CultureInfo" /> 名称、现有 <see cref="T:System.Globalization.CultureInfo" /> 的 <see cref="P:System.Globalization.CultureInfo.Name" /> 或仅 Windows 区域性名称。</span><span class="sxs-lookup"><span data-stu-id="36b46-489">A predefined <see cref="T:System.Globalization.CultureInfo" /> name, <see cref="P:System.Globalization.CultureInfo.Name" /> of an existing <see cref="T:System.Globalization.CultureInfo" />, or Windows-only culture name.</span></span> <span data-ttu-id="36b46-490"><paramref name="name" /> 不区分大小写。</span><span class="sxs-lookup"><span data-stu-id="36b46-490"><paramref name="name" /> is not case-sensitive.</span></span></param>
        <param name="useUserOverride"><span data-ttu-id="36b46-491">一个布尔值，它指示是使用用户选定的区域性设置 (<see langword="true" />)，还是使用默认区域性设置 (<see langword="false" />)。</span><span class="sxs-lookup"><span data-stu-id="36b46-491">A Boolean that denotes whether to use the user-selected culture settings (<see langword="true" />) or the default culture settings (<see langword="false" />).</span></span></param>
        <summary><span data-ttu-id="36b46-492">基于名称指定的区域性并基于布尔值（指定是否使用系统中用户选定的区域性设置）来初始化 <see cref="T:System.Globalization.CultureInfo" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="36b46-492">Initializes a new instance of the <see cref="T:System.Globalization.CultureInfo" /> class based on the culture specified by name and on the Boolean that specifies whether to use the user-selected culture settings from the system.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks

<span data-ttu-id="36b46-493">预定义的区域性名称的列表，请参阅**语言标记**中的列[支持的 Windows 的语言/区域名称的列表](https://docs.microsoft.com/openspecs/windows_protocols/ms-lcid/a9eac961-e77d-41a6-90a5-ce1a8b0cdb9c)。</span><span class="sxs-lookup"><span data-stu-id="36b46-493">For a list of predefined culture names, see the **Language tag** column in the [list of language/region names supported by Windows](https://docs.microsoft.com/openspecs/windows_protocols/ms-lcid/a9eac961-e77d-41a6-90a5-ce1a8b0cdb9c).</span></span> <span data-ttu-id="36b46-494">区域性名称遵循由定义的标准[BCP 47](https://tools.ietf.org/html/bcp47)。</span><span class="sxs-lookup"><span data-stu-id="36b46-494">Culture names follow the standard defined by [BCP 47](https://tools.ietf.org/html/bcp47).</span></span> <span data-ttu-id="36b46-495">此外，从 Windows 10 开始`name`可以是任何有效的 BCP-47 语言标记。</span><span class="sxs-lookup"><span data-stu-id="36b46-495">In addition, starting with Windows 10, `name` can be any valid BCP-47 language tag.</span></span>  
  
<span data-ttu-id="36b46-496">如果`name`是<xref:System.String.Empty?displayProperty=nameWithType>，在构造函数创建固定区域性的一个实例; 这等效于检索的值<xref:System.Globalization.CultureInfo.InvariantCulture%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="36b46-496">If `name` is <xref:System.String.Empty?displayProperty=nameWithType>, the constructor creates an instance of the invariant culture; this is equivalent to retrieving the value of the <xref:System.Globalization.CultureInfo.InvariantCulture%2A> property.</span></span>  
  
 <span data-ttu-id="36b46-497">用户可以选择重写一些与通过控制面板的区域和语言选项部分的当前 Windows 区域性关联的值。</span><span class="sxs-lookup"><span data-stu-id="36b46-497">The user might choose to override some of the values associated with the current Windows culture through the regional and language options portion of Control Panel.</span></span> <span data-ttu-id="36b46-498">例如，用户可以选择以不同格式显示日期，或使用一种货币而不是默认区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-498">For example, the user might choose to display the date in a different format or to use a currency other than the default for the culture.</span></span>  
  
 <span data-ttu-id="36b46-499">应用程序通常应不禁止用户重写。</span><span class="sxs-lookup"><span data-stu-id="36b46-499">Applications should typically not disallow user overrides.</span></span> <span data-ttu-id="36b46-500">请注意，不允许重写不本身保证数据稳定性;请参阅博客文章[区域性数据不应视为稳定 （除外固定）](https://go.microsoft.com/fwlink/?LinkId=156850)。</span><span class="sxs-lookup"><span data-stu-id="36b46-500">Note that disallowing overrides does not itself guarantee data stability; see the blog entry [Culture data shouldn't be considered stable (except for Invariant)](https://go.microsoft.com/fwlink/?LinkId=156850).</span></span>  
  
 <span data-ttu-id="36b46-501">如果<xref:System.Globalization.CultureInfo.UseUserOverride%2A>属性设置为`true`和与指定的区域性名称关联的区域性标识符匹配的当前 Windows 区域性的区域性标识符，此构造函数创建<xref:System.Globalization.CultureInfo>，它使用这些替代其中包括用户设置的属性<xref:System.Globalization.DateTimeFormatInfo>返回实例<xref:System.Globalization.CultureInfo.DateTimeFormat%2A>属性和属性的<xref:System.Globalization.NumberFormatInfo>返回实例<xref:System.Globalization.CultureInfo.NumberFormat%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="36b46-501">If the <xref:System.Globalization.CultureInfo.UseUserOverride%2A> property is set to `true` and the culture identifier associated with the specified culture name matches the culture identifier of the current Windows culture, this constructor creates a <xref:System.Globalization.CultureInfo> that uses those overrides, including user settings for the properties of the <xref:System.Globalization.DateTimeFormatInfo> instance returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> property, and the properties of the <xref:System.Globalization.NumberFormatInfo> instance returned by the <xref:System.Globalization.CultureInfo.NumberFormat%2A> property.</span></span> <span data-ttu-id="36b46-502">如果用户设置与不兼容与关联的区域性<xref:System.Globalization.CultureInfo>，例如，如果在所选的日历不是之一<xref:System.Globalization.CultureInfo.OptionalCalendars%2A>，方法的结果和属性的值是不确定。</span><span class="sxs-lookup"><span data-stu-id="36b46-502">If the user settings are incompatible with the culture associated with the <xref:System.Globalization.CultureInfo>, for example, if the selected calendar is not one of the <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>, the results of the methods and the values of the properties are undefined.</span></span>  
  
 <span data-ttu-id="36b46-503">否则，此构造函数创建<xref:System.Globalization.CultureInfo>，使用的默认值为指定的区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-503">Otherwise, this constructor creates a <xref:System.Globalization.CultureInfo> that uses the default values for the specified culture.</span></span>  
  
 <span data-ttu-id="36b46-504">值`useUserOverride`参数将成为的值<xref:System.Globalization.CultureInfo.UseUserOverride%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="36b46-504">The value of the `useUserOverride` parameter becomes the value of the <xref:System.Globalization.CultureInfo.UseUserOverride%2A> property.</span></span>  
  
 <span data-ttu-id="36b46-505">例如，假设阿拉伯语 （沙特阿拉伯） 是 Windows 的当前区域性和用户可更改回历为公历日历。</span><span class="sxs-lookup"><span data-stu-id="36b46-505">For example, suppose that Arabic (Saudi Arabia) is the current culture of Windows and the user changed the calendar from Hijri to Gregorian.</span></span>  
  
-   <span data-ttu-id="36b46-506">与`CultureInfo("ar-SA", true)`，<xref:System.Globalization.CultureInfo.Calendar%2A>设置为<xref:System.Globalization.GregorianCalendar>（这是用户设置） 和<xref:System.Globalization.CultureInfo.UseUserOverride%2A>设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="36b46-506">With `CultureInfo("ar-SA", true)`, <xref:System.Globalization.CultureInfo.Calendar%2A> is set to <xref:System.Globalization.GregorianCalendar> (which is the user setting) and <xref:System.Globalization.CultureInfo.UseUserOverride%2A> is set to `true`.</span></span>  
  
-   <span data-ttu-id="36b46-507">与`CultureInfo("ar-SA", false)`，<xref:System.Globalization.CultureInfo.Calendar%2A>设置为<xref:System.Globalization.HijriCalendar>（这是 ar SA 的默认日历） 和<xref:System.Globalization.CultureInfo.UseUserOverride%2A>设置为`false`。</span><span class="sxs-lookup"><span data-stu-id="36b46-507">With `CultureInfo("ar-SA", false)`, <xref:System.Globalization.CultureInfo.Calendar%2A> is set to <xref:System.Globalization.HijriCalendar> (which is the default calendar for ar-SA) and <xref:System.Globalization.CultureInfo.UseUserOverride%2A> is set to `false`.</span></span>  
  
-   <span data-ttu-id="36b46-508">与`CultureInfo("th-TH", true)`，<xref:System.Globalization.CultureInfo.Calendar%2A>设置为<xref:System.Globalization.ThaiBuddhistCalendar>（这是 TH-TH 的默认日历） 和<xref:System.Globalization.CultureInfo.UseUserOverride%2A>设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="36b46-508">With `CultureInfo("th-TH", true)`, <xref:System.Globalization.CultureInfo.Calendar%2A> is set to <xref:System.Globalization.ThaiBuddhistCalendar> (which is the default calendar for th-TH) and <xref:System.Globalization.CultureInfo.UseUserOverride%2A> is set to `true`.</span></span>  
  
-   <span data-ttu-id="36b46-509">与`CultureInfo("th-TH", false)`，<xref:System.Globalization.CultureInfo.Calendar%2A>设置为<xref:System.Globalization.ThaiBuddhistCalendar>（这是 TH-TH 的默认日历） 和<xref:System.Globalization.CultureInfo.UseUserOverride%2A>设置为`false`。</span><span class="sxs-lookup"><span data-stu-id="36b46-509">With `CultureInfo("th-TH", false)`, <xref:System.Globalization.CultureInfo.Calendar%2A> is set to <xref:System.Globalization.ThaiBuddhistCalendar> (which is the default calendar for th-TH) and <xref:System.Globalization.CultureInfo.UseUserOverride%2A> is set to `false`.</span></span>  
  
 <span data-ttu-id="36b46-510"><xref:System.Globalization.CultureInfo.LCID%2A>属性的新<xref:System.Globalization.CultureInfo>设置为与指定名称关联的区域性标识符。</span><span class="sxs-lookup"><span data-stu-id="36b46-510">The <xref:System.Globalization.CultureInfo.LCID%2A> property of the new <xref:System.Globalization.CultureInfo> is set to the culture identifier associated with the specified name.</span></span>  
  
 <span data-ttu-id="36b46-511">对于使用欧元的区域性，情况下，.NET Framework 和 Windows XP 设置的默认货币为欧元。</span><span class="sxs-lookup"><span data-stu-id="36b46-511">For cultures that use the euro, the .NET Framework and Windows XP set the default currency as euro.</span></span> <span data-ttu-id="36b46-512">但是，较旧版本的 Windows 不这样做。</span><span class="sxs-lookup"><span data-stu-id="36b46-512">However, older versions of Windows do not do this.</span></span> <span data-ttu-id="36b46-513">因此，如果将较旧版本的 Windows 用户未更改的货币设置通过控制面板的区域和语言选项部分，货币可能不正确。</span><span class="sxs-lookup"><span data-stu-id="36b46-513">Therefore, if the user of an older version of Windows has not changed the currency setting through the regional and language options portion of Control Panel, the currency might be incorrect.</span></span> <span data-ttu-id="36b46-514">若要使用的货币和.NET Framework 默认设置，该应用程序应设置`useUserOverride`参数`false`。</span><span class="sxs-lookup"><span data-stu-id="36b46-514">To use the .NET Framework default setting for the currency, the application should set the `useUserOverride` parameter to `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="36b46-515"><paramref name="name" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="36b46-515"><paramref name="name" /> is null.</span></span></exception>
        <exception cref="T:System.Globalization.CultureNotFoundException"><span data-ttu-id="36b46-516"><paramref name="name" /> 不是有效的区域性名称。</span><span class="sxs-lookup"><span data-stu-id="36b46-516"><paramref name="name" /> is not a valid culture name.</span></span> <span data-ttu-id="36b46-517">有关详细信息，请参阅“调用方备注”部分。</span><span class="sxs-lookup"><span data-stu-id="36b46-517">See the Notes to Callers section for more information.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="36b46-518">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]和早期版本抛<see cref="T:System.ArgumentException" />如果<paramref name="name" />不是有效的区域性名称。</span><span class="sxs-lookup"><span data-stu-id="36b46-518">The [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] and earlier versions throw an <see cref="T:System.ArgumentException" /> if <paramref name="name" /> is not a valid culture name.</span></span> <span data-ttu-id="36b46-519">从开始[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]，此构造函数引发<see cref="T:System.Globalization.CultureNotFoundException" />。</span><span class="sxs-lookup"><span data-stu-id="36b46-519">Starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], this constructor throws a <see cref="T:System.Globalization.CultureNotFoundException" />.</span></span> <span data-ttu-id="36b46-520">下运行的应用程序起[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]或更高版本 Windows 7 或更高版本，该方法尝试检索<see cref="T:System.Globalization.CultureInfo" />对象，其标识符为<paramref name="name" />从操作系统; 如果操作系统不支持该区域性，并且<paramref name="name" />不是补充或替换的区域性，该方法将引发名称<see cref="T:System.Globalization.CultureNotFoundException" />异常。</span><span class="sxs-lookup"><span data-stu-id="36b46-520">Starting with apps that run under the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] or later on Windows 7 or later, the method attempts to retrieve a <see cref="T:System.Globalization.CultureInfo" /> object whose identifier is <paramref name="name" /> from the operating system; if the operating system does not support that culture, and if <paramref name="name" /> is not the name of a supplementary or replacement culture, the method throws a <see cref="T:System.Globalization.CultureNotFoundException" /> exception.</span></span></para></block>
        <altmember cref="P:System.Globalization.CultureInfo.LCID" />
        <altmember cref="P:System.Globalization.CultureInfo.UseUserOverride" />
        <altmember cref="M:System.Globalization.CultureInfo.CreateSpecificCulture(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Calendar">
      <MemberSignature Language="C#" Value="public virtual System.Globalization.Calendar Calendar { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.Calendar Calendar" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.Calendar" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Calendar As Calendar" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Globalization::Calendar ^ Calendar { System::Globalization::Calendar ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Calendar : System.Globalization.Calendar" Usage="System.Globalization.CultureInfo.Calendar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.Calendar</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36b46-521">获取区域性使用的默认日历。</span><span class="sxs-lookup"><span data-stu-id="36b46-521">Gets the default calendar used by the culture.</span></span></summary>
        <value><span data-ttu-id="36b46-522">表示区域性使用的默认日历的 <see cref="T:System.Globalization.Calendar" />。</span><span class="sxs-lookup"><span data-stu-id="36b46-522">A <see cref="T:System.Globalization.Calendar" /> that represents the default calendar used by the culture.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36b46-523">用户可以选择重写一些与 Windows 通过控制面板的区域和语言选项部分的当前区域性关联的值。</span><span class="sxs-lookup"><span data-stu-id="36b46-523">The user might choose to override some of the values associated with the current culture of Windows through the regional and language options portion of Control Panel.</span></span> <span data-ttu-id="36b46-524">例如，用户可以选择以不同格式显示日期，或使用一种货币而不是默认区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-524">For example, the user might choose to display the date in a different format or to use a currency other than the default for the culture.</span></span>  
  
 <span data-ttu-id="36b46-525">如果<xref:System.Globalization.CultureInfo.UseUserOverride%2A>是`true`和指定的区域性匹配的 Windows，当前区域性<xref:System.Globalization.CultureInfo>使用这些重写值，其中包括用户设置的属性<xref:System.Globalization.DateTimeFormatInfo>返回实例<xref:System.Globalization.CultureInfo.DateTimeFormat%2A>属性，和的属性<xref:System.Globalization.NumberFormatInfo>返回实例<xref:System.Globalization.CultureInfo.NumberFormat%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="36b46-525">If <xref:System.Globalization.CultureInfo.UseUserOverride%2A> is `true` and the specified culture matches the current culture of Windows, the <xref:System.Globalization.CultureInfo> uses those overrides, including user settings for the properties of the <xref:System.Globalization.DateTimeFormatInfo> instance returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> property, and the properties of the <xref:System.Globalization.NumberFormatInfo> instance returned by the <xref:System.Globalization.CultureInfo.NumberFormat%2A> property.</span></span> <span data-ttu-id="36b46-526">如果用户设置与不兼容与关联的区域性<xref:System.Globalization.CultureInfo>，例如，如果在所选的日历不是之一<xref:System.Globalization.CultureInfo.OptionalCalendars%2A>，方法的结果和属性的值是不确定。</span><span class="sxs-lookup"><span data-stu-id="36b46-526">If the user settings are incompatible with the culture associated with the <xref:System.Globalization.CultureInfo>, for example, if the selected calendar is not one of the <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>, the results of the methods and the values of the properties are undefined.</span></span>  
  
 <span data-ttu-id="36b46-527">因此，如果<xref:System.Globalization.CultureInfo.UseUserOverride%2A>是`true`，此属性的值可能不同于使用由区域性的默认日历。</span><span class="sxs-lookup"><span data-stu-id="36b46-527">Therefore, if <xref:System.Globalization.CultureInfo.UseUserOverride%2A> is `true`, the value of this property might be different from the default calendar used by the culture.</span></span>  
  
 <span data-ttu-id="36b46-528">你的应用程序更改当前使用的日历<xref:System.Globalization.CultureInfo>通过设置<xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>的属性<xref:System.Globalization.CultureInfo.DateTimeFormat%2A>，这是实例<xref:System.Globalization.DateTimeFormatInfo>类。</span><span class="sxs-lookup"><span data-stu-id="36b46-528">Your application changes the calendar used by the current <xref:System.Globalization.CultureInfo> by setting the <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> property of <xref:System.Globalization.CultureInfo.DateTimeFormat%2A>, which is an instance of the <xref:System.Globalization.DateTimeFormatInfo> class.</span></span> <span data-ttu-id="36b46-529">新的日历必须是一个中列出的日历<xref:System.Globalization.CultureInfo.OptionalCalendars%2A>。</span><span class="sxs-lookup"><span data-stu-id="36b46-529">The new calendar must be one of the calendars listed in <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>.</span></span> <span data-ttu-id="36b46-530"><xref:System.Globalization.CultureInfo.DateTimeFormat%2A> 此外包括其他属性的自定义日期和时间格式设置与该<xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>。</span><span class="sxs-lookup"><span data-stu-id="36b46-530"><xref:System.Globalization.CultureInfo.DateTimeFormat%2A> also includes other properties that customize the date and time formatting associated with that <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.Calendar" />
        <altmember cref="P:System.Globalization.CultureInfo.DateTimeFormat" />
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
      </Docs>
    </Member>
    <Member MemberName="ClearCachedData">
      <MemberSignature Language="C#" Value="public void ClearCachedData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearCachedData() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.ClearCachedData" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearCachedData ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearCachedData();" />
      <MemberSignature Language="F#" Value="member this.ClearCachedData : unit -&gt; unit" Usage="cultureInfo.ClearCachedData " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="36b46-531">刷新缓存的区域性相关信息。</span><span class="sxs-lookup"><span data-stu-id="36b46-531">Refreshes cached culture-related information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36b46-532">信息，例如默认区域性和格式模式，将缓存第一次请求。</span><span class="sxs-lookup"><span data-stu-id="36b46-532">Information, such as the default culture and format patterns, is cached the first time it is requested.</span></span> <span data-ttu-id="36b46-533">信息可以更改的生命周期内<xref:System.AppDomain>，例如，当用户修改控制面板的区域和语言选项部分。</span><span class="sxs-lookup"><span data-stu-id="36b46-533">That information can change during the life of the <xref:System.AppDomain>, for example, when the user modifies the regional and language options portion of Control Panel.</span></span> <span data-ttu-id="36b46-534">但是，<xref:System.Globalization.CultureInfo>类不会自动在系统设置中检测更改。</span><span class="sxs-lookup"><span data-stu-id="36b46-534">However, the <xref:System.Globalization.CultureInfo> class does not automatically detect changes in the system settings.</span></span>  
  
 <span data-ttu-id="36b46-535"><xref:System.Globalization.CultureInfo.ClearCachedData%2A>方法将清除的缓存<xref:System.Globalization.CultureInfo>创建的对象<xref:System.Globalization.CultureInfo.GetCultureInfo%2A>，并刷新中的信息<xref:System.Globalization.CultureInfo.CurrentCulture%2A>， <xref:System.Globalization.CultureInfo.CurrentUICulture%2A>，并<xref:System.Globalization.RegionInfo.CurrentRegion%2A>基于当前系统设置的属性。</span><span class="sxs-lookup"><span data-stu-id="36b46-535">The <xref:System.Globalization.CultureInfo.ClearCachedData%2A> method clears the cache of <xref:System.Globalization.CultureInfo> objects created by <xref:System.Globalization.CultureInfo.GetCultureInfo%2A> and refreshes the information in the <xref:System.Globalization.CultureInfo.CurrentCulture%2A>, <xref:System.Globalization.CultureInfo.CurrentUICulture%2A>, and <xref:System.Globalization.RegionInfo.CurrentRegion%2A> properties, based on the current system settings.</span></span>  
  
 <span data-ttu-id="36b46-536"><xref:System.Globalization.CultureInfo.ClearCachedData%2A>方法不会刷新中的信息<xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType>现有线程的属性。</span><span class="sxs-lookup"><span data-stu-id="36b46-536">The <xref:System.Globalization.CultureInfo.ClearCachedData%2A> method does not refresh the information in the <xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType> property for existing threads.</span></span> <span data-ttu-id="36b46-537">但是，未来的线程将使用任何新<xref:System.Globalization.CultureInfo>属性值。</span><span class="sxs-lookup"><span data-stu-id="36b46-537">However, future threads will have any new <xref:System.Globalization.CultureInfo> property values.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="cultureInfo.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="36b46-538">创建当前 <see cref="T:System.Globalization.CultureInfo" /> 的副本。</span><span class="sxs-lookup"><span data-stu-id="36b46-538">Creates a copy of the current <see cref="T:System.Globalization.CultureInfo" />.</span></span></summary>
        <returns><span data-ttu-id="36b46-539">当前 <see cref="T:System.Globalization.CultureInfo" /> 的副本。</span><span class="sxs-lookup"><span data-stu-id="36b46-539">A copy of the current <see cref="T:System.Globalization.CultureInfo" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36b46-540">克隆是可写即使原始<xref:System.Globalization.CultureInfo>是只读的。</span><span class="sxs-lookup"><span data-stu-id="36b46-540">The clone is writable even if the original <xref:System.Globalization.CultureInfo> is read-only.</span></span> <span data-ttu-id="36b46-541">因此，可以修改克隆的属性。</span><span class="sxs-lookup"><span data-stu-id="36b46-541">Therefore, the properties of the clone can be modified.</span></span>  
  
 <span data-ttu-id="36b46-542">一个对象的浅表副本是仅对象的副本。</span><span class="sxs-lookup"><span data-stu-id="36b46-542">A shallow copy of an object is a copy of the object only.</span></span> <span data-ttu-id="36b46-543">如果对象包含对其他对象的引用，浅表副本不创建所引用对象的副本。</span><span class="sxs-lookup"><span data-stu-id="36b46-543">If the object contains references to other objects, the shallow copy does not create copies of the referred objects.</span></span> <span data-ttu-id="36b46-544">它而是指原始对象。</span><span class="sxs-lookup"><span data-stu-id="36b46-544">It refers to the original objects instead.</span></span> <span data-ttu-id="36b46-545">与此相反，对象的深层副本创建的对象的副本和所有内容直接或间接引用该对象的副本。</span><span class="sxs-lookup"><span data-stu-id="36b46-545">In contrast, a deep copy of an object creates a copy of the object and a copy of everything directly or indirectly referenced by that object.</span></span>  
  
 <span data-ttu-id="36b46-546"><xref:System.Globalization.CultureInfo.Clone%2A>方法创建一个增强的浅表副本。</span><span class="sxs-lookup"><span data-stu-id="36b46-546">The <xref:System.Globalization.CultureInfo.Clone%2A> method creates an enhanced shallow copy.</span></span> <span data-ttu-id="36b46-547">返回的对象<xref:System.Globalization.CultureInfo.NumberFormat%2A>， <xref:System.Globalization.CultureInfo.DateTimeFormat%2A>， <xref:System.Globalization.CultureInfo.TextInfo%2A>，和<xref:System.Globalization.CultureInfo.Calendar%2A>属性也会被复制。</span><span class="sxs-lookup"><span data-stu-id="36b46-547">The objects returned by the <xref:System.Globalization.CultureInfo.NumberFormat%2A>, <xref:System.Globalization.CultureInfo.DateTimeFormat%2A>, <xref:System.Globalization.CultureInfo.TextInfo%2A>, and <xref:System.Globalization.CultureInfo.Calendar%2A> properties are also copied.</span></span> <span data-ttu-id="36b46-548">因此，克隆<xref:System.Globalization.CultureInfo>对象可以修改其复制的属性，而不会影响原始<xref:System.Globalization.CultureInfo>对象。</span><span class="sxs-lookup"><span data-stu-id="36b46-548">Consequently, the cloned <xref:System.Globalization.CultureInfo> object can modify its copied properties without affecting the original <xref:System.Globalization.CultureInfo> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36b46-549">下面的代码示例显示了 CultureInfo.Clone 还克隆<xref:System.Globalization.DateTimeFormatInfo>并<xref:System.Globalization.NumberFormatInfo>与关联的实例<xref:System.Globalization.CultureInfo>。</span><span class="sxs-lookup"><span data-stu-id="36b46-549">The following code example shows that CultureInfo.Clone also clones the <xref:System.Globalization.DateTimeFormatInfo> and <xref:System.Globalization.NumberFormatInfo> instances associated with the <xref:System.Globalization.CultureInfo>.</span></span>  
  
 [!code-cpp[System.Globalization.CultureInfo.Clone#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.Clone/CPP/yslin_cultureinfo_clone.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo.Clone#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.Clone/CS/yslin_cultureinfo_clone.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.Clone#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.Clone/VB/yslin_cultureinfo_clone.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
    <Member MemberName="CompareInfo">
      <MemberSignature Language="C#" Value="public virtual System.Globalization.CompareInfo CompareInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CompareInfo CompareInfo" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.CompareInfo" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CompareInfo As CompareInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Globalization::CompareInfo ^ CompareInfo { System::Globalization::CompareInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CompareInfo : System.Globalization.CompareInfo" Usage="System.Globalization.CultureInfo.CompareInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CompareInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36b46-550">获取为区域性定义如何比较字符串的 <see cref="T:System.Globalization.CompareInfo" />。</span><span class="sxs-lookup"><span data-stu-id="36b46-550">Gets the <see cref="T:System.Globalization.CompareInfo" /> that defines how to compare strings for the culture.</span></span></summary>
        <value><span data-ttu-id="36b46-551">为区域性定义如何比较字符串的 <see cref="T:System.Globalization.CompareInfo" />。</span><span class="sxs-lookup"><span data-stu-id="36b46-551">The <see cref="T:System.Globalization.CompareInfo" /> that defines how to compare strings for the culture.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36b46-552"><xref:System.Globalization.CultureInfo.CompareInfo%2A>属性返回<xref:System.Globalization.CompareInfo>提供区分区域性的排序和字符串比较操作中使用的区域性特定信息的对象。</span><span class="sxs-lookup"><span data-stu-id="36b46-552">The <xref:System.Globalization.CultureInfo.CompareInfo%2A> property returns a <xref:System.Globalization.CompareInfo> object that provides culture-specific information used in culture-sensitive sorting and string comparison operations.</span></span>  
  
 <span data-ttu-id="36b46-553">用户可以选择重写一些与 Windows 通过控制面板的区域和语言选项部分的当前区域性关联的值。</span><span class="sxs-lookup"><span data-stu-id="36b46-553">The user might choose to override some of the values associated with the current culture of Windows through the regional and language options portion of Control Panel.</span></span> <span data-ttu-id="36b46-554">例如，用户可以选择以不同格式显示日期，或使用一种货币而不是默认区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-554">For example, the user might choose to display the date in a different format or to use a currency other than the default for the culture.</span></span>  
  
 <span data-ttu-id="36b46-555">如果<xref:System.Globalization.CultureInfo.UseUserOverride%2A>是`true`和指定的区域性匹配的 Windows，当前区域性<xref:System.Globalization.CultureInfo>使用这些重写值，其中包括用户设置的属性<xref:System.Globalization.DateTimeFormatInfo>返回实例<xref:System.Globalization.CultureInfo.DateTimeFormat%2A>属性，和的属性<xref:System.Globalization.NumberFormatInfo>返回实例<xref:System.Globalization.CultureInfo.NumberFormat%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="36b46-555">If <xref:System.Globalization.CultureInfo.UseUserOverride%2A> is `true` and the specified culture matches the current culture of Windows, the <xref:System.Globalization.CultureInfo> uses those overrides, including user settings for the properties of the <xref:System.Globalization.DateTimeFormatInfo> instance returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> property, and the properties of the <xref:System.Globalization.NumberFormatInfo> instance returned by the <xref:System.Globalization.CultureInfo.NumberFormat%2A> property.</span></span> <span data-ttu-id="36b46-556">如果用户设置与不兼容与关联的区域性<xref:System.Globalization.CultureInfo>，例如，如果在所选的日历不是之一<xref:System.Globalization.CultureInfo.OptionalCalendars%2A>，方法的结果和属性的值是不确定。</span><span class="sxs-lookup"><span data-stu-id="36b46-556">If the user settings are incompatible with the culture associated with the <xref:System.Globalization.CultureInfo>, for example, if the selected calendar is not one of the <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>, the results of the methods and the values of the properties are undefined.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36b46-557">下面的代码示例演示如何创建<xref:System.Globalization.CultureInfo>西班牙语 （西班牙） 与国际排序，另一个<xref:System.Globalization.CultureInfo>使用传统排序。</span><span class="sxs-lookup"><span data-stu-id="36b46-557">The following code example shows how to create a <xref:System.Globalization.CultureInfo> for Spanish (Spain) with the international sort and another <xref:System.Globalization.CultureInfo> with the traditional sort.</span></span>  
  
 [!code-cpp[System.Globalization.CultureInfo_esES#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo_esES/CPP/spanishspain.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo_esES#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo_esES/CS/spanishspain.cs#1)]
 [!code-vb[System.Globalization.CultureInfo_esES#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo_esES/VB/spanishspain.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CompareInfo" />
      </Docs>
    </Member>
    <Member MemberName="CreateSpecificCulture">
      <MemberSignature Language="C#" Value="public static System.Globalization.CultureInfo CreateSpecificCulture (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.CultureInfo CreateSpecificCulture(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.CreateSpecificCulture(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateSpecificCulture (name As String) As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::CultureInfo ^ CreateSpecificCulture(System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member CreateSpecificCulture : string -&gt; System.Globalization.CultureInfo" Usage="System.Globalization.CultureInfo.CreateSpecificCulture name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="36b46-558">预定义的 <see cref="T:System.Globalization.CultureInfo" /> 名称或现有 <see cref="T:System.Globalization.CultureInfo" /> 的对象。</span><span class="sxs-lookup"><span data-stu-id="36b46-558">A predefined <see cref="T:System.Globalization.CultureInfo" /> name or the name of an existing <see cref="T:System.Globalization.CultureInfo" /> object.</span></span> <span data-ttu-id="36b46-559"><paramref name="name" /> 不区分大小写。</span><span class="sxs-lookup"><span data-stu-id="36b46-559"><paramref name="name" /> is not case-sensitive.</span></span></param>
        <summary><span data-ttu-id="36b46-560">创建表示与指定名称关联的特定区域性的 <see cref="T:System.Globalization.CultureInfo" />。</span><span class="sxs-lookup"><span data-stu-id="36b46-560">Creates a <see cref="T:System.Globalization.CultureInfo" /> that represents the specific culture that is associated with the specified name.</span></span></summary>
        <returns><span data-ttu-id="36b46-561">一个表示以下内容的 <see cref="T:System.Globalization.CultureInfo" /> 对象：</span><span class="sxs-lookup"><span data-stu-id="36b46-561">A <see cref="T:System.Globalization.CultureInfo" /> object that represents:</span></span> 
<span data-ttu-id="36b46-562">固定的区域性，如果 <paramref name="name" /> 是空字符串 ("")。</span><span class="sxs-lookup"><span data-stu-id="36b46-562">The invariant culture, if <paramref name="name" /> is an empty string ("").</span></span>  
  
<span data-ttu-id="36b46-563">- 或 -</span><span class="sxs-lookup"><span data-stu-id="36b46-563">-or-</span></span> 
<span data-ttu-id="36b46-564">与 <paramref name="name" /> 关联的特定区域性，如果 <paramref name="name" /> 是非特定区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-564">The specific culture associated with <paramref name="name" />, if <paramref name="name" /> is a neutral culture.</span></span>  
  
<span data-ttu-id="36b46-565">- 或 -</span><span class="sxs-lookup"><span data-stu-id="36b46-565">-or-</span></span> 
<span data-ttu-id="36b46-566">由 <paramref name="name" /> 指定的区域性，如果 <paramref name="name" /> 已经是特定区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-566">The culture specified by <paramref name="name" />, if <paramref name="name" /> is already a specific culture.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36b46-567"><xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A>方法包装对的调用<xref:System.Globalization.CultureInfo.%23ctor%28System.String%29>构造函数。</span><span class="sxs-lookup"><span data-stu-id="36b46-567">The <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A> method wraps a call to the <xref:System.Globalization.CultureInfo.%23ctor%28System.String%29> constructor.</span></span>  
  
> [!NOTE]
> <span data-ttu-id="36b46-568">在 Windows 系统上的预定义的区域性名称的列表，请参阅**语言标记**中的列[支持的 Windows 的语言/区域名称的列表](https://docs.microsoft.com/openspecs/windows_protocols/ms-lcid/a9eac961-e77d-41a6-90a5-ce1a8b0cdb9c)。</span><span class="sxs-lookup"><span data-stu-id="36b46-568">For a list of predefined culture names on Windows systems, see the **Language tag** column in the [list of language/region names supported by Windows](https://docs.microsoft.com/openspecs/windows_protocols/ms-lcid/a9eac961-e77d-41a6-90a5-ce1a8b0cdb9c).</span></span> <span data-ttu-id="36b46-569">区域性名称遵循由定义的标准[BCP 47](https://tools.ietf.org/html/bcp47)。</span><span class="sxs-lookup"><span data-stu-id="36b46-569">Culture names follow the standard defined by [BCP 47](https://tools.ietf.org/html/bcp47).</span></span> <span data-ttu-id="36b46-570">此外，从 Windows 10 开始`name`可以是任何有效的 BCP-47 语言标记。</span><span class="sxs-lookup"><span data-stu-id="36b46-570">In addition, starting with Windows 10, `name` can be any valid BCP-47 language tag.</span></span>  
  
 <span data-ttu-id="36b46-571">区域性分为三个集合： 固定区域性、 非特定区域性和特定区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-571">Cultures are grouped into three sets: the invariant culture, the neutral cultures, and the specific cultures.</span></span> <span data-ttu-id="36b46-572">有关详细信息，请参阅的说明<xref:System.Globalization.CultureInfo>类。</span><span class="sxs-lookup"><span data-stu-id="36b46-572">For more information, see the description of the <xref:System.Globalization.CultureInfo> class.</span></span>  
  
 <span data-ttu-id="36b46-573">如果此方法返回的特定区域性的区域性标识符与当前的 Windows 区域性的区域性标识符相匹配，则此方法创建<xref:System.Globalization.CultureInfo>对象，它使用 Windows 区域性重写。</span><span class="sxs-lookup"><span data-stu-id="36b46-573">If the culture identifier of the specific culture returned by this method matches the culture identifier of the current Windows culture, this method creates a <xref:System.Globalization.CultureInfo> object that uses the Windows culture overrides.</span></span> <span data-ttu-id="36b46-574">重写中包括的属性的用户设置<xref:System.Globalization.DateTimeFormatInfo>返回的对象<xref:System.Globalization.CultureInfo.DateTimeFormat%2A>属性和<xref:System.Globalization.NumberFormatInfo>返回的对象<xref:System.Globalization.CultureInfo.NumberFormat%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="36b46-574">The overrides include user settings for the properties of the <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> property and the <xref:System.Globalization.NumberFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.NumberFormat%2A> property.</span></span> <span data-ttu-id="36b46-575">若要实例化<xref:System.Globalization.CultureInfo>对象，默认值的区域性设置而不是用户重写时，调用<xref:System.Globalization.CultureInfo.%23ctor%28System.String%2CSystem.Boolean%29>构造函数，值为`false`为`useUserOverride`参数。</span><span class="sxs-lookup"><span data-stu-id="36b46-575">To instantiate a <xref:System.Globalization.CultureInfo> object that with default culture settings rather than user overrides, call the <xref:System.Globalization.CultureInfo.%23ctor%28System.String%2CSystem.Boolean%29> constructor with a value of `false` for the `useUserOverride` argument.</span></span>  
  
 <span data-ttu-id="36b46-576">尽管<xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A>方法名称包括术语"特定"，请记住区域性数据可以更改之间的版本中，或由于自定义区域性，或由于用户重写。</span><span class="sxs-lookup"><span data-stu-id="36b46-576">Although the <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A> method name includes the term "Specific", remember that culture data can change between versions, or due to custom cultures, or because of user overrides.</span></span> <span data-ttu-id="36b46-577">有关将数据保存使用固定区域性或二进制或固定的窗体。</span><span class="sxs-lookup"><span data-stu-id="36b46-577">Use the invariant culture or binary or fixed forms for saving data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36b46-578">下面的示例检索的数组<xref:System.Globalization.CultureInfo>对象表示从非特定区域性<xref:System.Globalization.CultureInfo.GetCultures%2A>方法并对数组进行排序。</span><span class="sxs-lookup"><span data-stu-id="36b46-578">The following example retrieves an array of <xref:System.Globalization.CultureInfo> objects that represent neutral cultures from the <xref:System.Globalization.CultureInfo.GetCultures%2A> method and sorts the array.</span></span> <span data-ttu-id="36b46-579">当它循环访问数组中的元素时，它将传递到每个非特定区域性的名称<xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A>方法，并显示该方法所返回的特定区域性的名称。</span><span class="sxs-lookup"><span data-stu-id="36b46-579">When it iterates the elements in the array, it passes the name of each neutral culture to the <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A> method and displays the name of the specific culture returned by the method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="36b46-580">该示例使用 ZH-CHS 和 ZH-CHT 区域性名称。</span><span class="sxs-lookup"><span data-stu-id="36b46-580">The example uses the zh-CHS and zh-CHT culture names.</span></span> <span data-ttu-id="36b46-581">但是，面向 Windows Vista 和更高版本应该使用-Zh-hans 而不是 ZH-CHS 和 Zh-hant 而不是 ZH-CHT 的应用程序。</span><span class="sxs-lookup"><span data-stu-id="36b46-581">However, applications that target Windows Vista and later should use zh-Hans instead of zh-CHS and zh-Hant instead of zh-CHT.</span></span> <span data-ttu-id="36b46-582">-Zh-hans 和 Zh-hant 表示当前的标准，除非必须使用较旧名称的原因，否则应使用。</span><span class="sxs-lookup"><span data-stu-id="36b46-582">zh-Hans and zh-Hant represent the current standard and should be used unless you have a reason for using the older names.</span></span>  
>   
>  <span data-ttu-id="36b46-583">另请注意，示例的结果可能不同的输入中文 （繁体） 是非特定区域性 （zh、 ZH-CHT 或 Zh-hant） 将在其中返回 ZH-TW 的中国台湾 Windows 安装上。</span><span class="sxs-lookup"><span data-stu-id="36b46-583">Note also that the results of the example may differ on an installation of Taiwanese Windows, where the input of a Chinese (Traditional) neutral culture (zh, zh-CHT, or zh-Hant) will return zh-TW.</span></span>  
  
 [!code-csharp[System.Globalization.CultureInfo.CreateSpecificCulture2#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.CreateSpecificCulture2/CS/createspecificculture2.cs#2)]
 [!code-vb[System.Globalization.CultureInfo.CreateSpecificCulture2#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.CreateSpecificCulture2/VB/createspecificculture2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Globalization.CultureNotFoundException"><span data-ttu-id="36b46-584"><paramref name="name" /> 不是有效的区域性名称。</span><span class="sxs-lookup"><span data-stu-id="36b46-584"><paramref name="name" /> is not a valid culture name.</span></span>  
  
<span data-ttu-id="36b46-585">- 或 -</span><span class="sxs-lookup"><span data-stu-id="36b46-585">-or-</span></span> 
<span data-ttu-id="36b46-586"><paramref name="name" /> 指定的区域性没有特定的区域性与之关联。</span><span class="sxs-lookup"><span data-stu-id="36b46-586">The culture specified by <paramref name="name" /> does not have a specific culture associated with it.</span></span></exception>
        <exception cref="T:System.NullReferenceException"><span data-ttu-id="36b46-587"><paramref name="name" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="36b46-587"><paramref name="name" /> is null.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="36b46-588">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]和早期版本抛<see cref="T:System.ArgumentException" />如果<paramref name="name" />不是有效的区域性名称。</span><span class="sxs-lookup"><span data-stu-id="36b46-588">The [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] and earlier versions throw an <see cref="T:System.ArgumentException" /> if <paramref name="name" /> is not a valid culture name.</span></span> <span data-ttu-id="36b46-589">从开始[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]，此方法将引发<see cref="T:System.Globalization.CultureNotFoundException" />。</span><span class="sxs-lookup"><span data-stu-id="36b46-589">Starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], this method throws a <see cref="T:System.Globalization.CultureNotFoundException" />.</span></span></para></block>
        <altmember cref="Overload:System.Globalization.CultureInfo.#ctor" />
        <altmember cref="P:System.Globalization.CultureInfo.Parent" />
      </Docs>
    </Member>
    <Member MemberName="CultureTypes">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureTypes CultureTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Globalization.CultureTypes CultureTypes" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.CultureTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CultureTypes As CultureTypes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureTypes CultureTypes { System::Globalization::CultureTypes get(); };" />
      <MemberSignature Language="F#" Value="member this.CultureTypes : System.Globalization.CultureTypes" Usage="System.Globalization.CultureInfo.CultureTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureTypes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36b46-590">获取属于当前 <see cref="T:System.Globalization.CultureInfo" /> 对象的区域性类型。</span><span class="sxs-lookup"><span data-stu-id="36b46-590">Gets the culture types that pertain to the current <see cref="T:System.Globalization.CultureInfo" /> object.</span></span></summary>
        <value><span data-ttu-id="36b46-591">一个或多个 <see cref="T:System.Globalization.CultureTypes" /> 值的按位组合。</span><span class="sxs-lookup"><span data-stu-id="36b46-591">A bitwise combination of one or more <see cref="T:System.Globalization.CultureTypes" /> values.</span></span> <span data-ttu-id="36b46-592">没有默认值。</span><span class="sxs-lookup"><span data-stu-id="36b46-592">There is no default value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="36b46-593">下面的示例演示<xref:System.Globalization.CultureTypes>枚举和<xref:System.Globalization.CultureInfo.CultureTypes%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="36b46-593">The following example demonstrates the <xref:System.Globalization.CultureTypes> enumeration and the <xref:System.Globalization.CultureInfo.CultureTypes%2A> property.</span></span>  
  
 [!code-csharp[system.globalization.cultureTypes#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureTypes/cs/ct.cs#1)]
 [!code-vb[system.globalization.cultureTypes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureTypes/vb/ct.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CultureTypes" />
      </Docs>
    </Member>
    <Member MemberName="CurrentCulture">
      <MemberSignature Language="C#" Value="public static System.Globalization.CultureInfo CurrentCulture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Globalization.CultureInfo CurrentCulture" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.CurrentCulture" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property CurrentCulture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Globalization::CultureInfo ^ CurrentCulture { System::Globalization::CultureInfo ^ get(); void set(System::Globalization::CultureInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CurrentCulture : System.Globalization.CultureInfo with get, set" Usage="System.Globalization.CultureInfo.CurrentCulture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36b46-594">获取表示当前线程使用的区域性的 <see cref="T:System.Globalization.CultureInfo" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="36b46-594">Gets or sets the <see cref="T:System.Globalization.CultureInfo" /> object that represents the culture used by the current thread.</span></span></summary>
        <value><span data-ttu-id="36b46-595">表示当前线程使用的区域性的对象。</span><span class="sxs-lookup"><span data-stu-id="36b46-595">An object that represents the culture used by the current thread.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36b46-596"><xref:System.Globalization.CultureInfo>此属性返回的对象及其关联的对象确定的日期的默认格式、 时间、 数字、 货币值，排序顺序的文本、 大小写约定，和的字符串比较。</span><span class="sxs-lookup"><span data-stu-id="36b46-596">The <xref:System.Globalization.CultureInfo> object that is returned by this property and its associated objects determine the default format for dates, times, numbers, currency values, the sorting order of text, casing conventions, and string comparisons.</span></span>  
  
 <span data-ttu-id="36b46-597">当前的区域性是执行线程的属性。</span><span class="sxs-lookup"><span data-stu-id="36b46-597">The current culture is a property of the executing thread.</span></span> <span data-ttu-id="36b46-598">检索的值<xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>属性相当于多个高性能的检索<xref:System.Globalization.CultureInfo>对象返回的`Thread.CurrentThread.CurrentCulture`属性。</span><span class="sxs-lookup"><span data-stu-id="36b46-598">Retrieving the value of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> property is a more performant equivalent of retrieving the <xref:System.Globalization.CultureInfo> object returned by the `Thread.CurrentThread.CurrentCulture` property.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="36b46-599">在.NET Framework 4.5.2 及更早版本中，<xref:System.Globalization.CultureInfo.CurrentCulture%2A>属性是只读的; 也就是说，可以检索属性值，但不能将其设置。</span><span class="sxs-lookup"><span data-stu-id="36b46-599">In the .NET Framework 4.5.2 and earlier versions, the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property is read-only;  that is, you can retrieve the property value, but you cannot set it.</span></span> <span data-ttu-id="36b46-600">若要更改当前区域性，将分配<xref:System.Globalization.CultureInfo>对象，表示的新区域性`Thread.CurrentThread.CurrentCulture`属性。</span><span class="sxs-lookup"><span data-stu-id="36b46-600">To change the current culture, you assign the <xref:System.Globalization.CultureInfo> object that represents the new culture to the `Thread.CurrentThread.CurrentCulture` property.</span></span> <span data-ttu-id="36b46-601">从开始[!INCLUDE[net_v46](~/includes/net-v46-md.md)]，则<xref:System.Globalization.CultureInfo.CurrentCulture%2A>属性为读写; 可以同时设置和检索属性的值。</span><span class="sxs-lookup"><span data-stu-id="36b46-601">Starting with the [!INCLUDE[net_v46](~/includes/net-v46-md.md)], the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property is read-write; you can both set and retrieve the property's value.</span></span> <span data-ttu-id="36b46-602">如果属性值设置<xref:System.Globalization.CultureInfo>对象，表示新区域性，则`Thread.CurrentThread.CurrentCulture`属性也会更改。</span><span class="sxs-lookup"><span data-stu-id="36b46-602">If you do set the property value to a <xref:System.Globalization.CultureInfo> object that represents a new culture, the value of the `Thread.CurrentThread.CurrentCulture` property also changes.</span></span>  
  
 <span data-ttu-id="36b46-603">本节内容：</span><span class="sxs-lookup"><span data-stu-id="36b46-603">In this section:</span></span>  
  
 <span data-ttu-id="36b46-604">[如何确定线程的区域性](#ThreadCulture) </span><span class="sxs-lookup"><span data-stu-id="36b46-604">[How a Thread's Culture Is Determined](#ThreadCulture) </span></span>  
 <span data-ttu-id="36b46-605">[获取当前区域性](#Getting) </span><span class="sxs-lookup"><span data-stu-id="36b46-605">[Getting the Current Culture](#Getting) </span></span>  
 <span data-ttu-id="36b46-606">[将 CurrentCulture 属性显式设置](#ExplicitSetting) </span><span class="sxs-lookup"><span data-stu-id="36b46-606">[Explicitly Setting the CurrentCulture Property](#ExplicitSetting) </span></span>  
 <span data-ttu-id="36b46-607">[当前区域性和用户重写](#Overrides) </span><span class="sxs-lookup"><span data-stu-id="36b46-607">[The Current Culture and User Overrides](#Overrides) </span></span>  
 [<span data-ttu-id="36b46-608">区域性和 Windows 应用</span><span class="sxs-lookup"><span data-stu-id="36b46-608">Culture and Windows Apps</span></span>](#WindowsAndCurr)  
  
<a name="ThreadCulture"></a>   
## <a name="how-a-threads-culture-is-determined"></a><span data-ttu-id="36b46-609">如何确定线程的区域性</span><span class="sxs-lookup"><span data-stu-id="36b46-609">How a Thread's Culture Is Determined</span></span>  
 <span data-ttu-id="36b46-610">在线程启动时，其区域性是最初确定的如下所示：</span><span class="sxs-lookup"><span data-stu-id="36b46-610">When a thread is started, its culture is initially determined as follows:</span></span>  
  
-   <span data-ttu-id="36b46-611">通过检索由指定的区域性<xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A>线程执行所在，如果属性值不是在应用程序域的属性`null`。</span><span class="sxs-lookup"><span data-stu-id="36b46-611">By retrieving the culture that is specified by the <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> property in the application domain in which the thread is executing, if the property value is not `null`.</span></span>  
  
-   <span data-ttu-id="36b46-612">如果线程执行基于任务的异步操作和应用面向一个线程池线程[!INCLUDE[net_v46](~/includes/net-v46-md.md)]或更高版本的.NET Framework 中，其区域性由调用线程的区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-612">If the thread is a thread pool thread that is executing a task-based asynchronous operation and the app targets the [!INCLUDE[net_v46](~/includes/net-v46-md.md)] or a later version of the .NET Framework, its culture is determined by the culture of the calling thread.</span></span>  <span data-ttu-id="36b46-613">下面的示例将当前区域性更改为葡萄牙语 （巴西），并启动六项任务，其中每个显示其线程 ID、 其任务 ID 和其当前区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-613">The following example changes the current culture to Portuguese (Brazil) and launches six tasks, each of which displays its thread ID, its task ID, and its current culture.</span></span> <span data-ttu-id="36b46-614">每个任务 （和线程） 已继承调用线程的区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-614">Each of the tasks (and the threads) has inherited the culture of the calling thread.</span></span>  
  
     [!code-csharp[System.Globalization.CultureInfo.CurrentCulture#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentculture/cs/Async1.cs#14)]
     [!code-vb[System.Globalization.CultureInfo.CurrentCulture#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentculture/vb/Async1.vb#14)]  
  
     <span data-ttu-id="36b46-615">有关详细信息，请参阅中的"区域性和基于任务的异步操作"部分<xref:System.Globalization.CultureInfo>主题。</span><span class="sxs-lookup"><span data-stu-id="36b46-615">For more information, see the "Culture and task-based asynchronous operations" section in the <xref:System.Globalization.CultureInfo> topic.</span></span>  
  
-   <span data-ttu-id="36b46-616">通过调用 Windows`GetUserDefaultLocaleName`函数。</span><span class="sxs-lookup"><span data-stu-id="36b46-616">By calling the Windows `GetUserDefaultLocaleName` function.</span></span>  
  
 <span data-ttu-id="36b46-617">请注意，如果设置不同于安装了系统的区域性或用户的首选的区域性的特定区域性并启动应用程序的多个线程，这些线程的当前区域性的区域性，返回的`GetUserDefaultLocaleName`函数，除非您为其分配区域性<xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A>线程执行所在的应用程序域中的属性。</span><span class="sxs-lookup"><span data-stu-id="36b46-617">Note that if you set a specific culture that is different from the system-installed culture or the user's preferred culture, and your application starts multiple threads, the current culture of those threads will be the culture that is returned by the `GetUserDefaultLocaleName` function, unless you assign a culture to the <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> property in the application domain in which the thread is executing.</span></span>  
  
 <span data-ttu-id="36b46-618">有关如何确定线程的区域性的详细信息，请参阅中的"区域性和线程"部分<xref:System.Globalization.CultureInfo>参考页。</span><span class="sxs-lookup"><span data-stu-id="36b46-618">For more information about how the culture of a thread is determined, see the "Culture and threads" section in the <xref:System.Globalization.CultureInfo> reference page.</span></span>  
  
<a name="Getting"></a>   
## <a name="getting-the-current-culture"></a><span data-ttu-id="36b46-619">获取当前区域性</span><span class="sxs-lookup"><span data-stu-id="36b46-619">Getting the Current Culture</span></span>  
 <span data-ttu-id="36b46-620"><xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>属性是每个线程设置; 这就是，每个线程可以具有其自己的区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-620">The <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> property is a per-thread setting; that is, each thread can have its own culture.</span></span> <span data-ttu-id="36b46-621">检索的值来获取当前线程的区域性<xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>属性，如下面的示例说明了。</span><span class="sxs-lookup"><span data-stu-id="36b46-621">You get the culture of the current thread by retrieving the value of the   <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> property, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Globalization.CultureInfo.CurrentCulture#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentculture/cs/Get1.cs#5)]
 [!code-vb[System.Globalization.CultureInfo.CurrentCulture#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentculture/vb/Get1.vb#5)]  
  
 <span data-ttu-id="36b46-622">此外可以检索的值从当前线程的区域性<xref:System.Threading.Thread.CurrentThread%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="36b46-622">You can also retrieve the value of the current thread's culture from the <xref:System.Threading.Thread.CurrentThread%2A?displayProperty=nameWithType> property.</span></span>  
  
<a name="ExplicitSetting"></a>   
## <a name="explicitly-setting-the-currentculture-property"></a><span data-ttu-id="36b46-623">将 CurrentCulture 属性显式设置</span><span class="sxs-lookup"><span data-stu-id="36b46-623">Explicitly Setting the CurrentCulture Property</span></span>  
 <span data-ttu-id="36b46-624">着手[!INCLUDE[net_v46](~/includes/net-v46-md.md)]，以更改由现有线程的区域性设置<xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>属性改为新的区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-624">Staring with the [!INCLUDE[net_v46](~/includes/net-v46-md.md)], to change the culture that is used by an existing thread, you set the <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> property to the new culture.</span></span> <span data-ttu-id="36b46-625">线程跨越应用程序域边界时，如果显式更改这种方式，更改线程的区域性仍然存在。</span><span class="sxs-lookup"><span data-stu-id="36b46-625">If you explicitly change a thread's culture in this way, that change persists if the thread crosses application domain boundaries.</span></span> <span data-ttu-id="36b46-626">下面的示例将当前的线程区域性更改为荷兰语 （荷兰）。</span><span class="sxs-lookup"><span data-stu-id="36b46-626">The following example changes the current thread culture to Dutch (Netherlands).</span></span> <span data-ttu-id="36b46-627">它还显示，如果当前线程跨越应用程序域边界，其当前区域性保持更改。</span><span class="sxs-lookup"><span data-stu-id="36b46-627">It also shows that, when the current thread crosses application domain boundaries, its current culture remains changed.</span></span>  
  
 [!code-csharp[System.Globalization.CultureInfo.CurrentCulture#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentculture/cs/changeculture11.cs#11)]
 [!code-vb[System.Globalization.CultureInfo.CurrentCulture#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentculture/vb/changeculture11.vb#11)]  
  
> [!NOTE]
>  <span data-ttu-id="36b46-628">通过使用更改区域性<xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>属性需要<xref:System.Security.Permissions.SecurityPermission>权限<xref:System.Security.Permissions.SecurityPermissionFlag.ControlThread>值设置。</span><span class="sxs-lookup"><span data-stu-id="36b46-628">Changing the culture by using the <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> property requires a <xref:System.Security.Permissions.SecurityPermission> permission with the <xref:System.Security.Permissions.SecurityPermissionFlag.ControlThread> value set.</span></span> <span data-ttu-id="36b46-629">由于与线程关联的安全状态，对线程进行操作很危险。</span><span class="sxs-lookup"><span data-stu-id="36b46-629">Manipulating threads is dangerous because of the security state associated with threads.</span></span> <span data-ttu-id="36b46-630">因此，仅对可信的代码，并且仅在必要的时候，则应授予此权限。</span><span class="sxs-lookup"><span data-stu-id="36b46-630">Therefore, this permission should be given only to trustworthy code, and then only as necessary.</span></span> <span data-ttu-id="36b46-631">不能更改线程的区域性不完全受信任的代码中。</span><span class="sxs-lookup"><span data-stu-id="36b46-631">You cannot change thread culture in semi-trusted code.</span></span>  
  
 <span data-ttu-id="36b46-632">从开始[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]，可以显式更改当前线程区域性为特定区域性 （如法语 （加拿大）） 或非特定区域性 （如法语）。</span><span class="sxs-lookup"><span data-stu-id="36b46-632">Starting with the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], you can explicitly change the current thread culture to either a specific culture (such as French (Canada)) or a neutral culture (such as French).</span></span> <span data-ttu-id="36b46-633">当<xref:System.Globalization.CultureInfo>对象表示非特定区域性，值<xref:System.Globalization.CultureInfo>属性，如<xref:System.Globalization.CultureInfo.Calendar%2A>， <xref:System.Globalization.CultureInfo.CompareInfo%2A>， <xref:System.Globalization.CultureInfo.DateTimeFormat%2A>， <xref:System.Globalization.CultureInfo.NumberFormat%2A>，和<xref:System.Globalization.CultureInfo.TextInfo%2A>反映与之关联的特定区域性非特定区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-633">When a <xref:System.Globalization.CultureInfo> object represents a neutral culture, the values of <xref:System.Globalization.CultureInfo> properties such as <xref:System.Globalization.CultureInfo.Calendar%2A>, <xref:System.Globalization.CultureInfo.CompareInfo%2A>, <xref:System.Globalization.CultureInfo.DateTimeFormat%2A>, <xref:System.Globalization.CultureInfo.NumberFormat%2A>, and <xref:System.Globalization.CultureInfo.TextInfo%2A> reflect the specific culture that is associated with the neutral culture.</span></span> <span data-ttu-id="36b46-634">例如，英语的非特定区域性的主要区域性为英语 （美国）;正使用德语区域性的主要区域性是德语 （德国）。</span><span class="sxs-lookup"><span data-stu-id="36b46-634">For example, the dominant culture for the English neutral culture is English (United States); the dominant culture for the German culture is German (Germany).</span></span> <span data-ttu-id="36b46-635">下面的示例演示在格式设置时的当前区域性设置为特定区域性、 法语 （加拿大） 和一个非特定区域性差异法语。</span><span class="sxs-lookup"><span data-stu-id="36b46-635">The following example illustrates the difference in formatting when the current culture is set to a specific culture, French (Canada), and a neutral culture, French.</span></span>  
  
 [!code-csharp[System.Globalization.CultureInfo.CurrentCulture#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentculture/cs/specific12.cs#12)]
 [!code-vb[System.Globalization.CultureInfo.CurrentCulture#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentculture/vb/specific12.vb#12)]  
  
 <span data-ttu-id="36b46-636">此外可以使用<xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>属性连同<xref:System.Web.HttpRequest.UserLanguages%2A?displayProperty=nameWithType>属性来设置<xref:System.Globalization.CultureInfo.CurrentCulture%2A>属性的 ASP.NET 应用程序向用户首选区域性，如以下示例所示。</span><span class="sxs-lookup"><span data-stu-id="36b46-636">You can also use the <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> property along with the <xref:System.Web.HttpRequest.UserLanguages%2A?displayProperty=nameWithType> property to set the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property of an ASP.NET application to the user's preferred culture, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Globalization.CultureInfo.CurrentCulture#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentculture/cs/aspculture13.cs#13)]
 [!code-vb[System.Globalization.CultureInfo.CurrentCulture#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentculture/vb/aspculture13.vb#13)]  
  
<a name="Overrides"></a>   
## <a name="the-current-culture-and-user-overrides"></a><span data-ttu-id="36b46-637">当前区域性和用户重写</span><span class="sxs-lookup"><span data-stu-id="36b46-637">The Current Culture and User Overrides</span></span>  
 <span data-ttu-id="36b46-638">Windows 允许用户重写的标准属性值<xref:System.Globalization.CultureInfo>对象，并使用其关联的对象**区域和语言选项**控制面板中。</span><span class="sxs-lookup"><span data-stu-id="36b46-638">Windows allows users to override the standard property values of the <xref:System.Globalization.CultureInfo> object and its associated objects by using **Regional and Language Options** in Control Panel.</span></span> <span data-ttu-id="36b46-639"><xref:System.Globalization.CultureInfo>返回对象<xref:System.Globalization.CultureInfo.CurrentCulture%2A>属性会反映出这些用户将在以下情况下重写：</span><span class="sxs-lookup"><span data-stu-id="36b46-639">The <xref:System.Globalization.CultureInfo> object returned by the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property reflects these user overrides in the following cases:</span></span>  
  
-   <span data-ttu-id="36b46-640">如果当前线程区域性设置隐式的 Windows`GetUserDefaultLocaleName`函数。</span><span class="sxs-lookup"><span data-stu-id="36b46-640">If the current thread culture is set implicitly by the Windows `GetUserDefaultLocaleName` function.</span></span>  
  
-   <span data-ttu-id="36b46-641">如果当前线程区域性定义的<xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A>属性对应于当前的 Windows 系统区域。</span><span class="sxs-lookup"><span data-stu-id="36b46-641">If the current thread culture defined by the <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> property corresponds to the current Windows system culture.</span></span>  
  
-   <span data-ttu-id="36b46-642">如果当前线程区域性显式设置返回区域性<xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A>方法和区域性对应于当前的 Windows 系统区域。</span><span class="sxs-lookup"><span data-stu-id="36b46-642">If the current thread culture is set explicitly to a culture returned by the <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A> method, and that culture corresponds to the current Windows system culture.</span></span>  
  
-   <span data-ttu-id="36b46-643">如果当前线程区域性显式设置为通过实例化一个区域性<xref:System.Globalization.CultureInfo.%23ctor%28System.String%29>构造函数和区域性对应于当前的 Windows 系统区域。</span><span class="sxs-lookup"><span data-stu-id="36b46-643">If the current thread culture is set explicitly to a culture instantiated by the <xref:System.Globalization.CultureInfo.%23ctor%28System.String%29> constructor, and that culture corresponds to the current Windows system culture.</span></span>  
  
 <span data-ttu-id="36b46-644">在某些情况下，特别是对于服务器应用程序，将当前区域性设置为<xref:System.Globalization.CultureInfo>反映用户重写的对象可能不需要。</span><span class="sxs-lookup"><span data-stu-id="36b46-644">In some cases, particularly for server applications, setting the current culture to a <xref:System.Globalization.CultureInfo> object that reflects user overrides may be undesirable.</span></span> <span data-ttu-id="36b46-645">相反，可以将当前线程区域性设置为<xref:System.Globalization.CultureInfo>对象不会反映用户重写以下方面：</span><span class="sxs-lookup"><span data-stu-id="36b46-645">Instead, you can set the current thread culture to a <xref:System.Globalization.CultureInfo> object that does not reflect user overrides in the following ways:</span></span>  
  
-   <span data-ttu-id="36b46-646">通过调用<xref:System.Globalization.CultureInfo.%23ctor%28System.String%2CSystem.Boolean%29>构造函数，值为`false`为`useUserOverride`参数。</span><span class="sxs-lookup"><span data-stu-id="36b46-646">By calling the <xref:System.Globalization.CultureInfo.%23ctor%28System.String%2CSystem.Boolean%29> constructor with a value of `false` for the `useUserOverride` argument.</span></span>  
  
-   <span data-ttu-id="36b46-647">通过调用<xref:System.Globalization.CultureInfo.GetCultureInfo%2A>方法，它返回只读缓存，<xref:System.Globalization.CultureInfo>对象。</span><span class="sxs-lookup"><span data-stu-id="36b46-647">By calling the <xref:System.Globalization.CultureInfo.GetCultureInfo%2A> method, which returns a cached, read-only <xref:System.Globalization.CultureInfo> object.</span></span>  
  
<a name="WindowsAndCurr"></a>   
## <a name="the-current-culture-and-uwp-apps"></a><span data-ttu-id="36b46-648">当前区域性和 UWP 应用</span><span class="sxs-lookup"><span data-stu-id="36b46-648">The current culture and UWP apps</span></span>  
 <span data-ttu-id="36b46-649">在通用 Windows 平台 (UWP) 应用中，<xref:System.Globalization.CultureInfo.CurrentCulture%2A>属性是读写的就像它是.NET Framework 和.NET Core 应用程序中; 您可以使用它来获取并设置当前区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-649">In Universal Windows Platform (UWP) apps, the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property is read-write, just as it is in .NET Framework and .NET Core apps; you can use it both to get and to set the current culture.</span></span> <span data-ttu-id="36b46-650">但是，UWP 应用不区分当前区域性和当前 UI 区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-650">However, UWP apps do not distinguish between the current culture and the current UI culture.</span></span> <span data-ttu-id="36b46-651"><xref:System.Globalization.CultureInfo.CurrentCulture%2A>并<xref:System.Globalization.CultureInfo.CurrentUICulture%2A>属性映射到的第一个值[Windows.ApplicationModel.Resources.Core.ResourceManager.DefaultContext.Languages](https://docs.microsoft.com/uwp/api/windows.applicationmodel.resources.core.resourcecontext#properties_)集合。</span><span class="sxs-lookup"><span data-stu-id="36b46-651">The <xref:System.Globalization.CultureInfo.CurrentCulture%2A> and <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> properties map to the first value in the [Windows.ApplicationModel.Resources.Core.ResourceManager.DefaultContext.Languages](https://docs.microsoft.com/uwp/api/windows.applicationmodel.resources.core.resourcecontext#properties_) collection.</span></span>  

<span data-ttu-id="36b46-652">在.NET Framework 和.NET Core 应用程序，当前区域性为每个线程设置，和<xref:System.Globalization.CultureInfo.CurrentCulture%2A>属性反映当前线程的区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-652">In .NET Framework and .NET Core apps, the current culture is a per-thread setting, and the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property reflects the culture of the current thread only.</span></span> <span data-ttu-id="36b46-653">在 UWP 应用中，当前的区域性将映射到[Windows.ApplicationModel.Resources.Core.ResourceManager.DefaultContext.Languages](https://docs.microsoft.com/uwp/api/windows.applicationmodel.resources.core.resourcecontext#properties_)属性，它是一种全局设置。</span><span class="sxs-lookup"><span data-stu-id="36b46-653">In UWP apps, the current culture maps to the [Windows.ApplicationModel.Resources.Core.ResourceManager.DefaultContext.Languages](https://docs.microsoft.com/uwp/api/windows.applicationmodel.resources.core.resourcecontext#properties_) property, which is a global setting.</span></span> <span data-ttu-id="36b46-654">设置<xref:System.Globalization.CultureInfo.CurrentCulture%2A>属性发生更改的整个应用程序的区域性; 不能针对每个线程设置区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-654">Setting the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property changes the culture of the entire app; culture cannot be set on a per-thread basis.</span></span>
  
## Examples  
 <span data-ttu-id="36b46-655">下面的示例演示如何更改<xref:System.Globalization.CultureInfo.CurrentCulture%2A>和<xref:System.Globalization.CultureInfo.CurrentUICulture%2A>当前线程。</span><span class="sxs-lookup"><span data-stu-id="36b46-655">The following example demonstrates how to change the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> and <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> of the current thread.</span></span>  
  
 [!code-cpp[System.Globalization.CultureInfo.CurrentCulture2#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.CurrentCulture2/CPP/currentculture.cpp#11)]
 [!code-csharp[System.Globalization.CultureInfo.CurrentCulture2#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.CurrentCulture2/CS/currentculture.cs#11)]
 [!code-vb[System.Globalization.CultureInfo.CurrentCulture2#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.CurrentCulture2/VB/currentculture.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="36b46-656">属性设置为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="36b46-656">The property is set to <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="36b46-657">用于设置当前区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-657">for setting the current culture.</span></span> <span data-ttu-id="36b46-658">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlThread" /></span><span class="sxs-lookup"><span data-stu-id="36b46-658">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlThread" /></span></span></permission>
        <altmember cref="P:System.Globalization.CultureInfo.DefaultThreadCurrentCulture" />
        <altmember cref="P:System.Threading.Thread.CurrentCulture" />
        <altmember cref="P:System.Globalization.CultureInfo.CurrentUICulture" />
        <altmember cref="P:System.Globalization.CultureInfo.InstalledUICulture" />
        <altmember cref="P:System.Globalization.CultureInfo.InvariantCulture" />
        <altmember cref="P:System.Globalization.CultureInfo.Parent" />
        <altmember cref="T:System.Security.Permissions.SecurityPermission" />
        <altmember cref="T:System.Security.Permissions.SecurityPermissionAttribute" />
      </Docs>
    </Member>
    <Member MemberName="CurrentUICulture">
      <MemberSignature Language="C#" Value="public static System.Globalization.CultureInfo CurrentUICulture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Globalization.CultureInfo CurrentUICulture" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.CurrentUICulture" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property CurrentUICulture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Globalization::CultureInfo ^ CurrentUICulture { System::Globalization::CultureInfo ^ get(); void set(System::Globalization::CultureInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CurrentUICulture : System.Globalization.CultureInfo with get, set" Usage="System.Globalization.CultureInfo.CurrentUICulture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36b46-659">获取或设置 <see cref="T:System.Globalization.CultureInfo" /> 对象，该对象表示资源管理器在运行时查找区域性特定资源时所用的当前用户接口区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-659">Gets or sets the <see cref="T:System.Globalization.CultureInfo" /> object that represents the current user interface culture used by the Resource Manager to look up culture-specific resources at run time.</span></span></summary>
        <value><span data-ttu-id="36b46-660">资源管理器用于在运行时查找查找区域性特定资源的区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-660">The culture used by the Resource Manager to look up culture-specific resources at run time.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36b46-661">当前 UI 区域性为每个线程属性。</span><span class="sxs-lookup"><span data-stu-id="36b46-661">The current UI culture is a per-thread property.</span></span> <span data-ttu-id="36b46-662">也就是说，每个线程都具有其自己当前 UI 区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-662">That is, each thread has its own current UI culture.</span></span> <span data-ttu-id="36b46-663">此属性等效于检索，或开始[!INCLUDE[net_v46](~/includes/net-v46-md.md)]，并设置<xref:System.Globalization.CultureInfo>分配给对象`System.Threading.Thread.CurrentThread.CurrentUICulture`属性。</span><span class="sxs-lookup"><span data-stu-id="36b46-663">This property is equivalent to retrieving or, starting with the [!INCLUDE[net_v46](~/includes/net-v46-md.md)], setting the <xref:System.Globalization.CultureInfo> object assigned to the  `System.Threading.Thread.CurrentThread.CurrentUICulture` property.</span></span> <span data-ttu-id="36b46-664">在线程启动时，其 UI 区域性是最初确定的如下所示：</span><span class="sxs-lookup"><span data-stu-id="36b46-664">When a thread is started, its UI culture is initially determined as follows:</span></span>  
  
-   <span data-ttu-id="36b46-665">通过检索由指定的区域性<xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A>线程执行所在，如果属性值不是在应用程序域的属性`null`。</span><span class="sxs-lookup"><span data-stu-id="36b46-665">By retrieving the culture that is specified by the <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> property in the application domain in which the thread is executing, if the property value is not `null`.</span></span>  
  
-   <span data-ttu-id="36b46-666">如果线程执行基于任务的异步操作和应用面向一个线程池线程[!INCLUDE[net_v46](~/includes/net-v46-md.md)]或更高版本的.NET Framework 中，其 UI 区域性由调用线程的 UI 区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-666">If the thread is a thread pool thread that is executing a task-based asynchronous operation and the app targets the [!INCLUDE[net_v46](~/includes/net-v46-md.md)] or a later version of the .NET Framework, its UI culture is determined by the UI culture of the calling thread.</span></span>  <span data-ttu-id="36b46-667">下面的示例将当前 UI 区域性更改为葡萄牙语 （巴西），并启动六项任务，其中每个显示其线程 ID、 其任务 ID 和其当前 UI 区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-667">The following example changes the current UI culture to Portuguese (Brazil) and launches six tasks, each of which displays its thread ID, its task ID, and its current UI culture.</span></span> <span data-ttu-id="36b46-668">每个任务 （和线程） 已继承调用线程的 UI 区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-668">Each of the tasks (and the threads) has inherited the UI culture of the calling thread.</span></span>  
  
     [!code-csharp[System.Globalization.CultureInfo.CurrentUICulture#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentuiculture/cs/Async1.cs#14)]
     [!code-vb[System.Globalization.CultureInfo.CurrentUICulture#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentuiculture/vb/Async1.vb#14)]  
  
     <span data-ttu-id="36b46-669">有关详细信息，请参阅中的"区域性和基于任务的异步操作"部分<xref:System.Globalization.CultureInfo>主题。</span><span class="sxs-lookup"><span data-stu-id="36b46-669">For more information, see the "Culture and task-based asynchronous operations" section in the <xref:System.Globalization.CultureInfo> topic.</span></span>  
  
-   <span data-ttu-id="36b46-670">通过调用 Windows`GetUserDefaultUILanguage`函数。</span><span class="sxs-lookup"><span data-stu-id="36b46-670">By calling the Windows `GetUserDefaultUILanguage` function.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="36b46-671">在中[!INCLUDE[Compact](~/includes/compact-md.md)]，则<xref:System.Globalization.CultureInfo.CurrentUICulture%2A>属性是只读的。</span><span class="sxs-lookup"><span data-stu-id="36b46-671">In the [!INCLUDE[Compact](~/includes/compact-md.md)], the <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> property is read-only.</span></span> <span data-ttu-id="36b46-672">当前 UI 区域性由系统的区域设置，并且不能以编程方式更改。</span><span class="sxs-lookup"><span data-stu-id="36b46-672">The current UI culture is determined by the system's regional settings and cannot be changed programmatically.</span></span>  
  
 <span data-ttu-id="36b46-673">从开始[!INCLUDE[net_v46](~/includes/net-v46-md.md)]，若要更改的用户界面区域性由一个线程，设置<xref:System.Threading.Thread.CurrentUICulture%2A?displayProperty=nameWithType>属性改为新的区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-673">Starting with the [!INCLUDE[net_v46](~/includes/net-v46-md.md)], to change the user interface culture used by a thread, set the <xref:System.Threading.Thread.CurrentUICulture%2A?displayProperty=nameWithType> property to the new culture.</span></span> <span data-ttu-id="36b46-674">线程跨越应用程序域边界时，如果您显式更改线程的 UI 区域性中更改这种方式仍然存在。</span><span class="sxs-lookup"><span data-stu-id="36b46-674">If you explicitly change a thread's UI culture in this way, that change persists if the thread crosses application domain boundaries.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="36b46-675">在.NET Framework 4.5.2 及更早版本中，<xref:System.Globalization.CultureInfo.CurrentUICulture%2A>属性是只读的; 也就是说，可以检索属性值，但不能将其设置。</span><span class="sxs-lookup"><span data-stu-id="36b46-675">In the .NET Framework 4.5.2 and earlier versions, the <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> property is read-only;  that is, you can retrieve the property value, but you cannot set it.</span></span> <span data-ttu-id="36b46-676">若要更改当前 UI 区域性，将分配<xref:System.Globalization.CultureInfo>对象，表示到新的 UI 区域性`Thread.CurrentThread.CurrentUICulture`属性。</span><span class="sxs-lookup"><span data-stu-id="36b46-676">To change the current UI culture, you assign the <xref:System.Globalization.CultureInfo> object that represents the new UI culture to the `Thread.CurrentThread.CurrentUICulture` property.</span></span> <span data-ttu-id="36b46-677">从开始[!INCLUDE[net_v46](~/includes/net-v46-md.md)]，则<xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType>属性为读写; 可以同时设置和检索属性的值。</span><span class="sxs-lookup"><span data-stu-id="36b46-677">Starting with the [!INCLUDE[net_v46](~/includes/net-v46-md.md)], the <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> property is read-write; you can both set and retrieve the property's value.</span></span> <span data-ttu-id="36b46-678">如果属性值设置<xref:System.Globalization.CultureInfo>对象，表示新区域性，则`Thread.CurrentThread.CurrentCulture`属性也会更改。</span><span class="sxs-lookup"><span data-stu-id="36b46-678">If you do set the property value to a <xref:System.Globalization.CultureInfo> object that represents a new culture, the value of the `Thread.CurrentThread.CurrentCulture` property also changes.</span></span>  
  
 <span data-ttu-id="36b46-679">本节内容：</span><span class="sxs-lookup"><span data-stu-id="36b46-679">In this section:</span></span>  
  
 <span data-ttu-id="36b46-680">[获取当前 UI 区域性](#Getting) </span><span class="sxs-lookup"><span data-stu-id="36b46-680">[Getting the Current UI Culture](#Getting) </span></span>  
 <span data-ttu-id="36b46-681">[显式设置当前 UI 区域性](#Explicit) </span><span class="sxs-lookup"><span data-stu-id="36b46-681">[Explicitly Setting the Current UI Culture](#Explicit) </span></span>  
 <span data-ttu-id="36b46-682">[隐式设置当前 UI 区域性](#Implicit) </span><span class="sxs-lookup"><span data-stu-id="36b46-682">[Implicitly Setting the Current UI Culture](#Implicit) </span></span>  
 <span data-ttu-id="36b46-683">[安全注意事项](#Security) </span><span class="sxs-lookup"><span data-stu-id="36b46-683">[Security Considerations](#Security) </span></span>  
 [<span data-ttu-id="36b46-684">当前 UI 区域性和 Windows 应用程序</span><span class="sxs-lookup"><span data-stu-id="36b46-684">The Current UI Culture and Windows apps</span></span>](#WindowsAndCurrUI)  
  
<a name="Getting"></a>   
## <a name="getting-the-current-ui-culture"></a><span data-ttu-id="36b46-685">获取当前 UI 区域性</span><span class="sxs-lookup"><span data-stu-id="36b46-685">Getting the Current UI Culture</span></span>  
 <span data-ttu-id="36b46-686"><xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType>属性是每个线程设置; 这就是，每个线程可以具有其自己的 UI 区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-686">The <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> property is a per-thread setting; that is, each thread can have its own UI culture.</span></span> <span data-ttu-id="36b46-687">检索的值来获取当前线程的 UI 区域性<xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType>属性，如下面的示例说明了。</span><span class="sxs-lookup"><span data-stu-id="36b46-687">You get the UI culture of the current thread by retrieving the value of the   <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> property, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Globalization.CultureInfo.CurrentUICulture#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentuiculture/cs/Get1.cs#5)]
 [!code-vb[System.Globalization.CultureInfo.CurrentUICulture#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentuiculture/vb/Get1.vb#5)]  
  
 <span data-ttu-id="36b46-688">此外可以检索的值从当前线程的 UI 区域性<xref:System.Threading.Thread.CurrentUICulture%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="36b46-688">You can also retrieve the value of the current thread's UI culture from the <xref:System.Threading.Thread.CurrentUICulture%2A?displayProperty=nameWithType> property.</span></span>  
  
<a name="Explicit"></a>   
## <a name="explicitly-setting-the-current-ui-culture"></a><span data-ttu-id="36b46-689">显式设置当前 UI 区域性</span><span class="sxs-lookup"><span data-stu-id="36b46-689">Explicitly Setting the Current UI Culture</span></span>  
 <span data-ttu-id="36b46-690">从开始[!INCLUDE[net_v46](~/includes/net-v46-md.md)]，可以通过将分配更改当前 UI 区域性<xref:System.Globalization.CultureInfo>对象，表示的新区域性<xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="36b46-690">Starting with the [!INCLUDE[net_v46](~/includes/net-v46-md.md)], you can change the current UI culture by assigning a <xref:System.Globalization.CultureInfo> object that represents the new culture to the <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="36b46-691">可以设置当前 UI 区域性，为任一特定区域性设置 （如 EN-US 或 DE-DE） 或非特定区域性 （例如 en 或 de）。</span><span class="sxs-lookup"><span data-stu-id="36b46-691">The current UI culture can be set to either a specific culture (such as en-US or de-DE) or to a neutral culture (such as en or de).</span></span> <span data-ttu-id="36b46-692">下面的示例将当前 UI 区域性设置为 FR-FR 或法语 （法国）。</span><span class="sxs-lookup"><span data-stu-id="36b46-692">The following example sets the current UI culture to fr-FR or French (France).</span></span>  
  
 [!code-csharp[System.Globalization.CultureInfo.CurrentUICulture#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentuiculture/cs/currentuiculture1.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.CurrentUICulture#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentuiculture/vb/currentuiculture1.vb#1)]  
  
 <span data-ttu-id="36b46-693">在多线程应用程序中，您可以显式设置的任何线程 UI 区域性通过将分配<xref:System.Globalization.CultureInfo>对象表示线程的区域性<xref:System.Threading.Thread.CurrentUICulture%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="36b46-693">In a multithreaded application, you can explicitly set the UI culture of any thread by assigning a <xref:System.Globalization.CultureInfo> object that represents that culture to the thread's <xref:System.Threading.Thread.CurrentUICulture%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="36b46-694">如果线程想要设置其区域性是当前线程，则可以分配到的新区域性<xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="36b46-694">If the thread whose culture you want to set is the current thread, you can assign the new culture to the <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="36b46-695">如果显式设置线程的 UI 区域性，线程保留相同的区域性，即使它跨越应用程序域边界，并在另一个应用程序域中执行代码。</span><span class="sxs-lookup"><span data-stu-id="36b46-695">When the UI culture of a thread is set explicitly, that thread retains the same culture even if it crosses application domain boundaries and executes code in another application domain.</span></span>  
  
<a name="Implicit"></a>   
## <a name="implicitly-setting-the-current-ui-culture"></a><span data-ttu-id="36b46-696">隐式设置当前 UI 区域性</span><span class="sxs-lookup"><span data-stu-id="36b46-696">Implicitly Setting the Current UI Culture</span></span>  
 <span data-ttu-id="36b46-697">当一个线程，包括主应用程序线程，第一个，默认情况下创建其当前 UI 区域性设置，如下所示：</span><span class="sxs-lookup"><span data-stu-id="36b46-697">When a thread, including the main application thread, is first created, by default its current UI culture is set as follows:</span></span>  
  
-   <span data-ttu-id="36b46-698">通过使用由定义的区域性<xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A>属性的当前应用程序域的属性值不是如果`null`。</span><span class="sxs-lookup"><span data-stu-id="36b46-698">By using the culture defined by the <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> property for the current application domain if the  property value is not `null`.</span></span>  
  
-   <span data-ttu-id="36b46-699">通过使用系统的默认区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-699">By using the system's default culture.</span></span> <span data-ttu-id="36b46-700">在系统上使用 Windows 操作系统的公共语言运行时调用 Windows`GetUserDefaultUILanguage`函数可设置当前 UI 区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-700">On systems that use the Windows operating system, the common language runtime calls the Windows `GetUserDefaultUILanguage` function to set the current  UI culture.</span></span> <span data-ttu-id="36b46-701">`GetUserDefaultUILanguage` 返回由用户设置的默认 UI 区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-701">`GetUserDefaultUILanguage` returns the default UI culture set by the user.</span></span> <span data-ttu-id="36b46-702">如果用户未设置默认 UI 语言，则返回最初在系统上安装的区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-702">If the user has not set a default UI language, it returns the culture originally installed on the system.</span></span>  
  
 <span data-ttu-id="36b46-703">如果线程跨越应用程序边界，并在另一个应用程序域中执行代码，其区域性确定的新创建的线程相同的方式。</span><span class="sxs-lookup"><span data-stu-id="36b46-703">If the thread crosses application boundaries and executes code in another application domain, its culture is determined in the same way as that of a newly created thread.</span></span>  
  
 <span data-ttu-id="36b46-704">请注意，如果设置不同于安装了系统的 UI 区域性特定的 UI 区域性或用户的首选的 UI 区域性，并启动应用程序的多个线程，这些线程的当前 UI 区域性返回的区域性`GetUserDefaultUILanguage`函数，除非您为其分配区域性<xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A>线程执行所在的应用程序域中的属性。</span><span class="sxs-lookup"><span data-stu-id="36b46-704">Note that if you set a specific UI culture that is different from the system-installed UI culture or the user's preferred UI culture, and your application starts multiple threads, the current UI culture of those threads will be the culture returned by the `GetUserDefaultUILanguage` function, unless you assign a culture to the <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> property in the application domain in which the thread is executing.</span></span>  
  
<a name="Security"></a>   
## <a name="security-considerations"></a><span data-ttu-id="36b46-705">安全注意事项</span><span class="sxs-lookup"><span data-stu-id="36b46-705">Security Considerations</span></span>  
 <span data-ttu-id="36b46-706">更改当前线程的区域性，需要<xref:System.Security.Permissions.SecurityPermission>权限<xref:System.Security.Permissions.SecurityPermissionFlag.ControlThread>值设置。</span><span class="sxs-lookup"><span data-stu-id="36b46-706">Changing the culture of the current thread requires a <xref:System.Security.Permissions.SecurityPermission> permission with the <xref:System.Security.Permissions.SecurityPermissionFlag.ControlThread> value set.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="36b46-707">由于与线程关联的安全状态，对线程进行操作很危险。</span><span class="sxs-lookup"><span data-stu-id="36b46-707">Manipulating threads is dangerous because of the security state associated with threads.</span></span> <span data-ttu-id="36b46-708">因此，仅对可信的代码，并且仅在必要的时候，则应授予此权限。</span><span class="sxs-lookup"><span data-stu-id="36b46-708">Therefore, this permission should be given only to trustworthy code, and then only as necessary.</span></span> <span data-ttu-id="36b46-709">不能更改线程的区域性不完全受信任的代码中。</span><span class="sxs-lookup"><span data-stu-id="36b46-709">You cannot change thread culture in semi-trusted code.</span></span>  
  
<a name="WindowsAndCurrUI"></a>   
## <a name="the-current-ui-culture-and-uwp-apps"></a><span data-ttu-id="36b46-710">当前 UI 区域性和 UWP 应用</span><span class="sxs-lookup"><span data-stu-id="36b46-710">The current UI culture and UWP apps</span></span>  
 
<span data-ttu-id="36b46-711">在通用 Windows 平台 (UWP) 应用中，<xref:System.Globalization.CultureInfo.CurrentUICulture%2A>属性是读写的就像它是.NET Framework 和.NET Core 应用程序中; 您可以使用它来获取并设置当前区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-711">In Universal Windows Platform (UWP) apps, the <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> property is read-write, just as it is in .NET Framework and .NET Core apps; you can use it both to get and to set the current culture.</span></span> <span data-ttu-id="36b46-712">但是，UWP 应用不区分当前区域性和当前 UI 区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-712">However, UWP apps do not distinguish between the current culture and the current UI culture.</span></span> <span data-ttu-id="36b46-713"><xref:System.Globalization.CultureInfo.CurrentCulture%2A>并<xref:System.Globalization.CultureInfo.CurrentUICulture%2A>属性映射到的第一个值[Windows.ApplicationModel.Resources.Core.ResourceManager.DefaultContext.Languages](https://docs.microsoft.com/uwp/api/windows.applicationmodel.resources.core.resourcecontext#properties_)集合。</span><span class="sxs-lookup"><span data-stu-id="36b46-713">The <xref:System.Globalization.CultureInfo.CurrentCulture%2A> and <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> properties map to the first value in the [Windows.ApplicationModel.Resources.Core.ResourceManager.DefaultContext.Languages](https://docs.microsoft.com/uwp/api/windows.applicationmodel.resources.core.resourcecontext#properties_) collection.</span></span>

<span data-ttu-id="36b46-714">在.NET Framework 和.NET Core 应用程序，当前 UI 区域性为每个线程设置，和<xref:System.Globalization.CultureInfo.CurrentUICulture%2A>属性反映当前线程的 UI 区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-714">In .NET Framework and .NET Core apps, the current UI culture is a per-thread setting, and the <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> property reflects the UI culture of the current thread only.</span></span> <span data-ttu-id="36b46-715">在 UWP 应用中，当前的区域性将映射到[Windows.ApplicationModel.Resources.Core.ResourceManager.DefaultContext.Languages](https://docs.microsoft.com/uwp/api/windows.applicationmodel.resources.core.resourcecontext#properties_)属性，它是一种全局设置。</span><span class="sxs-lookup"><span data-stu-id="36b46-715">In UWP apps, the current culture maps to the [Windows.ApplicationModel.Resources.Core.ResourceManager.DefaultContext.Languages](https://docs.microsoft.com/uwp/api/windows.applicationmodel.resources.core.resourcecontext#properties_) property, which is a global setting.</span></span> <span data-ttu-id="36b46-716">设置<xref:System.Globalization.CultureInfo.CurrentCulture%2A>属性发生更改的整个应用程序的区域性; 不能针对每个线程设置区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-716">Setting the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property changes the culture of the entire app; culture cannot be set on a per-thread basis.</span></span>    
  
## Examples  
 <span data-ttu-id="36b46-717">下面的代码示例演示如何更改<xref:System.Globalization.CultureInfo.CurrentCulture%2A>和<xref:System.Globalization.CultureInfo.CurrentUICulture%2A>当前线程。</span><span class="sxs-lookup"><span data-stu-id="36b46-717">The following code example demonstrates how to change the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> and <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> of the current thread.</span></span>  
  
 [!code-cpp[System.Globalization.CultureInfo.CurrentCulture2#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.CurrentCulture2/CPP/currentculture.cpp#11)]
 [!code-csharp[System.Globalization.CultureInfo.CurrentCulture2#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.CurrentCulture2/CS/currentculture.cs#11)]
 [!code-vb[System.Globalization.CultureInfo.CurrentCulture2#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.CurrentCulture2/VB/currentculture.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="36b46-718">属性设置为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="36b46-718">The property is set to <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="36b46-719">该属性设置为不能用于定位资源文件的区域性名称。</span><span class="sxs-lookup"><span data-stu-id="36b46-719">The property is set to a culture name that cannot be used to locate a resource file.</span></span> <span data-ttu-id="36b46-720">资源文件名必须仅包含字母、数字、连字符或下划线。</span><span class="sxs-lookup"><span data-stu-id="36b46-720">Resource filenames can include only letters, numbers, hyphens, or underscores.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="36b46-721">用于设置当前 UI 区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-721">for setting the current UI culture.</span></span> <span data-ttu-id="36b46-722">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlThread" /></span><span class="sxs-lookup"><span data-stu-id="36b46-722">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlThread" /></span></span></permission>
        <altmember cref="T:System.Resources.ResourceManager" />
        <altmember cref="P:System.Threading.Thread.CurrentUICulture" />
        <altmember cref="P:System.Globalization.CultureInfo.CurrentCulture" />
        <altmember cref="P:System.Globalization.CultureInfo.InstalledUICulture" />
        <altmember cref="P:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture" />
      </Docs>
    </Member>
    <Member MemberName="DateTimeFormat">
      <MemberSignature Language="C#" Value="public virtual System.Globalization.DateTimeFormatInfo DateTimeFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.DateTimeFormatInfo DateTimeFormat" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.DateTimeFormat" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DateTimeFormat As DateTimeFormatInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Globalization::DateTimeFormatInfo ^ DateTimeFormat { System::Globalization::DateTimeFormatInfo ^ get(); void set(System::Globalization::DateTimeFormatInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DateTimeFormat : System.Globalization.DateTimeFormatInfo with get, set" Usage="System.Globalization.CultureInfo.DateTimeFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.DateTimeFormatInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36b46-723">获取或设置 <see cref="T:System.Globalization.DateTimeFormatInfo" />，它定义适合区域性的、显示日期和时间的格式。</span><span class="sxs-lookup"><span data-stu-id="36b46-723">Gets or sets a <see cref="T:System.Globalization.DateTimeFormatInfo" /> that defines the culturally appropriate format of displaying dates and times.</span></span></summary>
        <value><span data-ttu-id="36b46-724">一个 <see cref="T:System.Globalization.DateTimeFormatInfo" />，它定义适合区域性的、显示日期和时间的格式。</span><span class="sxs-lookup"><span data-stu-id="36b46-724">A <see cref="T:System.Globalization.DateTimeFormatInfo" /> that defines the culturally appropriate format of displaying dates and times.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="overrides"></a><span data-ttu-id="36b46-725">Overrides</span><span class="sxs-lookup"><span data-stu-id="36b46-725">Overrides</span></span>  
 <span data-ttu-id="36b46-726">用户可以选择重写一些与 Windows 通过控制面板的区域和语言选项部分的当前区域性关联的值。</span><span class="sxs-lookup"><span data-stu-id="36b46-726">The user might choose to override some of the values associated with the current culture of Windows through the regional and language options portion of Control Panel.</span></span> <span data-ttu-id="36b46-727">例如，用户可以选择以不同格式显示日期，或使用一种货币而不是默认区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-727">For example, the user might choose to display the date in a different format or to use a currency other than the default for the culture.</span></span>  
  
 <span data-ttu-id="36b46-728">如果<xref:System.Globalization.CultureInfo.UseUserOverride%2A>是`true`和指定的区域性匹配的 Windows，当前区域性<xref:System.Globalization.CultureInfo>使用这些重写值，其中包括用户设置的属性<xref:System.Globalization.DateTimeFormatInfo>返回实例<xref:System.Globalization.CultureInfo.DateTimeFormat%2A>属性，和的属性<xref:System.Globalization.NumberFormatInfo>返回实例<xref:System.Globalization.CultureInfo.NumberFormat%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="36b46-728">If <xref:System.Globalization.CultureInfo.UseUserOverride%2A> is `true` and the specified culture matches the current culture of Windows, the <xref:System.Globalization.CultureInfo> uses those overrides, including user settings for the properties of the <xref:System.Globalization.DateTimeFormatInfo> instance returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> property, and the properties of the <xref:System.Globalization.NumberFormatInfo> instance returned by the <xref:System.Globalization.CultureInfo.NumberFormat%2A> property.</span></span> <span data-ttu-id="36b46-729">如果用户设置与不兼容与关联的区域性<xref:System.Globalization.CultureInfo>，例如，如果在所选的日历不是之一<xref:System.Globalization.CultureInfo.OptionalCalendars%2A>，方法的结果和属性的值是不确定。</span><span class="sxs-lookup"><span data-stu-id="36b46-729">If the user settings are incompatible with the culture associated with the <xref:System.Globalization.CultureInfo>, for example, if the selected calendar is not one of the <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>, the results of the methods and the values of the properties are undefined.</span></span>  
  
 <span data-ttu-id="36b46-730">值<xref:System.Globalization.CultureInfo.DateTimeFormat%2A>属性和<xref:System.Globalization.CultureInfo.NumberFormat%2A>属性不计算得出，直到你的应用程序访问的属性。</span><span class="sxs-lookup"><span data-stu-id="36b46-730">The value of the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> property and the <xref:System.Globalization.CultureInfo.NumberFormat%2A> property is not calculated until your application accesses the property.</span></span> <span data-ttu-id="36b46-731">如果用户可以更改当前区域性为新区域性时运行该应用程序，然后该应用程序访问<xref:System.Globalization.CultureInfo.DateTimeFormat%2A>或<xref:System.Globalization.CultureInfo.NumberFormat%2A>属性，应用程序中检索而不是重写的新区域性的默认值原始区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-731">If the user can change the current culture to a new culture while the application is running and then the application accesses the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> or <xref:System.Globalization.CultureInfo.NumberFormat%2A> property, the application retrieves the defaults for the new culture instead of the overrides for the original culture.</span></span> <span data-ttu-id="36b46-732">若要保留原始的当前区域性的重写设置，应用程序应访问<xref:System.Globalization.CultureInfo.DateTimeFormat%2A>和<xref:System.Globalization.CultureInfo.NumberFormat%2A>属性，然后才能更改当前区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-732">To preserve the overrides for the original current culture, the application should access the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> and <xref:System.Globalization.CultureInfo.NumberFormat%2A> properties before changing the current culture.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36b46-733">下面的代码示例显示了 CultureInfo.Clone 还克隆<xref:System.Globalization.DateTimeFormatInfo>并<xref:System.Globalization.NumberFormatInfo>与关联的实例<xref:System.Globalization.CultureInfo>。</span><span class="sxs-lookup"><span data-stu-id="36b46-733">The following code example shows that CultureInfo.Clone also clones the <xref:System.Globalization.DateTimeFormatInfo> and <xref:System.Globalization.NumberFormatInfo> instances associated with the <xref:System.Globalization.CultureInfo>.</span></span>  
  
 [!code-cpp[System.Globalization.CultureInfo.Clone#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.Clone/CPP/yslin_cultureinfo_clone.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo.Clone#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.Clone/CS/yslin_cultureinfo_clone.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.Clone#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.Clone/VB/yslin_cultureinfo_clone.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="36b46-734">该属性设置为 null。</span><span class="sxs-lookup"><span data-stu-id="36b46-734">The property is set to null.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="36b46-735">设置了 <see cref="P:System.Globalization.CultureInfo.DateTimeFormat" /> 属性或任何 <see cref="T:System.Globalization.DateTimeFormatInfo" /> 属性，但 <see cref="T:System.Globalization.CultureInfo" /> 是只读的。</span><span class="sxs-lookup"><span data-stu-id="36b46-735">The <see cref="P:System.Globalization.CultureInfo.DateTimeFormat" /> property or any of the <see cref="T:System.Globalization.DateTimeFormatInfo" /> properties is set, and the <see cref="T:System.Globalization.CultureInfo" /> is read-only.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="36b46-736">如果<see cref="P:System.Globalization.DateTimeFormatInfo.Calendar" />是<see cref="T:System.Globalization.TaiwanCalendar" />但<see cref="P:System.Threading.Thread.CurrentCulture" />未设置为中文 （台湾），名为 ZH-TW，然后<see cref="P:System.Globalization.DateTimeFormatInfo.NativeCalendarName" />， <see cref="M:System.Globalization.DateTimeFormatInfo.GetEraName(System.Int32)" />，并<see cref="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedEraName(System.Int32)" />返回空字符串 ("")。</span><span class="sxs-lookup"><span data-stu-id="36b46-736">If <see cref="P:System.Globalization.DateTimeFormatInfo.Calendar" /> is the <see cref="T:System.Globalization.TaiwanCalendar" /> but the <see cref="P:System.Threading.Thread.CurrentCulture" /> is not set to Chinese (Taiwan), named zh-TW, then <see cref="P:System.Globalization.DateTimeFormatInfo.NativeCalendarName" />, <see cref="M:System.Globalization.DateTimeFormatInfo.GetEraName(System.Int32)" />, and <see cref="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedEraName(System.Int32)" /> return an empty string ("").</span></span></para></block>
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
        <altmember cref="M:System.Globalization.CultureInfo.GetFormat(System.Type)" />
        <altmember cref="P:System.Globalization.CultureInfo.NumberFormat" />
      </Docs>
    </Member>
    <Member MemberName="DefaultThreadCurrentCulture">
      <MemberSignature Language="C#" Value="public static System.Globalization.CultureInfo DefaultThreadCurrentCulture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Globalization.CultureInfo DefaultThreadCurrentCulture" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.DefaultThreadCurrentCulture" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property DefaultThreadCurrentCulture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Globalization::CultureInfo ^ DefaultThreadCurrentCulture { System::Globalization::CultureInfo ^ get(); void set(System::Globalization::CultureInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultThreadCurrentCulture : System.Globalization.CultureInfo with get, set" Usage="System.Globalization.CultureInfo.DefaultThreadCurrentCulture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36b46-737">获取或设置当前应用程序域中线程的默认区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-737">Gets or sets the default culture for threads in the current application domain.</span></span></summary>
        <value><span data-ttu-id="36b46-738">如果当前系统区域性为应用程序域中的默认线程区域性，则为当前应用程序中线程的默认区域性或 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="36b46-738">The default culture for threads in the current application domain, or <see langword="null" /> if the current system culture is the default thread culture in the application domain.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36b46-739">在[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]和早期版本中，默认情况下，所有线程的区域性设置为 Windows 系统区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-739">In the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] and previous versions, by default, the culture of all threads is set to the Windows system culture.</span></span> <span data-ttu-id="36b46-740">对于当前区域性不同于默认系统区域性的应用程序，此行为通常是不可取的。</span><span class="sxs-lookup"><span data-stu-id="36b46-740">For applications whose current culture differs from the default system culture, this behavior is often undesirable.</span></span> <span data-ttu-id="36b46-741">在中[!INCLUDE[net_v45](~/includes/net-v45-md.md)]，则<xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A>属性使应用程序能够在应用程序域中定义的所有线程的默认区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-741">In the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], the <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> property enables an application to define the default culture of all threads in an application domain.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="36b46-742">如果未显式设置的区域性的任何现有线程在应用程序域中，设置执行<xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A>属性也会更改这些线程的区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-742">If you have not explicitly set the culture of any existing threads executing in an application domain, setting the <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> property also changes the culture of these threads.</span></span> <span data-ttu-id="36b46-743">但是，如果在另一个应用程序域中执行这些线程，则其区域性定义由<xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A>该应用程序域中的属性或如果定义没有默认值，则由默认系统区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-743">However, if these threads execute in another application domain, their culture is defined by the <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> property in that application domain or, if no default value is defined, by the default system culture.</span></span> <span data-ttu-id="36b46-744">因此，我们建议您始终显式设置你的主应用程序线程的区域性，并且不依赖于<xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A>属性来定义主应用程序线程的区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-744">Because of this, we recommend that you always explicitly set the culture of your main application thread, and not rely on the <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> property to define the culture of the main application thread.</span></span>  
  
 <span data-ttu-id="36b46-745">除非它已显式设置的值<xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A>属性是`null`，由默认 Windows 系统区域性定义的应用程序域中线程的未分配显式区域性的区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-745">Unless it is set explicitly, the value of the <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> property is `null`, and the culture of threads in an application domain that have not been assigned an explicit culture is defined by the default Windows system culture.</span></span>  
  
 <span data-ttu-id="36b46-746">有关区域性、 线程和应用程序域的详细信息，请参阅"区域性和线程"和"区域性和应用程序域"部分中<xref:System.Globalization.CultureInfo>参考页。</span><span class="sxs-lookup"><span data-stu-id="36b46-746">For more information about cultures, threads, and application domains, see the "Culture and threads" and "Culture and application domains" sections in the <xref:System.Globalization.CultureInfo> reference page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36b46-747">下面的示例说明了在.NET Framework 中定义一个新线程的当前区域性的默认行为。</span><span class="sxs-lookup"><span data-stu-id="36b46-747">The following example illustrates the default behavior of the .NET Framework in defining the current culture of a new thread.</span></span> <span data-ttu-id="36b46-748">在启动时，该示例设置当前区域性和当前 UI 区域性为法语 （法国） 除外的默认系统区域性已经是法语 （法国） 的所有系统上。</span><span class="sxs-lookup"><span data-stu-id="36b46-748">At startup, the example sets the current culture and the current UI culture to French (France) on all systems except those on which the default system culture is already French (France).</span></span> <span data-ttu-id="36b46-749">如果默认系统区域性已经是法语 （法国），则该代码设置当前区域性和当前 UI 区域性为英语 （美国）。</span><span class="sxs-lookup"><span data-stu-id="36b46-749">If the default system culture is already French (France), the code sets the current culture and the current UI culture to English (United States).</span></span> <span data-ttu-id="36b46-750">然后，它调用`DisplayRandomNumbers`例程，它生成三个随机数字，并将它们显示为货币值。</span><span class="sxs-lookup"><span data-stu-id="36b46-750">It then calls the `DisplayRandomNumbers` routine, which generates three random numbers and displays them as currency values.</span></span> <span data-ttu-id="36b46-751">接下来，它将创建一个新线程，也会执行`DisplayRandomNumbers`例程。</span><span class="sxs-lookup"><span data-stu-id="36b46-751">Next, it creates a new thread, which also executes the `DisplayRandomNumbers` routine.</span></span>  
  
 [!code-csharp[System.Globalization.CultureInfo.DefaultThreadCurrentCulture#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.defaultthreadcurrentculture/cs/defaultculture1.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.DefaultThreadCurrentCulture#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.defaultthreadcurrentculture/vb/defaultculture1.vb#1)]  
  
 <span data-ttu-id="36b46-752">如示例输出所示，当系统区域性为英语 （美国） 的计算机上运行该示例的主线程显示其使用法语 （法国） 区域性的格式设置约定的货币值。</span><span class="sxs-lookup"><span data-stu-id="36b46-752">As the output from the example shows, when the example is run on a computer whose system culture is English (United States), the main thread displays its currency values using the formatting conventions of the French (France) culture.</span></span> <span data-ttu-id="36b46-753">但是，由于工作线程的区域性派生自当前的 Windows 系统区域而不是应用程序的当前区域性，工作线程显示它使用英语 （美国） 区域性的格式设置约定的货币值。</span><span class="sxs-lookup"><span data-stu-id="36b46-753">However, because the worker thread's culture is derived from the current Windows system culture rather than the application's current culture, the work thread displays its currency values using the formatting conventions of the English (United States) culture.</span></span>  
  
 <span data-ttu-id="36b46-754">下面的示例使用<xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A>和<xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A>属性以定义的当前区域性和新的应用程序线程的当前 UI 区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-754">The following example uses the <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> and <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> properties  to define the current culture and current UI culture of a new application thread.</span></span> <span data-ttu-id="36b46-755">在启动时，该示例设置当前区域性和当前 UI 区域性为法语 （法国） 除外的默认系统区域性已经是法语 （法国） 的所有系统上。</span><span class="sxs-lookup"><span data-stu-id="36b46-755">At startup, the example sets the current culture and the current UI culture to French (France) on all systems except those on which the default system culture is already French (France).</span></span> <span data-ttu-id="36b46-756">如果默认系统区域性已经是法语 （法国），则将当前区域性和当前 UI 区域性设置为英语 （美国）。</span><span class="sxs-lookup"><span data-stu-id="36b46-756">If the default system culture is already French (France), it sets the current culture and the current UI culture to English (United States).</span></span> <span data-ttu-id="36b46-757">然后，它调用`DisplayRandomNumbers`例程，它生成三个随机数字，并将它们显示为货币值。</span><span class="sxs-lookup"><span data-stu-id="36b46-757">It then calls the `DisplayRandomNumbers` routine, which generates three random numbers and displays them as currency values.</span></span> <span data-ttu-id="36b46-758">接下来，它将创建一个新线程，也会执行`DisplayRandomNumbers`例程。</span><span class="sxs-lookup"><span data-stu-id="36b46-758">Next, it creates a new thread, which also executes the `DisplayRandomNumbers` routine.</span></span>  
  
 [!code-csharp[System.Globalization.CultureInfo.DefaultThreadCurrentCulture#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.defaultthreadcurrentculture/cs/defaultculture2.cs#2)]
 [!code-vb[System.Globalization.CultureInfo.DefaultThreadCurrentCulture#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.defaultthreadcurrentculture/vb/defaultculture2.vb#2)]  
  
 <span data-ttu-id="36b46-759">如示例输出所示，当系统区域性为英语 （美国） 的计算机上运行该示例的主线程和工作线程都将显示使用法语 （法国） 区域性的格式设置约定及其货币值。</span><span class="sxs-lookup"><span data-stu-id="36b46-759">As the output from the example shows, when the example is run on a computer whose system culture is English (United States), both the main thread and the worker thread display their currency values using the formatting conventions of the French (France) culture.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CultureInfo.CurrentCulture" />
        <altmember cref="P:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture" />
      </Docs>
    </Member>
    <Member MemberName="DefaultThreadCurrentUICulture">
      <MemberSignature Language="C#" Value="public static System.Globalization.CultureInfo DefaultThreadCurrentUICulture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Globalization.CultureInfo DefaultThreadCurrentUICulture" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property DefaultThreadCurrentUICulture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Globalization::CultureInfo ^ DefaultThreadCurrentUICulture { System::Globalization::CultureInfo ^ get(); void set(System::Globalization::CultureInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultThreadCurrentUICulture : System.Globalization.CultureInfo with get, set" Usage="System.Globalization.CultureInfo.DefaultThreadCurrentUICulture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36b46-760">获取或设置当前应用程序域中线程的默认 UI 区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-760">Gets or sets the default UI culture for threads in the current application domain.</span></span></summary>
        <value><span data-ttu-id="36b46-761">如果当前系统 UI 区域性为当前应用程序域中的默认线程 UI 区域性，则当前应用程序域中线程的默认 UI 区域性或 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="36b46-761">The default UI culture for threads in the current application domain, or <see langword="null" /> if the current system UI culture is the default thread UI culture in the application domain.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36b46-762">在[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]和早期版本中，默认情况下，所有线程的 UI 区域性设置为 Windows 系统区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-762">In the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] and previous versions, by default, the UI culture of all threads is set to the Windows system culture.</span></span> <span data-ttu-id="36b46-763">对于当前 UI 区域性不同于默认系统区域性的应用程序，此行为通常是不可取的。</span><span class="sxs-lookup"><span data-stu-id="36b46-763">For applications whose current UI culture differs from the default system culture, this behavior is often undesirable.</span></span> <span data-ttu-id="36b46-764">在中[!INCLUDE[net_v45](~/includes/net-v45-md.md)]，则<xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A>属性，可以在应用程序域中定义的所有线程的默认 UI 区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-764">In the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], the <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> property lets you define the default UI culture of all threads in an application domain.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="36b46-765">如果未显式设置的 UI 区域性的任何现有线程在应用程序域中，设置执行<xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A>属性也会更改这些线程的区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-765">If you have not explicitly set the UI culture of any existing threads executing in an application domain, setting the <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> property also changes the culture of these threads.</span></span> <span data-ttu-id="36b46-766">但是，如果在另一个应用程序域中执行这些线程，则其区域性定义由<xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A>该应用程序域中的属性或如果定义没有默认值，则由默认系统区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-766">However, if these threads execute in another application domain, their culture is defined by the <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> property in that application domain or, if no default value is defined, by the default system culture.</span></span> <span data-ttu-id="36b46-767">因此，我们建议始终显式设置主应用程序线程的区域性并不依赖于<xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A>属性来定义主应用程序线程的区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-767">Because of this, we recommend that you always explicitly set the culture of your main application thread and do not rely on the <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> property to define the culture of the main application thread.</span></span>  
  
 <span data-ttu-id="36b46-768">除非它已显式设置的值<xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A>属性是`null`，和应用程序域中所有未分配显式区域性的线程的当前区域性定义的默认 Windows 系统区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-768">Unless it is set explicitly, the value of the <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> property is `null`, and the current culture of all threads in an application domain that have not been assigned an explicit culture is defined by the default Windows system culture.</span></span>  
  
 <span data-ttu-id="36b46-769">有关区域性、 线程和应用程序域的详细信息，请参阅"区域性和线程"和"区域性和应用程序域"部分中<xref:System.Globalization.CultureInfo>参考页。</span><span class="sxs-lookup"><span data-stu-id="36b46-769">For more information about cultures, threads, and application domains, see the "Culture and threads" and "Culture and application domains" sections in the <xref:System.Globalization.CultureInfo> reference page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36b46-770">下面的示例说明了在.NET Framework 中定义一个新线程的当前区域性的默认行为。</span><span class="sxs-lookup"><span data-stu-id="36b46-770">The following example illustrates the default behavior of the .NET Framework in defining the current culture of a new thread.</span></span> <span data-ttu-id="36b46-771">它使用英语和俄罗斯语语言资源。</span><span class="sxs-lookup"><span data-stu-id="36b46-771">It uses English and Russian language resources.</span></span> <span data-ttu-id="36b46-772">名为 GreetingStrings.txt 的以下文本文件包含英语语言资源：</span><span class="sxs-lookup"><span data-stu-id="36b46-772">The following text file named GreetingStrings.txt contains the English language resources:</span></span>  
  
```  
greeting =Hello again!  
newGreeting=Hello!  
```  
  
 <span data-ttu-id="36b46-773">编译为二进制.resources 文件通过使用名为 GreetingStrings.resources[资源文件生成器](~/docs/framework/tools/resgen-exe-resource-file-generator.md)使用以下命令。</span><span class="sxs-lookup"><span data-stu-id="36b46-773">It is compiled to a binary .resources file named GreetingStrings.resources by using the [Resource File Generator](~/docs/framework/tools/resgen-exe-resource-file-generator.md) with the following command.</span></span>  
  
```console  
resgen greetingstrings.txt  
```  
  
 <span data-ttu-id="36b46-774">名为 GreetingStrings.ru-RU.txt 的以下文本文件包含俄语语言资源：</span><span class="sxs-lookup"><span data-stu-id="36b46-774">The following text file named GreetingStrings.ru-RU.txt contains the Russian language resources:</span></span>  
  
```  
greeting=Еще раз привет!  
newGreeting=Привет!  
```  
  
 <span data-ttu-id="36b46-775">编译为二进制.resources 文件通过使用名为 GreetingStrings.ru RU.resources[资源文件生成器](~/docs/framework/tools/resgen-exe-resource-file-generator.md)使用以下命令。</span><span class="sxs-lookup"><span data-stu-id="36b46-775">It is compiled to a binary .resources file named GreetingStrings.ru-RU.resources by using the [Resource File Generator](~/docs/framework/tools/resgen-exe-resource-file-generator.md) with the following command.</span></span>  
  
```console  
resgen greetingstrings.ru-RU.txt  
```  
  
 <span data-ttu-id="36b46-776">应用程序代码，如下所示，驻留在文件中名为 Example1.vb 或 Example1.cs。</span><span class="sxs-lookup"><span data-stu-id="36b46-776">The application code, which is shown below, resides in a file named Example1.vb or Example1.cs.</span></span> <span data-ttu-id="36b46-777">它被编译为可执行文件的 Visual Basic 编译器使用以下命令：</span><span class="sxs-lookup"><span data-stu-id="36b46-777">It is compiled to an executable by using the following command for the Visual Basic compiler:</span></span>  
  
```console  
vbc Example1.vb /resource:GreetingStrings.resources  
```  
  
 <span data-ttu-id="36b46-778">对于 C# 编译器，该命令是类似：</span><span class="sxs-lookup"><span data-stu-id="36b46-778">For the C# compiler, the command is similar:</span></span>  
  
```console  
csc /resource:GreetingStrings.resources Example1.cs  
```  
  
 <span data-ttu-id="36b46-779">这将创建包含示例的可执行代码以及其回退区域性的资源程序集。</span><span class="sxs-lookup"><span data-stu-id="36b46-779">This creates an assembly that includes the example's executable code along with the resources for its fallback culture.</span></span> <span data-ttu-id="36b46-780">此外可以使用[程序集链接器](~/docs/framework/tools/al-exe-assembly-linker.md)创建俄语 （俄罗斯） 区域性的资源文件使用以下命令：</span><span class="sxs-lookup"><span data-stu-id="36b46-780">You can also use the [Assembly Linker](~/docs/framework/tools/al-exe-assembly-linker.md) to create the resource file for the Russian (Russia) culture with the following command:</span></span>  
  
```console  
>al /embed:greetingstrings.ru-RU.resources /c:ru-RU /template:example1.exe /out:ru-RU\Example1.resources.dll  
```  
  
 <span data-ttu-id="36b46-781">在启动时，该示例设置当前区域性和当前 UI 区域性为俄语 （俄罗斯） 除外的默认系统区域性已经是俄语的所有系统上 （俄罗斯）。</span><span class="sxs-lookup"><span data-stu-id="36b46-781">At startup, the example sets the current culture and the current UI culture to Russian (Russia) on all systems except those on which the default system culture is already Russian (Russia).</span></span> <span data-ttu-id="36b46-782">如果默认系统区域性已经是俄语 （俄罗斯）、 代码集的当前区域性和当前 UI 区域性以英语 （美国）。</span><span class="sxs-lookup"><span data-stu-id="36b46-782">If the default system culture is already Russian (Russia), the code sets the current culture and the current UI culture to English (United States).</span></span> <span data-ttu-id="36b46-783">然后，它调用`ShowGreeting`例程，后者将显示在后续方法调用的简单字符串就是第一次和略有不同的字符串。</span><span class="sxs-lookup"><span data-stu-id="36b46-783">It then calls the `ShowGreeting` routine, which displays a simple string the first time it is called and a slightly different string on subsequent method calls.</span></span> <span data-ttu-id="36b46-784">接下来，它将创建一个新线程，也会执行`ShowGreeting`例程。</span><span class="sxs-lookup"><span data-stu-id="36b46-784">Next, it creates a new thread, which also executes the `ShowGreeting` routine.</span></span>  
  
 [!code-csharp[System.Globalization.CultureInfo.DefaultThreadCurrentUICulture#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.defaultthreadcurrentuiculture/cs/example1.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.DefaultThreadCurrentUICulture#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.defaultthreadcurrentuiculture/vb/example1.vb#1)]  
  
 <span data-ttu-id="36b46-785">如示例输出所示，当系统区域性为英语 （美国） 的计算机上运行该示例的主线程在俄语中显示其初始字符串。</span><span class="sxs-lookup"><span data-stu-id="36b46-785">As the output from the example shows, when the example is run on a computer whose system culture is English (United States), the main thread displays its initial string in Russian.</span></span> <span data-ttu-id="36b46-786">但是，因为工作线程的区域性派生自当前的 Windows 系统区域而不是应用程序的当前区域性，工作线程以英语显示其字符串。</span><span class="sxs-lookup"><span data-stu-id="36b46-786">However, because the worker thread's culture is derived from the current Windows system culture rather than the application's current culture, the worker thread displays its string in English.</span></span>  
  
 <span data-ttu-id="36b46-787">下面的示例使用<xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A>和<xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A>属性以定义的当前区域性和新的应用程序线程的当前 UI 区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-787">The following example uses the <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> and <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> properties  to define the current culture and current UI culture of a new application thread.</span></span>  
  
 <span data-ttu-id="36b46-788">该示例与上面的示例使用相同的资源文件。</span><span class="sxs-lookup"><span data-stu-id="36b46-788">The example uses the same resources files as the previous example.</span></span> <span data-ttu-id="36b46-789">编译并将本地化的俄语语言资源嵌入到附属程序集的命令也是完全相同，只不过可执行程序集的名称会更改。</span><span class="sxs-lookup"><span data-stu-id="36b46-789">The commands to compile and to embed the localized Russian language resources into a satellite assembly are also identical, except that the name of the executable assembly changes.</span></span>  
  
 <span data-ttu-id="36b46-790">在启动时，该示例设置当前区域性和当前 UI 区域性为俄语 （俄罗斯） 除外的默认系统区域性已经是俄语的所有系统上 （俄罗斯）。</span><span class="sxs-lookup"><span data-stu-id="36b46-790">At startup, the example sets the current culture and the current UI culture to Russian (Russia) on all systems except those on which the default system culture is already Russian (Russia).</span></span> <span data-ttu-id="36b46-791">如果已经默认系统区域性是俄语 （俄罗斯），它将设置当前区域性和当前 UI 区域性为英语 （美国）。</span><span class="sxs-lookup"><span data-stu-id="36b46-791">If the default system culture is already Russian (Russia), it sets the current culture and the current UI culture to English (United States).</span></span> <span data-ttu-id="36b46-792">然后，它调用`ShowGreeting`例程，后者将显示在后续方法调用的简单字符串就是第一次和略有不同的字符串。</span><span class="sxs-lookup"><span data-stu-id="36b46-792">It then calls the `ShowGreeting` routine, which displays a simple string the first time it is called and a slightly different string on subsequent method calls.</span></span> <span data-ttu-id="36b46-793">接下来，它将创建一个新线程，也会执行`ShowGreeting`例程。</span><span class="sxs-lookup"><span data-stu-id="36b46-793">Next, it creates a new thread, which also executes the `ShowGreeting` routine.</span></span>  
  
 [!code-csharp[System.Globalization.CultureInfo.DefaultThreadCurrentUICulture#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.defaultthreadcurrentuiculture/cs/example2.cs#2)]
 [!code-vb[System.Globalization.CultureInfo.DefaultThreadCurrentUICulture#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.defaultthreadcurrentuiculture/vb/example2.vb#2)]  
  
 <span data-ttu-id="36b46-794">如示例输出所示，当系统区域性为英语 （美国） 的计算机上运行该示例的主线程和工作线程以俄语语言显示它们的字符串。</span><span class="sxs-lookup"><span data-stu-id="36b46-794">As the output from the example shows, when the example is run on a computer whose system culture is English (United States), both the main thread and the worker thread display their strings in the Russian language.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="36b46-795">在集运算中，<see cref="P:System.Globalization.CultureInfo.Name" /> 属性值无效。</span><span class="sxs-lookup"><span data-stu-id="36b46-795">In a set operation, the <see cref="P:System.Globalization.CultureInfo.Name" /> property value is invalid.</span></span></exception>
        <altmember cref="P:System.Globalization.CultureInfo.CurrentUICulture" />
        <altmember cref="P:System.Globalization.CultureInfo.DefaultThreadCurrentCulture" />
      </Docs>
    </Member>
    <Member MemberName="DisplayName">
      <MemberSignature Language="C#" Value="public virtual string DisplayName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.DisplayName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DisplayName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DisplayName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DisplayName : string" Usage="System.Globalization.CultureInfo.DisplayName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36b46-796">获取完整的本地化区域性名称。</span><span class="sxs-lookup"><span data-stu-id="36b46-796">Gets the full localized culture name.</span></span></summary>
        <value><span data-ttu-id="36b46-797">格式的完整本地化的区域性名称*languagefull* [*country/regionfull*]，其中*languagefull*是语言的完整名称和*country/regionfull*是国家/地区的完整名称。</span><span class="sxs-lookup"><span data-stu-id="36b46-797">The full localized culture name in the format *languagefull* [*country/regionfull*], where *languagefull* is the full name of the language and *country/regionfull* is the full name of the country/region.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36b46-798">此属性表示的本地化的名称<xref:System.Globalization.CultureInfo>对象。</span><span class="sxs-lookup"><span data-stu-id="36b46-798">This property represents the localized name of the <xref:System.Globalization.CultureInfo> object.</span></span>  
  
 <span data-ttu-id="36b46-799">区域性名称可能因脚本编写或格式设置约定。</span><span class="sxs-lookup"><span data-stu-id="36b46-799">Culture names may vary due to scripting or formatting conventions.</span></span> <span data-ttu-id="36b46-800">应使用返回的名称进行显示，并尝试对其进行分析。</span><span class="sxs-lookup"><span data-stu-id="36b46-800">You should use the returned name for display, and not attempt to parse it.</span></span>  
  
 <span data-ttu-id="36b46-801">如果通过创建自定义区域性<xref:System.Globalization.CultureAndRegionInfoBuilder>类，<xref:System.Globalization.CultureInfo.DisplayName%2A>属性初始化的值为<xref:System.Globalization.CultureInfo.NativeName%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="36b46-801">If a custom culture is created by means of the <xref:System.Globalization.CultureAndRegionInfoBuilder> class, the <xref:System.Globalization.CultureInfo.DisplayName%2A> property is initialized to the value of the <xref:System.Globalization.CultureInfo.NativeName%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36b46-802">下面的代码示例显示了非特定区域性的多个属性。</span><span class="sxs-lookup"><span data-stu-id="36b46-802">The following code example displays several properties of the neutral cultures.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="36b46-803">此示例分别显示与 0x0004 和 0x7C04 区域性标识符的 ZH-CHS 和 ZH-CHT 区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-803">The example displays the zh-CHS and zh-CHT cultures with the 0x0004 and 0x7C04 culture identifiers, respectively.</span></span> <span data-ttu-id="36b46-804">但是，Windows Vista 应用程序应使用-Zh-hans 名称而不是 ZH-CHS 和 Zh-hant 名称而不是 ZH-CHT。</span><span class="sxs-lookup"><span data-stu-id="36b46-804">However, your Windows Vista applications should use the zh-Hans name instead of zh-CHS and the zh-Hant name instead of zh-CHT.</span></span> <span data-ttu-id="36b46-805">-Zh-hans 和 Zh-hant 名称表示当前的标准，并且应使用，除非使用较旧名称的理由需要。</span><span class="sxs-lookup"><span data-stu-id="36b46-805">The zh-Hans and zh-Hant names represent the current standard, and should be used unless you have a reason for using the older names.</span></span>  
  
 [!code-cpp[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/CPP/getcultures.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/CS/getcultures.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/VB/getcultures.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CultureInfo.Name" />
        <altmember cref="P:System.Globalization.CultureInfo.NativeName" />
        <altmember cref="P:System.Globalization.CultureInfo.EnglishName" />
        <altmember cref="P:System.Globalization.CultureInfo.TwoLetterISOLanguageName" />
        <altmember cref="P:System.Globalization.CultureInfo.ThreeLetterISOLanguageName" />
        <altmember cref="P:System.Globalization.CultureInfo.ThreeLetterWindowsLanguageName" />
      </Docs>
    </Member>
    <Member MemberName="EnglishName">
      <MemberSignature Language="C#" Value="public virtual string EnglishName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EnglishName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.EnglishName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property EnglishName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ EnglishName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EnglishName : string" Usage="System.Globalization.CultureInfo.EnglishName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36b46-806">获取格式为 languagefull [country/regionfull] 的英语区域性名称。</span><span class="sxs-lookup"><span data-stu-id="36b46-806">Gets the culture name in the format *languagefull* [*country/regionfull*] in English.</span></span></summary>
        <value><span data-ttu-id="36b46-807">格式的区域性名称*languagefull* [*country/regionfull*]，where *languagefull*是语言的完整名称和*国家/地区 /regionfull*是国家/地区的完整名称。</span><span class="sxs-lookup"><span data-stu-id="36b46-807">The culture name in the format *languagefull* [*country/regionfull*] in English, where *languagefull* is the full name of the language and *country/regionfull* is the full name of the country/region.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36b46-808">例如，<xref:System.Globalization.CultureInfo.EnglishName%2A>对于特定的区域性名称 EN-US 是"英语 （美国）"。</span><span class="sxs-lookup"><span data-stu-id="36b46-808">For example, the <xref:System.Globalization.CultureInfo.EnglishName%2A> for the specific culture name en-US is "English (United States)".</span></span>  
  
 <span data-ttu-id="36b46-809">此属性的值是相同的而不考虑.NET Framework 的语言版本。</span><span class="sxs-lookup"><span data-stu-id="36b46-809">The value of this property is the same, regardless of the language version of the .NET Framework.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36b46-810">下面的代码示例显示了非特定区域性的多个属性。</span><span class="sxs-lookup"><span data-stu-id="36b46-810">The following code example displays several properties of the neutral cultures.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="36b46-811">此示例分别显示的较旧 ZH-CHS 和 ZH-CHT 0x0004 和 0x7C04 区域性标识符，使用的区域性名称。</span><span class="sxs-lookup"><span data-stu-id="36b46-811">The example displays the older zh-CHS and zh-CHT culture names with the 0x0004 and 0x7C04 culture identifiers, respectively.</span></span> <span data-ttu-id="36b46-812">但是，Windows Vista 应用程序应使用-Zh-hans 名称而不是 ZH-CHS 和 Zh-hant 名称而不是 ZH-CHT。</span><span class="sxs-lookup"><span data-stu-id="36b46-812">However, your Windows Vista applications should use the zh-Hans name instead of zh-CHS and the zh-Hant name instead of zh-CHT.</span></span> <span data-ttu-id="36b46-813">-Zh-hans 和 Zh-hant 名称表示当前的标准，并且应使用，除非使用较旧名称的理由需要。</span><span class="sxs-lookup"><span data-stu-id="36b46-813">The zh-Hans and zh-Hant names represent the current standard, and should be used unless you have a reason for using the older names.</span></span>  
  
 [!code-cpp[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/CPP/getcultures.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/CS/getcultures.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/VB/getcultures.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CultureInfo.Name" />
        <altmember cref="P:System.Globalization.CultureInfo.DisplayName" />
        <altmember cref="P:System.Globalization.CultureInfo.NativeName" />
        <altmember cref="P:System.Globalization.CultureInfo.TwoLetterISOLanguageName" />
        <altmember cref="P:System.Globalization.CultureInfo.ThreeLetterISOLanguageName" />
        <altmember cref="P:System.Globalization.CultureInfo.ThreeLetterWindowsLanguageName" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="cultureInfo.Equals value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="36b46-814">将与当前 <see cref="T:System.Globalization.CultureInfo" /> 进行比较的对象。</span><span class="sxs-lookup"><span data-stu-id="36b46-814">The object to compare with the current <see cref="T:System.Globalization.CultureInfo" />.</span></span></param>
        <summary><span data-ttu-id="36b46-815">确定指定的对象是否与当前 <see cref="T:System.Globalization.CultureInfo" /> 具有相同的区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-815">Determines whether the specified object is the same culture as the current <see cref="T:System.Globalization.CultureInfo" />.</span></span></summary>
        <returns><span data-ttu-id="36b46-816">如果 <paramref name="value" /> 与当前 <see cref="T:System.Globalization.CultureInfo" /> 具有相同的区域性，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="36b46-816"><see langword="true" /> if <paramref name="value" /> is the same culture as the current <see cref="T:System.Globalization.CultureInfo" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36b46-817">此方法重写 <xref:System.Object.Equals%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="36b46-817">This method overrides <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="36b46-818">两个<xref:System.Globalization.CultureInfo>对象被视为相等，如果他们<xref:System.Globalization.CultureInfo.Name%2A>和<xref:System.Globalization.CultureInfo.CompareInfo%2A>属性相等。</span><span class="sxs-lookup"><span data-stu-id="36b46-818">Two <xref:System.Globalization.CultureInfo> objects are considered equal if their <xref:System.Globalization.CultureInfo.Name%2A> and <xref:System.Globalization.CultureInfo.CompareInfo%2A> properties are equal.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetConsoleFallbackUICulture">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo GetConsoleFallbackUICulture ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Globalization.CultureInfo GetConsoleFallbackUICulture() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.GetConsoleFallbackUICulture" />
      <MemberSignature Language="VB.NET" Value="Public Function GetConsoleFallbackUICulture () As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Globalization::CultureInfo ^ GetConsoleFallbackUICulture();" />
      <MemberSignature Language="F#" Value="member this.GetConsoleFallbackUICulture : unit -&gt; System.Globalization.CultureInfo" Usage="cultureInfo.GetConsoleFallbackUICulture " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="36b46-819">如果默认的图形用户界面区域性不合适，则获取适合控制台应用程序的备用用户界面区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-819">Gets an alternate user interface culture suitable for console applications when the default graphic user interface culture is unsuitable.</span></span></summary>
        <returns><span data-ttu-id="36b46-820">用于在控制台上读取和显示文本的备用区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-820">An alternate culture that is used to read and display text on the console.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36b46-821">阿拉伯语、 希伯来语、 乌尔都语和叙利亚语等语言基于双向文本。</span><span class="sxs-lookup"><span data-stu-id="36b46-821">Languages such as Arabic, Hebrew, Urdu, and Syriac are based on bidirectional text.</span></span> <span data-ttu-id="36b46-822">Windows 应用程序，有一个图形用户界面，支持双向语言。</span><span class="sxs-lookup"><span data-stu-id="36b46-822">Windows applications, which have a graphical user interface, support bidirectional languages.</span></span> <span data-ttu-id="36b46-823">但是，控制台应用程序，采用操作系统控制台的文本用户界面，不提供的双向支持。</span><span class="sxs-lookup"><span data-stu-id="36b46-823">However, console applications, which employ the text user interface of the operating system console, do not provide bidirectional support.</span></span> <span data-ttu-id="36b46-824">因此，如果本地化为阿拉伯语或希伯来语的控制台应用程序，你的应用程序控制台屏幕上显示不可读的文本。</span><span class="sxs-lookup"><span data-stu-id="36b46-824">Therefore, if you localize a console application to Arabic or Hebrew, your application displays unreadable text on the console screen.</span></span>  
  
 <span data-ttu-id="36b46-825">用户界面区域性指定应用程序需要支持用户输入和输出，以及默认情况下与操作系统的系统区域性相同的资源。</span><span class="sxs-lookup"><span data-stu-id="36b46-825">The user interface culture specifies the resources an application needs to support user input and output, and by default is the same as the operating system culture.</span></span> <span data-ttu-id="36b46-826">例如，<xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType>属性返回的阿拉伯语区域性为阿拉伯语操作系统。</span><span class="sxs-lookup"><span data-stu-id="36b46-826">For example, the <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> property returns an Arabic culture for an Arabic operating system.</span></span> <span data-ttu-id="36b46-827">使用<xref:System.Globalization.CultureInfo.GetConsoleFallbackUICulture%2A>方法来检索适合控制台应用程序用户界面的区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-827">Use the <xref:System.Globalization.CultureInfo.GetConsoleFallbackUICulture%2A> method to retrieve a culture suitable for a console application user interface.</span></span> <span data-ttu-id="36b46-828">你的应用程序检索备用用户界面区域性后，它应将区域性分配给当前线程的当前用户接口区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-828">After your application retrieves the fallback user interface culture, it should assign the culture to the current user interface culture of the current thread.</span></span> <span data-ttu-id="36b46-829">有关详细信息，请参阅的"显式设置当前 UI 区域性"部分<xref:System.Globalization.CultureInfo.CurrentUICulture%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="36b46-829">For more information, see the "Explicitly Setting the Current UI Culture" section of the <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> property.</span></span>  
  
 <span data-ttu-id="36b46-830">以下是具有从预定义的区域性名称的不同回退用户界面区域性名称的预定义的区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-830">The following are predefined cultures that have a different fallback user interface culture name from the predefined culture name.</span></span>  
  
|<span data-ttu-id="36b46-831">预定义的区域性</span><span class="sxs-lookup"><span data-stu-id="36b46-831">Predefined culture</span></span>|<span data-ttu-id="36b46-832">区域性名称</span><span class="sxs-lookup"><span data-stu-id="36b46-832">Culture name</span></span>|<span data-ttu-id="36b46-833">备用用户界面区域性名称</span><span class="sxs-lookup"><span data-stu-id="36b46-833">Fallback user interface culture name</span></span>|  
|------------------------|------------------|------------------------------------------|  
|<span data-ttu-id="36b46-834">阿姆哈拉语</span><span class="sxs-lookup"><span data-stu-id="36b46-834">Amharic</span></span>|<span data-ttu-id="36b46-835">am</span><span class="sxs-lookup"><span data-stu-id="36b46-835">am</span></span>|<span data-ttu-id="36b46-836">en-US</span><span class="sxs-lookup"><span data-stu-id="36b46-836">en-US</span></span>|  
|<span data-ttu-id="36b46-837">阿姆哈拉语 （埃塞俄比亚）</span><span class="sxs-lookup"><span data-stu-id="36b46-837">Amharic (Ethiopia)</span></span>|<span data-ttu-id="36b46-838">am-ET</span><span class="sxs-lookup"><span data-stu-id="36b46-838">am-ET</span></span>|<span data-ttu-id="36b46-839">en-US</span><span class="sxs-lookup"><span data-stu-id="36b46-839">en-US</span></span>|  
|<span data-ttu-id="36b46-840">（非特定阿拉伯语）</span><span class="sxs-lookup"><span data-stu-id="36b46-840">(neutral Arabic)</span></span>|<span data-ttu-id="36b46-841">ar</span><span class="sxs-lookup"><span data-stu-id="36b46-841">ar</span></span>|<span data-ttu-id="36b46-842">en-US</span><span class="sxs-lookup"><span data-stu-id="36b46-842">en-US</span></span>|  
|<span data-ttu-id="36b46-843">阿拉伯语 （阿拉伯联合酋长国）</span><span class="sxs-lookup"><span data-stu-id="36b46-843">Arabic (U.A.E.)</span></span>|<span data-ttu-id="36b46-844">ar-AE</span><span class="sxs-lookup"><span data-stu-id="36b46-844">ar-AE</span></span>|<span data-ttu-id="36b46-845">en-US</span><span class="sxs-lookup"><span data-stu-id="36b46-845">en-US</span></span>|  
|<span data-ttu-id="36b46-846">阿拉伯语 （巴林）</span><span class="sxs-lookup"><span data-stu-id="36b46-846">Arabic (Bahrain)</span></span>|<span data-ttu-id="36b46-847">ar-BH</span><span class="sxs-lookup"><span data-stu-id="36b46-847">ar-BH</span></span>|<span data-ttu-id="36b46-848">en-US</span><span class="sxs-lookup"><span data-stu-id="36b46-848">en-US</span></span>|  
|<span data-ttu-id="36b46-849">阿拉伯语 （阿尔及利亚）</span><span class="sxs-lookup"><span data-stu-id="36b46-849">Arabic (Algeria)</span></span>|<span data-ttu-id="36b46-850">ar-DZ</span><span class="sxs-lookup"><span data-stu-id="36b46-850">ar-DZ</span></span>|<span data-ttu-id="36b46-851">fr-FR</span><span class="sxs-lookup"><span data-stu-id="36b46-851">fr-FR</span></span>|  
|<span data-ttu-id="36b46-852">阿拉伯语 （埃及）</span><span class="sxs-lookup"><span data-stu-id="36b46-852">Arabic (Egypt)</span></span>|<span data-ttu-id="36b46-853">ar-EG</span><span class="sxs-lookup"><span data-stu-id="36b46-853">ar-EG</span></span>|<span data-ttu-id="36b46-854">en-US</span><span class="sxs-lookup"><span data-stu-id="36b46-854">en-US</span></span>|  
|<span data-ttu-id="36b46-855">阿拉伯语 （伊拉克）</span><span class="sxs-lookup"><span data-stu-id="36b46-855">Arabic (Iraq)</span></span>|<span data-ttu-id="36b46-856">ar-IQ</span><span class="sxs-lookup"><span data-stu-id="36b46-856">ar-IQ</span></span>|<span data-ttu-id="36b46-857">en-US</span><span class="sxs-lookup"><span data-stu-id="36b46-857">en-US</span></span>|  
|<span data-ttu-id="36b46-858">阿拉伯语 （约旦）</span><span class="sxs-lookup"><span data-stu-id="36b46-858">Arabic (Jordan)</span></span>|<span data-ttu-id="36b46-859">ar-JO</span><span class="sxs-lookup"><span data-stu-id="36b46-859">ar-JO</span></span>|<span data-ttu-id="36b46-860">en-US</span><span class="sxs-lookup"><span data-stu-id="36b46-860">en-US</span></span>|  
|<span data-ttu-id="36b46-861">阿拉伯语 （科威特）</span><span class="sxs-lookup"><span data-stu-id="36b46-861">Arabic (Kuwait)</span></span>|<span data-ttu-id="36b46-862">ar-KW</span><span class="sxs-lookup"><span data-stu-id="36b46-862">ar-KW</span></span>|<span data-ttu-id="36b46-863">en-US</span><span class="sxs-lookup"><span data-stu-id="36b46-863">en-US</span></span>|  
|<span data-ttu-id="36b46-864">阿拉伯语 （黎巴嫩）</span><span class="sxs-lookup"><span data-stu-id="36b46-864">Arabic (Lebanon)</span></span>|<span data-ttu-id="36b46-865">ar-LB</span><span class="sxs-lookup"><span data-stu-id="36b46-865">ar-LB</span></span>|<span data-ttu-id="36b46-866">en-US</span><span class="sxs-lookup"><span data-stu-id="36b46-866">en-US</span></span>|  
|<span data-ttu-id="36b46-867">阿拉伯语 （利比亚）</span><span class="sxs-lookup"><span data-stu-id="36b46-867">Arabic (Libya)</span></span>|<span data-ttu-id="36b46-868">ar LY</span><span class="sxs-lookup"><span data-stu-id="36b46-868">ar-LY</span></span>|<span data-ttu-id="36b46-869">en-US</span><span class="sxs-lookup"><span data-stu-id="36b46-869">en-US</span></span>|  
|<span data-ttu-id="36b46-870">阿拉伯语 （摩洛哥）</span><span class="sxs-lookup"><span data-stu-id="36b46-870">Arabic (Morocco)</span></span>|<span data-ttu-id="36b46-871">ar-MA</span><span class="sxs-lookup"><span data-stu-id="36b46-871">ar-MA</span></span>|<span data-ttu-id="36b46-872">fr-FR</span><span class="sxs-lookup"><span data-stu-id="36b46-872">fr-FR</span></span>|  
|<span data-ttu-id="36b46-873">阿拉伯语 （阿曼）</span><span class="sxs-lookup"><span data-stu-id="36b46-873">Arabic (Oman)</span></span>|<span data-ttu-id="36b46-874">ar OM</span><span class="sxs-lookup"><span data-stu-id="36b46-874">ar-OM</span></span>|<span data-ttu-id="36b46-875">en-US</span><span class="sxs-lookup"><span data-stu-id="36b46-875">en-US</span></span>|  
|<span data-ttu-id="36b46-876">阿拉伯语 （卡塔尔）</span><span class="sxs-lookup"><span data-stu-id="36b46-876">Arabic (Qatar)</span></span>|<span data-ttu-id="36b46-877">ar-QA</span><span class="sxs-lookup"><span data-stu-id="36b46-877">ar-QA</span></span>|<span data-ttu-id="36b46-878">en-US</span><span class="sxs-lookup"><span data-stu-id="36b46-878">en-US</span></span>|  
|<span data-ttu-id="36b46-879">阿拉伯语 （沙特阿拉伯）</span><span class="sxs-lookup"><span data-stu-id="36b46-879">Arabic (Saudi Arabia)</span></span>|<span data-ttu-id="36b46-880">ar-SA</span><span class="sxs-lookup"><span data-stu-id="36b46-880">ar-SA</span></span>|<span data-ttu-id="36b46-881">en-US</span><span class="sxs-lookup"><span data-stu-id="36b46-881">en-US</span></span>|  
|<span data-ttu-id="36b46-882">阿拉伯语 （叙利亚）</span><span class="sxs-lookup"><span data-stu-id="36b46-882">Arabic (Syria)</span></span>|<span data-ttu-id="36b46-883">ar SY</span><span class="sxs-lookup"><span data-stu-id="36b46-883">ar-SY</span></span>|<span data-ttu-id="36b46-884">en-US</span><span class="sxs-lookup"><span data-stu-id="36b46-884">en-US</span></span>|  
|<span data-ttu-id="36b46-885">阿拉伯语 （突尼斯）</span><span class="sxs-lookup"><span data-stu-id="36b46-885">Arabic (Tunisia)</span></span>|<span data-ttu-id="36b46-886">ar-TN</span><span class="sxs-lookup"><span data-stu-id="36b46-886">ar-TN</span></span>|<span data-ttu-id="36b46-887">fr-FR</span><span class="sxs-lookup"><span data-stu-id="36b46-887">fr-FR</span></span>|  
|<span data-ttu-id="36b46-888">阿拉伯语 （也门）</span><span class="sxs-lookup"><span data-stu-id="36b46-888">Arabic (Yemen)</span></span>|<span data-ttu-id="36b46-889">ar-YE</span><span class="sxs-lookup"><span data-stu-id="36b46-889">ar-YE</span></span>|<span data-ttu-id="36b46-890">en-US</span><span class="sxs-lookup"><span data-stu-id="36b46-890">en-US</span></span>|  
|<span data-ttu-id="36b46-891">阿萨姆</span><span class="sxs-lookup"><span data-stu-id="36b46-891">Assamese</span></span>|<span data-ttu-id="36b46-892">as</span><span class="sxs-lookup"><span data-stu-id="36b46-892">as</span></span>|<span data-ttu-id="36b46-893">en-US</span><span class="sxs-lookup"><span data-stu-id="36b46-893">en-US</span></span>|  
|<span data-ttu-id="36b46-894">阿萨姆语 （印度）</span><span class="sxs-lookup"><span data-stu-id="36b46-894">Assamese (India)</span></span>|<span data-ttu-id="36b46-895">as-IN</span><span class="sxs-lookup"><span data-stu-id="36b46-895">as-IN</span></span>|<span data-ttu-id="36b46-896">en-US</span><span class="sxs-lookup"><span data-stu-id="36b46-896">en-US</span></span>|  
|<span data-ttu-id="36b46-897">孟加拉语</span><span class="sxs-lookup"><span data-stu-id="36b46-897">Bangla</span></span>|<span data-ttu-id="36b46-898">bn</span><span class="sxs-lookup"><span data-stu-id="36b46-898">bn</span></span>|<span data-ttu-id="36b46-899">en-US</span><span class="sxs-lookup"><span data-stu-id="36b46-899">en-US</span></span>|  
|<span data-ttu-id="36b46-900">孟加拉语 （孟加拉国）</span><span class="sxs-lookup"><span data-stu-id="36b46-900">Bangla (Bangladesh)</span></span>|<span data-ttu-id="36b46-901">bn-BD</span><span class="sxs-lookup"><span data-stu-id="36b46-901">bn-BD</span></span>|<span data-ttu-id="36b46-902">en-US</span><span class="sxs-lookup"><span data-stu-id="36b46-902">en-US</span></span>|  
|<span data-ttu-id="36b46-903">孟加拉语 （印度）</span><span class="sxs-lookup"><span data-stu-id="36b46-903">Bangla (India)</span></span>|<span data-ttu-id="36b46-904">bn IN</span><span class="sxs-lookup"><span data-stu-id="36b46-904">bn-IN</span></span>|<span data-ttu-id="36b46-905">en-US</span><span class="sxs-lookup"><span data-stu-id="36b46-905">en-US</span></span>|  
|<span data-ttu-id="36b46-906">藏语</span><span class="sxs-lookup"><span data-stu-id="36b46-906">Tibetan</span></span>|<span data-ttu-id="36b46-907">bo</span><span class="sxs-lookup"><span data-stu-id="36b46-907">bo</span></span>|<span data-ttu-id="36b46-908">en-US</span><span class="sxs-lookup"><span data-stu-id="36b46-908">en-US</span></span>|  
|<span data-ttu-id="36b46-909">藏语 （中国）</span><span class="sxs-lookup"><span data-stu-id="36b46-909">Tibetan (PRC)</span></span>|<span data-ttu-id="36b46-910">bo-CN</span><span class="sxs-lookup"><span data-stu-id="36b46-910">bo-CN</span></span>|<span data-ttu-id="36b46-911">en-US</span><span class="sxs-lookup"><span data-stu-id="36b46-911">en-US</span></span>|  
|<span data-ttu-id="36b46-912">迪维希语</span><span class="sxs-lookup"><span data-stu-id="36b46-912">Divehi</span></span>|<span data-ttu-id="36b46-913">dv</span><span class="sxs-lookup"><span data-stu-id="36b46-913">dv</span></span>|<span data-ttu-id="36b46-914">en-US</span><span class="sxs-lookup"><span data-stu-id="36b46-914">en-US</span></span>|  
|<span data-ttu-id="36b46-915">迪维希语 （印度）</span><span class="sxs-lookup"><span data-stu-id="36b46-915">Divehi (India)</span></span>|<span data-ttu-id="36b46-916">dv-MV</span><span class="sxs-lookup"><span data-stu-id="36b46-916">dv-MV</span></span>|<span data-ttu-id="36b46-917">en-US</span><span class="sxs-lookup"><span data-stu-id="36b46-917">en-US</span></span>|  
|<span data-ttu-id="36b46-918">波斯语</span><span class="sxs-lookup"><span data-stu-id="36b46-918">Persian</span></span>|<span data-ttu-id="36b46-919">fa</span><span class="sxs-lookup"><span data-stu-id="36b46-919">fa</span></span>|<span data-ttu-id="36b46-920">en-US</span><span class="sxs-lookup"><span data-stu-id="36b46-920">en-US</span></span>|  
|<span data-ttu-id="36b46-921">波斯语 （伊朗）</span><span class="sxs-lookup"><span data-stu-id="36b46-921">Persian (Iran)</span></span>|<span data-ttu-id="36b46-922">fa-IR</span><span class="sxs-lookup"><span data-stu-id="36b46-922">fa-IR</span></span>|<span data-ttu-id="36b46-923">en-US</span><span class="sxs-lookup"><span data-stu-id="36b46-923">en-US</span></span>|  
|<span data-ttu-id="36b46-924">古吉拉特语</span><span class="sxs-lookup"><span data-stu-id="36b46-924">Gujarati</span></span>|<span data-ttu-id="36b46-925">gu</span><span class="sxs-lookup"><span data-stu-id="36b46-925">gu</span></span>|<span data-ttu-id="36b46-926">en-US</span><span class="sxs-lookup"><span data-stu-id="36b46-926">en-US</span></span>|  
|<span data-ttu-id="36b46-927">古吉拉特语 （印度）</span><span class="sxs-lookup"><span data-stu-id="36b46-927">Gujarati (India)</span></span>|<span data-ttu-id="36b46-928">gu-IN</span><span class="sxs-lookup"><span data-stu-id="36b46-928">gu-IN</span></span>|<span data-ttu-id="36b46-929">en-US</span><span class="sxs-lookup"><span data-stu-id="36b46-929">en-US</span></span>|  
|<span data-ttu-id="36b46-930">希伯来语</span><span class="sxs-lookup"><span data-stu-id="36b46-930">Hebrew</span></span>|<span data-ttu-id="36b46-931">he</span><span class="sxs-lookup"><span data-stu-id="36b46-931">he</span></span>|<span data-ttu-id="36b46-932">en-US</span><span class="sxs-lookup"><span data-stu-id="36b46-932">en-US</span></span>|  
|<span data-ttu-id="36b46-933">希伯来语 （以色列）</span><span class="sxs-lookup"><span data-stu-id="36b46-933">Hebrew (Israel)</span></span>|<span data-ttu-id="36b46-934">he-IL</span><span class="sxs-lookup"><span data-stu-id="36b46-934">he-IL</span></span>|<span data-ttu-id="36b46-935">en-US</span><span class="sxs-lookup"><span data-stu-id="36b46-935">en-US</span></span>|  
|<span data-ttu-id="36b46-936">印地语</span><span class="sxs-lookup"><span data-stu-id="36b46-936">Hindi</span></span>|<span data-ttu-id="36b46-937">你好</span><span class="sxs-lookup"><span data-stu-id="36b46-937">hi</span></span>|<span data-ttu-id="36b46-938">en-US</span><span class="sxs-lookup"><span data-stu-id="36b46-938">en-US</span></span>|  
|<span data-ttu-id="36b46-939">印地语 （印度）</span><span class="sxs-lookup"><span data-stu-id="36b46-939">Hindi (India)</span></span>|<span data-ttu-id="36b46-940">hi-IN</span><span class="sxs-lookup"><span data-stu-id="36b46-940">hi-IN</span></span>|<span data-ttu-id="36b46-941">en-US</span><span class="sxs-lookup"><span data-stu-id="36b46-941">en-US</span></span>|  
|<span data-ttu-id="36b46-942">彝语</span><span class="sxs-lookup"><span data-stu-id="36b46-942">Yi</span></span>|<span data-ttu-id="36b46-943">ii</span><span class="sxs-lookup"><span data-stu-id="36b46-943">ii</span></span>|<span data-ttu-id="36b46-944">en-US</span><span class="sxs-lookup"><span data-stu-id="36b46-944">en-US</span></span>|  
|<span data-ttu-id="36b46-945">彝语 （中国）</span><span class="sxs-lookup"><span data-stu-id="36b46-945">Yi (PRC)</span></span>|<span data-ttu-id="36b46-946">ii-CN</span><span class="sxs-lookup"><span data-stu-id="36b46-946">ii-CN</span></span>|<span data-ttu-id="36b46-947">en-US</span><span class="sxs-lookup"><span data-stu-id="36b46-947">en-US</span></span>|  
|<span data-ttu-id="36b46-948">因纽特</span><span class="sxs-lookup"><span data-stu-id="36b46-948">Inukitut Syllabics</span></span>|<span data-ttu-id="36b46-949">iu-Cans</span><span class="sxs-lookup"><span data-stu-id="36b46-949">iu-Cans</span></span>|<span data-ttu-id="36b46-950">en-US</span><span class="sxs-lookup"><span data-stu-id="36b46-950">en-US</span></span>|  
|<span data-ttu-id="36b46-951">因纽特 （加拿大）</span><span class="sxs-lookup"><span data-stu-id="36b46-951">Inukitut Syllabics (Canada)</span></span>|<span data-ttu-id="36b46-952">iu-Cans-CA</span><span class="sxs-lookup"><span data-stu-id="36b46-952">iu-Cans-CA</span></span>|<span data-ttu-id="36b46-953">en-US</span><span class="sxs-lookup"><span data-stu-id="36b46-953">en-US</span></span>|  
|<span data-ttu-id="36b46-954">高棉语</span><span class="sxs-lookup"><span data-stu-id="36b46-954">Khmer</span></span>|<span data-ttu-id="36b46-955">密钥主机</span><span class="sxs-lookup"><span data-stu-id="36b46-955">km</span></span>|<span data-ttu-id="36b46-956">en-US</span><span class="sxs-lookup"><span data-stu-id="36b46-956">en-US</span></span>|  
|<span data-ttu-id="36b46-957">高棉语 （柬埔寨）</span><span class="sxs-lookup"><span data-stu-id="36b46-957">Khmer (Cambodia)</span></span>|<span data-ttu-id="36b46-958">km-KH</span><span class="sxs-lookup"><span data-stu-id="36b46-958">km-KH</span></span>|<span data-ttu-id="36b46-959">en-US</span><span class="sxs-lookup"><span data-stu-id="36b46-959">en-US</span></span>|  
|<span data-ttu-id="36b46-960">卡纳达语</span><span class="sxs-lookup"><span data-stu-id="36b46-960">Kannada</span></span>|<span data-ttu-id="36b46-961">kn</span><span class="sxs-lookup"><span data-stu-id="36b46-961">kn</span></span>|<span data-ttu-id="36b46-962">en-US</span><span class="sxs-lookup"><span data-stu-id="36b46-962">en-US</span></span>|  
|<span data-ttu-id="36b46-963">埃纳德语 （印度）</span><span class="sxs-lookup"><span data-stu-id="36b46-963">Kannada (India)</span></span>|<span data-ttu-id="36b46-964">kn-IN</span><span class="sxs-lookup"><span data-stu-id="36b46-964">kn-IN</span></span>|<span data-ttu-id="36b46-965">en-US</span><span class="sxs-lookup"><span data-stu-id="36b46-965">en-US</span></span>|  
|<span data-ttu-id="36b46-966">孔卡尼语</span><span class="sxs-lookup"><span data-stu-id="36b46-966">Konkani</span></span>|<span data-ttu-id="36b46-967">kok</span><span class="sxs-lookup"><span data-stu-id="36b46-967">kok</span></span>|<span data-ttu-id="36b46-968">en-US</span><span class="sxs-lookup"><span data-stu-id="36b46-968">en-US</span></span>|  
|<span data-ttu-id="36b46-969">孔卡尼语 （印度）</span><span class="sxs-lookup"><span data-stu-id="36b46-969">Konkani (India)</span></span>|<span data-ttu-id="36b46-970">kok-IN</span><span class="sxs-lookup"><span data-stu-id="36b46-970">kok-IN</span></span>|<span data-ttu-id="36b46-971">en-US</span><span class="sxs-lookup"><span data-stu-id="36b46-971">en-US</span></span>|  
|<span data-ttu-id="36b46-972">老挝语</span><span class="sxs-lookup"><span data-stu-id="36b46-972">Lao</span></span>|<span data-ttu-id="36b46-973">lo</span><span class="sxs-lookup"><span data-stu-id="36b46-973">lo</span></span>|<span data-ttu-id="36b46-974">en-US</span><span class="sxs-lookup"><span data-stu-id="36b46-974">en-US</span></span>|  
|<span data-ttu-id="36b46-975">老挝语 （老挝人民民主共和国）</span><span class="sxs-lookup"><span data-stu-id="36b46-975">Lao (Lao P.D.R.)</span></span>|<span data-ttu-id="36b46-976">lo-LA</span><span class="sxs-lookup"><span data-stu-id="36b46-976">lo-LA</span></span>|<span data-ttu-id="36b46-977">en-US</span><span class="sxs-lookup"><span data-stu-id="36b46-977">en-US</span></span>|  
|<span data-ttu-id="36b46-978">马拉雅拉姆语</span><span class="sxs-lookup"><span data-stu-id="36b46-978">Malayalam</span></span>|<span data-ttu-id="36b46-979">ml</span><span class="sxs-lookup"><span data-stu-id="36b46-979">ml</span></span>|<span data-ttu-id="36b46-980">en-US</span><span class="sxs-lookup"><span data-stu-id="36b46-980">en-US</span></span>|  
|<span data-ttu-id="36b46-981">马拉雅拉姆语 （印度）</span><span class="sxs-lookup"><span data-stu-id="36b46-981">Malayalam (India)</span></span>|<span data-ttu-id="36b46-982">ml-IN</span><span class="sxs-lookup"><span data-stu-id="36b46-982">ml-IN</span></span>|<span data-ttu-id="36b46-983">en-US</span><span class="sxs-lookup"><span data-stu-id="36b46-983">en-US</span></span>|  
|<span data-ttu-id="36b46-984">莫霍克语</span><span class="sxs-lookup"><span data-stu-id="36b46-984">Mohawk</span></span>|<span data-ttu-id="36b46-985">moh</span><span class="sxs-lookup"><span data-stu-id="36b46-985">moh</span></span>|<span data-ttu-id="36b46-986">en-US</span><span class="sxs-lookup"><span data-stu-id="36b46-986">en-US</span></span>|  
|<span data-ttu-id="36b46-987">莫霍克语 （加拿大）</span><span class="sxs-lookup"><span data-stu-id="36b46-987">Mohawk (Canada)</span></span>|<span data-ttu-id="36b46-988">moh-CA</span><span class="sxs-lookup"><span data-stu-id="36b46-988">moh-CA</span></span>|<span data-ttu-id="36b46-989">en-US</span><span class="sxs-lookup"><span data-stu-id="36b46-989">en-US</span></span>|  
|<span data-ttu-id="36b46-990">马拉地语</span><span class="sxs-lookup"><span data-stu-id="36b46-990">Marathi</span></span>|<span data-ttu-id="36b46-991">mr</span><span class="sxs-lookup"><span data-stu-id="36b46-991">mr</span></span>|<span data-ttu-id="36b46-992">en-US</span><span class="sxs-lookup"><span data-stu-id="36b46-992">en-US</span></span>|  
|<span data-ttu-id="36b46-993">马拉地语 （印度）</span><span class="sxs-lookup"><span data-stu-id="36b46-993">Marathi (India)</span></span>|<span data-ttu-id="36b46-994">mr-IN</span><span class="sxs-lookup"><span data-stu-id="36b46-994">mr-IN</span></span>|<span data-ttu-id="36b46-995">en-US</span><span class="sxs-lookup"><span data-stu-id="36b46-995">en-US</span></span>|  
|<span data-ttu-id="36b46-996">尼泊尔语</span><span class="sxs-lookup"><span data-stu-id="36b46-996">Nepali</span></span>|<span data-ttu-id="36b46-997">ne</span><span class="sxs-lookup"><span data-stu-id="36b46-997">ne</span></span>|<span data-ttu-id="36b46-998">en-US</span><span class="sxs-lookup"><span data-stu-id="36b46-998">en-US</span></span>|  
|<span data-ttu-id="36b46-999">尼泊尔语 （尼泊尔）</span><span class="sxs-lookup"><span data-stu-id="36b46-999">Nepali (Nepal)</span></span>|<span data-ttu-id="36b46-1000">ne-NP</span><span class="sxs-lookup"><span data-stu-id="36b46-1000">ne-NP</span></span>|<span data-ttu-id="36b46-1001">en-US</span><span class="sxs-lookup"><span data-stu-id="36b46-1001">en-US</span></span>|  
|<span data-ttu-id="36b46-1002">挪威语</span><span class="sxs-lookup"><span data-stu-id="36b46-1002">Norwegian</span></span>|<span data-ttu-id="36b46-1003">否</span><span class="sxs-lookup"><span data-stu-id="36b46-1003">no</span></span>|<span data-ttu-id="36b46-1004">nb-NO</span><span class="sxs-lookup"><span data-stu-id="36b46-1004">nb-NO</span></span>|  
|<span data-ttu-id="36b46-1005">Odiya</span><span class="sxs-lookup"><span data-stu-id="36b46-1005">Odiya</span></span>|<span data-ttu-id="36b46-1006">or</span><span class="sxs-lookup"><span data-stu-id="36b46-1006">or</span></span>|<span data-ttu-id="36b46-1007">en-US</span><span class="sxs-lookup"><span data-stu-id="36b46-1007">en-US</span></span>|  
|<span data-ttu-id="36b46-1008">Odiya （印度）</span><span class="sxs-lookup"><span data-stu-id="36b46-1008">Odiya (India)</span></span>|<span data-ttu-id="36b46-1009">or-IN</span><span class="sxs-lookup"><span data-stu-id="36b46-1009">or-IN</span></span>|<span data-ttu-id="36b46-1010">en-US</span><span class="sxs-lookup"><span data-stu-id="36b46-1010">en-US</span></span>|  
|<span data-ttu-id="36b46-1011">旁遮普语</span><span class="sxs-lookup"><span data-stu-id="36b46-1011">Punjabi</span></span>|<span data-ttu-id="36b46-1012">pa</span><span class="sxs-lookup"><span data-stu-id="36b46-1012">pa</span></span>|<span data-ttu-id="36b46-1013">en-US</span><span class="sxs-lookup"><span data-stu-id="36b46-1013">en-US</span></span>|  
|<span data-ttu-id="36b46-1014">旁遮普语 （印度）</span><span class="sxs-lookup"><span data-stu-id="36b46-1014">Punjabi (India)</span></span>|<span data-ttu-id="36b46-1015">pa-IN</span><span class="sxs-lookup"><span data-stu-id="36b46-1015">pa-IN</span></span>|<span data-ttu-id="36b46-1016">en-US</span><span class="sxs-lookup"><span data-stu-id="36b46-1016">en-US</span></span>|  
|<span data-ttu-id="36b46-1017">达里语</span><span class="sxs-lookup"><span data-stu-id="36b46-1017">Dari</span></span>|<span data-ttu-id="36b46-1018">pr</span><span class="sxs-lookup"><span data-stu-id="36b46-1018">prs</span></span>|<span data-ttu-id="36b46-1019">en-US</span><span class="sxs-lookup"><span data-stu-id="36b46-1019">en-US</span></span>|  
|<span data-ttu-id="36b46-1020">达里语 （阿富汗）</span><span class="sxs-lookup"><span data-stu-id="36b46-1020">Dari (Afghanistan)</span></span>|<span data-ttu-id="36b46-1021">prs-AF</span><span class="sxs-lookup"><span data-stu-id="36b46-1021">prs-AF</span></span>|<span data-ttu-id="36b46-1022">en-US</span><span class="sxs-lookup"><span data-stu-id="36b46-1022">en-US</span></span>|  
|<span data-ttu-id="36b46-1023">普什图语</span><span class="sxs-lookup"><span data-stu-id="36b46-1023">Pashto</span></span>|<span data-ttu-id="36b46-1024">ps</span><span class="sxs-lookup"><span data-stu-id="36b46-1024">ps</span></span>|<span data-ttu-id="36b46-1025">en-US</span><span class="sxs-lookup"><span data-stu-id="36b46-1025">en-US</span></span>|  
|<span data-ttu-id="36b46-1026">普什图语 （阿富汗）</span><span class="sxs-lookup"><span data-stu-id="36b46-1026">Pashto (Afghanistan)</span></span>|<span data-ttu-id="36b46-1027">ps-AF</span><span class="sxs-lookup"><span data-stu-id="36b46-1027">ps-AF</span></span>|<span data-ttu-id="36b46-1028">en-US</span><span class="sxs-lookup"><span data-stu-id="36b46-1028">en-US</span></span>|  
|<span data-ttu-id="36b46-1029">梵文</span><span class="sxs-lookup"><span data-stu-id="36b46-1029">Sanskrit</span></span>|<span data-ttu-id="36b46-1030">sa</span><span class="sxs-lookup"><span data-stu-id="36b46-1030">sa</span></span>|<span data-ttu-id="36b46-1031">en-US</span><span class="sxs-lookup"><span data-stu-id="36b46-1031">en-US</span></span>|  
|<span data-ttu-id="36b46-1032">梵语 （印度）</span><span class="sxs-lookup"><span data-stu-id="36b46-1032">Sanskrit (India)</span></span>|<span data-ttu-id="36b46-1033">sa-IN</span><span class="sxs-lookup"><span data-stu-id="36b46-1033">sa-IN</span></span>|<span data-ttu-id="36b46-1034">en-US</span><span class="sxs-lookup"><span data-stu-id="36b46-1034">en-US</span></span>|  
|<span data-ttu-id="36b46-1035">僧伽罗语</span><span class="sxs-lookup"><span data-stu-id="36b46-1035">Sinhala</span></span>|<span data-ttu-id="36b46-1036">si</span><span class="sxs-lookup"><span data-stu-id="36b46-1036">si</span></span>|<span data-ttu-id="36b46-1037">en-US</span><span class="sxs-lookup"><span data-stu-id="36b46-1037">en-US</span></span>|  
|<span data-ttu-id="36b46-1038">僧伽罗语 （斯里兰卡）</span><span class="sxs-lookup"><span data-stu-id="36b46-1038">Sinhala (Sri Lanka)</span></span>|<span data-ttu-id="36b46-1039">si-LK</span><span class="sxs-lookup"><span data-stu-id="36b46-1039">si-LK</span></span>|<span data-ttu-id="36b46-1040">en-US</span><span class="sxs-lookup"><span data-stu-id="36b46-1040">en-US</span></span>|  
|<span data-ttu-id="36b46-1041">叙利亚语</span><span class="sxs-lookup"><span data-stu-id="36b46-1041">Syriac</span></span>|<span data-ttu-id="36b46-1042">syr</span><span class="sxs-lookup"><span data-stu-id="36b46-1042">syr</span></span>|<span data-ttu-id="36b46-1043">en-US</span><span class="sxs-lookup"><span data-stu-id="36b46-1043">en-US</span></span>|  
|<span data-ttu-id="36b46-1044">叙利亚语 （叙利亚）</span><span class="sxs-lookup"><span data-stu-id="36b46-1044">Syriac (Syria)</span></span>|<span data-ttu-id="36b46-1045">syr SY</span><span class="sxs-lookup"><span data-stu-id="36b46-1045">syr-SY</span></span>|<span data-ttu-id="36b46-1046">en-US</span><span class="sxs-lookup"><span data-stu-id="36b46-1046">en-US</span></span>|  
|<span data-ttu-id="36b46-1047">泰米尔语</span><span class="sxs-lookup"><span data-stu-id="36b46-1047">Tamil</span></span>|<span data-ttu-id="36b46-1048">ta</span><span class="sxs-lookup"><span data-stu-id="36b46-1048">ta</span></span>|<span data-ttu-id="36b46-1049">en-US</span><span class="sxs-lookup"><span data-stu-id="36b46-1049">en-US</span></span>|  
|<span data-ttu-id="36b46-1050">泰米尔语 （印度）</span><span class="sxs-lookup"><span data-stu-id="36b46-1050">Tamil (India)</span></span>|<span data-ttu-id="36b46-1051">ta-IN</span><span class="sxs-lookup"><span data-stu-id="36b46-1051">ta-IN</span></span>|<span data-ttu-id="36b46-1052">en-US</span><span class="sxs-lookup"><span data-stu-id="36b46-1052">en-US</span></span>|  
|<span data-ttu-id="36b46-1053">泰卢固语</span><span class="sxs-lookup"><span data-stu-id="36b46-1053">Telugu</span></span>|<span data-ttu-id="36b46-1054">te</span><span class="sxs-lookup"><span data-stu-id="36b46-1054">te</span></span>|<span data-ttu-id="36b46-1055">en-US</span><span class="sxs-lookup"><span data-stu-id="36b46-1055">en-US</span></span>|  
|<span data-ttu-id="36b46-1056">泰卢固语 （印度）</span><span class="sxs-lookup"><span data-stu-id="36b46-1056">Telugu (India)</span></span>|<span data-ttu-id="36b46-1057">te-IN</span><span class="sxs-lookup"><span data-stu-id="36b46-1057">te-IN</span></span>|<span data-ttu-id="36b46-1058">en-US</span><span class="sxs-lookup"><span data-stu-id="36b46-1058">en-US</span></span>|  
|<span data-ttu-id="36b46-1059">泰语</span><span class="sxs-lookup"><span data-stu-id="36b46-1059">Thai</span></span>|<span data-ttu-id="36b46-1060">th</span><span class="sxs-lookup"><span data-stu-id="36b46-1060">th</span></span>|<span data-ttu-id="36b46-1061">en-US</span><span class="sxs-lookup"><span data-stu-id="36b46-1061">en-US</span></span>|  
|<span data-ttu-id="36b46-1062">泰语 （泰国）</span><span class="sxs-lookup"><span data-stu-id="36b46-1062">Thai (Thailand)</span></span>|<span data-ttu-id="36b46-1063">th Th</span><span class="sxs-lookup"><span data-stu-id="36b46-1063">th-Th</span></span>|<span data-ttu-id="36b46-1064">en-US</span><span class="sxs-lookup"><span data-stu-id="36b46-1064">en-US</span></span>|  
|<span data-ttu-id="36b46-1065">维吾尔语</span><span class="sxs-lookup"><span data-stu-id="36b46-1065">Uighur</span></span>|<span data-ttu-id="36b46-1066">ug</span><span class="sxs-lookup"><span data-stu-id="36b46-1066">ug</span></span>|<span data-ttu-id="36b46-1067">en-US</span><span class="sxs-lookup"><span data-stu-id="36b46-1067">en-US</span></span>|  
|<span data-ttu-id="36b46-1068">维吾尔语 （中国）</span><span class="sxs-lookup"><span data-stu-id="36b46-1068">Uighur (PRC)</span></span>|<span data-ttu-id="36b46-1069">ug-CN</span><span class="sxs-lookup"><span data-stu-id="36b46-1069">ug-CN</span></span>|<span data-ttu-id="36b46-1070">en-US</span><span class="sxs-lookup"><span data-stu-id="36b46-1070">en-US</span></span>|  
|<span data-ttu-id="36b46-1071">乌尔都语</span><span class="sxs-lookup"><span data-stu-id="36b46-1071">Urdu</span></span>|<span data-ttu-id="36b46-1072">在</span><span class="sxs-lookup"><span data-stu-id="36b46-1072">ur</span></span>|<span data-ttu-id="36b46-1073">en-US</span><span class="sxs-lookup"><span data-stu-id="36b46-1073">en-US</span></span>|  
|<span data-ttu-id="36b46-1074">乌尔都语 （巴基斯坦）</span><span class="sxs-lookup"><span data-stu-id="36b46-1074">Urdu (Pakistan)</span></span>|<span data-ttu-id="36b46-1075">ur-PK</span><span class="sxs-lookup"><span data-stu-id="36b46-1075">ur-PK</span></span>|<span data-ttu-id="36b46-1076">en-US</span><span class="sxs-lookup"><span data-stu-id="36b46-1076">en-US</span></span>|  
|<span data-ttu-id="36b46-1077">越南语</span><span class="sxs-lookup"><span data-stu-id="36b46-1077">Vietnamese</span></span>|<span data-ttu-id="36b46-1078">vi</span><span class="sxs-lookup"><span data-stu-id="36b46-1078">vi</span></span>|<span data-ttu-id="36b46-1079">en-US</span><span class="sxs-lookup"><span data-stu-id="36b46-1079">en-US</span></span>|  
|<span data-ttu-id="36b46-1080">越南语 （越南）</span><span class="sxs-lookup"><span data-stu-id="36b46-1080">Vietnamese (Vietnam)</span></span>|<span data-ttu-id="36b46-1081">vi-VN</span><span class="sxs-lookup"><span data-stu-id="36b46-1081">vi-VN</span></span>|<span data-ttu-id="36b46-1082">en-US</span><span class="sxs-lookup"><span data-stu-id="36b46-1082">en-US</span></span>|  
  
 <span data-ttu-id="36b46-1083">你的应用程序可以使用<xref:System.Globalization.CultureAndRegionInfoBuilder>创建替换的区域性和区域性可以具有所选控制台回退区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-1083">Your application can use <xref:System.Globalization.CultureAndRegionInfoBuilder> to create a replacement for a culture, and that culture can have a console fallback culture of your choosing.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36b46-1084">下面的代码示例显示区域性对象与关联的备用用户界面区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-1084">The following code example displays the fallback user interface culture associated with a culture object.</span></span>  
  
 [!code-cpp[sys.glob.ci.getCFUIC#1](~/samples/snippets/cpp/VS_Snippets_CLR/sys.glob.ci.getCFUIC/cpp/cfuic.cpp#1)]
 [!code-csharp[sys.glob.ci.getCFUIC#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.ci.getCFUIC/CS/cfuic.cs#1)]
 [!code-vb[sys.glob.ci.getCFUIC#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.ci.getCFUIC/VB/cfuic.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCultureInfo">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="36b46-1085">检索某个区域性的缓存的只读实例。</span><span class="sxs-lookup"><span data-stu-id="36b46-1085">Retrieves a cached, read-only instance of a culture.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCultureInfo">
      <MemberSignature Language="C#" Value="public static System.Globalization.CultureInfo GetCultureInfo (int culture);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.CultureInfo GetCultureInfo(int32 culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.GetCultureInfo(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCultureInfo (culture As Integer) As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::CultureInfo ^ GetCultureInfo(int culture);" />
      <MemberSignature Language="F#" Value="static member GetCultureInfo : int -&gt; System.Globalization.CultureInfo" Usage="System.Globalization.CultureInfo.GetCultureInfo culture" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="culture"><span data-ttu-id="36b46-1086">区域设置标识符 (LCID)。</span><span class="sxs-lookup"><span data-stu-id="36b46-1086">A locale identifier (LCID).</span></span></param>
        <summary><span data-ttu-id="36b46-1087">使用特定的区域性标识符检索某个区域性的缓存的只读实例。</span><span class="sxs-lookup"><span data-stu-id="36b46-1087">Retrieves a cached, read-only instance of a culture by using the specified culture identifier.</span></span></summary>
        <returns><span data-ttu-id="36b46-1088">一个只读 <see cref="T:System.Globalization.CultureInfo" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="36b46-1088">A read-only <see cref="T:System.Globalization.CultureInfo" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36b46-1089">我们建议使用此方法的字符串重载 (<xref:System.Globalization.CultureInfo.GetCultureInfo%28System.String%29>)，因为区域设置名称应使用而不是 lcid 的数量。</span><span class="sxs-lookup"><span data-stu-id="36b46-1089">We recommend that you use the string overload of this method (<xref:System.Globalization.CultureInfo.GetCultureInfo%28System.String%29>), because locale names should be used instead of LCIDs.</span></span> <span data-ttu-id="36b46-1090">对于自定义区域设置，区域设置名称为必需。</span><span class="sxs-lookup"><span data-stu-id="36b46-1090">For custom locales, the locale name is required.</span></span>  
  
 <span data-ttu-id="36b46-1091">如果`culture`是为当前区域性，返回的区域设置标识符<xref:System.Globalization.CultureInfo>对象不会反映任何用户重写。</span><span class="sxs-lookup"><span data-stu-id="36b46-1091">If `culture` is the locale identifier of the current culture, the returned <xref:System.Globalization.CultureInfo> object does not reflect any user overrides.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="36b46-1092"><paramref name="culture" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="36b46-1092"><paramref name="culture" /> is less than zero.</span></span></exception>
        <exception cref="T:System.Globalization.CultureNotFoundException"><span data-ttu-id="36b46-1093"><paramref name="culture" /> 指定不支持的区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-1093"><paramref name="culture" /> specifies a culture that is not supported.</span></span> <span data-ttu-id="36b46-1094">有关详细信息，请参阅“调用方备注”部分。</span><span class="sxs-lookup"><span data-stu-id="36b46-1094">See the Notes to Caller section for more information.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="36b46-1095">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]和早期版本抛<see cref="T:System.ArgumentException" />如果<paramref name="culture" />不是有效的区域性标识符。</span><span class="sxs-lookup"><span data-stu-id="36b46-1095">The [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] and earlier versions throw an <see cref="T:System.ArgumentException" /> if <paramref name="culture" /> is not a valid culture identifier.</span></span> <span data-ttu-id="36b46-1096">从开始[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]，此方法将引发<see cref="T:System.Globalization.CultureNotFoundException" />。</span><span class="sxs-lookup"><span data-stu-id="36b46-1096">Starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], this method throws a <see cref="T:System.Globalization.CultureNotFoundException" />.</span></span> <span data-ttu-id="36b46-1097">下运行的应用程序起[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]或更高版本 Windows 7 或更高版本，该方法尝试检索<see cref="T:System.Globalization.CultureInfo" />对象，其标识符为<paramref name="culture" />从操作系统; 如果操作系统不支持该区域性方法会抛出<see cref="T:System.Globalization.CultureNotFoundException" />。</span><span class="sxs-lookup"><span data-stu-id="36b46-1097">Starting with apps that run under the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] or later on Windows 7 or later, the method attempts to retrieve a <see cref="T:System.Globalization.CultureInfo" /> object whose identifier is <paramref name="culture" /> from the operating system; if the operating system does not support that culture, the method throws a <see cref="T:System.Globalization.CultureNotFoundException" />.</span></span></para></block>
        <altmember cref="P:System.Globalization.CultureInfo.LCID" />
        <altmember cref="M:System.Globalization.CultureInfo.ClearCachedData" />
      </Docs>
    </Member>
    <Member MemberName="GetCultureInfo">
      <MemberSignature Language="C#" Value="public static System.Globalization.CultureInfo GetCultureInfo (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.CultureInfo GetCultureInfo(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.GetCultureInfo(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCultureInfo (name As String) As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::CultureInfo ^ GetCultureInfo(System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetCultureInfo : string -&gt; System.Globalization.CultureInfo" Usage="System.Globalization.CultureInfo.GetCultureInfo name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="36b46-1098">区域性的名称。</span><span class="sxs-lookup"><span data-stu-id="36b46-1098">The name of a culture.</span></span> <span data-ttu-id="36b46-1099"><paramref name="name" /> 不区分大小写。</span><span class="sxs-lookup"><span data-stu-id="36b46-1099"><paramref name="name" /> is not case-sensitive.</span></span></param>
        <summary><span data-ttu-id="36b46-1100">使用特定的区域性名称检索某个区域性的缓存的只读实例。</span><span class="sxs-lookup"><span data-stu-id="36b46-1100">Retrieves a cached, read-only instance of a culture using the specified culture name.</span></span></summary>
        <returns><span data-ttu-id="36b46-1101">一个只读 <see cref="T:System.Globalization.CultureInfo" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="36b46-1101">A read-only <see cref="T:System.Globalization.CultureInfo" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks

<span data-ttu-id="36b46-1102">在 Windows 系统上的预定义的区域性名称的列表，请参阅**语言标记**中的列[支持的 Windows 的语言/区域名称的列表](https://docs.microsoft.com/openspecs/windows_protocols/ms-lcid/a9eac961-e77d-41a6-90a5-ce1a8b0cdb9c)。</span><span class="sxs-lookup"><span data-stu-id="36b46-1102">For a list of predefined culture names on Windows systems, see the **Language tag** column in the [list of language/region names supported by Windows](https://docs.microsoft.com/openspecs/windows_protocols/ms-lcid/a9eac961-e77d-41a6-90a5-ce1a8b0cdb9c).</span></span> <span data-ttu-id="36b46-1103">区域性名称遵循由定义的标准[BCP 47](https://tools.ietf.org/html/bcp47)。</span><span class="sxs-lookup"><span data-stu-id="36b46-1103">Culture names follow the standard defined by [BCP 47](https://tools.ietf.org/html/bcp47).</span></span> <span data-ttu-id="36b46-1104">此外，从 Windows 10 开始`name`可以是任何有效的 BCP-47 语言标记。</span><span class="sxs-lookup"><span data-stu-id="36b46-1104">In addition, starting with Windows 10, `name` can be any valid BCP-47 language tag.</span></span>  
  
 <span data-ttu-id="36b46-1105"><xref:System.Globalization.CultureInfo.GetCultureInfo%2A>方法检索缓存，只读<xref:System.Globalization.CultureInfo>对象。</span><span class="sxs-lookup"><span data-stu-id="36b46-1105">The <xref:System.Globalization.CultureInfo.GetCultureInfo%2A> method retrieves a cached, read-only <xref:System.Globalization.CultureInfo> object.</span></span> <span data-ttu-id="36b46-1106">它提供更好的性能比相应地调用<xref:System.Globalization.CultureInfo.%23ctor%28System.String%29?displayProperty=nameWithType>构造函数。</span><span class="sxs-lookup"><span data-stu-id="36b46-1106">It offers better performance than a corresponding call to the <xref:System.Globalization.CultureInfo.%23ctor%28System.String%29?displayProperty=nameWithType> constructor.</span></span>  
  
 <span data-ttu-id="36b46-1107">如果`name`的当前区域性，返回名称<xref:System.Globalization.CultureInfo>对象不会反映任何用户重写。</span><span class="sxs-lookup"><span data-stu-id="36b46-1107">If `name` is the name of the current culture, the returned <xref:System.Globalization.CultureInfo> object does not reflect any user overrides.</span></span> <span data-ttu-id="36b46-1108">这使该方法适用于服务器应用程序或工具没有在系统上的实际用户帐户且需要有效地加载多个区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-1108">This makes the method suitable for server applications or tools that do not have a real user account on the system and that need to load multiple cultures efficiently.</span></span>  
  
 <span data-ttu-id="36b46-1109">如果`name`是<xref:System.String.Empty?displayProperty=nameWithType>，该方法将返回固定区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-1109">If `name` is <xref:System.String.Empty?displayProperty=nameWithType>, the method returns the invariant culture.</span></span> <span data-ttu-id="36b46-1110">这相当于检索的值<xref:System.Globalization.CultureInfo.InvariantCulture%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="36b46-1110">This is equivalent to retrieving the value of the <xref:System.Globalization.CultureInfo.InvariantCulture%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="36b46-1111"><paramref name="name" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="36b46-1111"><paramref name="name" /> is null.</span></span></exception>
        <exception cref="T:System.Globalization.CultureNotFoundException"><span data-ttu-id="36b46-1112"><paramref name="name" /> 指定不支持的区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-1112"><paramref name="name" /> specifies a culture that is not supported.</span></span> <span data-ttu-id="36b46-1113">有关详细信息，请参阅“调用方备注”部分。</span><span class="sxs-lookup"><span data-stu-id="36b46-1113">See the Notes to Callers section for more information.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="36b46-1114">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]和早期版本抛<see cref="T:System.ArgumentException" />如果<paramref name="name" />不是有效的区域性名称。</span><span class="sxs-lookup"><span data-stu-id="36b46-1114">The [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] and earlier versions throw an <see cref="T:System.ArgumentException" /> if <paramref name="name" /> is not a valid culture name.</span></span> <span data-ttu-id="36b46-1115">从开始[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]，此方法将引发<see cref="T:System.Globalization.CultureNotFoundException" />。</span><span class="sxs-lookup"><span data-stu-id="36b46-1115">Starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], this method throws a <see cref="T:System.Globalization.CultureNotFoundException" />.</span></span> <span data-ttu-id="36b46-1116">下运行的应用程序起[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]或更高版本 Windows 7 或更高版本，该方法尝试检索<see cref="T:System.Globalization.CultureInfo" />对象，其标识符为<paramref name="name" />从操作系统; 如果操作系统不支持该区域性，并且<paramref name="name" />不是补充或替换的区域性，该方法将引发名称<see cref="T:System.Globalization.CultureNotFoundException" />。</span><span class="sxs-lookup"><span data-stu-id="36b46-1116">Starting with apps that run under the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] or later on Windows 7 or later, the method attempts to retrieve a <see cref="T:System.Globalization.CultureInfo" /> object whose identifier is <paramref name="name" /> from the operating system; if the operating system does not support that culture, and if <paramref name="name" /> is not the name of a supplementary or replacement culture, the method throws a <see cref="T:System.Globalization.CultureNotFoundException" />.</span></span></para></block>
        <altmember cref="P:System.Globalization.CultureInfo.Name" />
      </Docs>
    </Member>
    <Member MemberName="GetCultureInfo">
      <MemberSignature Language="C#" Value="public static System.Globalization.CultureInfo GetCultureInfo (string name, string altName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.CultureInfo GetCultureInfo(string name, string altName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.GetCultureInfo(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCultureInfo (name As String, altName As String) As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::CultureInfo ^ GetCultureInfo(System::String ^ name, System::String ^ altName);" />
      <MemberSignature Language="F#" Value="static member GetCultureInfo : string * string -&gt; System.Globalization.CultureInfo" Usage="System.Globalization.CultureInfo.GetCultureInfo (name, altName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="altName" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="36b46-1117">区域性的名称。</span><span class="sxs-lookup"><span data-stu-id="36b46-1117">The name of a culture.</span></span> <span data-ttu-id="36b46-1118"><paramref name="name" /> 不区分大小写。</span><span class="sxs-lookup"><span data-stu-id="36b46-1118"><paramref name="name" /> is not case-sensitive.</span></span></param>
        <param name="altName"><span data-ttu-id="36b46-1119">区域性的名称提供了 <see cref="T:System.Globalization.TextInfo" /> 和 <see cref="T:System.Globalization.CompareInfo" /> 对象，这些对象用于对 <paramref name="name" /> 进行初始化。</span><span class="sxs-lookup"><span data-stu-id="36b46-1119">The name of a culture that supplies the <see cref="T:System.Globalization.TextInfo" /> and <see cref="T:System.Globalization.CompareInfo" /> objects used to initialize <paramref name="name" />.</span></span> <span data-ttu-id="36b46-1120"><paramref name="altName" /> 不区分大小写。</span><span class="sxs-lookup"><span data-stu-id="36b46-1120"><paramref name="altName" /> is not case-sensitive.</span></span></param>
        <summary><span data-ttu-id="36b46-1121">检索某个区域性的缓存的只读实例。</span><span class="sxs-lookup"><span data-stu-id="36b46-1121">Retrieves a cached, read-only instance of a culture.</span></span> <span data-ttu-id="36b46-1122">参数指定了一个使用 <see cref="T:System.Globalization.TextInfo" /> 和 <see cref="T:System.Globalization.CompareInfo" /> 对象进行初始化的区域性，而这些对象则是由另一个区域性指定的。</span><span class="sxs-lookup"><span data-stu-id="36b46-1122">Parameters specify a culture that is initialized with the <see cref="T:System.Globalization.TextInfo" /> and <see cref="T:System.Globalization.CompareInfo" /> objects specified by another culture.</span></span></summary>
        <returns><span data-ttu-id="36b46-1123">一个只读 <see cref="T:System.Globalization.CultureInfo" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="36b46-1123">A read-only <see cref="T:System.Globalization.CultureInfo" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36b46-1124">在 Windows 系统上的预定义的区域性名称的列表，请参阅**语言标记**中的列[支持的 Windows 的语言/区域名称的列表](https://docs.microsoft.com/openspecs/windows_protocols/ms-lcid/a9eac961-e77d-41a6-90a5-ce1a8b0cdb9c)。</span><span class="sxs-lookup"><span data-stu-id="36b46-1124">For a list of predefined culture names on Windows systems, see the **Language tag** column in the [list of language/region names supported by Windows](https://docs.microsoft.com/openspecs/windows_protocols/ms-lcid/a9eac961-e77d-41a6-90a5-ce1a8b0cdb9c).</span></span> <span data-ttu-id="36b46-1125">区域性名称遵循由定义的标准[BCP 47](https://tools.ietf.org/html/bcp47)。</span><span class="sxs-lookup"><span data-stu-id="36b46-1125">Culture names follow the standard defined by [BCP 47](https://tools.ietf.org/html/bcp47).</span></span> <span data-ttu-id="36b46-1126">此外，从 Windows 10 开始`name`可以是任何有效的 BCP-47 语言标记。</span><span class="sxs-lookup"><span data-stu-id="36b46-1126">In addition, starting with Windows 10, `name` can be any valid BCP-47 language tag.</span></span>  
  
 <span data-ttu-id="36b46-1127"><xref:System.Globalization.CultureInfo.GetCultureInfo%2A>方法获取缓存，只读<xref:System.Globalization.CultureInfo>对象。</span><span class="sxs-lookup"><span data-stu-id="36b46-1127">The <xref:System.Globalization.CultureInfo.GetCultureInfo%2A> method obtains a cached, read-only <xref:System.Globalization.CultureInfo> object.</span></span> <span data-ttu-id="36b46-1128">它提供更好的性能比相应地调用<xref:System.Globalization.CultureInfo.%23ctor%2A>构造函数。</span><span class="sxs-lookup"><span data-stu-id="36b46-1128">It offers better performance than a corresponding call to a <xref:System.Globalization.CultureInfo.%23ctor%2A> constructor.</span></span> <span data-ttu-id="36b46-1129">该方法用于创建类似于指定的区域性`name`参数，但具有不同的排序和大小写规则。</span><span class="sxs-lookup"><span data-stu-id="36b46-1129">The method is used to create a culture similar to that specified by the `name` parameter, but with different sorting and casing rules.</span></span>  
  
 <span data-ttu-id="36b46-1130">如果`name`或`altName`是名称的当前区域性，返回的对象不能反映任何用户重写。</span><span class="sxs-lookup"><span data-stu-id="36b46-1130">If `name` or `altName` is the name of the current culture, the returned objects do not reflect any user overrides.</span></span> <span data-ttu-id="36b46-1131">如果`name`是<xref:System.String.Empty?displayProperty=nameWithType>，该方法将返回固定区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-1131">If `name` is <xref:System.String.Empty?displayProperty=nameWithType>, the method returns the invariant culture.</span></span> <span data-ttu-id="36b46-1132">这相当于检索的值<xref:System.Globalization.CultureInfo.InvariantCulture%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="36b46-1132">This is equivalent to retrieving the value of the <xref:System.Globalization.CultureInfo.InvariantCulture%2A> property.</span></span> <span data-ttu-id="36b46-1133">如果`altName`是<xref:System.String.Empty?displayProperty=nameWithType>，该方法使用的书写体系和比较指定固定区域性的规则。</span><span class="sxs-lookup"><span data-stu-id="36b46-1133">If `altName` is <xref:System.String.Empty?displayProperty=nameWithType>, the method uses the writing system and comparison rules specified by the invariant culture.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="36b46-1134"><paramref name="name" /> 或 <paramref name="altName" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="36b46-1134"><paramref name="name" /> or <paramref name="altName" /> is null.</span></span></exception>
        <exception cref="T:System.Globalization.CultureNotFoundException"><span data-ttu-id="36b46-1135"><paramref name="name" /> 或 <paramref name="altName" /> 用于指定不支持的区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-1135"><paramref name="name" /> or <paramref name="altName" /> specifies a culture that is not supported.</span></span> <span data-ttu-id="36b46-1136">有关详细信息，请参阅“调用方备注”部分。</span><span class="sxs-lookup"><span data-stu-id="36b46-1136">See the Notes to Callers section for more information.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="36b46-1137">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]和早期版本抛<see cref="T:System.ArgumentException" />如果<paramref name="name" />或<paramref name="altName" />不是有效的区域性名称。</span><span class="sxs-lookup"><span data-stu-id="36b46-1137">The [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] and earlier versions throw an <see cref="T:System.ArgumentException" /> if <paramref name="name" /> or <paramref name="altName" /> is not a valid culture name.</span></span> <span data-ttu-id="36b46-1138">从开始[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]，此方法将引发<see cref="T:System.Globalization.CultureNotFoundException" />。</span><span class="sxs-lookup"><span data-stu-id="36b46-1138">Starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], this method throws a <see cref="T:System.Globalization.CultureNotFoundException" />.</span></span> <span data-ttu-id="36b46-1139">下运行的应用程序起[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]或更高版本 Windows 7 或更高版本，该方法尝试检索<see cref="T:System.Globalization.CultureInfo" />对象，其标识符为<paramref name="name" />从操作系统; 如果操作系统不支持该区域性，并且<paramref name="name" />不是补充或替换的区域性，该方法将引发名称<see cref="T:System.Globalization.CultureNotFoundException" />异常。</span><span class="sxs-lookup"><span data-stu-id="36b46-1139">Starting with apps that run under the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] or later on Windows 7 or later, the method attempts to retrieve a <see cref="T:System.Globalization.CultureInfo" /> object whose identifier is <paramref name="name" /> from the operating system; if the operating system does not support that culture, and if <paramref name="name" /> is not the name of a supplementary or replacement culture, the method throws a <see cref="T:System.Globalization.CultureNotFoundException" /> exception.</span></span> <span data-ttu-id="36b46-1140">下运行的应用程序起[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]或更高版本 Windows 7 或更高版本，该方法尝试检索<see cref="T:System.Globalization.CultureInfo" />对象，其标识符为<paramref name="name" />从操作系统; 如果操作系统不支持该区域性，并且<paramref name="name" />不是补充或替换的区域性，该方法将引发名称<see cref="T:System.Globalization.CultureNotFoundException" />异常。</span><span class="sxs-lookup"><span data-stu-id="36b46-1140">Starting with apps that run under the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] or later on Windows 7 or later, the method attempts to retrieve a <see cref="T:System.Globalization.CultureInfo" /> object whose identifier is <paramref name="name" /> from the operating system; if the operating system does not support that culture, and if <paramref name="name" /> is not the name of a supplementary or replacement culture, the method throws a <see cref="T:System.Globalization.CultureNotFoundException" /> exception.</span></span></para></block>
        <altmember cref="P:System.Globalization.CultureInfo.Name" />
        <altmember cref="M:System.Globalization.CultureInfo.ClearCachedData" />
      </Docs>
    </Member>
    <Member MemberName="GetCultureInfoByIetfLanguageTag">
      <MemberSignature Language="C#" Value="public static System.Globalization.CultureInfo GetCultureInfoByIetfLanguageTag (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.CultureInfo GetCultureInfoByIetfLanguageTag(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.GetCultureInfoByIetfLanguageTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCultureInfoByIetfLanguageTag (name As String) As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::CultureInfo ^ GetCultureInfoByIetfLanguageTag(System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetCultureInfoByIetfLanguageTag : string -&gt; System.Globalization.CultureInfo" Usage="System.Globalization.CultureInfo.GetCultureInfoByIetfLanguageTag name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="36b46-1141">按 RFC 4646 标准指定的语言名称。</span><span class="sxs-lookup"><span data-stu-id="36b46-1141">The name of a language as specified by the RFC 4646 standard.</span></span></param>
        <summary><span data-ttu-id="36b46-1142">已否决。</span><span class="sxs-lookup"><span data-stu-id="36b46-1142">Deprecated.</span></span> <span data-ttu-id="36b46-1143">检索只读的 <see cref="T:System.Globalization.CultureInfo" /> 对象，其语言特征由指定的 RFC 4646 语言标记标识。</span><span class="sxs-lookup"><span data-stu-id="36b46-1143">Retrieves a read-only <see cref="T:System.Globalization.CultureInfo" /> object having linguistic characteristics that are identified by the specified RFC 4646 language tag.</span></span></summary>
        <returns><span data-ttu-id="36b46-1144">一个只读 <see cref="T:System.Globalization.CultureInfo" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="36b46-1144">A read-only <see cref="T:System.Globalization.CultureInfo" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="36b46-1145">此方法和<xref:System.Globalization.CultureInfo.IetfLanguageTag%2A>属性已弃用。</span><span class="sxs-lookup"><span data-stu-id="36b46-1145">This method and the <xref:System.Globalization.CultureInfo.IetfLanguageTag%2A> property are deprecated.</span></span> <span data-ttu-id="36b46-1146">而不是使用这些元素，该应用程序应使用的新<xref:System.Globalization.CultureInfo>对象并调用到<xref:System.Globalization.CultureInfo.Name%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="36b46-1146">Instead of using these elements, the application should use a new <xref:System.Globalization.CultureInfo> object and calls to the <xref:System.Globalization.CultureInfo.Name%2A> property.</span></span> <span data-ttu-id="36b46-1147">IETF 标记和名称是相同的。</span><span class="sxs-lookup"><span data-stu-id="36b46-1147">IETF tags and names are identical.</span></span>  
  
 <span data-ttu-id="36b46-1148">维护 Internet 工程任务组 (IETF) 的 RFC 4646 标准定义一个 IETF 语言标记，提供了统一的方法来确定一种语言。</span><span class="sxs-lookup"><span data-stu-id="36b46-1148">The RFC 4646 standard that is maintained by the Internet Engineering Task Force (IETF) defines an IETF language tag, which provides a uniform means of identifying a language.</span></span> <span data-ttu-id="36b46-1149">一个 IETF 语言标记的格式是返回的区域性名称相同<xref:System.Globalization.CultureInfo.Name%2A>属性，但不唯一地标识一个区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-1149">The format of an IETF language tag is the same as the culture name returned by the <xref:System.Globalization.CultureInfo.Name%2A> property, but does not identify a culture uniquely.</span></span> <span data-ttu-id="36b46-1150">如果这些区域性具有相同的语言特征，不同的区域性将共享同一个 IETF 语言标记。</span><span class="sxs-lookup"><span data-stu-id="36b46-1150">Different cultures share the same IETF language tag if those cultures have identical linguistic characteristics.</span></span> <span data-ttu-id="36b46-1151">中包含一个区域性的语言特征<xref:System.Globalization.TextInfo>对象与关联<xref:System.Globalization.CultureInfo>对象。</span><span class="sxs-lookup"><span data-stu-id="36b46-1151">The linguistic characteristics of a culture are contained in the <xref:System.Globalization.TextInfo> object associated with a <xref:System.Globalization.CultureInfo> object.</span></span>  
  
 <span data-ttu-id="36b46-1152">一个 IETF 语言标记组成是必需的语言标识符、 可选脚本标识符和可选区域标识符。</span><span class="sxs-lookup"><span data-stu-id="36b46-1152">An IETF language tag consists of a mandatory language identifier, an optional script identifier, and an optional region identifier.</span></span>  
  
 <span data-ttu-id="36b46-1153">你的应用程序应使用检索到的区域性来控制特定于语言的任务，例如管理拼写或语法检查器。</span><span class="sxs-lookup"><span data-stu-id="36b46-1153">Your applications should use the retrieved culture to control language-specific tasks, such as managing a spelling or grammar checker.</span></span> <span data-ttu-id="36b46-1154">应用程序不应使用检索到的区域性以控制特定于区域性的任务，例如文本进行排序或格式化时间和日期。</span><span class="sxs-lookup"><span data-stu-id="36b46-1154">Applications should not use the retrieved culture to control culture-specific tasks, such as sorting text or formatting times and dates.</span></span>  
  
 <span data-ttu-id="36b46-1155">有关详细信息，请参阅 RFC 4646、"标记为标识语言"和最新草案标准、 草稿-phillips-langtags-05.txt，在[ http://go.microsoft.com/fwlink/?LinkId=100231 ](https://go.microsoft.com/fwlink/?LinkId=100231)。</span><span class="sxs-lookup"><span data-stu-id="36b46-1155">For more information, see RFC 4646, "Tags for Identifying Languages," and the most recent draft standard, Draft-phillips-langtags-05.txt, at [http://go.microsoft.com/fwlink/?LinkId=100231](https://go.microsoft.com/fwlink/?LinkId=100231).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="36b46-1156"><paramref name="name" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="36b46-1156"><paramref name="name" /> is null.</span></span></exception>
        <exception cref="T:System.Globalization.CultureNotFoundException"><span data-ttu-id="36b46-1157"><paramref name="name" /> 与支持的区域性不符。</span><span class="sxs-lookup"><span data-stu-id="36b46-1157"><paramref name="name" /> does not correspond to a supported culture.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="36b46-1158">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]和早期版本抛<see cref="T:System.ArgumentException" />如果<paramref name="name" />支持的区域性的名称不对应。</span><span class="sxs-lookup"><span data-stu-id="36b46-1158">The [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] and earlier versions throw an <see cref="T:System.ArgumentException" /> if <paramref name="name" /> does not correspond to the name of a supported culture.</span></span> <span data-ttu-id="36b46-1159">从开始[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]，此方法将引发<see cref="T:System.Globalization.CultureNotFoundException" />。</span><span class="sxs-lookup"><span data-stu-id="36b46-1159">Starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], this method throws a <see cref="T:System.Globalization.CultureNotFoundException" />.</span></span></para></block>
        <altmember cref="P:System.Globalization.CultureInfo.TextInfo" />
        <altmember cref="T:System.Globalization.CultureAndRegionInfoBuilder" />
        <altmember cref="M:System.Globalization.CultureInfo.ClearCachedData" />
      </Docs>
    </Member>
    <Member MemberName="GetCultures">
      <MemberSignature Language="C#" Value="public static System.Globalization.CultureInfo[] GetCultures (System.Globalization.CultureTypes types);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.CultureInfo[] GetCultures(valuetype System.Globalization.CultureTypes types) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.GetCultures(System.Globalization.CultureTypes)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCultures (types As CultureTypes) As CultureInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Globalization::CultureInfo ^&gt; ^ GetCultures(System::Globalization::CultureTypes types);" />
      <MemberSignature Language="F#" Value="static member GetCultures : System.Globalization.CultureTypes -&gt; System.Globalization.CultureInfo[]" Usage="System.Globalization.CultureInfo.GetCultures types" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="types" Type="System.Globalization.CultureTypes" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="types"><span data-ttu-id="36b46-1160">按位组合的列举值，用于筛选要检索的区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-1160">A bitwise combination of the enumeration values that filter the cultures to retrieve.</span></span></param>
        <summary><span data-ttu-id="36b46-1161">获取由指定 <see cref="T:System.Globalization.CultureTypes" /> 参数筛选的支持的区域性列表。</span><span class="sxs-lookup"><span data-stu-id="36b46-1161">Gets the list of supported cultures filtered by the specified <see cref="T:System.Globalization.CultureTypes" /> parameter.</span></span></summary>
        <returns><span data-ttu-id="36b46-1162">一个数组，该数组包含由 <paramref name="types" /> 参数指定的区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-1162">An array that contains the cultures specified by the <paramref name="types" /> parameter.</span></span> <span data-ttu-id="36b46-1163">区域性数组未排序。</span><span class="sxs-lookup"><span data-stu-id="36b46-1163">The array of cultures is unsorted.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36b46-1164"><xref:System.Globalization.CultureInfo.GetCultures%2A>最常与调用方法`types`参数设置为以下值：</span><span class="sxs-lookup"><span data-stu-id="36b46-1164">The <xref:System.Globalization.CultureInfo.GetCultures%2A> method is most commonly called with the `types` parameter set to the following values:</span></span>  
  
-   <span data-ttu-id="36b46-1165"><xref:System.Globalization.CultureTypes.SpecificCultures>表示返回所有特定区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-1165"><xref:System.Globalization.CultureTypes.SpecificCultures>, which returns all specific cultures.</span></span>  
  
-   <span data-ttu-id="36b46-1166"><xref:System.Globalization.CultureTypes.NeutralCultures>表示返回所有非特定区域性和固定区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-1166"><xref:System.Globalization.CultureTypes.NeutralCultures>, which returns all neutral cultures and the invariant culture.</span></span>  
  
-   <span data-ttu-id="36b46-1167"><xref:System.Globalization.CultureTypes.AllCultures>表示返回所有非特定和特定区域性、 Windows 系统中安装的区域性和由用户创建的自定义区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-1167"><xref:System.Globalization.CultureTypes.AllCultures>, which returns all neutral and specific cultures, cultures installed in the Windows system, and custom cultures created by the user.</span></span>  
  
-   <span data-ttu-id="36b46-1168"><xref:System.Globalization.CultureTypes.UserCustomCulture>表示返回所有自定义区域性，例如那些由注册<xref:System.Globalization.CultureAndRegionInfoBuilder>类。</span><span class="sxs-lookup"><span data-stu-id="36b46-1168"><xref:System.Globalization.CultureTypes.UserCustomCulture>, which returns all custom cultures, such as those registered by the <xref:System.Globalization.CultureAndRegionInfoBuilder> class.</span></span> <span data-ttu-id="36b46-1169">在 Windows 10 之前的 Windows 版本<xref:System.Globalization.CultureTypes.UserCustomCulture>值适用于所有用户定义的自定义区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-1169">In versions of Windows before Windows 10, the <xref:System.Globalization.CultureTypes.UserCustomCulture> value applies to all user-defined custom cultures.</span></span> <span data-ttu-id="36b46-1170">从 Windows 10 开始，它适用于系统区域性缺少完整的文化数据并不具有唯一本地标识符，由<xref:System.Globalization.CultureInfo.LCID%2A>属性值。</span><span class="sxs-lookup"><span data-stu-id="36b46-1170">Starting with Windows 10, it applies to system cultures that lack complete cultural data and that do not have a unique local identifier, as indicated by the <xref:System.Globalization.CultureInfo.LCID%2A> property value.</span></span> <span data-ttu-id="36b46-1171">因此，如下所示的代码将返回不同的结果时在 Windows 10 和 Windows 的早期版本上运行。</span><span class="sxs-lookup"><span data-stu-id="36b46-1171">As a result, code such as the following will return different results when run on Windows 10 and on an earlier version of Windows.</span></span>  
  
     [!code-csharp[System.Globalization.CultureInfo.GetCultures#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/CS/getcultures3.cs#2)]
     [!code-vb[System.Globalization.CultureInfo.GetCultures#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/VB/getcultures3.vb#2)]  
  
   
  
## Examples  
 <span data-ttu-id="36b46-1172">下面的代码示例显示了非特定区域性的多个属性。</span><span class="sxs-lookup"><span data-stu-id="36b46-1172">The following code example displays several properties of the neutral cultures.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="36b46-1173">此示例分别显示与 0x0004 和 0x7C04 区域性标识符的 ZH-CHS 和 ZH-CHT 区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-1173">The example displays the zh-CHS and zh-CHT cultures with the 0x0004 and 0x7C04 culture identifiers, respectively.</span></span> <span data-ttu-id="36b46-1174">但是，Windows Vista 应用程序应使用-Zh-hans 名称而不是 ZH-CHS 和 Zh-hant 名称而不是 ZH-CHT。</span><span class="sxs-lookup"><span data-stu-id="36b46-1174">However, your Windows Vista applications should use the zh-Hans name instead of zh-CHS and the zh-Hant name instead of zh-CHT.</span></span> <span data-ttu-id="36b46-1175">-Zh-hans 和 Zh-hant 名称表示当前的标准，并且应使用，除非使用较旧名称的理由需要。</span><span class="sxs-lookup"><span data-stu-id="36b46-1175">The zh-Hans and zh-Hant names represent the current standard, and should be used unless you have a reason for using the older names.</span></span>  
  
 [!code-cpp[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/CPP/getcultures.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/CS/getcultures.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/VB/getcultures.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="36b46-1176"><paramref name="types" /> 指定了无效的 <see cref="T:System.Globalization.CultureTypes" /> 值组合。</span><span class="sxs-lookup"><span data-stu-id="36b46-1176"><paramref name="types" /> specifies an invalid combination of <see cref="T:System.Globalization.CultureTypes" /> values.</span></span></exception>
        <altmember cref="T:System.Globalization.CultureTypes" />
      </Docs>
    </Member>
    <Member MemberName="GetFormat">
      <MemberSignature Language="C#" Value="public virtual object GetFormat (Type formatType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetFormat(class System.Type formatType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.GetFormat(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFormat (formatType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetFormat(Type ^ formatType);" />
      <MemberSignature Language="F#" Value="abstract member GetFormat : Type -&gt; obj&#xA;override this.GetFormat : Type -&gt; obj" Usage="cultureInfo.GetFormat formatType" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormatProvider.GetFormat(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formatType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="formatType"><span data-ttu-id="36b46-1177">要为其获取格式化对象的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="36b46-1177">The <see cref="T:System.Type" /> for which to get a formatting object.</span></span> <span data-ttu-id="36b46-1178">此方法仅支持 <see cref="T:System.Globalization.NumberFormatInfo" /> 和 <see cref="T:System.Globalization.DateTimeFormatInfo" /> 两种类型。</span><span class="sxs-lookup"><span data-stu-id="36b46-1178">This method only supports the <see cref="T:System.Globalization.NumberFormatInfo" /> and <see cref="T:System.Globalization.DateTimeFormatInfo" /> types.</span></span></param>
        <summary><span data-ttu-id="36b46-1179">获取一个定义如何格式化指定类型的对象。</span><span class="sxs-lookup"><span data-stu-id="36b46-1179">Gets an object that defines how to format the specified type.</span></span></summary>
        <returns><span data-ttu-id="36b46-1180"><see cref="P:System.Globalization.CultureInfo.NumberFormat" /> 属性的值，如果 <paramref name="formatType" /> 是 <see cref="T:System.Globalization.NumberFormatInfo" /> 类的 <see cref="T:System.Globalization.CultureInfo" /> 对象，则该属性为包含当前 <see cref="T:System.Type" /> 的默认数字格式信息的 <see cref="T:System.Globalization.NumberFormatInfo" />。</span><span class="sxs-lookup"><span data-stu-id="36b46-1180">The value of the <see cref="P:System.Globalization.CultureInfo.NumberFormat" /> property, which is a <see cref="T:System.Globalization.NumberFormatInfo" /> containing the default number format information for the current <see cref="T:System.Globalization.CultureInfo" />, if <paramref name="formatType" /> is the <see cref="T:System.Type" /> object for the <see cref="T:System.Globalization.NumberFormatInfo" /> class.</span></span>  
  
<span data-ttu-id="36b46-1181">- 或 -</span><span class="sxs-lookup"><span data-stu-id="36b46-1181">-or-</span></span> 
<span data-ttu-id="36b46-1182"><see cref="P:System.Globalization.CultureInfo.DateTimeFormat" /> 属性的值，如果 <paramref name="formatType" /> 是 <see cref="T:System.Globalization.DateTimeFormatInfo" /> 类的 <see cref="T:System.Globalization.CultureInfo" /> 对象，则该属性为包含当前 <see cref="T:System.Type" /> 的默认日期和时间格式信息的 <see cref="T:System.Globalization.DateTimeFormatInfo" />。</span><span class="sxs-lookup"><span data-stu-id="36b46-1182">The value of the <see cref="P:System.Globalization.CultureInfo.DateTimeFormat" /> property, which is a <see cref="T:System.Globalization.DateTimeFormatInfo" /> containing the default date and time format information for the current <see cref="T:System.Globalization.CultureInfo" />, if <paramref name="formatType" /> is the <see cref="T:System.Type" /> object for the <see cref="T:System.Globalization.DateTimeFormatInfo" /> class.</span></span>  
  
<span data-ttu-id="36b46-1183">- 或 -</span><span class="sxs-lookup"><span data-stu-id="36b46-1183">-or-</span></span> 
<span data-ttu-id="36b46-1184">如果 <paramref name="formatType" /> 是其他任何对象，则为 null。</span><span class="sxs-lookup"><span data-stu-id="36b46-1184">null, if <paramref name="formatType" /> is any other object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36b46-1185"><xref:System.Globalization.CultureInfo.GetFormat%2A> 可实现 <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="36b46-1185"><xref:System.Globalization.CultureInfo.GetFormat%2A> implements <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="36b46-1186">`NumberFormatInfo` 提供了与中的基本数据类型的格式方法结合使用的特定于区域性的数字格式。</span><span class="sxs-lookup"><span data-stu-id="36b46-1186">`NumberFormatInfo` provides the culture-specific numeric format used in conjunction with the Format methods in the base data types.</span></span> <span data-ttu-id="36b46-1187">`DateTimeFormatInfo` 控制如何针对特定区域性格式化日期和时间值。</span><span class="sxs-lookup"><span data-stu-id="36b46-1187">`DateTimeFormatInfo` controls how the date and time values are formatted for a specific culture.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Type" />
        <altmember cref="T:System.Globalization.NumberFormatInfo" />
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
        <altmember cref="P:System.Globalization.CultureInfo.NumberFormat" />
        <altmember cref="P:System.Globalization.CultureInfo.DateTimeFormat" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="cultureInfo.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="36b46-1188">用作当前 <see cref="T:System.Globalization.CultureInfo" /> 的哈希函数，适合用在哈希算法和数据结构（如哈希表）中。</span><span class="sxs-lookup"><span data-stu-id="36b46-1188">Serves as a hash function for the current <see cref="T:System.Globalization.CultureInfo" />, suitable for hashing algorithms and data structures, such as a hash table.</span></span></summary>
        <returns><span data-ttu-id="36b46-1189">当前 <see cref="T:System.Globalization.CultureInfo" /> 的哈希代码。</span><span class="sxs-lookup"><span data-stu-id="36b46-1189">A hash code for the current <see cref="T:System.Globalization.CultureInfo" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36b46-1190">此方法重写 <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="36b46-1190">This method overrides <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="36b46-1191">此方法为根据 <xref:System.Globalization.CultureInfo.Equals%2A> 方法视为相等的两个对象生成相同的哈希代码。</span><span class="sxs-lookup"><span data-stu-id="36b46-1191">This method generates the same hash code for two objects that are equal according to the <xref:System.Globalization.CultureInfo.Equals%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="T:System.Collections.Hashtable" />
        <altmember cref="M:System.Globalization.CultureInfo.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="IetfLanguageTag">
      <MemberSignature Language="C#" Value="public string IetfLanguageTag { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string IetfLanguageTag" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.IetfLanguageTag" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IetfLanguageTag As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ IetfLanguageTag { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.IetfLanguageTag : string" Usage="System.Globalization.CultureInfo.IetfLanguageTag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36b46-1192">已否决。</span><span class="sxs-lookup"><span data-stu-id="36b46-1192">Deprecated.</span></span> <span data-ttu-id="36b46-1193">获取某种语言的 RFC 4646 标准标识。</span><span class="sxs-lookup"><span data-stu-id="36b46-1193">Gets the RFC 4646 standard identification for a language.</span></span></summary>
        <value><span data-ttu-id="36b46-1194">一个字符串，表示某种语言的 RFC 4646 标准标识。</span><span class="sxs-lookup"><span data-stu-id="36b46-1194">A string that is the RFC 4646 standard identification for a language.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="36b46-1195">此属性和<xref:System.Globalization.CultureInfo.GetCultureInfoByIetfLanguageTag%2A>方法已弃用。</span><span class="sxs-lookup"><span data-stu-id="36b46-1195">This property and the <xref:System.Globalization.CultureInfo.GetCultureInfoByIetfLanguageTag%2A> method are deprecated.</span></span> <span data-ttu-id="36b46-1196">相反，应使用<xref:System.Globalization.CultureInfo.Name%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="36b46-1196">Instead, you should use a the <xref:System.Globalization.CultureInfo.Name%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="36b46-1197">IETF 标记和名称是相同的。</span><span class="sxs-lookup"><span data-stu-id="36b46-1197">IETF tags and names are identical.</span></span>  
  
 <span data-ttu-id="36b46-1198">维护 Internet 工程任务组 (IETF) 的 RFC 4646 标准定义一个 IETF 语言标记，提供了统一的方法来确定一种语言。</span><span class="sxs-lookup"><span data-stu-id="36b46-1198">The RFC 4646 standard that is maintained by the Internet Engineering Task Force (IETF) defines an IETF language tag, which provides a uniform means of identifying a language.</span></span> <span data-ttu-id="36b46-1199">一个 IETF 语言标记的格式是类似于返回的区域性名称<xref:System.Globalization.CultureInfo.Name%2A>属性，但不唯一地标识一个区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-1199">The format of an IETF language tag is similar to the culture name returned by the <xref:System.Globalization.CultureInfo.Name%2A> property, but does not identify a culture uniquely.</span></span> <span data-ttu-id="36b46-1200">也就是说，不同的区域性共享同一个 IETF 语言标记，如果这些区域性具有相同的语言特征。</span><span class="sxs-lookup"><span data-stu-id="36b46-1200">That is, different cultures share the same IETF language tag if those cultures have identical linguistic characteristics.</span></span> <span data-ttu-id="36b46-1201">中包含一个区域性的语言特征<xref:System.Globalization.TextInfo>对象与关联<xref:System.Globalization.CultureInfo>对象。</span><span class="sxs-lookup"><span data-stu-id="36b46-1201">The linguistic characteristics of a culture are contained in the <xref:System.Globalization.TextInfo> object associated with a <xref:System.Globalization.CultureInfo> object.</span></span>  
  
 <span data-ttu-id="36b46-1202">一个 IETF 语言标记组成是必需的语言标识符、 可选脚本标识符和可选区域标识符。</span><span class="sxs-lookup"><span data-stu-id="36b46-1202">An IETF language tag consists of a mandatory language identifier, an optional script identifier, and an optional region identifier.</span></span>  
  
 <span data-ttu-id="36b46-1203">有关详细信息，请参阅[RFC 5646"标记为标识语言](https://go.microsoft.com/fwlink/?LinkId=230876)。</span><span class="sxs-lookup"><span data-stu-id="36b46-1203">For more information, see [RFC 5646, "Tags for Identifying Languages](https://go.microsoft.com/fwlink/?LinkId=230876).</span></span> <span data-ttu-id="36b46-1204">子标记的列表，请参阅[IANA 语言子标记注册表](https://go.microsoft.com/fwlink/?LinkId=230877)。</span><span class="sxs-lookup"><span data-stu-id="36b46-1204">For a list of subtags, see [The IANA Language Subtag Registry](https://go.microsoft.com/fwlink/?LinkId=230877).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CultureInfo.TextInfo" />
        <altmember cref="T:System.Globalization.CultureAndRegionInfoBuilder" />
      </Docs>
    </Member>
    <Member MemberName="InstalledUICulture">
      <MemberSignature Language="C#" Value="public static System.Globalization.CultureInfo InstalledUICulture { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Globalization.CultureInfo InstalledUICulture" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.InstalledUICulture" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property InstalledUICulture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Globalization::CultureInfo ^ InstalledUICulture { System::Globalization::CultureInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InstalledUICulture : System.Globalization.CultureInfo" Usage="System.Globalization.CultureInfo.InstalledUICulture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36b46-1205">获取表示操作系统中安装的区域性的 <see cref="T:System.Globalization.CultureInfo" />。</span><span class="sxs-lookup"><span data-stu-id="36b46-1205">Gets the <see cref="T:System.Globalization.CultureInfo" /> that represents the culture installed with the operating system.</span></span></summary>
        <value><span data-ttu-id="36b46-1206">表示操作系统中安装的区域性的 <see cref="T:System.Globalization.CultureInfo" />。</span><span class="sxs-lookup"><span data-stu-id="36b46-1206">The <see cref="T:System.Globalization.CultureInfo" /> that represents the culture installed with the operating system.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36b46-1207">在已本地化的操作系统，如日语版本的 Windows，此属性返回的操作系统的区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-1207">In a localized operating system, such as a Japanese edition of Windows, this property returns the culture of the operating system.</span></span> <span data-ttu-id="36b46-1208">此属性等效于`GetSystemDefaultUILanguage`Windows API 中。</span><span class="sxs-lookup"><span data-stu-id="36b46-1208">This property is the equivalent of `GetSystemDefaultUILanguage` in the Windows API.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Resources.ResourceManager" />
        <altmember cref="P:System.Globalization.CultureInfo.CurrentCulture" />
        <altmember cref="P:System.Globalization.CultureInfo.CurrentUICulture" />
        <altmember cref="P:System.Globalization.CultureInfo.InvariantCulture" />
        <altmember cref="P:System.Globalization.CultureInfo.Parent" />
      </Docs>
    </Member>
    <Member MemberName="InvariantCulture">
      <MemberSignature Language="C#" Value="public static System.Globalization.CultureInfo InvariantCulture { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Globalization.CultureInfo InvariantCulture" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.InvariantCulture" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property InvariantCulture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Globalization::CultureInfo ^ InvariantCulture { System::Globalization::CultureInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InvariantCulture : System.Globalization.CultureInfo" Usage="System.Globalization.CultureInfo.InvariantCulture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36b46-1209">获取不依赖于区域性（固定）的 <see cref="T:System.Globalization.CultureInfo" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="36b46-1209">Gets the <see cref="T:System.Globalization.CultureInfo" /> object that is culture-independent (invariant).</span></span></summary>
        <value><span data-ttu-id="36b46-1210">不依赖于区域性（固定）的对象。</span><span class="sxs-lookup"><span data-stu-id="36b46-1210">The object that is culture-independent (invariant).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36b46-1211">固定区域性不区分区域性;它是关联与英语语言，但不能与任何国家/地区。</span><span class="sxs-lookup"><span data-stu-id="36b46-1211">The invariant culture is culture-insensitive; it is associated with the English language but not with any country/region.</span></span> <span data-ttu-id="36b46-1212">固定区域性按名称指定通过使用空字符串 ("") 对的调用中<xref:System.Globalization.CultureInfo>实例化方法。</span><span class="sxs-lookup"><span data-stu-id="36b46-1212">You specify the invariant culture by name by using an empty string ("") in the call to a <xref:System.Globalization.CultureInfo> instantiation method.</span></span> <span data-ttu-id="36b46-1213"><xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType> 此外将检索固定区域性的实例。</span><span class="sxs-lookup"><span data-stu-id="36b46-1213"><xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType> also retrieves an instance of the invariant culture.</span></span> <span data-ttu-id="36b46-1214">它可以在几乎所有方法中使用<xref:System.Globalization>要求区域性的命名空间。</span><span class="sxs-lookup"><span data-stu-id="36b46-1214">It can be used in almost any method in the <xref:System.Globalization> namespace that requires a culture.</span></span> <span data-ttu-id="36b46-1215">如返回属性的对象<xref:System.Globalization.CultureInfo.CompareInfo%2A>， <xref:System.Globalization.CultureInfo.DateTimeFormat%2A>，和<xref:System.Globalization.CultureInfo.NumberFormat%2A>还反映字符串比较和格式设置的固定区域性的约定。</span><span class="sxs-lookup"><span data-stu-id="36b46-1215">The objects returned by properties such as <xref:System.Globalization.CultureInfo.CompareInfo%2A>, <xref:System.Globalization.CultureInfo.DateTimeFormat%2A>, and <xref:System.Globalization.CultureInfo.NumberFormat%2A> also reflect the string comparison and formatting conventions of the invariant culture.</span></span>  
  
 <span data-ttu-id="36b46-1216">与不同的是区分区域性的数据，可能会发生更改的用户自定义或对.NET Framework 或操作系统的更新，固定区域性稳定时间和已安装的区域性特定和数据不能由用户自定义。</span><span class="sxs-lookup"><span data-stu-id="36b46-1216">Unlike culture-sensitive data, which is subject to change by user customization or by updates to the .NET Framework or the operating system, invariant culture data is stable over time and across installed cultures and cannot be customized by users.</span></span> <span data-ttu-id="36b46-1217">这样，固定区域性特别有用的操作，需要依赖于区域性的结果，如格式设置和分析操作保留格式的数据，或排序和排序操作需要的数据显示在无论区域性固定的顺序。</span><span class="sxs-lookup"><span data-stu-id="36b46-1217">This makes the invariant culture particularly useful for operations that require culture-independent results, such as formatting and parsing operations that persist formatted data, or sorting and ordering operations that require that data be displayed in a fixed order regardless of culture.</span></span>  
  
## <a name="string-operations"></a><span data-ttu-id="36b46-1218">字符串操作</span><span class="sxs-lookup"><span data-stu-id="36b46-1218">String Operations</span></span>  
 <span data-ttu-id="36b46-1219">为区分区域性的字符串操作不受当前线程区域性的约定和的上都是一致的区域性，可以使用固定区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-1219">You can use the invariant culture for culture-sensitive string operations that are not affected by the conventions of the current thread culture and that are consistent across cultures.</span></span> <span data-ttu-id="36b46-1220">例如，可能想要按固定顺序或适用于不考虑当前线程区域性的字符串的一组标准的大小写约定的已排序的数据。</span><span class="sxs-lookup"><span data-stu-id="36b46-1220">For example, you may want sorted data to appear in a fixed order or apply a standard set of casing conventions to strings regardless of the current thread culture.</span></span> <span data-ttu-id="36b46-1221">若要执行此操作，可以传递<xref:System.Globalization.CultureInfo.InvariantCulture%2A>对象具有方法<xref:System.Globalization.CultureInfo>参数，如<xref:System.String.Compare%28System.String%2CSystem.String%2CSystem.Boolean%2CSystem.Globalization.CultureInfo%29>和<xref:System.String.ToUpper%28System.Globalization.CultureInfo%29>。</span><span class="sxs-lookup"><span data-stu-id="36b46-1221">To do this, you pass the <xref:System.Globalization.CultureInfo.InvariantCulture%2A> object to a method that has a <xref:System.Globalization.CultureInfo> parameter, such as <xref:System.String.Compare%28System.String%2CSystem.String%2CSystem.Boolean%2CSystem.Globalization.CultureInfo%29> and <xref:System.String.ToUpper%28System.Globalization.CultureInfo%29>.</span></span>  
  
## <a name="persisting-data"></a><span data-ttu-id="36b46-1222">保存数据</span><span class="sxs-lookup"><span data-stu-id="36b46-1222">Persisting Data</span></span>  
 <span data-ttu-id="36b46-1223"><xref:System.Globalization.CultureInfo.InvariantCulture%2A>属性可用于将数据保存在独立于区域性的格式。</span><span class="sxs-lookup"><span data-stu-id="36b46-1223">The <xref:System.Globalization.CultureInfo.InvariantCulture%2A> property can be used to persist data in a culture-independent format.</span></span> <span data-ttu-id="36b46-1224">这提供了已知的格式不会更改，可用来序列化和反序列化各个区域性的数据。</span><span class="sxs-lookup"><span data-stu-id="36b46-1224">This provides a known format that does not change and that can be used to serialize and deserialize data across cultures.</span></span> <span data-ttu-id="36b46-1225">反序列化数据后，它可以适当地根据当前用户的区域性约定进行格式化。</span><span class="sxs-lookup"><span data-stu-id="36b46-1225">After the data is deserialized, it can be formatted appropriately based on the cultural conventions of the current user.</span></span>  
  
 <span data-ttu-id="36b46-1226">例如，如果您选择保留以字符串形式的日期和时间数据，则可以传递<xref:System.Globalization.CultureInfo.InvariantCulture%2A>对象传递给<xref:System.DateTime.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType>或<xref:System.DateTimeOffset.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>方法来创建字符串，并且您可以将传递<xref:System.Globalization.CultureInfo.InvariantCulture%2A>对象传递给<xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType>或<xref:System.DateTimeOffset.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>将字符串转换回为日期和时间值的方法。</span><span class="sxs-lookup"><span data-stu-id="36b46-1226">For example, if you choose to persist date and time data in string form, you can pass the <xref:System.Globalization.CultureInfo.InvariantCulture%2A> object to the <xref:System.DateTime.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> or <xref:System.DateTimeOffset.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> method to create the string, and you can pass the <xref:System.Globalization.CultureInfo.InvariantCulture%2A> object to the <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> or <xref:System.DateTimeOffset.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> method to convert the string back to a date and time value.</span></span> <span data-ttu-id="36b46-1227">此方法可确保基础的日期和时间值不会更改时读取或写入来自不同的区域性的用户数据。</span><span class="sxs-lookup"><span data-stu-id="36b46-1227">This technique ensures that the underlying date and time values do not change when the data is read or written by users from different cultures.</span></span>  
  
 <span data-ttu-id="36b46-1228">下面的示例使用固定区域性来持久保存<xref:System.DateTime>以字符串形式的值。</span><span class="sxs-lookup"><span data-stu-id="36b46-1228">The following example uses the invariant culture to persist a <xref:System.DateTime> value as a string.</span></span> <span data-ttu-id="36b46-1229">然后，分析字符串，并使用法语 （法国） 和德语 （德国） 区域性的格式设置约定来显示其值。</span><span class="sxs-lookup"><span data-stu-id="36b46-1229">It then parses the string and displays its value by using the formatting conventions of the French (France) and German (Germany) cultures.</span></span>  
  
 [!code-csharp[System.Globalization.CultureInfo.InvariantCulture#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.invariantculture/cs/persist1.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.InvariantCulture#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.invariantculture/vb/persist1.vb#1)]  
  
## <a name="security-decisions"></a><span data-ttu-id="36b46-1230">安全决策</span><span class="sxs-lookup"><span data-stu-id="36b46-1230">Security Decisions</span></span>  
 <span data-ttu-id="36b46-1231">如果您要做 （如是否允许对系统资源的访问） 的安全决策基于字符串比较或大小写更改的结果，您不应使用固定区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-1231">If you are making a security decision (such as whether to allow access to a system resource) based on the result of a string comparison or a case change, you should not use the invariant culture.</span></span> <span data-ttu-id="36b46-1232">相反，应通过调用包含的方法来执行区分大小写或不区分大小写的序号比较<xref:System.StringComparison>参数并提供任一<xref:System.StringComparison.Ordinal?displayProperty=nameWithType>或<xref:System.StringComparison.OrdinalIgnoreCase?displayProperty=nameWithType>作为自变量。</span><span class="sxs-lookup"><span data-stu-id="36b46-1232">Instead, you should perform a case-sensitive or case-insensitive ordinal comparison by calling a method that includes a <xref:System.StringComparison> parameter and supplying either <xref:System.StringComparison.Ordinal?displayProperty=nameWithType> or <xref:System.StringComparison.OrdinalIgnoreCase?displayProperty=nameWithType> as an argument.</span></span> <span data-ttu-id="36b46-1233">如果更改当前区域性或运行代码的计算机上的区域性与可用来测试代码的区域性，则执行区分区域性的字符串操作的代码可能导致安全漏洞。</span><span class="sxs-lookup"><span data-stu-id="36b46-1233">Code that performs culture-sensitive string operations can cause security vulnerabilities if the current culture is changed or if the culture on the computer that is running the code differs from the culture that is used to test the code.</span></span> <span data-ttu-id="36b46-1234">与此相反，序号比较仅取决于比较的字符的二进制值。</span><span class="sxs-lookup"><span data-stu-id="36b46-1234">In contrast, an ordinal comparison depends solely on the binary value of the compared characters.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CultureInfo.CurrentCulture" />
        <altmember cref="P:System.Globalization.CultureInfo.CurrentUICulture" />
        <altmember cref="P:System.Globalization.CultureInfo.InstalledUICulture" />
        <altmember cref="P:System.Globalization.CultureInfo.Parent" />
        <altmember cref="P:System.Globalization.CultureInfo.IsNeutralCulture" />
      </Docs>
    </Member>
    <Member MemberName="IsNeutralCulture">
      <MemberSignature Language="C#" Value="public virtual bool IsNeutralCulture { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNeutralCulture" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.IsNeutralCulture" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsNeutralCulture As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsNeutralCulture { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNeutralCulture : bool" Usage="System.Globalization.CultureInfo.IsNeutralCulture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36b46-1235">获取一个值，该值指示当前 <see cref="T:System.Globalization.CultureInfo" /> 是否表示非特定区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-1235">Gets a value indicating whether the current <see cref="T:System.Globalization.CultureInfo" /> represents a neutral culture.</span></span></summary>
        <value><span data-ttu-id="36b46-1236">如果当前 <see cref="T:System.Globalization.CultureInfo" /> 表示非特定区域性，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="36b46-1236"><see langword="true" /> if the current <see cref="T:System.Globalization.CultureInfo" /> represents a neutral culture; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36b46-1237">非特定区域性是关联的区域性与一种语言，但不是与任何国家/地区 / 区域。</span><span class="sxs-lookup"><span data-stu-id="36b46-1237">A neutral culture is a culture that is associated with a language but not with a country or region.</span></span> <span data-ttu-id="36b46-1238">它不同于特定区域性，它是一种语言和国家/地区或区域与关联的区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-1238">It differs from a specific culture, which is a culture that is associated with both a language and a country or region.</span></span> <span data-ttu-id="36b46-1239">例如，fr 是法语区域性非特定语言的名称，而-FR 是法国法语区域性的名称。</span><span class="sxs-lookup"><span data-stu-id="36b46-1239">For example, fr is the name for the neutral French culture, while fr-FR is the name for the French culture in France.</span></span>  
  
 <span data-ttu-id="36b46-1240">如果此属性返回`false`，区域性是特定区域性或固定区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-1240">If this property returns `false`, the culture is either a specific culture or the invariant culture.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36b46-1241">下面的代码示例确定哪些使用简体中文的语言的区域性非特定区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-1241">The following code example determines which cultures using the Chinese language are neutral cultures.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="36b46-1242">此示例分别显示的较旧 ZH-CHS 和 ZH-CHT 0x0004 和 0x7C04 区域性标识符，使用的区域性名称。</span><span class="sxs-lookup"><span data-stu-id="36b46-1242">The example displays the older zh-CHS and zh-CHT culture names with the 0x0004 and 0x7C04 culture identifiers, respectively.</span></span> <span data-ttu-id="36b46-1243">但是，Windows Vista 应用程序应使用-Zh-hans 名称而不是 ZH-CHS 和 Zh-hant 名称而不是 ZH-CHT。</span><span class="sxs-lookup"><span data-stu-id="36b46-1243">However, your Windows Vista applications should use the zh-Hans name instead of zh-CHS and the zh-Hant name instead of zh-CHT.</span></span> <span data-ttu-id="36b46-1244">-Zh-hans 和 Zh-hant 名称表示当前的标准，并且应使用，除非使用较旧名称的理由需要。</span><span class="sxs-lookup"><span data-stu-id="36b46-1244">The zh-Hans and zh-Hant names represent the current standard, and should be used unless you have a reason for using the older names.</span></span>  
  
 [!code-cpp[System.Globalization.CultureInfo.IsNeutralCulture2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.IsNeutralCulture2/CPP/neutralculture.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo.IsNeutralCulture2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.IsNeutralCulture2/CS/neutralculture.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.IsNeutralCulture2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.IsNeutralCulture2/VB/neutralculture.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CultureInfo.InvariantCulture" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Globalization.CultureInfo.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36b46-1245">获取一个值，该值指示当前 <see cref="T:System.Globalization.CultureInfo" /> 是否为只读。</span><span class="sxs-lookup"><span data-stu-id="36b46-1245">Gets a value indicating whether the current <see cref="T:System.Globalization.CultureInfo" /> is read-only.</span></span></summary>
        <value><span data-ttu-id="36b46-1246">如果当前 <see langword="true" /> 为只读，则为 <see cref="T:System.Globalization.CultureInfo" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="36b46-1246"><see langword="true" /> if the current <see cref="T:System.Globalization.CultureInfo" /> is read-only; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="36b46-1247">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="36b46-1247">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36b46-1248">如果<xref:System.Globalization.CultureInfo>是只读的<xref:System.Globalization.CultureInfo.DateTimeFormat%2A>和<xref:System.Globalization.CultureInfo.NumberFormat%2A>实例也是只读的。</span><span class="sxs-lookup"><span data-stu-id="36b46-1248">If the <xref:System.Globalization.CultureInfo> is read-only, the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> and <xref:System.Globalization.CultureInfo.NumberFormat%2A> instances are also read-only.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36b46-1249">下面的代码示例演示<xref:System.Globalization.CultureInfo.IsReadOnly%2A>还有助于保护<xref:System.Globalization.DateTimeFormatInfo>并<xref:System.Globalization.NumberFormatInfo>与关联的实例<xref:System.Globalization.CultureInfo>。</span><span class="sxs-lookup"><span data-stu-id="36b46-1249">The following code example shows that <xref:System.Globalization.CultureInfo.IsReadOnly%2A> also helps protect the <xref:System.Globalization.DateTimeFormatInfo> and <xref:System.Globalization.NumberFormatInfo> instances associated with the <xref:System.Globalization.CultureInfo>.</span></span>  
  
 [!code-cpp[System.Globalization.CultureInfo.ReadOnly#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.ReadOnly/CPP/yslin_cultureinfo_readonly.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo.ReadOnly#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.ReadOnly/CS/yslin_cultureinfo_readonly.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.ReadOnly#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.ReadOnly/VB/yslin_cultureinfo_readonly.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Globalization.CultureInfo.ReadOnly(System.Globalization.CultureInfo)" />
      </Docs>
    </Member>
    <Member MemberName="KeyboardLayoutId">
      <MemberSignature Language="C#" Value="public virtual int KeyboardLayoutId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 KeyboardLayoutId" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.KeyboardLayoutId" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property KeyboardLayoutId As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int KeyboardLayoutId { int get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyboardLayoutId : int" Usage="System.Globalization.CultureInfo.KeyboardLayoutId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36b46-1250">获取活动的输入法区域设置标识符。</span><span class="sxs-lookup"><span data-stu-id="36b46-1250">Gets the active input locale identifier.</span></span></summary>
        <value><span data-ttu-id="36b46-1251">一个指定输入区域设置标识符的 32 位有符号数字。</span><span class="sxs-lookup"><span data-stu-id="36b46-1251">A 32-bit signed number that specifies an input locale identifier.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36b46-1252">输入法区域设置标识符以前称为键盘布局。</span><span class="sxs-lookup"><span data-stu-id="36b46-1252">The input locale identifier was formerly called the keyboard layout.</span></span> <span data-ttu-id="36b46-1253">输入法区域设置标识符是输入的更广泛概念，而不是键盘布局，因为它还可以指示语音到文本转换器、 输入法编辑器 (IME) 或任何其他形式。</span><span class="sxs-lookup"><span data-stu-id="36b46-1253">An input locale identifier is a broader concept than a keyboard layout since it can also indicate a speech-to-text converter, an Input Method Editor (IME), or any other form of input.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LCID">
      <MemberSignature Language="C#" Value="public virtual int LCID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LCID" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.LCID" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property LCID As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int LCID { int get(); };" />
      <MemberSignature Language="F#" Value="member this.LCID : int" Usage="System.Globalization.CultureInfo.LCID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36b46-1254">获取当前 <see cref="T:System.Globalization.CultureInfo" /> 的区域性标识符。</span><span class="sxs-lookup"><span data-stu-id="36b46-1254">Gets the culture identifier for the current <see cref="T:System.Globalization.CultureInfo" />.</span></span></summary>
        <value><span data-ttu-id="36b46-1255">当前 <see cref="T:System.Globalization.CultureInfo" /> 的区域性标识符。</span><span class="sxs-lookup"><span data-stu-id="36b46-1255">The culture identifier for the current <see cref="T:System.Globalization.CultureInfo" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36b46-1256">在大多数情况下，区域性标识符映射到相应的 NLS 区域设置标识符。</span><span class="sxs-lookup"><span data-stu-id="36b46-1256">In most cases, the culture identifier is mapped to the corresponding NLS locale identifier.</span></span>  
  
 <span data-ttu-id="36b46-1257">在 Windows 10 中，区域设置标识符之前的 Windows 版本中`LOCALE_CUSTOM_UNSPECIFIED`（0x1000 控制或 4096） 分配给由用户创建的自定义区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-1257">In versions of Windows prior to Windows 10, the locale identifier `LOCALE_CUSTOM_UNSPECIFIED` (0x1000, or 4096) is assigned to custom cultures created by the user.</span></span> <span data-ttu-id="36b46-1258">从 Windows 10 开始，它被分配给任何区域性不具有唯一的区域设置标识符并不具有完整的系统提供数据。</span><span class="sxs-lookup"><span data-stu-id="36b46-1258">Starting with Windows 10, it is assigned to any culture that does not have a unique locale identifier and does not have complete system-provided data.</span></span> <span data-ttu-id="36b46-1259">因此，用于循环访问的区域性和检索那些具有代码<xref:System.Globalization.CultureInfo.LCID%2A>的值`LOCALE_CUSTOM_UNSPECIFIED`返回的更大子集<xref:System.Globalization.CultureInfo>对象; 如果在 Windows 10 下运行。</span><span class="sxs-lookup"><span data-stu-id="36b46-1259">As a result, code that iterates cultures and retrieves those with an <xref:System.Globalization.CultureInfo.LCID%2A> value of `LOCALE_CUSTOM_UNSPECIFIED` returns a larger subset of <xref:System.Globalization.CultureInfo> objects if run under Windows 10.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36b46-1260">下面的代码示例演示如何创建<xref:System.Globalization.CultureInfo>西班牙语 （西班牙） 与国际排序顺序，另一个<xref:System.Globalization.CultureInfo>与传统的排序顺序。</span><span class="sxs-lookup"><span data-stu-id="36b46-1260">The following code example shows how to create a <xref:System.Globalization.CultureInfo> for Spanish (Spain) with the international sort order and another <xref:System.Globalization.CultureInfo> with the traditional sort order.</span></span>  
  
 [!code-cpp[System.Globalization.CultureInfo_esES#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo_esES/CPP/spanishspain.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo_esES#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo_esES/CS/spanishspain.cs#1)]
 [!code-vb[System.Globalization.CultureInfo_esES#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo_esES/VB/spanishspain.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Globalization.CultureInfo.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36b46-1261">获取格式为 languagecode2-country/regioncode2 的区域性名称。</span><span class="sxs-lookup"><span data-stu-id="36b46-1261">Gets the culture name in the format *languagecode2*-*country/regioncode2*.</span></span></summary>
        <value><span data-ttu-id="36b46-1262">格式的区域性名称*languagecode2*-*country/regioncode2*。</span><span class="sxs-lookup"><span data-stu-id="36b46-1262">The culture name in the format *languagecode2*-*country/regioncode2*.</span></span> <span data-ttu-id="36b46-1263">*languagecode2*派生自 ISO 639-1 小写的双字母代码。</span><span class="sxs-lookup"><span data-stu-id="36b46-1263">*languagecode2* is a lowercase two-letter code derived from ISO 639-1.</span></span> <span data-ttu-id="36b46-1264">*country/regioncode2*派生自 ISO 3166，一般包含两个大写字母，或一个 BCP-47 语言标记。</span><span class="sxs-lookup"><span data-stu-id="36b46-1264">*country/regioncode2* is derived from ISO 3166 and usually consists of two uppercase letters, or a BCP-47 language tag.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks

<span data-ttu-id="36b46-1265">有关预定义的区域性名称和标识符的列表，<xref:System.Globalization.CultureInfo.Name%2A>属性可以在 Windows 上都返回系统，请参阅**语言标记**中的列[Windows支持的语言/区域名称的列表](https://docs.microsoft.com/openspecs/windows_protocols/ms-lcid/a9eac961-e77d-41a6-90a5-ce1a8b0cdb9c).</span><span class="sxs-lookup"><span data-stu-id="36b46-1265">For a list of predefined culture names and identifiers that the <xref:System.Globalization.CultureInfo.Name%2A> property can return on Windows systems, see the **Language tag** column in the [list of language/region names supported by Windows](https://docs.microsoft.com/openspecs/windows_protocols/ms-lcid/a9eac961-e77d-41a6-90a5-ce1a8b0cdb9c).</span></span> <span data-ttu-id="36b46-1266">区域性名称遵循由定义的标准[BCP 47](https://tools.ietf.org/html/bcp47)。</span><span class="sxs-lookup"><span data-stu-id="36b46-1266">Culture names follow the standard defined by [BCP 47](https://tools.ietf.org/html/bcp47).</span></span> <span data-ttu-id="36b46-1267">此外，从 Windows 10 开始`name`可以是任何有效的 BCP-47 语言标记。</span><span class="sxs-lookup"><span data-stu-id="36b46-1267">In addition, starting with Windows 10, `name` can be any valid BCP-47 language tag.</span></span> <span data-ttu-id="36b46-1268">请注意区域性名称发生更改，并且它们还可以反映自定义区域性的名称。</span><span class="sxs-lookup"><span data-stu-id="36b46-1268">Note that culture names are subject to change, and that they also can reflect the names of custom cultures.</span></span>  
  
 <span data-ttu-id="36b46-1269"><xref:System.Globalization.CultureInfo.Name%2A?displayProperty=nameWithType>属性遵循命名标准中提供<xref:System.Globalization.CultureInfo>类主题。</span><span class="sxs-lookup"><span data-stu-id="36b46-1269">The <xref:System.Globalization.CultureInfo.Name%2A?displayProperty=nameWithType> property follows the naming standards provided in the <xref:System.Globalization.CultureInfo> class topic.</span></span> <span data-ttu-id="36b46-1270">它将返回不包括任何可能的备选排序顺序的区域性名称的缩写形式。</span><span class="sxs-lookup"><span data-stu-id="36b46-1270">It returns the short form of the culture name that excludes any indication of an alternate sort order.</span></span> <span data-ttu-id="36b46-1271">例如，如果您实例化<xref:System.Globalization.CultureInfo>对象使用字符串"de DE_phoneb"以反映备用排序顺序，<xref:System.Globalization.CultureInfo.Name%2A>属性将返回"DE-DE"。</span><span class="sxs-lookup"><span data-stu-id="36b46-1271">For example, if you instantiate a <xref:System.Globalization.CultureInfo> object by using the string "de-DE_phoneb" to reflect an alternate sort order, the <xref:System.Globalization.CultureInfo.Name%2A> property returns "de-DE".</span></span>  
  
 <span data-ttu-id="36b46-1272">若要获取区域性的完整名称，应使用<xref:System.Globalization.CultureInfo.DisplayName%2A>， <xref:System.Globalization.CultureInfo.EnglishName%2A>，或<xref:System.Globalization.CultureInfo.NativeName%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="36b46-1272">To get the full name of the culture, you should use the <xref:System.Globalization.CultureInfo.DisplayName%2A>, <xref:System.Globalization.CultureInfo.EnglishName%2A>, or <xref:System.Globalization.CultureInfo.NativeName%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36b46-1273">下面的代码示例显示了非特定区域性的多个属性。</span><span class="sxs-lookup"><span data-stu-id="36b46-1273">The following code example displays several properties of the neutral cultures.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="36b46-1274">此示例分别显示的较旧 ZH-CHS 和 ZH-CHT 0x0004 和 0x7C04 区域性标识符，使用的区域性名称。</span><span class="sxs-lookup"><span data-stu-id="36b46-1274">The example displays the older zh-CHS and zh-CHT culture names with the 0x0004 and 0x7C04 culture identifiers, respectively.</span></span> <span data-ttu-id="36b46-1275">但是，Windows Vista 应用程序应使用-Zh-hans 名称而不是 ZH-CHS 和 Zh-hant 名称而不是 ZH-CHT。</span><span class="sxs-lookup"><span data-stu-id="36b46-1275">However, your Windows Vista applications should use the zh-Hans name instead of zh-CHS and the zh-Hant name instead of zh-CHT.</span></span> <span data-ttu-id="36b46-1276">-Zh-hans 和 Zh-hant 名称表示当前的标准，并且应使用，除非使用较旧名称的理由需要。</span><span class="sxs-lookup"><span data-stu-id="36b46-1276">The zh-Hans and zh-Hant names represent the current standard, and should be used unless you have a reason for using the older names.</span></span>  
  
 [!code-cpp[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/CPP/getcultures.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/CS/getcultures.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/VB/getcultures.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CultureInfo.DisplayName" />
        <altmember cref="P:System.Globalization.CultureInfo.NativeName" />
        <altmember cref="P:System.Globalization.CultureInfo.EnglishName" />
        <altmember cref="P:System.Globalization.CultureInfo.TwoLetterISOLanguageName" />
        <altmember cref="P:System.Globalization.CultureInfo.ThreeLetterISOLanguageName" />
        <altmember cref="P:System.Globalization.CultureInfo.ThreeLetterWindowsLanguageName" />
      </Docs>
    </Member>
    <Member MemberName="NativeName">
      <MemberSignature Language="C#" Value="public virtual string NativeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NativeName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.NativeName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property NativeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ NativeName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NativeName : string" Usage="System.Globalization.CultureInfo.NativeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36b46-1277">获取为区域性设置的显示名称，它由语言、国家/地区以及可选的书写符号组成。</span><span class="sxs-lookup"><span data-stu-id="36b46-1277">Gets the culture name, consisting of the language, the country/region, and the optional script, that the culture is set to display.</span></span></summary>
        <value><span data-ttu-id="36b46-1278">区域性名称。</span><span class="sxs-lookup"><span data-stu-id="36b46-1278">The culture name.</span></span> <span data-ttu-id="36b46-1279">由语言的全名、国家/地区的全名以及可选脚本组成。</span><span class="sxs-lookup"><span data-stu-id="36b46-1279">consisting of the full name of the language, the full name of the country/region, and the optional script.</span></span> <span data-ttu-id="36b46-1280">有关其格式的讨论，请参见对 <see cref="T:System.Globalization.CultureInfo" /> 类的说明。</span><span class="sxs-lookup"><span data-stu-id="36b46-1280">The format is discussed in the description of the <see cref="T:System.Globalization.CultureInfo" /> class.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36b46-1281">此属性的值是相同的而不考虑.NET Framework 的语言版本。</span><span class="sxs-lookup"><span data-stu-id="36b46-1281">The value of this property is the same, regardless of the language version of the .NET Framework.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CultureInfo.Name" />
        <altmember cref="P:System.Globalization.CultureInfo.DisplayName" />
        <altmember cref="P:System.Globalization.CultureInfo.EnglishName" />
        <altmember cref="P:System.Globalization.CultureInfo.TwoLetterISOLanguageName" />
        <altmember cref="P:System.Globalization.CultureInfo.ThreeLetterISOLanguageName" />
        <altmember cref="P:System.Globalization.CultureInfo.ThreeLetterWindowsLanguageName" />
      </Docs>
    </Member>
    <Member MemberName="NumberFormat">
      <MemberSignature Language="C#" Value="public virtual System.Globalization.NumberFormatInfo NumberFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.NumberFormatInfo NumberFormat" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.NumberFormat" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property NumberFormat As NumberFormatInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Globalization::NumberFormatInfo ^ NumberFormat { System::Globalization::NumberFormatInfo ^ get(); void set(System::Globalization::NumberFormatInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NumberFormat : System.Globalization.NumberFormatInfo with get, set" Usage="System.Globalization.CultureInfo.NumberFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.NumberFormatInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36b46-1282">获取或设置 <see cref="T:System.Globalization.NumberFormatInfo" />，它定义适合区域性的、显示数字、货币和百分比的格式。</span><span class="sxs-lookup"><span data-stu-id="36b46-1282">Gets or sets a <see cref="T:System.Globalization.NumberFormatInfo" /> that defines the culturally appropriate format of displaying numbers, currency, and percentage.</span></span></summary>
        <value><span data-ttu-id="36b46-1283">一个 <see cref="T:System.Globalization.NumberFormatInfo" />，它定义适合区域性的、显示数字、货币和百分比的格式。</span><span class="sxs-lookup"><span data-stu-id="36b46-1283">A <see cref="T:System.Globalization.NumberFormatInfo" /> that defines the culturally appropriate format of displaying numbers, currency, and percentage.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="overrides"></a><span data-ttu-id="36b46-1284">Overrides</span><span class="sxs-lookup"><span data-stu-id="36b46-1284">Overrides</span></span>  
 <span data-ttu-id="36b46-1285">用户可以选择重写一些与 Windows 通过控制面板的区域和语言选项部分的当前区域性关联的值。</span><span class="sxs-lookup"><span data-stu-id="36b46-1285">The user might choose to override some of the values associated with the current culture of Windows through the regional and language options portion of Control Panel.</span></span> <span data-ttu-id="36b46-1286">例如，用户可以选择以不同格式显示日期，或使用一种货币而不是默认区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-1286">For example, the user might choose to display the date in a different format or to use a currency other than the default for the culture.</span></span>  
  
 <span data-ttu-id="36b46-1287">如果<xref:System.Globalization.CultureInfo.UseUserOverride%2A>是`true`和指定的区域性匹配的 Windows，当前区域性<xref:System.Globalization.CultureInfo>使用这些重写值，其中包括用户设置的属性<xref:System.Globalization.DateTimeFormatInfo>返回实例<xref:System.Globalization.CultureInfo.DateTimeFormat%2A>属性，和的属性<xref:System.Globalization.NumberFormatInfo>返回实例<xref:System.Globalization.CultureInfo.NumberFormat%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="36b46-1287">If <xref:System.Globalization.CultureInfo.UseUserOverride%2A> is `true` and the specified culture matches the current culture of Windows, the <xref:System.Globalization.CultureInfo> uses those overrides, including user settings for the properties of the <xref:System.Globalization.DateTimeFormatInfo> instance returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> property, and the properties of the <xref:System.Globalization.NumberFormatInfo> instance returned by the <xref:System.Globalization.CultureInfo.NumberFormat%2A> property.</span></span> <span data-ttu-id="36b46-1288">如果用户设置与不兼容与关联的区域性<xref:System.Globalization.CultureInfo>，例如，如果在所选的日历不是之一<xref:System.Globalization.CultureInfo.OptionalCalendars%2A>，方法的结果和属性的值是不确定。</span><span class="sxs-lookup"><span data-stu-id="36b46-1288">If the user settings are incompatible with the culture associated with the <xref:System.Globalization.CultureInfo>, for example, if the selected calendar is not one of the <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>, the results of the methods and the values of the properties are undefined.</span></span>  
  
 <span data-ttu-id="36b46-1289">值<xref:System.Globalization.CultureInfo.DateTimeFormat%2A>属性和<xref:System.Globalization.CultureInfo.NumberFormat%2A>之前用户可以访问该属性不会计算属性。</span><span class="sxs-lookup"><span data-stu-id="36b46-1289">The values of the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> property and the <xref:System.Globalization.CultureInfo.NumberFormat%2A> property are not calculated until the user accesses the property.</span></span> <span data-ttu-id="36b46-1290">如果用户使用控制面板来运行，然后访问该应用程序时，将当前区域性更改为新区域性<xref:System.Globalization.CultureInfo.DateTimeFormat%2A>或<xref:System.Globalization.CultureInfo.NumberFormat%2A>属性，该应用程序检索新区域性的默认值。</span><span class="sxs-lookup"><span data-stu-id="36b46-1290">If the user uses the Control Panel to change the current culture to a new culture while the application is running and then accesses the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> or <xref:System.Globalization.CultureInfo.NumberFormat%2A> property, the application retrieves the defaults for the new culture.</span></span> <span data-ttu-id="36b46-1291">不重写原始区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-1291">not the overrides for the original culture.</span></span> <span data-ttu-id="36b46-1292">若要保留原始的当前区域性的重写设置，应用程序应访问<xref:System.Globalization.CultureInfo.DateTimeFormat%2A>和<xref:System.Globalization.CultureInfo.NumberFormat%2A>属性，然后才能更改当前区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-1292">To preserve the overrides for the original current culture, the application should access the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> and <xref:System.Globalization.CultureInfo.NumberFormat%2A> properties before changing the current culture.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36b46-1293">下面的代码示例显示了 CultureInfo.Clone 还克隆<xref:System.Globalization.DateTimeFormatInfo>并<xref:System.Globalization.NumberFormatInfo>与关联的实例<xref:System.Globalization.CultureInfo>。</span><span class="sxs-lookup"><span data-stu-id="36b46-1293">The following code example shows that CultureInfo.Clone also clones the <xref:System.Globalization.DateTimeFormatInfo> and <xref:System.Globalization.NumberFormatInfo> instances associated with the <xref:System.Globalization.CultureInfo>.</span></span>  
  
 [!code-cpp[System.Globalization.CultureInfo.Clone#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.Clone/CPP/yslin_cultureinfo_clone.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo.Clone#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.Clone/CS/yslin_cultureinfo_clone.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.Clone#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.Clone/VB/yslin_cultureinfo_clone.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="36b46-1294">该属性设置为 null。</span><span class="sxs-lookup"><span data-stu-id="36b46-1294">The property is set to null.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="36b46-1295">设置了 <see cref="P:System.Globalization.CultureInfo.NumberFormat" /> 属性或任何 <see cref="T:System.Globalization.NumberFormatInfo" /> 属性，但 <see cref="T:System.Globalization.CultureInfo" /> 是只读的。</span><span class="sxs-lookup"><span data-stu-id="36b46-1295">The <see cref="P:System.Globalization.CultureInfo.NumberFormat" /> property or any of the <see cref="T:System.Globalization.NumberFormatInfo" /> properties is set, and the <see cref="T:System.Globalization.CultureInfo" /> is read-only.</span></span></exception>
        <altmember cref="T:System.Globalization.NumberFormatInfo" />
        <altmember cref="M:System.Globalization.CultureInfo.GetFormat(System.Type)" />
        <altmember cref="P:System.Globalization.CultureInfo.DateTimeFormat" />
      </Docs>
    </Member>
    <Member MemberName="OptionalCalendars">
      <MemberSignature Language="C#" Value="public virtual System.Globalization.Calendar[] OptionalCalendars { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.Calendar[] OptionalCalendars" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.OptionalCalendars" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property OptionalCalendars As Calendar()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::Globalization::Calendar ^&gt; ^ OptionalCalendars { cli::array &lt;System::Globalization::Calendar ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OptionalCalendars : System.Globalization.Calendar[]" Usage="System.Globalization.CultureInfo.OptionalCalendars" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.Calendar[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36b46-1296">获取该区域性可使用的日历的列表。</span><span class="sxs-lookup"><span data-stu-id="36b46-1296">Gets the list of calendars that can be used by the culture.</span></span></summary>
        <value><span data-ttu-id="36b46-1297">类型为 <see cref="T:System.Globalization.Calendar" /> 的数组，表示当前 <see cref="T:System.Globalization.CultureInfo" /> 代表的区域性所使用的日历。</span><span class="sxs-lookup"><span data-stu-id="36b46-1297">An array of type <see cref="T:System.Globalization.Calendar" /> that represents the calendars that can be used by the culture represented by the current <see cref="T:System.Globalization.CultureInfo" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36b46-1298">你的应用程序更改当前使用的日历<xref:System.Globalization.CultureInfo>通过设置<xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>的属性<xref:System.Globalization.CultureInfo.DateTimeFormat%2A>，这是实例<xref:System.Globalization.DateTimeFormatInfo>类。</span><span class="sxs-lookup"><span data-stu-id="36b46-1298">Your application changes the calendar used by the current <xref:System.Globalization.CultureInfo> by setting the <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> property of <xref:System.Globalization.CultureInfo.DateTimeFormat%2A>, which is an instance of the <xref:System.Globalization.DateTimeFormatInfo> class.</span></span> <span data-ttu-id="36b46-1299">新的日历必须是一个中列出的日历<xref:System.Globalization.CultureInfo.OptionalCalendars%2A>。</span><span class="sxs-lookup"><span data-stu-id="36b46-1299">The new calendar must be one of the calendars listed in <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>.</span></span> <span data-ttu-id="36b46-1300"><xref:System.Globalization.CultureInfo.DateTimeFormat%2A> 此外包括其他属性的自定义日期和时间格式设置与该<xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>。</span><span class="sxs-lookup"><span data-stu-id="36b46-1300"><xref:System.Globalization.CultureInfo.DateTimeFormat%2A> also includes other properties that customize the date and time formatting associated with that <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36b46-1301">下面的代码示例演示如何确定<xref:System.Globalization.GregorianCalendar>区域性支持的版本。</span><span class="sxs-lookup"><span data-stu-id="36b46-1301">The following code example demonstrates how to determine the <xref:System.Globalization.GregorianCalendar> versions supported by the culture.</span></span>  
  
 [!code-cpp[System.Globalization.GregorianCalendarTypes#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendarTypes/CPP/gregoriancalendartypes.cpp#1)]
 [!code-csharp[System.Globalization.GregorianCalendarTypes#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendarTypes/CS/gregoriancalendartypes.cs#1)]
 [!code-vb[System.Globalization.GregorianCalendarTypes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.GregorianCalendarTypes/VB/gregoriancalendartypes.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.Calendar" />
        <altmember cref="P:System.Globalization.CultureInfo.DateTimeFormat" />
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public virtual System.Globalization.CultureInfo Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo Parent" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.Parent" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Parent As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Globalization::CultureInfo ^ Parent { System::Globalization::CultureInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parent : System.Globalization.CultureInfo" Usage="System.Globalization.CultureInfo.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36b46-1302">获取表示当前 <see cref="T:System.Globalization.CultureInfo" /> 的父区域性的 <see cref="T:System.Globalization.CultureInfo" />。</span><span class="sxs-lookup"><span data-stu-id="36b46-1302">Gets the <see cref="T:System.Globalization.CultureInfo" /> that represents the parent culture of the current <see cref="T:System.Globalization.CultureInfo" />.</span></span></summary>
        <value><span data-ttu-id="36b46-1303">表示当前 <see cref="T:System.Globalization.CultureInfo" /> 的父区域性的 <see cref="T:System.Globalization.CultureInfo" />。</span><span class="sxs-lookup"><span data-stu-id="36b46-1303">The <see cref="T:System.Globalization.CultureInfo" /> that represents the parent culture of the current <see cref="T:System.Globalization.CultureInfo" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36b46-1304">区域性具有层次结构中的特定区域性的父是非特定区域性，是一个非特定区域性的父<xref:System.Globalization.CultureInfo.InvariantCulture%2A>，和的父<xref:System.Globalization.CultureInfo.InvariantCulture%2A>为固定区域性本身。</span><span class="sxs-lookup"><span data-stu-id="36b46-1304">The cultures have a hierarchy in which the parent of a specific culture is a neutral culture, the parent of a neutral culture is the <xref:System.Globalization.CultureInfo.InvariantCulture%2A>, and the parent of the <xref:System.Globalization.CultureInfo.InvariantCulture%2A> is the invariant culture itself.</span></span> <span data-ttu-id="36b46-1305">父区域性包含仅的信息所共有及其子级集。</span><span class="sxs-lookup"><span data-stu-id="36b46-1305">The parent culture encompasses only the set of information that is common among its children.</span></span>  
  
 <span data-ttu-id="36b46-1306">如果为特定区域性资源不可用在系统中，使用非特定区域性的资源。</span><span class="sxs-lookup"><span data-stu-id="36b46-1306">If the resources for the specific culture are not available in the system, the resources for the neutral culture are used.</span></span> <span data-ttu-id="36b46-1307">如果非特定区域性资源不可用，则使用嵌入在主程序集中的资源。</span><span class="sxs-lookup"><span data-stu-id="36b46-1307">If the resources for the neutral culture are not available, the resources embedded in the main assembly are used.</span></span> <span data-ttu-id="36b46-1308">资源回退进程的详细信息，请参阅[打包和部署资源](~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md)。</span><span class="sxs-lookup"><span data-stu-id="36b46-1308">For more information on the resource fallback process, see [Packaging and Deploying Resources](~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36b46-1309">下面的代码示例确定使用中文语言每个特定区域性的父区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-1309">The following code example determines the parent culture of each specific culture using the Chinese language.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="36b46-1310">此示例分别显示的较旧 ZH-CHS 和 ZH-CHT 0x0004 和 0x7C04 区域性标识符，使用的区域性名称。</span><span class="sxs-lookup"><span data-stu-id="36b46-1310">The example displays the older zh-CHS and zh-CHT culture names with the 0x0004 and 0x7C04 culture identifiers, respectively.</span></span> <span data-ttu-id="36b46-1311">但是，Windows Vista 应用程序应使用-Zh-hans 名称而不是 ZH-CHS 和 Zh-hant 名称而不是 ZH-CHT。</span><span class="sxs-lookup"><span data-stu-id="36b46-1311">However, your Windows Vista applications should use the zh-Hans name instead of zh-CHS and the zh-Hant name instead of zh-CHT.</span></span> <span data-ttu-id="36b46-1312">-Zh-hans 和 Zh-hant 名称表示当前的标准，并且应使用，除非使用较旧名称的理由需要。</span><span class="sxs-lookup"><span data-stu-id="36b46-1312">The zh-Hans and zh-Hant names represent the current standard, and should be used unless you have a reason for using the older names.</span></span>  
  
 [!code-cpp[System.Globalization.CultureInfo.Parent#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.Parent/CPP/parentculture.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo.Parent#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.Parent/CS/parentculture.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.Parent#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.Parent/VB/parentculture.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Globalization.CultureInfo.#ctor" />
        <altmember cref="M:System.Globalization.CultureInfo.CreateSpecificCulture(System.String)" />
        <altmember cref="P:System.Globalization.CultureInfo.CurrentCulture" />
        <altmember cref="P:System.Globalization.CultureInfo.CurrentUICulture" />
        <altmember cref="P:System.Globalization.CultureInfo.InstalledUICulture" />
        <altmember cref="P:System.Globalization.CultureInfo.InvariantCulture" />
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public static System.Globalization.CultureInfo ReadOnly (System.Globalization.CultureInfo ci);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.CultureInfo ReadOnly(class System.Globalization.CultureInfo ci) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.ReadOnly(System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadOnly (ci As CultureInfo) As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::CultureInfo ^ ReadOnly(System::Globalization::CultureInfo ^ ci);" />
      <MemberSignature Language="F#" Value="static member ReadOnly : System.Globalization.CultureInfo -&gt; System.Globalization.CultureInfo" Usage="System.Globalization.CultureInfo.ReadOnly ci" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ci" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="ci"><span data-ttu-id="36b46-1313">要包装的 <see cref="T:System.Globalization.CultureInfo" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="36b46-1313">The <see cref="T:System.Globalization.CultureInfo" /> object to wrap.</span></span></param>
        <summary><span data-ttu-id="36b46-1314">返回指定的 <see cref="T:System.Globalization.CultureInfo" /> 对象周围的只读包装器。</span><span class="sxs-lookup"><span data-stu-id="36b46-1314">Returns a read-only wrapper around the specified <see cref="T:System.Globalization.CultureInfo" /> object.</span></span></summary>
        <returns><span data-ttu-id="36b46-1315"><paramref name="ci" /> 周围的只读 <see cref="T:System.Globalization.CultureInfo" /> 包装。</span><span class="sxs-lookup"><span data-stu-id="36b46-1315">A read-only <see cref="T:System.Globalization.CultureInfo" /> wrapper around <paramref name="ci" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36b46-1316">此包装器可防止对进行任何修改`ci`，或返回的对象`ci`。<xref:System.Globalization.CultureInfo.DateTimeFormat%2A></span><span class="sxs-lookup"><span data-stu-id="36b46-1316">This wrapper prevents any modifications to `ci`, or the objects returned by the `ci`.<xref:System.Globalization.CultureInfo.DateTimeFormat%2A></span></span> <span data-ttu-id="36b46-1317">和`ci`。<xref:System.Globalization.CultureInfo.NumberFormat%2A></span><span class="sxs-lookup"><span data-stu-id="36b46-1317">and `ci`.<xref:System.Globalization.CultureInfo.NumberFormat%2A></span></span> <span data-ttu-id="36b46-1318">属性。</span><span class="sxs-lookup"><span data-stu-id="36b46-1318">properties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36b46-1319">下面的示例演示<xref:System.Globalization.CultureInfo.ReadOnly%2A>方法可帮助保护<xref:System.Globalization.DateTimeFormatInfo>并<xref:System.Globalization.NumberFormatInfo>与关联的实例<xref:System.Globalization.CultureInfo>。</span><span class="sxs-lookup"><span data-stu-id="36b46-1319">The following example shows that the <xref:System.Globalization.CultureInfo.ReadOnly%2A> method helps protect the <xref:System.Globalization.DateTimeFormatInfo> and <xref:System.Globalization.NumberFormatInfo> instances associated with the <xref:System.Globalization.CultureInfo>.</span></span>  
  
 [!code-cpp[System.Globalization.CultureInfo.ReadOnly#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.ReadOnly/CPP/yslin_cultureinfo_readonly.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo.ReadOnly#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.ReadOnly/CS/yslin_cultureinfo_readonly.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.ReadOnly#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.ReadOnly/VB/yslin_cultureinfo_readonly.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="36b46-1320"><paramref name="ci" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="36b46-1320"><paramref name="ci" /> is null.</span></span></exception>
        <altmember cref="P:System.Globalization.CultureInfo.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="TextInfo">
      <MemberSignature Language="C#" Value="public virtual System.Globalization.TextInfo TextInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.TextInfo TextInfo" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.TextInfo" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property TextInfo As TextInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Globalization::TextInfo ^ TextInfo { System::Globalization::TextInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TextInfo : System.Globalization.TextInfo" Usage="System.Globalization.CultureInfo.TextInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.TextInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36b46-1321">获取定义与区域性关联的书写体系的 <see cref="T:System.Globalization.TextInfo" />。</span><span class="sxs-lookup"><span data-stu-id="36b46-1321">Gets the <see cref="T:System.Globalization.TextInfo" /> that defines the writing system associated with the culture.</span></span></summary>
        <value><span data-ttu-id="36b46-1322">定义与区域性关联的书写体系的 <see cref="T:System.Globalization.TextInfo" />。</span><span class="sxs-lookup"><span data-stu-id="36b46-1322">The <see cref="T:System.Globalization.TextInfo" /> that defines the writing system associated with the culture.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36b46-1323"><xref:System.Globalization.CultureInfo.TextInfo%2A>属性提供特定于区域性的大小写的字符串的信息。</span><span class="sxs-lookup"><span data-stu-id="36b46-1323">The <xref:System.Globalization.CultureInfo.TextInfo%2A> property provides culture-specific casing information for strings.</span></span> <span data-ttu-id="36b46-1324">若要执行非区域性敏感型大小写，该应用程序应使用<xref:System.Globalization.CultureInfo.TextInfo%2A>属性的<xref:System.Globalization.CultureInfo.InvariantCulture%2A>。</span><span class="sxs-lookup"><span data-stu-id="36b46-1324">To perform culture-insensitive casing, the application should use the <xref:System.Globalization.CultureInfo.TextInfo%2A> property of <xref:System.Globalization.CultureInfo.InvariantCulture%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36b46-1325">下面的代码示例演示如何创建<xref:System.Globalization.CultureInfo>西班牙语 （西班牙） 与国际排序顺序，另一个<xref:System.Globalization.CultureInfo>与传统的排序顺序。</span><span class="sxs-lookup"><span data-stu-id="36b46-1325">The following code example shows how to create a <xref:System.Globalization.CultureInfo> for Spanish (Spain) with the international sort order and another <xref:System.Globalization.CultureInfo> with the traditional sort order.</span></span>  
  
 [!code-cpp[System.Globalization.CultureInfo_esES#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo_esES/CPP/spanishspain.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo_esES#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo_esES/CS/spanishspain.cs#1)]
 [!code-vb[System.Globalization.CultureInfo_esES#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo_esES/VB/spanishspain.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.TextInfo" />
      </Docs>
    </Member>
    <Member MemberName="ThreeLetterISOLanguageName">
      <MemberSignature Language="C#" Value="public virtual string ThreeLetterISOLanguageName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ThreeLetterISOLanguageName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.ThreeLetterISOLanguageName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ThreeLetterISOLanguageName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ThreeLetterISOLanguageName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ThreeLetterISOLanguageName : string" Usage="System.Globalization.CultureInfo.ThreeLetterISOLanguageName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36b46-1326">获取当前 <see cref="T:System.Globalization.CultureInfo" /> 的语言的由三个字母构成的 ISO 639-2 代码。</span><span class="sxs-lookup"><span data-stu-id="36b46-1326">Gets the ISO 639-2 three-letter code for the language of the current <see cref="T:System.Globalization.CultureInfo" />.</span></span></summary>
        <value><span data-ttu-id="36b46-1327">当前 <see cref="T:System.Globalization.CultureInfo" /> 的语言的由三个字母构成的 ISO 639-2 代码。</span><span class="sxs-lookup"><span data-stu-id="36b46-1327">The ISO 639-2 three-letter code for the language of the current <see cref="T:System.Globalization.CultureInfo" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36b46-1328">例如，英语的三个字母缩写形式是"eng"。</span><span class="sxs-lookup"><span data-stu-id="36b46-1328">For example, the three-letter abbreviation for English is "eng".</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="36b46-1329">当进程之间通信或保存数据通常是更好地为使用完整<xref:System.Globalization.CultureInfo.Name%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="36b46-1329">When communicating between processes or persisting data it is usually better to use the full <xref:System.Globalization.CultureInfo.Name%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="36b46-1330">使用只包含语言可能会丢失上下文和数据。</span><span class="sxs-lookup"><span data-stu-id="36b46-1330">Using just the language can lose context and data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36b46-1331">下面的代码示例显示了非特定区域性的多个属性。</span><span class="sxs-lookup"><span data-stu-id="36b46-1331">The following code example displays several properties of the neutral cultures.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="36b46-1332">此示例分别显示的较旧 ZH-CHS 和 ZH-CHT 0x0004 和 0x7C04 区域性标识符，使用的区域性名称。</span><span class="sxs-lookup"><span data-stu-id="36b46-1332">The example displays the older zh-CHS and zh-CHT culture names with the 0x0004 and 0x7C04 culture identifiers, respectively.</span></span> <span data-ttu-id="36b46-1333">但是，Windows Vista 应用程序应使用-Zh-hans 名称而不是 ZH-CHS 和 Zh-hant 名称而不是 ZH-CHT。</span><span class="sxs-lookup"><span data-stu-id="36b46-1333">However, your Windows Vista applications should use the zh-Hans name instead of zh-CHS and the zh-Hant name instead of zh-CHT.</span></span> <span data-ttu-id="36b46-1334">-Zh-hans 和 Zh-hant 名称表示当前的标准，并且应使用，除非使用较旧名称的理由需要。</span><span class="sxs-lookup"><span data-stu-id="36b46-1334">The zh-Hans and zh-Hant names represent the current standard, and should be used unless you have a reason for using the older names.</span></span>  
  
 [!code-cpp[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/CPP/getcultures.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/CS/getcultures.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/VB/getcultures.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CultureInfo.Name" />
        <altmember cref="P:System.Globalization.CultureInfo.DisplayName" />
        <altmember cref="P:System.Globalization.CultureInfo.NativeName" />
        <altmember cref="P:System.Globalization.CultureInfo.EnglishName" />
        <altmember cref="P:System.Globalization.CultureInfo.TwoLetterISOLanguageName" />
        <altmember cref="P:System.Globalization.CultureInfo.ThreeLetterWindowsLanguageName" />
      </Docs>
    </Member>
    <Member MemberName="ThreeLetterWindowsLanguageName">
      <MemberSignature Language="C#" Value="public virtual string ThreeLetterWindowsLanguageName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ThreeLetterWindowsLanguageName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.ThreeLetterWindowsLanguageName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ThreeLetterWindowsLanguageName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ThreeLetterWindowsLanguageName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ThreeLetterWindowsLanguageName : string" Usage="System.Globalization.CultureInfo.ThreeLetterWindowsLanguageName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36b46-1335">获取 Windows API 中定义的由三个字母构成的语言代码。</span><span class="sxs-lookup"><span data-stu-id="36b46-1335">Gets the three-letter code for the language as defined in the Windows API.</span></span></summary>
        <value><span data-ttu-id="36b46-1336">Windows API 中定义的由三个字母构成的语言代码。</span><span class="sxs-lookup"><span data-stu-id="36b46-1336">The three-letter code for the language as defined in the Windows API.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36b46-1337">此属性返回的 Windows API 方法相同的值`GetLocaleInfo`的值。</span><span class="sxs-lookup"><span data-stu-id="36b46-1337">This property returns the same value as the Windows API method `GetLocaleInfo` with the LOCALE_SABBREVLANGNAME value.</span></span> <span data-ttu-id="36b46-1338">例如，英语 （美国） Windows API 中定义的三个字母代码是"enu"。</span><span class="sxs-lookup"><span data-stu-id="36b46-1338">For example, the three-letter code for English (United States) as defined in the Windows API is "enu".</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="36b46-1339">当进程之间通信或保存数据通常是更好地为使用完整<xref:System.Globalization.CultureInfo.Name%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="36b46-1339">When communicating between processes or persisting data it is usually better to use the full <xref:System.Globalization.CultureInfo.Name%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="36b46-1340">使用只包含语言可能会丢失上下文和数据。</span><span class="sxs-lookup"><span data-stu-id="36b46-1340">Using just the language can lose context and data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36b46-1341">下面的代码示例显示了非特定区域性的多个属性。</span><span class="sxs-lookup"><span data-stu-id="36b46-1341">The following code example displays several properties of the neutral cultures.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="36b46-1342">此示例分别显示的较旧 ZH-CHS 和 ZH-CHT 0x0004 和 0x7C04 区域性标识符，使用的区域性名称。</span><span class="sxs-lookup"><span data-stu-id="36b46-1342">The example displays the older zh-CHS and zh-CHT culture names with the 0x0004 and 0x7C04 culture identifiers, respectively.</span></span> <span data-ttu-id="36b46-1343">但是，Windows Vista 应用程序应使用-Zh-hans 名称而不是 ZH-CHS 和 Zh-hant 名称而不是 ZH-CHT。</span><span class="sxs-lookup"><span data-stu-id="36b46-1343">However, your Windows Vista applications should use the zh-Hans name instead of zh-CHS and the zh-Hant name instead of zh-CHT.</span></span> <span data-ttu-id="36b46-1344">-Zh-hans 和 Zh-hant 名称表示当前的标准，并且应使用，除非使用较旧名称的理由需要。</span><span class="sxs-lookup"><span data-stu-id="36b46-1344">The zh-Hans and zh-Hant names represent the current standard, and should be used unless you have a reason for using the older names.</span></span>  
  
 [!code-cpp[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/CPP/getcultures.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/CS/getcultures.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/VB/getcultures.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CultureInfo.Name" />
        <altmember cref="P:System.Globalization.CultureInfo.DisplayName" />
        <altmember cref="P:System.Globalization.CultureInfo.NativeName" />
        <altmember cref="P:System.Globalization.CultureInfo.EnglishName" />
        <altmember cref="P:System.Globalization.CultureInfo.TwoLetterISOLanguageName" />
        <altmember cref="P:System.Globalization.CultureInfo.ThreeLetterISOLanguageName" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="cultureInfo.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="36b46-1345">返回一个字符串，该字符串包含当前 <see cref="T:System.Globalization.CultureInfo" /> 的名称，其格式为 languagecode2 -country/regioncode2。</span><span class="sxs-lookup"><span data-stu-id="36b46-1345">Returns a string containing the name of the current <see cref="T:System.Globalization.CultureInfo" /> in the format *languagecode2*-*country/regioncode2*.</span></span></summary>
        <returns><span data-ttu-id="36b46-1346">包含当前 <see cref="T:System.Globalization.CultureInfo" /> 名称的字符串。</span><span class="sxs-lookup"><span data-stu-id="36b46-1346">A string containing the name of the current <see cref="T:System.Globalization.CultureInfo" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36b46-1347">此方法重写 <xref:System.Object.ToString%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="36b46-1347">This method overrides <xref:System.Object.ToString%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="36b46-1348">它将返回传递到的区域性名称的规范化的版本<xref:System.Globalization.CultureInfo.%23ctor%28System.String%29>或<xref:System.Globalization.CultureInfo.%23ctor%28System.String%2CSystem.Boolean%29>构造函数或设置为<xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A>或<xref:System.Globalization.CultureInfo.GetCultureInfo%28System.String%29>方法。</span><span class="sxs-lookup"><span data-stu-id="36b46-1348">It returns a normalized version of the culture name that is passed to the <xref:System.Globalization.CultureInfo.%23ctor%28System.String%29> or <xref:System.Globalization.CultureInfo.%23ctor%28System.String%2CSystem.Boolean%29> constructor or to the <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A> or <xref:System.Globalization.CultureInfo.GetCultureInfo%28System.String%29> method.</span></span> <span data-ttu-id="36b46-1349">它将结果字符串规范化的转换中的字符*languagecode2*到中的小写和转换字符*country/regioncode2*为大写如有必要。</span><span class="sxs-lookup"><span data-stu-id="36b46-1349">It normalizes the result string by converting characters in *languagecode2* to lowercase and converting characters in *country/regioncode2* to uppercase if necessary.</span></span>  
  
 <span data-ttu-id="36b46-1350">中列出了在 Windows 系统上的预定义的区域性名称**语言标记**中的列[支持的 Windows 的语言/区域名称的列表](https://docs.microsoft.com/openspecs/windows_protocols/ms-lcid/a9eac961-e77d-41a6-90a5-ce1a8b0cdb9c)。</span><span class="sxs-lookup"><span data-stu-id="36b46-1350">Predefined culture names on Windows systems are listed in the **Language tag** column in the [list of language/region names supported by Windows](https://docs.microsoft.com/openspecs/windows_protocols/ms-lcid/a9eac961-e77d-41a6-90a5-ce1a8b0cdb9c).</span></span> <span data-ttu-id="36b46-1351">区域性名称遵循由定义的标准[BCP 47](https://tools.ietf.org/html/bcp47)。</span><span class="sxs-lookup"><span data-stu-id="36b46-1351">Culture names follow the standard defined by [BCP 47](https://tools.ietf.org/html/bcp47).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.ToString" />
        <altmember cref="P:System.Globalization.CultureInfo.Name" />
      </Docs>
    </Member>
    <Member MemberName="TwoLetterISOLanguageName">
      <MemberSignature Language="C#" Value="public virtual string TwoLetterISOLanguageName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TwoLetterISOLanguageName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.TwoLetterISOLanguageName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property TwoLetterISOLanguageName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ TwoLetterISOLanguageName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TwoLetterISOLanguageName : string" Usage="System.Globalization.CultureInfo.TwoLetterISOLanguageName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36b46-1352">获取当前 <see cref="T:System.Globalization.CultureInfo" /> 的语言的由两个字母构成的 ISO 639-1 代码。</span><span class="sxs-lookup"><span data-stu-id="36b46-1352">Gets the ISO 639-1 two-letter code for the language of the current <see cref="T:System.Globalization.CultureInfo" />.</span></span></summary>
        <value><span data-ttu-id="36b46-1353">当前 <see cref="T:System.Globalization.CultureInfo" /> 的语言的由两个字母构成的 ISO 639-1 代码。</span><span class="sxs-lookup"><span data-stu-id="36b46-1353">The ISO 639-1 two-letter code for the language of the current <see cref="T:System.Globalization.CultureInfo" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36b46-1354">例如，英语的两字母缩写形式为"en"。</span><span class="sxs-lookup"><span data-stu-id="36b46-1354">For example, the two-letter abbreviation for English is "en".</span></span> <span data-ttu-id="36b46-1355"><xref:System.Globalization.CultureInfo.TwoLetterISOLanguageName%2A>用于固定区域性的属性值为"iv"。</span><span class="sxs-lookup"><span data-stu-id="36b46-1355">The <xref:System.Globalization.CultureInfo.TwoLetterISOLanguageName%2A> property value for the invariant culture is "iv".</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="36b46-1356">当进程之间通信或保存数据通常是更好地为使用完整<xref:System.Globalization.CultureInfo.Name%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="36b46-1356">When communicating between processes or persisting data it is usually better to use the full <xref:System.Globalization.CultureInfo.Name%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="36b46-1357">使用只包含语言可能会丢失上下文和数据。</span><span class="sxs-lookup"><span data-stu-id="36b46-1357">Using just the language can lose context and data.</span></span>  
  
 <span data-ttu-id="36b46-1358">如果 ISO 639-1 未定义特定区域性的两个字母的语言代码<xref:System.Globalization.CultureInfo.TwoLetterISOLanguageName%2A>属性将返回三个或多个字母组成的字符串。</span><span class="sxs-lookup"><span data-stu-id="36b46-1358">If ISO 639-1 does not define a two-letter language code for a particular culture, the <xref:System.Globalization.CultureInfo.TwoLetterISOLanguageName%2A> property returns a string that consists of three or more letters.</span></span> <span data-ttu-id="36b46-1359">有关详细信息，请参阅示例。</span><span class="sxs-lookup"><span data-stu-id="36b46-1359">For more information, see the example.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36b46-1360">以下示例列出了区域性其<xref:System.Globalization.CultureInfo.TwoLetterISOLanguageName%2A>属性不是两个字母的语言代码组成。</span><span class="sxs-lookup"><span data-stu-id="36b46-1360">The following example lists the cultures whose <xref:System.Globalization.CultureInfo.TwoLetterISOLanguageName%2A> property does not consist of a two-letter language code.</span></span>  
  
 [!code-csharp[System.Globalization.CultureInfo.TwoLetterISOLanguageName#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.twoletterisolanguagename/cs/twoletterisolanguagename1.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.TwoLetterISOLanguageName#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.twoletterisolanguagename/vb/twoletterisolanguagename1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CultureInfo.Name" />
        <altmember cref="P:System.Globalization.CultureInfo.DisplayName" />
        <altmember cref="P:System.Globalization.CultureInfo.NativeName" />
        <altmember cref="P:System.Globalization.CultureInfo.EnglishName" />
        <altmember cref="P:System.Globalization.CultureInfo.ThreeLetterISOLanguageName" />
        <altmember cref="P:System.Globalization.CultureInfo.ThreeLetterWindowsLanguageName" />
      </Docs>
    </Member>
    <Member MemberName="UseUserOverride">
      <MemberSignature Language="C#" Value="public bool UseUserOverride { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseUserOverride" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.UseUserOverride" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UseUserOverride As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseUserOverride { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.UseUserOverride : bool" Usage="System.Globalization.CultureInfo.UseUserOverride" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36b46-1361">获取一个值，该值指示当前 <see cref="T:System.Globalization.CultureInfo" /> 对象是否使用用户选定的区域性设置。</span><span class="sxs-lookup"><span data-stu-id="36b46-1361">Gets a value indicating whether the current <see cref="T:System.Globalization.CultureInfo" /> object uses the user-selected culture settings.</span></span></summary>
        <value><span data-ttu-id="36b46-1362">如果当前 <see cref="T:System.Globalization.CultureInfo" /> 使用用户选定的区域性设置，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="36b46-1362"><see langword="true" /> if the current <see cref="T:System.Globalization.CultureInfo" /> uses the user-selected culture settings; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36b46-1363">用户可以选择重写一些与 Windows 通过控制面板的区域和语言选项部分的当前区域性关联的值。</span><span class="sxs-lookup"><span data-stu-id="36b46-1363">The user might choose to override some of the values associated with the current culture of Windows through the regional and language options portion of Control Panel.</span></span> <span data-ttu-id="36b46-1364">例如，用户可以选择以不同格式显示日期，或使用一种货币而不是默认区域性。</span><span class="sxs-lookup"><span data-stu-id="36b46-1364">For example, the user might choose to display the date in a different format or to use a currency other than the default for the culture.</span></span>  
  
 <span data-ttu-id="36b46-1365">如果<xref:System.Globalization.CultureInfo.UseUserOverride%2A>是`true`和指定的区域性匹配的 Windows，当前区域性<xref:System.Globalization.CultureInfo>使用这些重写值，其中包括用户设置的属性<xref:System.Globalization.DateTimeFormatInfo>返回实例<xref:System.Globalization.CultureInfo.DateTimeFormat%2A>属性，和的属性<xref:System.Globalization.NumberFormatInfo>返回实例<xref:System.Globalization.CultureInfo.NumberFormat%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="36b46-1365">If <xref:System.Globalization.CultureInfo.UseUserOverride%2A> is `true` and the specified culture matches the current culture of Windows, the <xref:System.Globalization.CultureInfo> uses those overrides, including user settings for the properties of the <xref:System.Globalization.DateTimeFormatInfo> instance returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> property, and the properties of the <xref:System.Globalization.NumberFormatInfo> instance returned by the <xref:System.Globalization.CultureInfo.NumberFormat%2A> property.</span></span> <span data-ttu-id="36b46-1366">如果用户设置与不兼容与关联的区域性<xref:System.Globalization.CultureInfo>，例如，如果在所选的日历不是之一<xref:System.Globalization.CultureInfo.OptionalCalendars%2A>，方法的结果和属性的值是不确定。</span><span class="sxs-lookup"><span data-stu-id="36b46-1366">If the user settings are incompatible with the culture associated with the <xref:System.Globalization.CultureInfo>, for example, if the selected calendar is not one of the <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>, the results of the methods and the values of the properties are undefined.</span></span>  
  
 <span data-ttu-id="36b46-1367">当设置此属性<xref:System.Globalization.CultureInfo>创建。</span><span class="sxs-lookup"><span data-stu-id="36b46-1367">This property is set when the <xref:System.Globalization.CultureInfo> is created.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>