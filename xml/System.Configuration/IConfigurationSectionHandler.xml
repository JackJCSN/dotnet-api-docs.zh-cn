<Type Name="IConfigurationSectionHandler" FullName="System.Configuration.IConfigurationSectionHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0070a33fc78fb074819674571ea46fd6610805de" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69378297" /></Metadata><TypeSignature Language="C#" Value="public interface IConfigurationSectionHandler" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IConfigurationSectionHandler" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.IConfigurationSectionHandler" />
  <TypeSignature Language="VB.NET" Value="Public Interface IConfigurationSectionHandler" />
  <TypeSignature Language="C++ CLI" Value="public interface class IConfigurationSectionHandler" />
  <TypeSignature Language="F#" Value="type IConfigurationSectionHandler = interface" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>处理对特定的配置节的访问。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  

 > [!IMPORTANT]
 > <xref:System.Configuration.IConfigurationSectionHandler>.NET Framework 2.0 及更高版本中已弃用。 但由于它是在内部使用的, 因此已将其保留。 [有关示例, 请参阅如何:使用 IConfigurationSectionHandler](https://msdn.microsoft.com/library/07f68a3f-2920-4665-a824-47bda744e662)创建自定义配置节。 如果使用上面的示例, 请使用 .NET Framework 版本1.0 或1.1 生成它。  
  
 在 .NET Framework 版本2.0 及更高版本中, 必须改为<xref:System.Configuration.ConfigurationSection>从类派生以实现相关的配置节处理程序。 [有关示例, 请参阅如何:使用 ConfigurationSection](https://msdn.microsoft.com/library/febaca98-c727-4017-95ed-82e2fb6cf234)创建自定义配置节。  
  
 <xref:System.Configuration.IConfigurationSectionHandler>类的实例必须是线程安全的, 并且是无状态的。 此<xref:System.Configuration.IConfigurationSectionHandler.Create%2A>方法必须可同时从多个线程调用。  
  
 而且, 由<xref:System.Configuration.IConfigurationSectionHandler.Create%2A>方法生成的配置对象必须是线程安全且不可变的。 由于配置对象由配置系统进行缓存, 因此不需要修改<xref:System.Configuration.IConfigurationSectionHandler.Create%2A>方法的父参数, 这一点很重要。 例如, 如果的<xref:System.Configuration.IConfigurationSectionHandler.Create%2A>返回值仅是对父级的小修改, 则必须对父项 (而不是原始副本) 进行实际修改。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public object Create (object parent, object configContext, System.Xml.XmlNode section);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Create(object parent, object configContext, class System.Xml.XmlNode section) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IConfigurationSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)" />
      <MemberSignature Language="VB.NET" Value="Public Function Create (parent As Object, configContext As Object, section As XmlNode) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Create(System::Object ^ parent, System::Object ^ configContext, System::Xml::XmlNode ^ section);" />
      <MemberSignature Language="F#" Value="abstract member Create : obj * obj * System.Xml.XmlNode -&gt; obj" Usage="iConfigurationSectionHandler.Create (parent, configContext, section)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parent" Type="System.Object" />
        <Parameter Name="configContext" Type="System.Object" />
        <Parameter Name="section" Type="System.Xml.XmlNode" />
      </Parameters>
      <Docs>
        <param name="parent">父对象。</param>
        <param name="configContext">配置上下文对象。</param>
        <param name="section">部分 XML 节点。</param>
        <summary>创建配置节处理程序。</summary>
        <returns>创建的节处理程序对象。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Configuration.IConfigurationSectionHandler>类的实例必须是线程安全的, 并且是无状态的。 此<xref:System.Configuration.IConfigurationSectionHandler.Create%2A>方法必须可同时从多个线程调用。  
  
 而且, 由<xref:System.Configuration.IConfigurationSectionHandler.Create%2A>方法生成的配置对象必须是线程安全且不可变的。 由于配置对象由配置系统进行缓存, 因此不应将父自变量修改为<xref:System.Configuration.IConfigurationSectionHandler.Create%2A>。 例如, 如果的<xref:System.Configuration.IConfigurationSectionHandler.Create%2A>返回值仅是对父级的小修改, 则必须对父项 (而不是原始副本) 进行实际修改。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Configuration.ConfigurationSection" />
        <related type="Article" href="https://msdn.microsoft.com/library/febaca98-c727-4017-95ed-82e2fb6cf234">如何：使用 ConfigurationSection 创建自定义配置节</related>
        <related type="Article" href="https://msdn.microsoft.com/library/07f68a3f-2920-4665-a824-47bda744e662">如何：使用 IConfigurationSectionHandler 创建自定义配置节</related>
      </Docs>
    </Member>
  </Members>
</Type>
