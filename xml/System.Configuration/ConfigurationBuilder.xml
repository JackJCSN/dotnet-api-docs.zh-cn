<Type Name="ConfigurationBuilder" FullName="System.Configuration.ConfigurationBuilder">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3d0642f468b41f9fad8d00d56e2e3f73220e8ad0" /><Meta Name="ms.sourcegitcommit" Value="1bb00d2f4343e73ae8d58668f02297a3cf10a4c1" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="06/15/2019" /><Meta Name="ms.locfileid" Value="63865580" /></Metadata><TypeSignature Language="C#" Value="public abstract class ConfigurationBuilder : System.Configuration.Provider.ProviderBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ConfigurationBuilder extends System.Configuration.Provider.ProviderBase" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.ConfigurationBuilder" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ConfigurationBuilder&#xA;Inherits ProviderBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConfigurationBuilder abstract : System::Configuration::Provider::ProviderBase" />
  <TypeSignature Language="F#" Value="type ConfigurationBuilder = class&#xA;    inherit ProviderBase" />
  <AssemblyInfo>
    <AssemblyName>System.Configuration</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.Provider.ProviderBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>表示将由自定义配置生成器实现扩展的基类。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

  ## Remarks
  派生此类，以从你想要使用.NET Framework 应用程序使用标准中的外部源读取配置<xref:System.Configuration.ConfigurationManager>API。 若要从环境变量、 Azure 密钥保管库和许多其他源中读取在 NuGet.org 上可用 ConfigurationBuilders。

  从 NuGet.org 提供了几个 ConfigurationBuilders 的实现：
  
  - [EnvironmentConfigBuilder](https://www.nuget.org/packages/Microsoft.Configuration.ConfigurationBuilders.Environment/) -读取环境变量。
  - [AzureKeyVaultConfigBuilder](https://www.nuget.org/packages/Microsoft.Configuration.ConfigurationBuilders.Azure/) -从 Azure 密钥保管库中读取。
  - [UserSecretsConfigBuilder](https://www.nuget.org/packages/Microsoft.Configuration.ConfigurationBuilders.UserSecrets/) -读取 usersecrets 文件在磁盘上，类似于 ASP.NET Core 功能。
  - [SimpleJsonConfigBuilder](https://www.nuget.org/packages/Microsoft.Configuration.ConfigurationBuilders.Json/) -从 JSON 文件中读取。

  ## Examples
  下面的示例演示如何实现简单 ConfigurationBuilder 读取环境变量： 

  [!code-csharp[System.Configuration.ConfigurationBuilder](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationBuilder/CS/SampleConfigurationBuilder.cs)]
  [!code-vb[System.Configuration.ConfigurationBuilder](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationBuilder/vb/SampleConfigurationBuilder.vb)]

  下面的示例摘自配置文件适用于前面的示例。 这适用于的 appSettings 配置的环境变量，并使这些值下提供<xref:System.Configuration.ConfigurationManager.AppSettings?displayProperty=nameWithType>。

  ```xml
  <!-- To declare and use Configuration Builders in your configuration chain, update your app.config or web.config file as follows:  -->

  <configSections>
    <section name="configBuilders" type="System.Configuration.ConfigurationBuildersSection, System.Configuration, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" restartOnExternalChanges="false" requirePermission="false"/>
  </configSections>

  <configBuilders>
    <builders>
      <add name="SampleConfigurationBuilder" type="CustomConfigBuilders.MyConfigBuilder, CustomConfigBuilders" />
    </builders>
  </configBuilders>

  <!-- To apply Configuration Builders to a configuration section, use the 'configBuilders' tag as follows:  -->
  <appSettings configBuilders="SampleConfigurationBuilder">
    <add key="COMPUTERNAME" value="Will Be Replaced by EnvironmentVariable" />
  </appSettings>
  ```    
      ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ConfigurationBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ConfigurationBuilder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Configuration.ConfigurationBuilder" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessConfigurationSection">
      <MemberSignature Language="C#" Value="public virtual System.Configuration.ConfigurationSection ProcessConfigurationSection (System.Configuration.ConfigurationSection configSection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Configuration.ConfigurationSection ProcessConfigurationSection(class System.Configuration.ConfigurationSection configSection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationBuilder.ProcessConfigurationSection(System.Configuration.ConfigurationSection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ProcessConfigurationSection (configSection As ConfigurationSection) As ConfigurationSection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Configuration::ConfigurationSection ^ ProcessConfigurationSection(System::Configuration::ConfigurationSection ^ configSection);" />
      <MemberSignature Language="F#" Value="abstract member ProcessConfigurationSection : System.Configuration.ConfigurationSection -&gt; System.Configuration.ConfigurationSection&#xA;override this.ProcessConfigurationSection : System.Configuration.ConfigurationSection -&gt; System.Configuration.ConfigurationSection" Usage="configurationBuilder.ProcessConfigurationSection configSection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationSection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configSection" Type="System.Configuration.ConfigurationSection" />
      </Parameters>
      <Docs>
        <param name="configSection">要处理的 <see cref="T:System.Configuration.ConfigurationSection" />。</param>
        <summary>接受配置系统中的 <see cref="T:System.Configuration.ConfigurationSection" /> 对象，并返回一个修改后的或新的 <see cref="T:System.Configuration.ConfigurationSection" /> 对象供将来使用。</summary>
        <returns>已处理的 <see cref="T:System.Configuration.ConfigurationSection" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessRawXml">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode ProcessRawXml (System.Xml.XmlNode rawXml);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNode ProcessRawXml(class System.Xml.XmlNode rawXml) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationBuilder.ProcessRawXml(System.Xml.XmlNode)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ProcessRawXml (rawXml As XmlNode) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNode ^ ProcessRawXml(System::Xml::XmlNode ^ rawXml);" />
      <MemberSignature Language="F#" Value="abstract member ProcessRawXml : System.Xml.XmlNode -&gt; System.Xml.XmlNode&#xA;override this.ProcessRawXml : System.Xml.XmlNode -&gt; System.Xml.XmlNode" Usage="configurationBuilder.ProcessRawXml rawXml" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawXml" Type="System.Xml.XmlNode" />
      </Parameters>
      <Docs>
        <param name="rawXml">要处理的 <see cref="T:System.Xml.XmlNode" />。</param>
        <summary>接受表示配置文件中的原始配置节的 <see cref="T:System.Xml.XmlNode" />，并返回修改后的或新的 <see cref="T:System.Xml.XmlNode" /> 供将来使用。</summary>
        <returns>已处理的 <see cref="T:System.Xml.XmlNode" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>