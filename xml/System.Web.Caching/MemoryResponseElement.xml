<Type Name="MemoryResponseElement" FullName="System.Web.Caching.MemoryResponseElement">
  <Metadata><Meta Name="ms.openlocfilehash" Value="75b0e9a6477a08b4803edbca1c4a8380c4e51028" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70631769" /></Metadata><TypeSignature Language="C#" Value="public class MemoryResponseElement : System.Web.Caching.ResponseElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit MemoryResponseElement extends System.Web.Caching.ResponseElement" />
  <TypeSignature Language="DocId" Value="T:System.Web.Caching.MemoryResponseElement" />
  <TypeSignature Language="VB.NET" Value="Public Class MemoryResponseElement&#xA;Inherits ResponseElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class MemoryResponseElement : System::Web::Caching::ResponseElement" />
  <TypeSignature Language="F#" Value="type MemoryResponseElement = class&#xA;    inherit ResponseElement" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Caching.ResponseElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>表示存储在内存中的输出缓存项一部分。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Caching.MemoryResponseElement>对象中的输出缓存响应作为字节数组存储在内存中。 数组可包含全部或部分输出缓存响应。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MemoryResponseElement (byte[] buffer, long length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] buffer, int64 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.MemoryResponseElement.#ctor(System.Byte[],System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (buffer As Byte(), length As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MemoryResponseElement(cli::array &lt;System::Byte&gt; ^ buffer, long length);" />
      <MemberSignature Language="F#" Value="new System.Web.Caching.MemoryResponseElement : byte[] * int64 -&gt; System.Web.Caching.MemoryResponseElement" Usage="new System.Web.Caching.MemoryResponseElement (buffer, length)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="length" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="buffer">包含输出缓存响应一部分的字节数组。</param>
        <param name="length"><paramref name="buffer" /> 中数组的大小。</param>
        <summary>初始化 <see cref="T:System.Web.Caching.MemoryResponseElement" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 的`buffer`值不得为`null`，但它可以是长度为零的数组。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="buffer" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="length" /> 小于零，或者大于 <paramref name="buffer" /> 的大小。</exception>
      </Docs>
    </Member>
    <Member MemberName="Buffer">
      <MemberSignature Language="C#" Value="public byte[] Buffer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Buffer" />
      <MemberSignature Language="DocId" Value="P:System.Web.Caching.MemoryResponseElement.Buffer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Buffer As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ Buffer { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Buffer : byte[]" Usage="System.Web.Caching.MemoryResponseElement.Buffer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取包含整个或部分输出缓存响应的数组。</summary>
        <value>字节对象的数组。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Caching.MemoryResponseElement.Buffer%2A>属性的值不能`null`为，但它可以是长度为零的数组。 如果<xref:System.Web.Caching.MemoryResponseElement.Buffer%2A>属性为 `null` ，则 <xref:System.Web.Caching.MemoryResponseElement>构造函数引发。 <xref:System.ArgumentNullException> 如果属性小于零或大于<xref:System.Web.Caching.MemoryResponseElement.Buffer%2A>属性值的大小，则为。 <xref:System.Web.Caching.MemoryResponseElement.Length%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public long Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Length" />
      <MemberSignature Language="DocId" Value="P:System.Web.Caching.MemoryResponseElement.Length" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Length As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long Length { long get(); };" />
      <MemberSignature Language="F#" Value="member this.Length : int64" Usage="System.Web.Caching.MemoryResponseElement.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="P:System.Web.Caching.MemoryResponseElement.Buffer" /> 属性引用的数组的大小。</summary>
        <value>数组大小。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET 创建的对象是一个固定大小的内存缓冲区，它是从内存缓冲区池创建的。 <xref:System.Web.Caching.MemoryResponseElement> 因此， <xref:System.Web.Caching.MemoryResponseElement>对象的内容通常不会完全<xref:System.Web.Caching.MemoryResponseElement.Buffer%2A>填充数组。 通常， <xref:System.Web.Caching.MemoryResponseElement.Buffer%2A>只有部分数组包含响应数据。 因此，直接序列化<xref:System.Web.Caching.MemoryResponseElement.Buffer%2A>数组的提供程序（而不是序列化输出缓存中存储的完整类型）必须<xref:System.Web.Caching.MemoryResponseElement.Length%2A>使用属性来<xref:System.Web.Caching.MemoryResponseElement.Buffer%2A>确定必须存储数组的多少。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
