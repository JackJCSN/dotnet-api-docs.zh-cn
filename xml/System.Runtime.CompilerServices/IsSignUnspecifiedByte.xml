<Type Name="IsSignUnspecifiedByte" FullName="System.Runtime.CompilerServices.IsSignUnspecifiedByte">
  <Metadata><Meta Name="ms.openlocfilehash" Value="07fe670ad91090796138075c3979be57e33fda71" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70425493" /></Metadata><TypeSignature Language="C#" Value="public static class IsSignUnspecifiedByte" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit IsSignUnspecifiedByte extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.CompilerServices.IsSignUnspecifiedByte" />
  <TypeSignature Language="VB.NET" Value="Public Class IsSignUnspecifiedByte" />
  <TypeSignature Language="C++ CLI" Value="public ref class IsSignUnspecifiedByte abstract sealed" />
  <TypeSignature Language="F#" Value="type IsSignUnspecifiedByte = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.CompilerServices.VisualC</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>指示修饰符既非有符号，也非无符号。 此类不能被继承。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 某些编程语言（例如C++）可识别三个不同`char`的值： `unsigned char` `signed char`、和`char`。  为了将未修改`char`的类型与其他类型区分开来C++ ，Microsoft 编译器<xref:System.Runtime.CompilerServices.IsSignUnspecifiedByte>将修饰符添加`char`到发出到程序集的每个类型。  
  
 编译器在元数据中发出自定义修饰符，以更改当默认行为不合适时实时（JIT）编译器处理值的方式。  当 JIT 编译器遇到自定义修饰符时，它将按修饰符指定的方式处理值。  编译器可以对方法、参数和返回值应用自定义修饰符。  JIT 编译器必须响应所需的修饰符，但可以忽略可选修饰符。  
  
 可以使用以下方法之一将自定义修饰符发送到元数据中：  
  
-   使用类中的<xref:System.Reflection.Emit.TypeBuilder>方法<xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A>，例如、 <xref:System.Reflection.Emit.TypeBuilder.DefineField%2A> <xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A>、和<xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A>。  
  
-   生成包含对`modopt`和`modreq`的调用的 Microsoft 中间语言（MSIL）指令文件，并使用[Ilasm （IL 汇编程序）](~/docs/framework/tools/ilasm-exe-il-assembler.md)汇编文件。  
  
-   使用非托管反射 API。  
  
   
  
## Examples  
 下面的代码示例使用<xref:System.Reflection.Emit>命名空间中的类创建一个程序集，并将<xref:System.Runtime.CompilerServices.IsSignUnspecifiedByte>修饰符发送到该程序集。  
  
 [!code-cpp[Runtime.CompilerServices.IsSignUnspecifiedByte#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.CompilerServices.IsSignUnspecifiedByte/cpp/sample.cpp#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members />
</Type>
