<Type Name="Utf8Parser" FullName="System.Buffers.Text.Utf8Parser">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9d46ffc198524bd466f660e29a8831cb5128a44c" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70562608" /></Metadata><TypeSignature Language="C#" Value="public static class Utf8Parser" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Utf8Parser extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Buffers.Text.Utf8Parser" />
  <TypeSignature Language="VB.NET" Value="Public Class Utf8Parser" />
  <TypeSignature Language="C++ CLI" Value="public ref class Utf8Parser abstract sealed" />
  <TypeSignature Language="F#" Value="type Utf8Parser = class" />
  <AssemblyInfo>
    <AssemblyName>System.Memory</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="d1de3-101">提供用于将 Utf8 字符串分析为常见数据类型的静态方法。</span><span class="sxs-lookup"><span data-stu-id="d1de3-101">Provides static methods to parse Utf8 strings to common data types.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out bool value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] bool&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.Boolean@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As Boolean, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; *  *  * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Boolean" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="d1de3-102">要分析的 Utf8 字符串。</span><span class="sxs-lookup"><span data-stu-id="d1de3-102">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="d1de3-103">当方法返回时，如果分析操作成功，则包含从 <paramref name="source" /> 分析的值。</span><span class="sxs-lookup"><span data-stu-id="d1de3-103">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="d1de3-104">当方法返回时，如果分析操作成功，则包含已分析的子字符串的字节长度。</span><span class="sxs-lookup"><span data-stu-id="d1de3-104">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="d1de3-105">如果方法失败，则 <paramref name="bytesConsumed" /> 设置为 0。</span><span class="sxs-lookup"><span data-stu-id="d1de3-105">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="d1de3-106">Utf8 字符串的预期格式。</span><span class="sxs-lookup"><span data-stu-id="d1de3-106">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="d1de3-107">分析 Utf8 字符串开头的 <see cref="T:System.Boolean" />。</span><span class="sxs-lookup"><span data-stu-id="d1de3-107">Parses a <see cref="T:System.Boolean" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="d1de3-108">如果成功，则为 <see langword="true" />；如果字符串在语法上无效或者出现溢出或下溢，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d1de3-108"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="d1de3-109">支持的格式：</span><span class="sxs-lookup"><span data-stu-id="d1de3-109">Formats supported:</span></span> 

|<span data-ttu-id="d1de3-110">格式字符串</span><span class="sxs-lookup"><span data-stu-id="d1de3-110">Format string</span></span>|<span data-ttu-id="d1de3-111">示例格式应为</span><span class="sxs-lookup"><span data-stu-id="d1de3-111">Example expected format</span></span>|
|--|--|
|<span data-ttu-id="d1de3-112">G （默认值）</span><span class="sxs-lookup"><span data-stu-id="d1de3-112">G (default)</span></span>|<span data-ttu-id="d1de3-113">True/False</span><span class="sxs-lookup"><span data-stu-id="d1de3-113">True/False</span></span>|
|<span data-ttu-id="d1de3-114">l</span><span class="sxs-lookup"><span data-stu-id="d1de3-114">l</span></span>|<span data-ttu-id="d1de3-115">true/false</span><span class="sxs-lookup"><span data-stu-id="d1de3-115">true/false</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out byte value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] unsigned int8&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.Byte@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As Byte, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; *  *  * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Byte" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="d1de3-116">要分析的 Utf8 字符串。</span><span class="sxs-lookup"><span data-stu-id="d1de3-116">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="d1de3-117">当方法返回时，如果分析操作成功，则包含从 <paramref name="source" /> 分析的值。</span><span class="sxs-lookup"><span data-stu-id="d1de3-117">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="d1de3-118">当方法返回时，如果分析操作成功，则包含已分析的子字符串的字节长度。</span><span class="sxs-lookup"><span data-stu-id="d1de3-118">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="d1de3-119">如果方法失败，则 <paramref name="bytesConsumed" /> 设置为 0。</span><span class="sxs-lookup"><span data-stu-id="d1de3-119">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="d1de3-120">Utf8 字符串的预期格式。</span><span class="sxs-lookup"><span data-stu-id="d1de3-120">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="d1de3-121">分析 Utf8 字符串开头的 <see cref="T:System.Byte" />。</span><span class="sxs-lookup"><span data-stu-id="d1de3-121">Parses a <see cref="T:System.Byte" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="d1de3-122">如果成功，则为 <see langword="true" />；如果字符串在语法上无效或者出现溢出或下溢，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d1de3-122"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="d1de3-123">支持的格式：</span><span class="sxs-lookup"><span data-stu-id="d1de3-123">Formats supported:</span></span> 

|<span data-ttu-id="d1de3-124">格式字符串</span><span class="sxs-lookup"><span data-stu-id="d1de3-124">Format string</span></span>|<span data-ttu-id="d1de3-125">示例格式应为</span><span class="sxs-lookup"><span data-stu-id="d1de3-125">Example expected format</span></span>|
|--|--|
|<span data-ttu-id="d1de3-126">G/g （默认值）</span><span class="sxs-lookup"><span data-stu-id="d1de3-126">G/g (default)</span></span>| |
|<span data-ttu-id="d1de3-127">D/d</span><span class="sxs-lookup"><span data-stu-id="d1de3-127">D/d</span></span>|<span data-ttu-id="d1de3-128">122</span><span class="sxs-lookup"><span data-stu-id="d1de3-128">122</span></span>|
|<span data-ttu-id="d1de3-129">N/n</span><span class="sxs-lookup"><span data-stu-id="d1de3-129">N/n</span></span>|<span data-ttu-id="d1de3-130">122</span><span class="sxs-lookup"><span data-stu-id="d1de3-130">122</span></span>|       
|<span data-ttu-id="d1de3-131">X/x</span><span class="sxs-lookup"><span data-stu-id="d1de3-131">X/x</span></span>|<span data-ttu-id="d1de3-132">7a</span><span class="sxs-lookup"><span data-stu-id="d1de3-132">7a</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out DateTime value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] valuetype System.DateTime&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.DateTime@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As DateTime, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; *  *  * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.DateTime" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="d1de3-133">要分析的 Utf8 字符串。</span><span class="sxs-lookup"><span data-stu-id="d1de3-133">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="d1de3-134">当方法返回时，如果分析操作成功，则包含从 <paramref name="source" /> 分析的值。</span><span class="sxs-lookup"><span data-stu-id="d1de3-134">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="d1de3-135">当方法返回时，如果分析操作成功，则包含已分析的子字符串的字节长度。</span><span class="sxs-lookup"><span data-stu-id="d1de3-135">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="d1de3-136">如果方法失败，则 <paramref name="bytesConsumed" /> 设置为 0。</span><span class="sxs-lookup"><span data-stu-id="d1de3-136">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="d1de3-137">Utf8 字符串的预期格式。</span><span class="sxs-lookup"><span data-stu-id="d1de3-137">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="d1de3-138">分析 Utf8 字符串开头的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="d1de3-138">Parses a <see cref="T:System.DateTime" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="d1de3-139">如果成功，则为 <see langword="true" />；如果字符串在语法上无效或者出现溢出或下溢，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d1de3-139"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="d1de3-140">支持的格式：</span><span class="sxs-lookup"><span data-stu-id="d1de3-140">Formats supported:</span></span>

|<span data-ttu-id="d1de3-141">格式字符串</span><span class="sxs-lookup"><span data-stu-id="d1de3-141">Format string</span></span>|<span data-ttu-id="d1de3-142">示例格式应为</span><span class="sxs-lookup"><span data-stu-id="d1de3-142">Example expected format</span></span>|<span data-ttu-id="d1de3-143">注释</span><span class="sxs-lookup"><span data-stu-id="d1de3-143">Comments</span></span>|
|--|--|--|
|<span data-ttu-id="d1de3-144">G （默认值）</span><span class="sxs-lookup"><span data-stu-id="d1de3-144">G  (default)</span></span>|<span data-ttu-id="d1de3-145">05/25/2017 10:30:15</span><span class="sxs-lookup"><span data-stu-id="d1de3-145">05/25/2017 10:30:15</span></span>| |
|<span data-ttu-id="d1de3-146">R</span><span class="sxs-lookup"><span data-stu-id="d1de3-146">R</span></span>|<span data-ttu-id="d1de3-147">周二，03月 2017 08:08:05 GMT</span><span class="sxs-lookup"><span data-stu-id="d1de3-147">Tue, 03 Jan 2017 08:08:05 GMT</span></span>|<span data-ttu-id="d1de3-148">（RFC 1123）</span><span class="sxs-lookup"><span data-stu-id="d1de3-148">(RFC 1123)</span></span>|
|<span data-ttu-id="d1de3-149">l</span><span class="sxs-lookup"><span data-stu-id="d1de3-149">l</span></span>|<span data-ttu-id="d1de3-150">周二，03月 2017 08:08:05 gmt</span><span class="sxs-lookup"><span data-stu-id="d1de3-150">tue, 03 jan 2017 08:08:05 gmt</span></span>|<span data-ttu-id="d1de3-151">（小写 RFC 1123）</span><span class="sxs-lookup"><span data-stu-id="d1de3-151">(Lowercase RFC 1123)</span></span>|
|<span data-ttu-id="d1de3-152">O</span><span class="sxs-lookup"><span data-stu-id="d1de3-152">O</span></span>|<span data-ttu-id="d1de3-153">2017-06-12T05：30： 45.7680000-07：00</span><span class="sxs-lookup"><span data-stu-id="d1de3-153">2017-06-12T05:30:45.7680000-07:00</span></span>|<span data-ttu-id="d1de3-154">（往返）</span><span class="sxs-lookup"><span data-stu-id="d1de3-154">(Round-trippable)</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out DateTimeOffset value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] valuetype System.DateTimeOffset&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.DateTimeOffset@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As DateTimeOffset, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; *  *  * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.DateTimeOffset" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="d1de3-155">要分析的 Utf8 字符串。</span><span class="sxs-lookup"><span data-stu-id="d1de3-155">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="d1de3-156">当方法返回时，如果分析操作成功，则包含从 <paramref name="source" /> 分析的值。</span><span class="sxs-lookup"><span data-stu-id="d1de3-156">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="d1de3-157">当方法返回时，如果分析操作成功，则包含已分析的子字符串的字节长度。</span><span class="sxs-lookup"><span data-stu-id="d1de3-157">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="d1de3-158">如果方法失败，则 <paramref name="bytesConsumed" /> 设置为 0。</span><span class="sxs-lookup"><span data-stu-id="d1de3-158">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="d1de3-159">Utf8 字符串的预期格式。</span><span class="sxs-lookup"><span data-stu-id="d1de3-159">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="d1de3-160">分析 Utf8 字符串开头的 <see cref="T:System.DateTimeOffset" />。</span><span class="sxs-lookup"><span data-stu-id="d1de3-160">Parses a <see cref="T:System.DateTimeOffset" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="d1de3-161">如果成功，则为 <see langword="true" />；如果字符串在语法上无效或者出现溢出或下溢，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d1de3-161"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="d1de3-162">支持的格式：</span><span class="sxs-lookup"><span data-stu-id="d1de3-162">Formats supported:</span></span>

|<span data-ttu-id="d1de3-163">格式字符串</span><span class="sxs-lookup"><span data-stu-id="d1de3-163">Format string</span></span>|<span data-ttu-id="d1de3-164">示例格式应为</span><span class="sxs-lookup"><span data-stu-id="d1de3-164">Example expected format</span></span>|<span data-ttu-id="d1de3-165">注释</span><span class="sxs-lookup"><span data-stu-id="d1de3-165">Comments</span></span>|
|--|--|--|
|<span data-ttu-id="d1de3-166">G （默认值）</span><span class="sxs-lookup"><span data-stu-id="d1de3-166">G  (default)</span></span>|<span data-ttu-id="d1de3-167">05/25/2017 10:30:15</span><span class="sxs-lookup"><span data-stu-id="d1de3-167">05/25/2017 10:30:15</span></span>| |
|<span data-ttu-id="d1de3-168">R</span><span class="sxs-lookup"><span data-stu-id="d1de3-168">R</span></span>|<span data-ttu-id="d1de3-169">周二，03月 2017 08:08:05 GMT</span><span class="sxs-lookup"><span data-stu-id="d1de3-169">Tue, 03 Jan 2017 08:08:05 GMT</span></span>|<span data-ttu-id="d1de3-170">（RFC 1123）</span><span class="sxs-lookup"><span data-stu-id="d1de3-170">(RFC 1123)</span></span>|
|<span data-ttu-id="d1de3-171">l</span><span class="sxs-lookup"><span data-stu-id="d1de3-171">l</span></span>|<span data-ttu-id="d1de3-172">周二，03月 2017 08:08:05 gmt</span><span class="sxs-lookup"><span data-stu-id="d1de3-172">tue, 03 jan 2017 08:08:05 gmt</span></span>|<span data-ttu-id="d1de3-173">（小写 RFC 1123）</span><span class="sxs-lookup"><span data-stu-id="d1de3-173">(Lowercase RFC 1123)</span></span>|
|<span data-ttu-id="d1de3-174">O</span><span class="sxs-lookup"><span data-stu-id="d1de3-174">O</span></span>|<span data-ttu-id="d1de3-175">2017-06-12T05：30： 45.7680000-07：00</span><span class="sxs-lookup"><span data-stu-id="d1de3-175">2017-06-12T05:30:45.7680000-07:00</span></span>|<span data-ttu-id="d1de3-176">（往返）</span><span class="sxs-lookup"><span data-stu-id="d1de3-176">(Round-trippable)</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out decimal value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] valuetype System.Decimal&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.Decimal@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As Decimal, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; *  *  * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Decimal" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="d1de3-177">要分析的 Utf8 字符串。</span><span class="sxs-lookup"><span data-stu-id="d1de3-177">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="d1de3-178">当方法返回时，如果分析操作成功，则包含从 <paramref name="source" /> 分析的值。</span><span class="sxs-lookup"><span data-stu-id="d1de3-178">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="d1de3-179">当方法返回时，如果分析操作成功，则包含已分析的子字符串的字节长度。</span><span class="sxs-lookup"><span data-stu-id="d1de3-179">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="d1de3-180">如果方法失败，则 <paramref name="bytesConsumed" /> 设置为 0。</span><span class="sxs-lookup"><span data-stu-id="d1de3-180">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="d1de3-181">Utf8 字符串的预期格式。</span><span class="sxs-lookup"><span data-stu-id="d1de3-181">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="d1de3-182">分析 Utf8 字符串开头的 <see cref="T:System.Decimal" />。</span><span class="sxs-lookup"><span data-stu-id="d1de3-182">Parses a <see cref="T:System.Decimal" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="d1de3-183">如果成功，则为 <see langword="true" />；如果字符串在语法上无效或者出现溢出或下溢，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d1de3-183"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="d1de3-184">支持的格式：</span><span class="sxs-lookup"><span data-stu-id="d1de3-184">Formats supported:</span></span>

|<span data-ttu-id="d1de3-185">格式字符串</span><span class="sxs-lookup"><span data-stu-id="d1de3-185">Format string</span></span>|<span data-ttu-id="d1de3-186">示例格式应为</span><span class="sxs-lookup"><span data-stu-id="d1de3-186">Example expected format</span></span>|<span data-ttu-id="d1de3-187">注释</span><span class="sxs-lookup"><span data-stu-id="d1de3-187">Comments</span></span>|
|--|--|--|
|<span data-ttu-id="d1de3-188">G/g （默认值）</span><span class="sxs-lookup"><span data-stu-id="d1de3-188">G/g  (default)</span></span>| |  
|<span data-ttu-id="d1de3-189">F/f</span><span class="sxs-lookup"><span data-stu-id="d1de3-189">F/f</span></span>|<span data-ttu-id="d1de3-190">12.45</span><span class="sxs-lookup"><span data-stu-id="d1de3-190">12.45</span></span>|<span data-ttu-id="d1de3-191">固定点</span><span class="sxs-lookup"><span data-stu-id="d1de3-191">Fixed point</span></span>|
|<span data-ttu-id="d1de3-192">E/e</span><span class="sxs-lookup"><span data-stu-id="d1de3-192">E/e</span></span>|<span data-ttu-id="d1de3-193">1.245000 e1</span><span class="sxs-lookup"><span data-stu-id="d1de3-193">1.245000e1</span></span>|<span data-ttu-id="d1de3-194">指数</span><span class="sxs-lookup"><span data-stu-id="d1de3-194">Exponential</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out double value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] float64&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.Double@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As Double, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; *  *  * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Double" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="d1de3-195">要分析的 Utf8 字符串。</span><span class="sxs-lookup"><span data-stu-id="d1de3-195">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="d1de3-196">当方法返回时，如果分析操作成功，则包含从 <paramref name="source" /> 分析的值。</span><span class="sxs-lookup"><span data-stu-id="d1de3-196">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="d1de3-197">当方法返回时，如果分析操作成功，则包含已分析的子字符串的字节长度。</span><span class="sxs-lookup"><span data-stu-id="d1de3-197">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="d1de3-198">如果方法失败，则 <paramref name="bytesConsumed" /> 设置为 0。</span><span class="sxs-lookup"><span data-stu-id="d1de3-198">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="d1de3-199">Utf8 字符串的预期格式。</span><span class="sxs-lookup"><span data-stu-id="d1de3-199">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="d1de3-200">分析 Utf8 字符串开头的 <see cref="T:System.Double" />。</span><span class="sxs-lookup"><span data-stu-id="d1de3-200">Parses a <see cref="T:System.Double" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="d1de3-201">如果成功，则为 <see langword="true" />；如果字符串在语法上无效或者出现溢出或下溢，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d1de3-201"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="d1de3-202">支持的格式：</span><span class="sxs-lookup"><span data-stu-id="d1de3-202">Formats supported:</span></span>

|<span data-ttu-id="d1de3-203">格式字符串</span><span class="sxs-lookup"><span data-stu-id="d1de3-203">Format string</span></span>|<span data-ttu-id="d1de3-204">示例格式应为</span><span class="sxs-lookup"><span data-stu-id="d1de3-204">Example expected format</span></span>|<span data-ttu-id="d1de3-205">注释</span><span class="sxs-lookup"><span data-stu-id="d1de3-205">Comments</span></span>|
|--|--|--|
|<span data-ttu-id="d1de3-206">G/g （默认值）</span><span class="sxs-lookup"><span data-stu-id="d1de3-206">G/g  (default)</span></span>| |  
|<span data-ttu-id="d1de3-207">F/f</span><span class="sxs-lookup"><span data-stu-id="d1de3-207">F/f</span></span>|<span data-ttu-id="d1de3-208">12.45</span><span class="sxs-lookup"><span data-stu-id="d1de3-208">12.45</span></span>|<span data-ttu-id="d1de3-209">固定点</span><span class="sxs-lookup"><span data-stu-id="d1de3-209">Fixed point</span></span>|
|<span data-ttu-id="d1de3-210">E/e</span><span class="sxs-lookup"><span data-stu-id="d1de3-210">E/e</span></span>|<span data-ttu-id="d1de3-211">1.245000 e1</span><span class="sxs-lookup"><span data-stu-id="d1de3-211">1.245000e1</span></span>|<span data-ttu-id="d1de3-212">指数</span><span class="sxs-lookup"><span data-stu-id="d1de3-212">Exponential</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out Guid value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] valuetype System.Guid&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.Guid@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As Guid, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; *  *  * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Guid" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="d1de3-213">要分析的 Utf8 字符串。</span><span class="sxs-lookup"><span data-stu-id="d1de3-213">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="d1de3-214">当方法返回时，如果分析操作成功，则包含从 <paramref name="source" /> 分析的值。</span><span class="sxs-lookup"><span data-stu-id="d1de3-214">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="d1de3-215">当方法返回时，如果分析操作成功，则包含已分析的子字符串的字节长度。</span><span class="sxs-lookup"><span data-stu-id="d1de3-215">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="d1de3-216">如果方法失败，则 <paramref name="bytesConsumed" /> 设置为 0。</span><span class="sxs-lookup"><span data-stu-id="d1de3-216">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="d1de3-217">Utf8 字符串的预期格式。</span><span class="sxs-lookup"><span data-stu-id="d1de3-217">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="d1de3-218">分析 Utf8 字符串开头的 <see cref="T:System.Guid" />。</span><span class="sxs-lookup"><span data-stu-id="d1de3-218">Parses a <see cref="T:System.Guid" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="d1de3-219">如果成功，则为 <see langword="true" />；如果字符串在语法上无效或者出现溢出或下溢，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d1de3-219"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="d1de3-220">支持的格式：</span><span class="sxs-lookup"><span data-stu-id="d1de3-220">Formats supported:</span></span>

|<span data-ttu-id="d1de3-221">格式字符串</span><span class="sxs-lookup"><span data-stu-id="d1de3-221">Format string</span></span>|<span data-ttu-id="d1de3-222">预期格式</span><span class="sxs-lookup"><span data-stu-id="d1de3-222">Expected format</span></span>|
|--|--|
|<span data-ttu-id="d1de3-223">D （默认值）</span><span class="sxs-lookup"><span data-stu-id="d1de3-223">D (default)</span></span>|<span data-ttu-id="d1de3-224">nnnnnnnn-nnnn-nnnnnnnnnnnn</span><span class="sxs-lookup"><span data-stu-id="d1de3-224">nnnnnnnn-nnnn-nnnn-nnnn-nnnnnnnnnnnn</span></span>|
|<span data-ttu-id="d1de3-225">B</span><span class="sxs-lookup"><span data-stu-id="d1de3-225">B</span></span>|<span data-ttu-id="d1de3-226">{nnnnnnnn-nnnnnnnnnnnn}</span><span class="sxs-lookup"><span data-stu-id="d1de3-226">{nnnnnnnn-nnnn-nnnn-nnnn-nnnnnnnnnnnn}</span></span>|
|<span data-ttu-id="d1de3-227">P</span><span class="sxs-lookup"><span data-stu-id="d1de3-227">P</span></span>|<span data-ttu-id="d1de3-228">（nnnnnnnn-nnnn-nnnnnnnnnnnn）</span><span class="sxs-lookup"><span data-stu-id="d1de3-228">(nnnnnnnn-nnnn-nnnn-nnnn-nnnnnnnnnnnn)</span></span>|
|<span data-ttu-id="d1de3-229">N</span><span class="sxs-lookup"><span data-stu-id="d1de3-229">N</span></span>|<span data-ttu-id="d1de3-230">nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn</span><span class="sxs-lookup"><span data-stu-id="d1de3-230">nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out short value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] int16&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.Int16@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As Short, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; *  *  * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Int16" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="d1de3-231">要分析的 Utf8 字符串。</span><span class="sxs-lookup"><span data-stu-id="d1de3-231">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="d1de3-232">当方法返回时，如果分析操作成功，则包含从 <paramref name="source" /> 分析的值。</span><span class="sxs-lookup"><span data-stu-id="d1de3-232">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="d1de3-233">当方法返回时，如果分析操作成功，则包含已分析的子字符串的字节长度。</span><span class="sxs-lookup"><span data-stu-id="d1de3-233">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="d1de3-234">如果方法失败，则 <paramref name="bytesConsumed" /> 设置为 0。</span><span class="sxs-lookup"><span data-stu-id="d1de3-234">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="d1de3-235">Utf8 字符串的预期格式。</span><span class="sxs-lookup"><span data-stu-id="d1de3-235">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="d1de3-236">分析 Utf8 字符串开头的 <see cref="T:System.Int16" />。</span><span class="sxs-lookup"><span data-stu-id="d1de3-236">Parses an <see cref="T:System.Int16" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="d1de3-237">如果成功，则为 <see langword="true" />；如果字符串在语法上无效或者出现溢出或下溢，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d1de3-237"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="d1de3-238">支持的格式：</span><span class="sxs-lookup"><span data-stu-id="d1de3-238">Formats supported:</span></span>

|<span data-ttu-id="d1de3-239">格式字符串</span><span class="sxs-lookup"><span data-stu-id="d1de3-239">Format string</span></span>|<span data-ttu-id="d1de3-240">示例格式应为</span><span class="sxs-lookup"><span data-stu-id="d1de3-240">Example expected format</span></span>|
|--|--|
|<span data-ttu-id="d1de3-241">G/g （默认值）</span><span class="sxs-lookup"><span data-stu-id="d1de3-241">G/g (default)</span></span>| |
|<span data-ttu-id="d1de3-242">D/d</span><span class="sxs-lookup"><span data-stu-id="d1de3-242">D/d</span></span>|<span data-ttu-id="d1de3-243">32767</span><span class="sxs-lookup"><span data-stu-id="d1de3-243">32767</span></span>|
|<span data-ttu-id="d1de3-244">N/n</span><span class="sxs-lookup"><span data-stu-id="d1de3-244">N/n</span></span>|<span data-ttu-id="d1de3-245">32,767</span><span class="sxs-lookup"><span data-stu-id="d1de3-245">32,767</span></span>|       
|<span data-ttu-id="d1de3-246">X/x</span><span class="sxs-lookup"><span data-stu-id="d1de3-246">X/x</span></span>|<span data-ttu-id="d1de3-247">7fff</span><span class="sxs-lookup"><span data-stu-id="d1de3-247">7fff</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out int value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] int32&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.Int32@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As Integer, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; *  *  * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Int32" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="d1de3-248">要分析的 Utf8 字符串。</span><span class="sxs-lookup"><span data-stu-id="d1de3-248">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="d1de3-249">当方法返回时，如果分析操作成功，则包含从 <paramref name="source" /> 分析的值。</span><span class="sxs-lookup"><span data-stu-id="d1de3-249">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="d1de3-250">当方法返回时，如果分析操作成功，则包含已分析的子字符串的字节长度。</span><span class="sxs-lookup"><span data-stu-id="d1de3-250">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="d1de3-251">如果方法失败，则 <paramref name="bytesConsumed" /> 设置为 0。</span><span class="sxs-lookup"><span data-stu-id="d1de3-251">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="d1de3-252">Utf8 字符串的预期格式。</span><span class="sxs-lookup"><span data-stu-id="d1de3-252">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="d1de3-253">分析 Utf8 字符串开头的 <see cref="T:System.Int32" />。</span><span class="sxs-lookup"><span data-stu-id="d1de3-253">Parses an <see cref="T:System.Int32" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="d1de3-254">如果成功，则为 <see langword="true" />；如果字符串在语法上无效或者出现溢出或下溢，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d1de3-254"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="d1de3-255">支持的格式：</span><span class="sxs-lookup"><span data-stu-id="d1de3-255">Formats supported:</span></span>

|<span data-ttu-id="d1de3-256">格式字符串</span><span class="sxs-lookup"><span data-stu-id="d1de3-256">Format string</span></span>|<span data-ttu-id="d1de3-257">示例格式应为</span><span class="sxs-lookup"><span data-stu-id="d1de3-257">Example expected format</span></span>|
|--|--|
|<span data-ttu-id="d1de3-258">G/g （默认值）</span><span class="sxs-lookup"><span data-stu-id="d1de3-258">G/g (default)</span></span>| |
|<span data-ttu-id="d1de3-259">D/d</span><span class="sxs-lookup"><span data-stu-id="d1de3-259">D/d</span></span>|<span data-ttu-id="d1de3-260">32767</span><span class="sxs-lookup"><span data-stu-id="d1de3-260">32767</span></span>|
|<span data-ttu-id="d1de3-261">N/n</span><span class="sxs-lookup"><span data-stu-id="d1de3-261">N/n</span></span>|<span data-ttu-id="d1de3-262">32,767</span><span class="sxs-lookup"><span data-stu-id="d1de3-262">32,767</span></span>|       
|<span data-ttu-id="d1de3-263">X/x</span><span class="sxs-lookup"><span data-stu-id="d1de3-263">X/x</span></span>|<span data-ttu-id="d1de3-264">7fff</span><span class="sxs-lookup"><span data-stu-id="d1de3-264">7fff</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out long value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] int64&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.Int64@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As Long, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; *  *  * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Int64" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="d1de3-265">要分析的 Utf8 字符串。</span><span class="sxs-lookup"><span data-stu-id="d1de3-265">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="d1de3-266">当方法返回时，如果分析操作成功，则包含从 <paramref name="source" /> 分析的值。</span><span class="sxs-lookup"><span data-stu-id="d1de3-266">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="d1de3-267">当方法返回时，如果分析操作成功，则包含已分析的子字符串的字节长度。</span><span class="sxs-lookup"><span data-stu-id="d1de3-267">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="d1de3-268">如果方法失败，则 <paramref name="bytesConsumed" /> 设置为 0。</span><span class="sxs-lookup"><span data-stu-id="d1de3-268">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="d1de3-269">Utf8 字符串的预期格式。</span><span class="sxs-lookup"><span data-stu-id="d1de3-269">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="d1de3-270">分析 Utf8 字符串开头的 <see cref="T:System.Int64" />。</span><span class="sxs-lookup"><span data-stu-id="d1de3-270">Parses an <see cref="T:System.Int64" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="d1de3-271">如果成功，则为 <see langword="true" />；如果字符串在语法上无效或者出现溢出或下溢，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d1de3-271"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="d1de3-272">支持的格式：</span><span class="sxs-lookup"><span data-stu-id="d1de3-272">Formats supported:</span></span>

|<span data-ttu-id="d1de3-273">格式字符串</span><span class="sxs-lookup"><span data-stu-id="d1de3-273">Format string</span></span>|<span data-ttu-id="d1de3-274">示例格式应为</span><span class="sxs-lookup"><span data-stu-id="d1de3-274">Example expected format</span></span>|
|--|--|
|<span data-ttu-id="d1de3-275">G/g （默认值）</span><span class="sxs-lookup"><span data-stu-id="d1de3-275">G/g (default)</span></span>| |
|<span data-ttu-id="d1de3-276">D/d</span><span class="sxs-lookup"><span data-stu-id="d1de3-276">D/d</span></span>|<span data-ttu-id="d1de3-277">32767</span><span class="sxs-lookup"><span data-stu-id="d1de3-277">32767</span></span>|
|<span data-ttu-id="d1de3-278">N/n</span><span class="sxs-lookup"><span data-stu-id="d1de3-278">N/n</span></span>|<span data-ttu-id="d1de3-279">32,767</span><span class="sxs-lookup"><span data-stu-id="d1de3-279">32,767</span></span>|       
|<span data-ttu-id="d1de3-280">X/x</span><span class="sxs-lookup"><span data-stu-id="d1de3-280">X/x</span></span>|<span data-ttu-id="d1de3-281">7fff</span><span class="sxs-lookup"><span data-stu-id="d1de3-281">7fff</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out sbyte value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] int8&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.SByte@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As SByte, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; *  *  * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-3.0;netcore-2.1;netcore-2.2;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.SByte" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="d1de3-282">要分析的 Utf8 字符串。</span><span class="sxs-lookup"><span data-stu-id="d1de3-282">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="d1de3-283">当方法返回时，如果分析操作成功，则包含从 <paramref name="source" /> 分析的值。</span><span class="sxs-lookup"><span data-stu-id="d1de3-283">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="d1de3-284">当方法返回时，如果分析操作成功，则包含已分析的子字符串的字节长度。</span><span class="sxs-lookup"><span data-stu-id="d1de3-284">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="d1de3-285">如果方法失败，则 <paramref name="bytesConsumed" /> 设置为 0。</span><span class="sxs-lookup"><span data-stu-id="d1de3-285">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="d1de3-286">Utf8 字符串的预期格式。</span><span class="sxs-lookup"><span data-stu-id="d1de3-286">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="d1de3-287">分析 Utf8 字符串开头的 <see cref="T:System.SByte" />。</span><span class="sxs-lookup"><span data-stu-id="d1de3-287">Parses an <see cref="T:System.SByte" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="d1de3-288">如果成功，则为 <see langword="true" />；如果字符串在语法上无效或者出现溢出或下溢，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d1de3-288"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="d1de3-289">支持的格式：</span><span class="sxs-lookup"><span data-stu-id="d1de3-289">Formats supported:</span></span> 

|<span data-ttu-id="d1de3-290">格式字符串</span><span class="sxs-lookup"><span data-stu-id="d1de3-290">Format string</span></span>|<span data-ttu-id="d1de3-291">示例格式应为</span><span class="sxs-lookup"><span data-stu-id="d1de3-291">Example expected format</span></span>|
|--|--|
|<span data-ttu-id="d1de3-292">G/g （默认值）</span><span class="sxs-lookup"><span data-stu-id="d1de3-292">G/g (default)</span></span>| |
|<span data-ttu-id="d1de3-293">D/d</span><span class="sxs-lookup"><span data-stu-id="d1de3-293">D/d</span></span>|<span data-ttu-id="d1de3-294">122</span><span class="sxs-lookup"><span data-stu-id="d1de3-294">122</span></span>|
|<span data-ttu-id="d1de3-295">N/n</span><span class="sxs-lookup"><span data-stu-id="d1de3-295">N/n</span></span>|<span data-ttu-id="d1de3-296">122</span><span class="sxs-lookup"><span data-stu-id="d1de3-296">122</span></span>|       
|<span data-ttu-id="d1de3-297">X/x</span><span class="sxs-lookup"><span data-stu-id="d1de3-297">X/x</span></span>|<span data-ttu-id="d1de3-298">7a</span><span class="sxs-lookup"><span data-stu-id="d1de3-298">7a</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out float value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] float32&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.Single@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As Single, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; *  *  * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Single" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="d1de3-299">要分析的 Utf8 字符串。</span><span class="sxs-lookup"><span data-stu-id="d1de3-299">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="d1de3-300">当方法返回时，如果分析操作成功，则包含从 <paramref name="source" /> 分析的值。</span><span class="sxs-lookup"><span data-stu-id="d1de3-300">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="d1de3-301">当方法返回时，如果分析操作成功，则包含已分析的子字符串的字节长度。</span><span class="sxs-lookup"><span data-stu-id="d1de3-301">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="d1de3-302">如果方法失败，则 <paramref name="bytesConsumed" /> 设置为 0。</span><span class="sxs-lookup"><span data-stu-id="d1de3-302">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="d1de3-303">Utf8 字符串的预期格式。</span><span class="sxs-lookup"><span data-stu-id="d1de3-303">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="d1de3-304">分析 Utf8 字符串开头的 <see cref="T:System.Single" />。</span><span class="sxs-lookup"><span data-stu-id="d1de3-304">Parses a <see cref="T:System.Single" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="d1de3-305">如果成功，则为 <see langword="true" />；如果字符串在语法上无效或者出现溢出或下溢，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d1de3-305"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="d1de3-306">支持的格式：</span><span class="sxs-lookup"><span data-stu-id="d1de3-306">Formats supported:</span></span> 

<span data-ttu-id="d1de3-307">格式字符串</span><span class="sxs-lookup"><span data-stu-id="d1de3-307">Format string</span></span>|<span data-ttu-id="d1de3-308">示例应为 fornmat</span><span class="sxs-lookup"><span data-stu-id="d1de3-308">Example expected fornmat</span></span>|<span data-ttu-id="d1de3-309">注释</span><span class="sxs-lookup"><span data-stu-id="d1de3-309">Comments</span></span>|
|--|--|--|
|<span data-ttu-id="d1de3-310">G/g （默认值）</span><span class="sxs-lookup"><span data-stu-id="d1de3-310">G/g  (default)</span></span>| |  
|<span data-ttu-id="d1de3-311">F/f</span><span class="sxs-lookup"><span data-stu-id="d1de3-311">F/f</span></span>|<span data-ttu-id="d1de3-312">12.45</span><span class="sxs-lookup"><span data-stu-id="d1de3-312">12.45</span></span>|<span data-ttu-id="d1de3-313">固定点</span><span class="sxs-lookup"><span data-stu-id="d1de3-313">Fixed point</span></span>|
|<span data-ttu-id="d1de3-314">E/e</span><span class="sxs-lookup"><span data-stu-id="d1de3-314">E/e</span></span>|<span data-ttu-id="d1de3-315">1.245000 e1</span><span class="sxs-lookup"><span data-stu-id="d1de3-315">1.245000e1</span></span>|<span data-ttu-id="d1de3-316">指数</span><span class="sxs-lookup"><span data-stu-id="d1de3-316">Exponential</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out TimeSpan value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] valuetype System.TimeSpan&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.TimeSpan@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As TimeSpan, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; *  *  * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.TimeSpan" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="d1de3-317">要分析的 Utf8 字符串。</span><span class="sxs-lookup"><span data-stu-id="d1de3-317">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="d1de3-318">当方法返回时，如果分析操作成功，则包含从 <paramref name="source" /> 分析的值。</span><span class="sxs-lookup"><span data-stu-id="d1de3-318">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="d1de3-319">当方法返回时，如果分析操作成功，则包含已分析的子字符串的字节长度。</span><span class="sxs-lookup"><span data-stu-id="d1de3-319">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="d1de3-320">如果方法失败，则 <paramref name="bytesConsumed" /> 设置为 0。</span><span class="sxs-lookup"><span data-stu-id="d1de3-320">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="d1de3-321">Utf8 字符串的预期格式。</span><span class="sxs-lookup"><span data-stu-id="d1de3-321">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="d1de3-322">分析 Utf8 字符串开头的 <see cref="T:System.TimeSpan" />。</span><span class="sxs-lookup"><span data-stu-id="d1de3-322">Parses a <see cref="T:System.TimeSpan" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="d1de3-323">如果成功，则为 <see langword="true" />；如果字符串在语法上无效或者出现溢出或下溢，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d1de3-323"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="d1de3-324">支持的格式：</span><span class="sxs-lookup"><span data-stu-id="d1de3-324">Formats supported:</span></span> 

|<span data-ttu-id="d1de3-325">格式字符串</span><span class="sxs-lookup"><span data-stu-id="d1de3-325">Format string</span></span>|<span data-ttu-id="d1de3-326">预期格式</span><span class="sxs-lookup"><span data-stu-id="d1de3-326">Expected format</span></span>|<span data-ttu-id="d1de3-327">注释</span><span class="sxs-lookup"><span data-stu-id="d1de3-327">Comments</span></span>|
|--|--|--|
|<span data-ttu-id="d1de3-328">c/t/T （默认值）</span><span class="sxs-lookup"><span data-stu-id="d1de3-328">c/t/T (default)</span></span>|<span data-ttu-id="d1de3-329">[-][d.]hh： mm： ss [. fffffff]</span><span class="sxs-lookup"><span data-stu-id="d1de3-329">[-][d.]hh:mm:ss[.fffffff]</span></span>|<span data-ttu-id="d1de3-330">（常量格式）</span><span class="sxs-lookup"><span data-stu-id="d1de3-330">(constant format)</span></span>|
|<span data-ttu-id="d1de3-331">G</span><span class="sxs-lookup"><span data-stu-id="d1de3-331">G</span></span>|<span data-ttu-id="d1de3-332">[-] d:hh： mm： ss. fffffff</span><span class="sxs-lookup"><span data-stu-id="d1de3-332">[-]d:hh:mm:ss.fffffff</span></span>||<span data-ttu-id="d1de3-333">（常规长）</span><span class="sxs-lookup"><span data-stu-id="d1de3-333">(general long)</span></span>|
|<span data-ttu-id="d1de3-334">g</span><span class="sxs-lookup"><span data-stu-id="d1de3-334">g</span></span>|<span data-ttu-id="d1de3-335">[-][d：][h] h:mm： ss [. f [f [f [f [f [f [f]]]]]]</span><span class="sxs-lookup"><span data-stu-id="d1de3-335">[-][d:][h]h:mm:ss[.f[f[f[f[f[f[f]]]]]]</span></span>|<span data-ttu-id="d1de3-336">（一般简称）</span><span class="sxs-lookup"><span data-stu-id="d1de3-336">(general short)</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out ushort value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] unsigned int16&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.UInt16@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As UShort, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; *  *  * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-3.0;netcore-2.1;netcore-2.2;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.UInt16" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="d1de3-337">要分析的 Utf8 字符串。</span><span class="sxs-lookup"><span data-stu-id="d1de3-337">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="d1de3-338">当方法返回时，如果分析操作成功，则包含从 <paramref name="source" /> 分析的值。</span><span class="sxs-lookup"><span data-stu-id="d1de3-338">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="d1de3-339">当方法返回时，如果分析操作成功，则包含已分析的子字符串的字节长度。</span><span class="sxs-lookup"><span data-stu-id="d1de3-339">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="d1de3-340">如果方法失败，则 <paramref name="bytesConsumed" /> 设置为 0。</span><span class="sxs-lookup"><span data-stu-id="d1de3-340">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="d1de3-341">Utf8 字符串的预期格式。</span><span class="sxs-lookup"><span data-stu-id="d1de3-341">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="d1de3-342">分析 Utf8 字符串开头的 <see cref="T:System.UInt16" />。</span><span class="sxs-lookup"><span data-stu-id="d1de3-342">Parses a <see cref="T:System.UInt16" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="d1de3-343">如果成功，则为 <see langword="true" />；如果字符串在语法上无效或者出现溢出或下溢，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d1de3-343"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="d1de3-344">支持的格式：</span><span class="sxs-lookup"><span data-stu-id="d1de3-344">Formats supported:</span></span>

|<span data-ttu-id="d1de3-345">格式字符串</span><span class="sxs-lookup"><span data-stu-id="d1de3-345">Format string</span></span>|<span data-ttu-id="d1de3-346">示例格式应为</span><span class="sxs-lookup"><span data-stu-id="d1de3-346">Example expected format</span></span>|
|--|--|
|<span data-ttu-id="d1de3-347">G/g （默认值）</span><span class="sxs-lookup"><span data-stu-id="d1de3-347">G/g (default)</span></span>| |
|<span data-ttu-id="d1de3-348">D/d</span><span class="sxs-lookup"><span data-stu-id="d1de3-348">D/d</span></span>|<span data-ttu-id="d1de3-349">32767</span><span class="sxs-lookup"><span data-stu-id="d1de3-349">32767</span></span>|
|<span data-ttu-id="d1de3-350">N/n</span><span class="sxs-lookup"><span data-stu-id="d1de3-350">N/n</span></span>|<span data-ttu-id="d1de3-351">32,767</span><span class="sxs-lookup"><span data-stu-id="d1de3-351">32,767</span></span>|       
|<span data-ttu-id="d1de3-352">X/x</span><span class="sxs-lookup"><span data-stu-id="d1de3-352">X/x</span></span>|<span data-ttu-id="d1de3-353">7fff</span><span class="sxs-lookup"><span data-stu-id="d1de3-353">7fff</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out uint value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] unsigned int32&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.UInt32@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As UInteger, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; *  *  * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-3.0;netcore-2.1;netcore-2.2;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.UInt32" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="d1de3-354">要分析的 Utf8 字符串。</span><span class="sxs-lookup"><span data-stu-id="d1de3-354">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="d1de3-355">当方法返回时，如果分析操作成功，则包含从 <paramref name="source" /> 分析的值。</span><span class="sxs-lookup"><span data-stu-id="d1de3-355">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="d1de3-356">当方法返回时，如果分析操作成功，则包含已分析的子字符串的字节长度。</span><span class="sxs-lookup"><span data-stu-id="d1de3-356">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="d1de3-357">如果方法失败，则 <paramref name="bytesConsumed" /> 设置为 0。</span><span class="sxs-lookup"><span data-stu-id="d1de3-357">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="d1de3-358">Utf8 字符串的预期格式。</span><span class="sxs-lookup"><span data-stu-id="d1de3-358">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="d1de3-359">分析 Utf8 字符串开头的 <see cref="T:System.UInt32" />。</span><span class="sxs-lookup"><span data-stu-id="d1de3-359">Parses a <see cref="T:System.UInt32" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="d1de3-360">如果成功，则为 <see langword="true" />；如果字符串在语法上无效或者出现溢出或下溢，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d1de3-360"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="d1de3-361">支持的格式：</span><span class="sxs-lookup"><span data-stu-id="d1de3-361">Formats supported:</span></span>

|<span data-ttu-id="d1de3-362">格式字符串</span><span class="sxs-lookup"><span data-stu-id="d1de3-362">Format string</span></span>|<span data-ttu-id="d1de3-363">示例格式应为</span><span class="sxs-lookup"><span data-stu-id="d1de3-363">Example expected format</span></span>|
|--|--|
|<span data-ttu-id="d1de3-364">G/g （默认值）</span><span class="sxs-lookup"><span data-stu-id="d1de3-364">G/g (default)</span></span>| |
|<span data-ttu-id="d1de3-365">D/d</span><span class="sxs-lookup"><span data-stu-id="d1de3-365">D/d</span></span>|<span data-ttu-id="d1de3-366">32767</span><span class="sxs-lookup"><span data-stu-id="d1de3-366">32767</span></span>|
|<span data-ttu-id="d1de3-367">N/n</span><span class="sxs-lookup"><span data-stu-id="d1de3-367">N/n</span></span>|<span data-ttu-id="d1de3-368">32,767</span><span class="sxs-lookup"><span data-stu-id="d1de3-368">32,767</span></span>|       
|<span data-ttu-id="d1de3-369">X/x</span><span class="sxs-lookup"><span data-stu-id="d1de3-369">X/x</span></span>|<span data-ttu-id="d1de3-370">7fff</span><span class="sxs-lookup"><span data-stu-id="d1de3-370">7fff</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out ulong value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] unsigned int64&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.UInt64@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As ULong, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; *  *  * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-3.0;netcore-2.1;netcore-2.2;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.UInt64" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="d1de3-371">要分析的 Utf8 字符串。</span><span class="sxs-lookup"><span data-stu-id="d1de3-371">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="d1de3-372">当方法返回时，如果分析操作成功，则包含从 <paramref name="source" /> 分析的值。</span><span class="sxs-lookup"><span data-stu-id="d1de3-372">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="d1de3-373">当方法返回时，如果分析操作成功，则包含已分析的子字符串的字节长度。</span><span class="sxs-lookup"><span data-stu-id="d1de3-373">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="d1de3-374">如果方法失败，则 <paramref name="bytesConsumed" /> 设置为 0。</span><span class="sxs-lookup"><span data-stu-id="d1de3-374">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="d1de3-375">Utf8 字符串的预期格式。</span><span class="sxs-lookup"><span data-stu-id="d1de3-375">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="d1de3-376">分析 Utf8 字符串开头的 <see cref="T:System.UInt64" />。</span><span class="sxs-lookup"><span data-stu-id="d1de3-376">Parses a <see cref="T:System.UInt64" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="d1de3-377">如果成功，则为 <see langword="true" />；如果字符串在语法上无效或者出现溢出或下溢，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d1de3-377"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="d1de3-378">支持的格式：</span><span class="sxs-lookup"><span data-stu-id="d1de3-378">Formats supported:</span></span>

|<span data-ttu-id="d1de3-379">格式字符串</span><span class="sxs-lookup"><span data-stu-id="d1de3-379">Format string</span></span>|<span data-ttu-id="d1de3-380">示例格式应为</span><span class="sxs-lookup"><span data-stu-id="d1de3-380">Example expected format</span></span>|
|--|--|
|<span data-ttu-id="d1de3-381">G/g （默认值）</span><span class="sxs-lookup"><span data-stu-id="d1de3-381">G/g (default)</span></span>| |
|<span data-ttu-id="d1de3-382">D/d</span><span class="sxs-lookup"><span data-stu-id="d1de3-382">D/d</span></span>|<span data-ttu-id="d1de3-383">32767</span><span class="sxs-lookup"><span data-stu-id="d1de3-383">32767</span></span>|
|<span data-ttu-id="d1de3-384">N/n</span><span class="sxs-lookup"><span data-stu-id="d1de3-384">N/n</span></span>|<span data-ttu-id="d1de3-385">32,767</span><span class="sxs-lookup"><span data-stu-id="d1de3-385">32,767</span></span>|       
|<span data-ttu-id="d1de3-386">X/x</span><span class="sxs-lookup"><span data-stu-id="d1de3-386">X/x</span></span>|<span data-ttu-id="d1de3-387">7fff</span><span class="sxs-lookup"><span data-stu-id="d1de3-387">7fff</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
