<Type Name="Utf8Parser" FullName="System.Buffers.Text.Utf8Parser">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9d46ffc198524bd466f660e29a8831cb5128a44c" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69342510" /></Metadata><TypeSignature Language="C#" Value="public static class Utf8Parser" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Utf8Parser extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Buffers.Text.Utf8Parser" />
  <TypeSignature Language="VB.NET" Value="Public Class Utf8Parser" />
  <TypeSignature Language="C++ CLI" Value="public ref class Utf8Parser abstract sealed" />
  <TypeSignature Language="F#" Value="type Utf8Parser = class" />
  <AssemblyInfo>
    <AssemblyName>System.Memory</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="2c613-101">提供用于将 Utf8 字符串分析为常见数据类型的静态方法。</span><span class="sxs-lookup"><span data-stu-id="2c613-101">Provides static methods to parse Utf8 strings to common data types.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out bool value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] bool&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.Boolean@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As Boolean, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; *  *  * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Boolean" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="2c613-102">要分析的 Utf8 字符串。</span><span class="sxs-lookup"><span data-stu-id="2c613-102">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="2c613-103">当方法返回时，如果分析操作成功，则包含从 <paramref name="source" /> 分析的值。</span><span class="sxs-lookup"><span data-stu-id="2c613-103">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="2c613-104">当方法返回时，如果分析操作成功，则包含已分析的子字符串的字节长度。</span><span class="sxs-lookup"><span data-stu-id="2c613-104">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="2c613-105">如果方法失败，则 <paramref name="bytesConsumed" /> 设置为 0。</span><span class="sxs-lookup"><span data-stu-id="2c613-105">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="2c613-106">Utf8 字符串的预期格式。</span><span class="sxs-lookup"><span data-stu-id="2c613-106">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="2c613-107">分析 Utf8 字符串开头的 <see cref="T:System.Boolean" />。</span><span class="sxs-lookup"><span data-stu-id="2c613-107">Parses a <see cref="T:System.Boolean" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="2c613-108">如果成功，则为 <see langword="true" />；如果字符串在语法上无效或者出现溢出或下溢，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="2c613-108"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="2c613-109">支持的格式:</span><span class="sxs-lookup"><span data-stu-id="2c613-109">Formats supported:</span></span> 

|<span data-ttu-id="2c613-110">格式字符串</span><span class="sxs-lookup"><span data-stu-id="2c613-110">Format string</span></span>|<span data-ttu-id="2c613-111">示例格式应为</span><span class="sxs-lookup"><span data-stu-id="2c613-111">Example expected format</span></span>|
|--|--|
|<span data-ttu-id="2c613-112">G (默认值)</span><span class="sxs-lookup"><span data-stu-id="2c613-112">G (default)</span></span>|<span data-ttu-id="2c613-113">True/False</span><span class="sxs-lookup"><span data-stu-id="2c613-113">True/False</span></span>|
|<span data-ttu-id="2c613-114">l</span><span class="sxs-lookup"><span data-stu-id="2c613-114">l</span></span>|<span data-ttu-id="2c613-115">true/false</span><span class="sxs-lookup"><span data-stu-id="2c613-115">true/false</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out byte value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] unsigned int8&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.Byte@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As Byte, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; *  *  * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Byte" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="2c613-116">要分析的 Utf8 字符串。</span><span class="sxs-lookup"><span data-stu-id="2c613-116">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="2c613-117">当方法返回时，如果分析操作成功，则包含从 <paramref name="source" /> 分析的值。</span><span class="sxs-lookup"><span data-stu-id="2c613-117">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="2c613-118">当方法返回时，如果分析操作成功，则包含已分析的子字符串的字节长度。</span><span class="sxs-lookup"><span data-stu-id="2c613-118">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="2c613-119">如果方法失败，则 <paramref name="bytesConsumed" /> 设置为 0。</span><span class="sxs-lookup"><span data-stu-id="2c613-119">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="2c613-120">Utf8 字符串的预期格式。</span><span class="sxs-lookup"><span data-stu-id="2c613-120">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="2c613-121">分析 Utf8 字符串开头的 <see cref="T:System.Byte" />。</span><span class="sxs-lookup"><span data-stu-id="2c613-121">Parses a <see cref="T:System.Byte" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="2c613-122">如果成功，则为 <see langword="true" />；如果字符串在语法上无效或者出现溢出或下溢，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="2c613-122"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="2c613-123">支持的格式:</span><span class="sxs-lookup"><span data-stu-id="2c613-123">Formats supported:</span></span> 

|<span data-ttu-id="2c613-124">格式字符串</span><span class="sxs-lookup"><span data-stu-id="2c613-124">Format string</span></span>|<span data-ttu-id="2c613-125">示例格式应为</span><span class="sxs-lookup"><span data-stu-id="2c613-125">Example expected format</span></span>|
|--|--|
|<span data-ttu-id="2c613-126">G/g (默认值)</span><span class="sxs-lookup"><span data-stu-id="2c613-126">G/g (default)</span></span>| |
|<span data-ttu-id="2c613-127">D/d</span><span class="sxs-lookup"><span data-stu-id="2c613-127">D/d</span></span>|<span data-ttu-id="2c613-128">122</span><span class="sxs-lookup"><span data-stu-id="2c613-128">122</span></span>|
|<span data-ttu-id="2c613-129">N/n</span><span class="sxs-lookup"><span data-stu-id="2c613-129">N/n</span></span>|<span data-ttu-id="2c613-130">122</span><span class="sxs-lookup"><span data-stu-id="2c613-130">122</span></span>|       
|<span data-ttu-id="2c613-131">X/x</span><span class="sxs-lookup"><span data-stu-id="2c613-131">X/x</span></span>|<span data-ttu-id="2c613-132">7a</span><span class="sxs-lookup"><span data-stu-id="2c613-132">7a</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out DateTime value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] valuetype System.DateTime&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.DateTime@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As DateTime, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; *  *  * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.DateTime" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="2c613-133">要分析的 Utf8 字符串。</span><span class="sxs-lookup"><span data-stu-id="2c613-133">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="2c613-134">当方法返回时，如果分析操作成功，则包含从 <paramref name="source" /> 分析的值。</span><span class="sxs-lookup"><span data-stu-id="2c613-134">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="2c613-135">当方法返回时，如果分析操作成功，则包含已分析的子字符串的字节长度。</span><span class="sxs-lookup"><span data-stu-id="2c613-135">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="2c613-136">如果方法失败，则 <paramref name="bytesConsumed" /> 设置为 0。</span><span class="sxs-lookup"><span data-stu-id="2c613-136">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="2c613-137">Utf8 字符串的预期格式。</span><span class="sxs-lookup"><span data-stu-id="2c613-137">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="2c613-138">分析 Utf8 字符串开头的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="2c613-138">Parses a <see cref="T:System.DateTime" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="2c613-139">如果成功，则为 <see langword="true" />；如果字符串在语法上无效或者出现溢出或下溢，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="2c613-139"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="2c613-140">支持的格式:</span><span class="sxs-lookup"><span data-stu-id="2c613-140">Formats supported:</span></span>

|<span data-ttu-id="2c613-141">格式字符串</span><span class="sxs-lookup"><span data-stu-id="2c613-141">Format string</span></span>|<span data-ttu-id="2c613-142">示例格式应为</span><span class="sxs-lookup"><span data-stu-id="2c613-142">Example expected format</span></span>|<span data-ttu-id="2c613-143">注释</span><span class="sxs-lookup"><span data-stu-id="2c613-143">Comments</span></span>|
|--|--|--|
|<span data-ttu-id="2c613-144">G (默认值)</span><span class="sxs-lookup"><span data-stu-id="2c613-144">G  (default)</span></span>|<span data-ttu-id="2c613-145">05/25/2017 10:30:15</span><span class="sxs-lookup"><span data-stu-id="2c613-145">05/25/2017 10:30:15</span></span>| |
|<span data-ttu-id="2c613-146">R</span><span class="sxs-lookup"><span data-stu-id="2c613-146">R</span></span>|<span data-ttu-id="2c613-147">周二, 03 月 2017 08:08:05 GMT</span><span class="sxs-lookup"><span data-stu-id="2c613-147">Tue, 03 Jan 2017 08:08:05 GMT</span></span>|<span data-ttu-id="2c613-148">(RFC 1123)</span><span class="sxs-lookup"><span data-stu-id="2c613-148">(RFC 1123)</span></span>|
|<span data-ttu-id="2c613-149">l</span><span class="sxs-lookup"><span data-stu-id="2c613-149">l</span></span>|<span data-ttu-id="2c613-150">周二, 03 月 2017 08:08:05 gmt</span><span class="sxs-lookup"><span data-stu-id="2c613-150">tue, 03 jan 2017 08:08:05 gmt</span></span>|<span data-ttu-id="2c613-151">(小写 RFC 1123)</span><span class="sxs-lookup"><span data-stu-id="2c613-151">(Lowercase RFC 1123)</span></span>|
|<span data-ttu-id="2c613-152">O</span><span class="sxs-lookup"><span data-stu-id="2c613-152">O</span></span>|<span data-ttu-id="2c613-153">2017-06-12T05:30:45.7680000-07:00</span><span class="sxs-lookup"><span data-stu-id="2c613-153">2017-06-12T05:30:45.7680000-07:00</span></span>|<span data-ttu-id="2c613-154">(往返)</span><span class="sxs-lookup"><span data-stu-id="2c613-154">(Round-trippable)</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out DateTimeOffset value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] valuetype System.DateTimeOffset&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.DateTimeOffset@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As DateTimeOffset, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; *  *  * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.DateTimeOffset" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="2c613-155">要分析的 Utf8 字符串。</span><span class="sxs-lookup"><span data-stu-id="2c613-155">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="2c613-156">当方法返回时，如果分析操作成功，则包含从 <paramref name="source" /> 分析的值。</span><span class="sxs-lookup"><span data-stu-id="2c613-156">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="2c613-157">当方法返回时，如果分析操作成功，则包含已分析的子字符串的字节长度。</span><span class="sxs-lookup"><span data-stu-id="2c613-157">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="2c613-158">如果方法失败，则 <paramref name="bytesConsumed" /> 设置为 0。</span><span class="sxs-lookup"><span data-stu-id="2c613-158">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="2c613-159">Utf8 字符串的预期格式。</span><span class="sxs-lookup"><span data-stu-id="2c613-159">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="2c613-160">分析 Utf8 字符串开头的 <see cref="T:System.DateTimeOffset" />。</span><span class="sxs-lookup"><span data-stu-id="2c613-160">Parses a <see cref="T:System.DateTimeOffset" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="2c613-161">如果成功，则为 <see langword="true" />；如果字符串在语法上无效或者出现溢出或下溢，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="2c613-161"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="2c613-162">支持的格式:</span><span class="sxs-lookup"><span data-stu-id="2c613-162">Formats supported:</span></span>

|<span data-ttu-id="2c613-163">格式字符串</span><span class="sxs-lookup"><span data-stu-id="2c613-163">Format string</span></span>|<span data-ttu-id="2c613-164">示例格式应为</span><span class="sxs-lookup"><span data-stu-id="2c613-164">Example expected format</span></span>|<span data-ttu-id="2c613-165">注释</span><span class="sxs-lookup"><span data-stu-id="2c613-165">Comments</span></span>|
|--|--|--|
|<span data-ttu-id="2c613-166">G (默认值)</span><span class="sxs-lookup"><span data-stu-id="2c613-166">G  (default)</span></span>|<span data-ttu-id="2c613-167">05/25/2017 10:30:15</span><span class="sxs-lookup"><span data-stu-id="2c613-167">05/25/2017 10:30:15</span></span>| |
|<span data-ttu-id="2c613-168">R</span><span class="sxs-lookup"><span data-stu-id="2c613-168">R</span></span>|<span data-ttu-id="2c613-169">周二, 03 月 2017 08:08:05 GMT</span><span class="sxs-lookup"><span data-stu-id="2c613-169">Tue, 03 Jan 2017 08:08:05 GMT</span></span>|<span data-ttu-id="2c613-170">(RFC 1123)</span><span class="sxs-lookup"><span data-stu-id="2c613-170">(RFC 1123)</span></span>|
|<span data-ttu-id="2c613-171">l</span><span class="sxs-lookup"><span data-stu-id="2c613-171">l</span></span>|<span data-ttu-id="2c613-172">周二, 03 月 2017 08:08:05 gmt</span><span class="sxs-lookup"><span data-stu-id="2c613-172">tue, 03 jan 2017 08:08:05 gmt</span></span>|<span data-ttu-id="2c613-173">(小写 RFC 1123)</span><span class="sxs-lookup"><span data-stu-id="2c613-173">(Lowercase RFC 1123)</span></span>|
|<span data-ttu-id="2c613-174">O</span><span class="sxs-lookup"><span data-stu-id="2c613-174">O</span></span>|<span data-ttu-id="2c613-175">2017-06-12T05:30:45.7680000-07:00</span><span class="sxs-lookup"><span data-stu-id="2c613-175">2017-06-12T05:30:45.7680000-07:00</span></span>|<span data-ttu-id="2c613-176">(往返)</span><span class="sxs-lookup"><span data-stu-id="2c613-176">(Round-trippable)</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out decimal value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] valuetype System.Decimal&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.Decimal@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As Decimal, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; *  *  * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Decimal" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="2c613-177">要分析的 Utf8 字符串。</span><span class="sxs-lookup"><span data-stu-id="2c613-177">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="2c613-178">当方法返回时，如果分析操作成功，则包含从 <paramref name="source" /> 分析的值。</span><span class="sxs-lookup"><span data-stu-id="2c613-178">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="2c613-179">当方法返回时，如果分析操作成功，则包含已分析的子字符串的字节长度。</span><span class="sxs-lookup"><span data-stu-id="2c613-179">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="2c613-180">如果方法失败，则 <paramref name="bytesConsumed" /> 设置为 0。</span><span class="sxs-lookup"><span data-stu-id="2c613-180">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="2c613-181">Utf8 字符串的预期格式。</span><span class="sxs-lookup"><span data-stu-id="2c613-181">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="2c613-182">分析 Utf8 字符串开头的 <see cref="T:System.Decimal" />。</span><span class="sxs-lookup"><span data-stu-id="2c613-182">Parses a <see cref="T:System.Decimal" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="2c613-183">如果成功，则为 <see langword="true" />；如果字符串在语法上无效或者出现溢出或下溢，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="2c613-183"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="2c613-184">支持的格式:</span><span class="sxs-lookup"><span data-stu-id="2c613-184">Formats supported:</span></span>

|<span data-ttu-id="2c613-185">格式字符串</span><span class="sxs-lookup"><span data-stu-id="2c613-185">Format string</span></span>|<span data-ttu-id="2c613-186">示例格式应为</span><span class="sxs-lookup"><span data-stu-id="2c613-186">Example expected format</span></span>|<span data-ttu-id="2c613-187">注释</span><span class="sxs-lookup"><span data-stu-id="2c613-187">Comments</span></span>|
|--|--|--|
|<span data-ttu-id="2c613-188">G/g (默认值)</span><span class="sxs-lookup"><span data-stu-id="2c613-188">G/g  (default)</span></span>| |  
|<span data-ttu-id="2c613-189">F/f</span><span class="sxs-lookup"><span data-stu-id="2c613-189">F/f</span></span>|<span data-ttu-id="2c613-190">12.45</span><span class="sxs-lookup"><span data-stu-id="2c613-190">12.45</span></span>|<span data-ttu-id="2c613-191">固定点</span><span class="sxs-lookup"><span data-stu-id="2c613-191">Fixed point</span></span>|
|<span data-ttu-id="2c613-192">E/e</span><span class="sxs-lookup"><span data-stu-id="2c613-192">E/e</span></span>|<span data-ttu-id="2c613-193">1.245000e1</span><span class="sxs-lookup"><span data-stu-id="2c613-193">1.245000e1</span></span>|<span data-ttu-id="2c613-194">指数</span><span class="sxs-lookup"><span data-stu-id="2c613-194">Exponential</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out double value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] float64&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.Double@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As Double, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; *  *  * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Double" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="2c613-195">要分析的 Utf8 字符串。</span><span class="sxs-lookup"><span data-stu-id="2c613-195">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="2c613-196">当方法返回时，如果分析操作成功，则包含从 <paramref name="source" /> 分析的值。</span><span class="sxs-lookup"><span data-stu-id="2c613-196">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="2c613-197">当方法返回时，如果分析操作成功，则包含已分析的子字符串的字节长度。</span><span class="sxs-lookup"><span data-stu-id="2c613-197">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="2c613-198">如果方法失败，则 <paramref name="bytesConsumed" /> 设置为 0。</span><span class="sxs-lookup"><span data-stu-id="2c613-198">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="2c613-199">Utf8 字符串的预期格式。</span><span class="sxs-lookup"><span data-stu-id="2c613-199">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="2c613-200">分析 Utf8 字符串开头的 <see cref="T:System.Double" />。</span><span class="sxs-lookup"><span data-stu-id="2c613-200">Parses a <see cref="T:System.Double" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="2c613-201">如果成功，则为 <see langword="true" />；如果字符串在语法上无效或者出现溢出或下溢，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="2c613-201"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="2c613-202">支持的格式:</span><span class="sxs-lookup"><span data-stu-id="2c613-202">Formats supported:</span></span>

|<span data-ttu-id="2c613-203">格式字符串</span><span class="sxs-lookup"><span data-stu-id="2c613-203">Format string</span></span>|<span data-ttu-id="2c613-204">示例格式应为</span><span class="sxs-lookup"><span data-stu-id="2c613-204">Example expected format</span></span>|<span data-ttu-id="2c613-205">注释</span><span class="sxs-lookup"><span data-stu-id="2c613-205">Comments</span></span>|
|--|--|--|
|<span data-ttu-id="2c613-206">G/g (默认值)</span><span class="sxs-lookup"><span data-stu-id="2c613-206">G/g  (default)</span></span>| |  
|<span data-ttu-id="2c613-207">F/f</span><span class="sxs-lookup"><span data-stu-id="2c613-207">F/f</span></span>|<span data-ttu-id="2c613-208">12.45</span><span class="sxs-lookup"><span data-stu-id="2c613-208">12.45</span></span>|<span data-ttu-id="2c613-209">固定点</span><span class="sxs-lookup"><span data-stu-id="2c613-209">Fixed point</span></span>|
|<span data-ttu-id="2c613-210">E/e</span><span class="sxs-lookup"><span data-stu-id="2c613-210">E/e</span></span>|<span data-ttu-id="2c613-211">1.245000e1</span><span class="sxs-lookup"><span data-stu-id="2c613-211">1.245000e1</span></span>|<span data-ttu-id="2c613-212">指数</span><span class="sxs-lookup"><span data-stu-id="2c613-212">Exponential</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out Guid value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] valuetype System.Guid&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.Guid@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As Guid, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; *  *  * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Guid" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="2c613-213">要分析的 Utf8 字符串。</span><span class="sxs-lookup"><span data-stu-id="2c613-213">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="2c613-214">当方法返回时，如果分析操作成功，则包含从 <paramref name="source" /> 分析的值。</span><span class="sxs-lookup"><span data-stu-id="2c613-214">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="2c613-215">当方法返回时，如果分析操作成功，则包含已分析的子字符串的字节长度。</span><span class="sxs-lookup"><span data-stu-id="2c613-215">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="2c613-216">如果方法失败，则 <paramref name="bytesConsumed" /> 设置为 0。</span><span class="sxs-lookup"><span data-stu-id="2c613-216">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="2c613-217">Utf8 字符串的预期格式。</span><span class="sxs-lookup"><span data-stu-id="2c613-217">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="2c613-218">分析 Utf8 字符串开头的 <see cref="T:System.Guid" />。</span><span class="sxs-lookup"><span data-stu-id="2c613-218">Parses a <see cref="T:System.Guid" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="2c613-219">如果成功，则为 <see langword="true" />；如果字符串在语法上无效或者出现溢出或下溢，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="2c613-219"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="2c613-220">支持的格式:</span><span class="sxs-lookup"><span data-stu-id="2c613-220">Formats supported:</span></span>

|<span data-ttu-id="2c613-221">格式字符串</span><span class="sxs-lookup"><span data-stu-id="2c613-221">Format string</span></span>|<span data-ttu-id="2c613-222">预期格式</span><span class="sxs-lookup"><span data-stu-id="2c613-222">Expected format</span></span>|
|--|--|
|<span data-ttu-id="2c613-223">D (默认值)</span><span class="sxs-lookup"><span data-stu-id="2c613-223">D (default)</span></span>|<span data-ttu-id="2c613-224">nnnnnnnn-nnnn-nnnn-nnnn-nnnnnnnnnnnn</span><span class="sxs-lookup"><span data-stu-id="2c613-224">nnnnnnnn-nnnn-nnnn-nnnn-nnnnnnnnnnnn</span></span>|
|<span data-ttu-id="2c613-225">B</span><span class="sxs-lookup"><span data-stu-id="2c613-225">B</span></span>|<span data-ttu-id="2c613-226">{nnnnnnnn-nnnn-nnnn-nnnn-nnnnnnnnnnnn}</span><span class="sxs-lookup"><span data-stu-id="2c613-226">{nnnnnnnn-nnnn-nnnn-nnnn-nnnnnnnnnnnn}</span></span>|
|<span data-ttu-id="2c613-227">P</span><span class="sxs-lookup"><span data-stu-id="2c613-227">P</span></span>|<span data-ttu-id="2c613-228">(nnnnnnnn-nnnn-nnnnnnnnnnnn)</span><span class="sxs-lookup"><span data-stu-id="2c613-228">(nnnnnnnn-nnnn-nnnn-nnnn-nnnnnnnnnnnn)</span></span>|
|<span data-ttu-id="2c613-229">N</span><span class="sxs-lookup"><span data-stu-id="2c613-229">N</span></span>|<span data-ttu-id="2c613-230">nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn</span><span class="sxs-lookup"><span data-stu-id="2c613-230">nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out short value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] int16&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.Int16@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As Short, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; *  *  * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Int16" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="2c613-231">要分析的 Utf8 字符串。</span><span class="sxs-lookup"><span data-stu-id="2c613-231">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="2c613-232">当方法返回时，如果分析操作成功，则包含从 <paramref name="source" /> 分析的值。</span><span class="sxs-lookup"><span data-stu-id="2c613-232">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="2c613-233">当方法返回时，如果分析操作成功，则包含已分析的子字符串的字节长度。</span><span class="sxs-lookup"><span data-stu-id="2c613-233">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="2c613-234">如果方法失败，则 <paramref name="bytesConsumed" /> 设置为 0。</span><span class="sxs-lookup"><span data-stu-id="2c613-234">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="2c613-235">Utf8 字符串的预期格式。</span><span class="sxs-lookup"><span data-stu-id="2c613-235">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="2c613-236">分析 Utf8 字符串开头的 <see cref="T:System.Int16" />。</span><span class="sxs-lookup"><span data-stu-id="2c613-236">Parses an <see cref="T:System.Int16" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="2c613-237">如果成功，则为 <see langword="true" />；如果字符串在语法上无效或者出现溢出或下溢，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="2c613-237"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="2c613-238">支持的格式:</span><span class="sxs-lookup"><span data-stu-id="2c613-238">Formats supported:</span></span>

|<span data-ttu-id="2c613-239">格式字符串</span><span class="sxs-lookup"><span data-stu-id="2c613-239">Format string</span></span>|<span data-ttu-id="2c613-240">示例格式应为</span><span class="sxs-lookup"><span data-stu-id="2c613-240">Example expected format</span></span>|
|--|--|
|<span data-ttu-id="2c613-241">G/g (默认值)</span><span class="sxs-lookup"><span data-stu-id="2c613-241">G/g (default)</span></span>| |
|<span data-ttu-id="2c613-242">D/d</span><span class="sxs-lookup"><span data-stu-id="2c613-242">D/d</span></span>|<span data-ttu-id="2c613-243">32767</span><span class="sxs-lookup"><span data-stu-id="2c613-243">32767</span></span>|
|<span data-ttu-id="2c613-244">N/n</span><span class="sxs-lookup"><span data-stu-id="2c613-244">N/n</span></span>|<span data-ttu-id="2c613-245">32,767</span><span class="sxs-lookup"><span data-stu-id="2c613-245">32,767</span></span>|       
|<span data-ttu-id="2c613-246">X/x</span><span class="sxs-lookup"><span data-stu-id="2c613-246">X/x</span></span>|<span data-ttu-id="2c613-247">7fff</span><span class="sxs-lookup"><span data-stu-id="2c613-247">7fff</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out int value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] int32&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.Int32@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As Integer, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; *  *  * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Int32" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="2c613-248">要分析的 Utf8 字符串。</span><span class="sxs-lookup"><span data-stu-id="2c613-248">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="2c613-249">当方法返回时，如果分析操作成功，则包含从 <paramref name="source" /> 分析的值。</span><span class="sxs-lookup"><span data-stu-id="2c613-249">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="2c613-250">当方法返回时，如果分析操作成功，则包含已分析的子字符串的字节长度。</span><span class="sxs-lookup"><span data-stu-id="2c613-250">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="2c613-251">如果方法失败，则 <paramref name="bytesConsumed" /> 设置为 0。</span><span class="sxs-lookup"><span data-stu-id="2c613-251">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="2c613-252">Utf8 字符串的预期格式。</span><span class="sxs-lookup"><span data-stu-id="2c613-252">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="2c613-253">分析 Utf8 字符串开头的 <see cref="T:System.Int32" />。</span><span class="sxs-lookup"><span data-stu-id="2c613-253">Parses an <see cref="T:System.Int32" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="2c613-254">如果成功，则为 <see langword="true" />；如果字符串在语法上无效或者出现溢出或下溢，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="2c613-254"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="2c613-255">支持的格式:</span><span class="sxs-lookup"><span data-stu-id="2c613-255">Formats supported:</span></span>

|<span data-ttu-id="2c613-256">格式字符串</span><span class="sxs-lookup"><span data-stu-id="2c613-256">Format string</span></span>|<span data-ttu-id="2c613-257">示例格式应为</span><span class="sxs-lookup"><span data-stu-id="2c613-257">Example expected format</span></span>|
|--|--|
|<span data-ttu-id="2c613-258">G/g (默认值)</span><span class="sxs-lookup"><span data-stu-id="2c613-258">G/g (default)</span></span>| |
|<span data-ttu-id="2c613-259">D/d</span><span class="sxs-lookup"><span data-stu-id="2c613-259">D/d</span></span>|<span data-ttu-id="2c613-260">32767</span><span class="sxs-lookup"><span data-stu-id="2c613-260">32767</span></span>|
|<span data-ttu-id="2c613-261">N/n</span><span class="sxs-lookup"><span data-stu-id="2c613-261">N/n</span></span>|<span data-ttu-id="2c613-262">32,767</span><span class="sxs-lookup"><span data-stu-id="2c613-262">32,767</span></span>|       
|<span data-ttu-id="2c613-263">X/x</span><span class="sxs-lookup"><span data-stu-id="2c613-263">X/x</span></span>|<span data-ttu-id="2c613-264">7fff</span><span class="sxs-lookup"><span data-stu-id="2c613-264">7fff</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out long value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] int64&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.Int64@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As Long, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; *  *  * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Int64" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="2c613-265">要分析的 Utf8 字符串。</span><span class="sxs-lookup"><span data-stu-id="2c613-265">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="2c613-266">当方法返回时，如果分析操作成功，则包含从 <paramref name="source" /> 分析的值。</span><span class="sxs-lookup"><span data-stu-id="2c613-266">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="2c613-267">当方法返回时，如果分析操作成功，则包含已分析的子字符串的字节长度。</span><span class="sxs-lookup"><span data-stu-id="2c613-267">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="2c613-268">如果方法失败，则 <paramref name="bytesConsumed" /> 设置为 0。</span><span class="sxs-lookup"><span data-stu-id="2c613-268">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="2c613-269">Utf8 字符串的预期格式。</span><span class="sxs-lookup"><span data-stu-id="2c613-269">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="2c613-270">分析 Utf8 字符串开头的 <see cref="T:System.Int64" />。</span><span class="sxs-lookup"><span data-stu-id="2c613-270">Parses an <see cref="T:System.Int64" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="2c613-271">如果成功，则为 <see langword="true" />；如果字符串在语法上无效或者出现溢出或下溢，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="2c613-271"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="2c613-272">支持的格式:</span><span class="sxs-lookup"><span data-stu-id="2c613-272">Formats supported:</span></span>

|<span data-ttu-id="2c613-273">格式字符串</span><span class="sxs-lookup"><span data-stu-id="2c613-273">Format string</span></span>|<span data-ttu-id="2c613-274">示例格式应为</span><span class="sxs-lookup"><span data-stu-id="2c613-274">Example expected format</span></span>|
|--|--|
|<span data-ttu-id="2c613-275">G/g (默认值)</span><span class="sxs-lookup"><span data-stu-id="2c613-275">G/g (default)</span></span>| |
|<span data-ttu-id="2c613-276">D/d</span><span class="sxs-lookup"><span data-stu-id="2c613-276">D/d</span></span>|<span data-ttu-id="2c613-277">32767</span><span class="sxs-lookup"><span data-stu-id="2c613-277">32767</span></span>|
|<span data-ttu-id="2c613-278">N/n</span><span class="sxs-lookup"><span data-stu-id="2c613-278">N/n</span></span>|<span data-ttu-id="2c613-279">32,767</span><span class="sxs-lookup"><span data-stu-id="2c613-279">32,767</span></span>|       
|<span data-ttu-id="2c613-280">X/x</span><span class="sxs-lookup"><span data-stu-id="2c613-280">X/x</span></span>|<span data-ttu-id="2c613-281">7fff</span><span class="sxs-lookup"><span data-stu-id="2c613-281">7fff</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out sbyte value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] int8&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.SByte@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As SByte, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; *  *  * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-3.0;netcore-2.1;netcore-2.2;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.SByte" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="2c613-282">要分析的 Utf8 字符串。</span><span class="sxs-lookup"><span data-stu-id="2c613-282">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="2c613-283">当方法返回时，如果分析操作成功，则包含从 <paramref name="source" /> 分析的值。</span><span class="sxs-lookup"><span data-stu-id="2c613-283">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="2c613-284">当方法返回时，如果分析操作成功，则包含已分析的子字符串的字节长度。</span><span class="sxs-lookup"><span data-stu-id="2c613-284">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="2c613-285">如果方法失败，则 <paramref name="bytesConsumed" /> 设置为 0。</span><span class="sxs-lookup"><span data-stu-id="2c613-285">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="2c613-286">Utf8 字符串的预期格式。</span><span class="sxs-lookup"><span data-stu-id="2c613-286">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="2c613-287">分析 Utf8 字符串开头的 <see cref="T:System.SByte" />。</span><span class="sxs-lookup"><span data-stu-id="2c613-287">Parses an <see cref="T:System.SByte" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="2c613-288">如果成功，则为 <see langword="true" />；如果字符串在语法上无效或者出现溢出或下溢，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="2c613-288"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="2c613-289">支持的格式:</span><span class="sxs-lookup"><span data-stu-id="2c613-289">Formats supported:</span></span> 

|<span data-ttu-id="2c613-290">格式字符串</span><span class="sxs-lookup"><span data-stu-id="2c613-290">Format string</span></span>|<span data-ttu-id="2c613-291">示例格式应为</span><span class="sxs-lookup"><span data-stu-id="2c613-291">Example expected format</span></span>|
|--|--|
|<span data-ttu-id="2c613-292">G/g (默认值)</span><span class="sxs-lookup"><span data-stu-id="2c613-292">G/g (default)</span></span>| |
|<span data-ttu-id="2c613-293">D/d</span><span class="sxs-lookup"><span data-stu-id="2c613-293">D/d</span></span>|<span data-ttu-id="2c613-294">122</span><span class="sxs-lookup"><span data-stu-id="2c613-294">122</span></span>|
|<span data-ttu-id="2c613-295">N/n</span><span class="sxs-lookup"><span data-stu-id="2c613-295">N/n</span></span>|<span data-ttu-id="2c613-296">122</span><span class="sxs-lookup"><span data-stu-id="2c613-296">122</span></span>|       
|<span data-ttu-id="2c613-297">X/x</span><span class="sxs-lookup"><span data-stu-id="2c613-297">X/x</span></span>|<span data-ttu-id="2c613-298">7a</span><span class="sxs-lookup"><span data-stu-id="2c613-298">7a</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out float value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] float32&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.Single@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As Single, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; *  *  * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Single" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="2c613-299">要分析的 Utf8 字符串。</span><span class="sxs-lookup"><span data-stu-id="2c613-299">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="2c613-300">当方法返回时，如果分析操作成功，则包含从 <paramref name="source" /> 分析的值。</span><span class="sxs-lookup"><span data-stu-id="2c613-300">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="2c613-301">当方法返回时，如果分析操作成功，则包含已分析的子字符串的字节长度。</span><span class="sxs-lookup"><span data-stu-id="2c613-301">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="2c613-302">如果方法失败，则 <paramref name="bytesConsumed" /> 设置为 0。</span><span class="sxs-lookup"><span data-stu-id="2c613-302">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="2c613-303">Utf8 字符串的预期格式。</span><span class="sxs-lookup"><span data-stu-id="2c613-303">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="2c613-304">分析 Utf8 字符串开头的 <see cref="T:System.Single" />。</span><span class="sxs-lookup"><span data-stu-id="2c613-304">Parses a <see cref="T:System.Single" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="2c613-305">如果成功，则为 <see langword="true" />；如果字符串在语法上无效或者出现溢出或下溢，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="2c613-305"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="2c613-306">支持的格式:</span><span class="sxs-lookup"><span data-stu-id="2c613-306">Formats supported:</span></span> 

<span data-ttu-id="2c613-307">格式字符串</span><span class="sxs-lookup"><span data-stu-id="2c613-307">Format string</span></span>|<span data-ttu-id="2c613-308">示例应为 fornmat</span><span class="sxs-lookup"><span data-stu-id="2c613-308">Example expected fornmat</span></span>|<span data-ttu-id="2c613-309">注释</span><span class="sxs-lookup"><span data-stu-id="2c613-309">Comments</span></span>|
|--|--|--|
|<span data-ttu-id="2c613-310">G/g (默认值)</span><span class="sxs-lookup"><span data-stu-id="2c613-310">G/g  (default)</span></span>| |  
|<span data-ttu-id="2c613-311">F/f</span><span class="sxs-lookup"><span data-stu-id="2c613-311">F/f</span></span>|<span data-ttu-id="2c613-312">12.45</span><span class="sxs-lookup"><span data-stu-id="2c613-312">12.45</span></span>|<span data-ttu-id="2c613-313">固定点</span><span class="sxs-lookup"><span data-stu-id="2c613-313">Fixed point</span></span>|
|<span data-ttu-id="2c613-314">E/e</span><span class="sxs-lookup"><span data-stu-id="2c613-314">E/e</span></span>|<span data-ttu-id="2c613-315">1.245000e1</span><span class="sxs-lookup"><span data-stu-id="2c613-315">1.245000e1</span></span>|<span data-ttu-id="2c613-316">指数</span><span class="sxs-lookup"><span data-stu-id="2c613-316">Exponential</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out TimeSpan value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] valuetype System.TimeSpan&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.TimeSpan@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As TimeSpan, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; *  *  * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.TimeSpan" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="2c613-317">要分析的 Utf8 字符串。</span><span class="sxs-lookup"><span data-stu-id="2c613-317">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="2c613-318">当方法返回时，如果分析操作成功，则包含从 <paramref name="source" /> 分析的值。</span><span class="sxs-lookup"><span data-stu-id="2c613-318">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="2c613-319">当方法返回时，如果分析操作成功，则包含已分析的子字符串的字节长度。</span><span class="sxs-lookup"><span data-stu-id="2c613-319">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="2c613-320">如果方法失败，则 <paramref name="bytesConsumed" /> 设置为 0。</span><span class="sxs-lookup"><span data-stu-id="2c613-320">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="2c613-321">Utf8 字符串的预期格式。</span><span class="sxs-lookup"><span data-stu-id="2c613-321">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="2c613-322">分析 Utf8 字符串开头的 <see cref="T:System.TimeSpan" />。</span><span class="sxs-lookup"><span data-stu-id="2c613-322">Parses a <see cref="T:System.TimeSpan" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="2c613-323">如果成功，则为 <see langword="true" />；如果字符串在语法上无效或者出现溢出或下溢，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="2c613-323"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="2c613-324">支持的格式:</span><span class="sxs-lookup"><span data-stu-id="2c613-324">Formats supported:</span></span> 

|<span data-ttu-id="2c613-325">格式字符串</span><span class="sxs-lookup"><span data-stu-id="2c613-325">Format string</span></span>|<span data-ttu-id="2c613-326">预期格式</span><span class="sxs-lookup"><span data-stu-id="2c613-326">Expected format</span></span>|<span data-ttu-id="2c613-327">注释</span><span class="sxs-lookup"><span data-stu-id="2c613-327">Comments</span></span>|
|--|--|--|
|<span data-ttu-id="2c613-328">c/t/T (默认值)</span><span class="sxs-lookup"><span data-stu-id="2c613-328">c/t/T (default)</span></span>|<span data-ttu-id="2c613-329">[-][d.]hh: mm: ss [. fffffff]</span><span class="sxs-lookup"><span data-stu-id="2c613-329">[-][d.]hh:mm:ss[.fffffff]</span></span>|<span data-ttu-id="2c613-330">(常量格式)</span><span class="sxs-lookup"><span data-stu-id="2c613-330">(constant format)</span></span>|
|<span data-ttu-id="2c613-331">G</span><span class="sxs-lookup"><span data-stu-id="2c613-331">G</span></span>|<span data-ttu-id="2c613-332">[-] d:hh: mm: ss. fffffff</span><span class="sxs-lookup"><span data-stu-id="2c613-332">[-]d:hh:mm:ss.fffffff</span></span>||<span data-ttu-id="2c613-333">(常规长)</span><span class="sxs-lookup"><span data-stu-id="2c613-333">(general long)</span></span>|
|<span data-ttu-id="2c613-334">g</span><span class="sxs-lookup"><span data-stu-id="2c613-334">g</span></span>|<span data-ttu-id="2c613-335">[-][d:][h]h:mm:ss[.f[f[f[f[f[f[f]]]]]]</span><span class="sxs-lookup"><span data-stu-id="2c613-335">[-][d:][h]h:mm:ss[.f[f[f[f[f[f[f]]]]]]</span></span>|<span data-ttu-id="2c613-336">(一般简称)</span><span class="sxs-lookup"><span data-stu-id="2c613-336">(general short)</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out ushort value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] unsigned int16&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.UInt16@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As UShort, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; *  *  * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-3.0;netcore-2.1;netcore-2.2;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.UInt16" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="2c613-337">要分析的 Utf8 字符串。</span><span class="sxs-lookup"><span data-stu-id="2c613-337">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="2c613-338">当方法返回时，如果分析操作成功，则包含从 <paramref name="source" /> 分析的值。</span><span class="sxs-lookup"><span data-stu-id="2c613-338">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="2c613-339">当方法返回时，如果分析操作成功，则包含已分析的子字符串的字节长度。</span><span class="sxs-lookup"><span data-stu-id="2c613-339">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="2c613-340">如果方法失败，则 <paramref name="bytesConsumed" /> 设置为 0。</span><span class="sxs-lookup"><span data-stu-id="2c613-340">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="2c613-341">Utf8 字符串的预期格式。</span><span class="sxs-lookup"><span data-stu-id="2c613-341">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="2c613-342">分析 Utf8 字符串开头的 <see cref="T:System.UInt16" />。</span><span class="sxs-lookup"><span data-stu-id="2c613-342">Parses a <see cref="T:System.UInt16" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="2c613-343">如果成功，则为 <see langword="true" />；如果字符串在语法上无效或者出现溢出或下溢，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="2c613-343"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="2c613-344">支持的格式:</span><span class="sxs-lookup"><span data-stu-id="2c613-344">Formats supported:</span></span>

|<span data-ttu-id="2c613-345">格式字符串</span><span class="sxs-lookup"><span data-stu-id="2c613-345">Format string</span></span>|<span data-ttu-id="2c613-346">示例格式应为</span><span class="sxs-lookup"><span data-stu-id="2c613-346">Example expected format</span></span>|
|--|--|
|<span data-ttu-id="2c613-347">G/g (默认值)</span><span class="sxs-lookup"><span data-stu-id="2c613-347">G/g (default)</span></span>| |
|<span data-ttu-id="2c613-348">D/d</span><span class="sxs-lookup"><span data-stu-id="2c613-348">D/d</span></span>|<span data-ttu-id="2c613-349">32767</span><span class="sxs-lookup"><span data-stu-id="2c613-349">32767</span></span>|
|<span data-ttu-id="2c613-350">N/n</span><span class="sxs-lookup"><span data-stu-id="2c613-350">N/n</span></span>|<span data-ttu-id="2c613-351">32,767</span><span class="sxs-lookup"><span data-stu-id="2c613-351">32,767</span></span>|       
|<span data-ttu-id="2c613-352">X/x</span><span class="sxs-lookup"><span data-stu-id="2c613-352">X/x</span></span>|<span data-ttu-id="2c613-353">7fff</span><span class="sxs-lookup"><span data-stu-id="2c613-353">7fff</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out uint value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] unsigned int32&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.UInt32@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As UInteger, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; *  *  * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-3.0;netcore-2.1;netcore-2.2;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.UInt32" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="2c613-354">要分析的 Utf8 字符串。</span><span class="sxs-lookup"><span data-stu-id="2c613-354">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="2c613-355">当方法返回时，如果分析操作成功，则包含从 <paramref name="source" /> 分析的值。</span><span class="sxs-lookup"><span data-stu-id="2c613-355">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="2c613-356">当方法返回时，如果分析操作成功，则包含已分析的子字符串的字节长度。</span><span class="sxs-lookup"><span data-stu-id="2c613-356">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="2c613-357">如果方法失败，则 <paramref name="bytesConsumed" /> 设置为 0。</span><span class="sxs-lookup"><span data-stu-id="2c613-357">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="2c613-358">Utf8 字符串的预期格式。</span><span class="sxs-lookup"><span data-stu-id="2c613-358">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="2c613-359">分析 Utf8 字符串开头的 <see cref="T:System.UInt32" />。</span><span class="sxs-lookup"><span data-stu-id="2c613-359">Parses a <see cref="T:System.UInt32" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="2c613-360">如果成功，则为 <see langword="true" />；如果字符串在语法上无效或者出现溢出或下溢，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="2c613-360"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="2c613-361">支持的格式:</span><span class="sxs-lookup"><span data-stu-id="2c613-361">Formats supported:</span></span>

|<span data-ttu-id="2c613-362">格式字符串</span><span class="sxs-lookup"><span data-stu-id="2c613-362">Format string</span></span>|<span data-ttu-id="2c613-363">示例格式应为</span><span class="sxs-lookup"><span data-stu-id="2c613-363">Example expected format</span></span>|
|--|--|
|<span data-ttu-id="2c613-364">G/g (默认值)</span><span class="sxs-lookup"><span data-stu-id="2c613-364">G/g (default)</span></span>| |
|<span data-ttu-id="2c613-365">D/d</span><span class="sxs-lookup"><span data-stu-id="2c613-365">D/d</span></span>|<span data-ttu-id="2c613-366">32767</span><span class="sxs-lookup"><span data-stu-id="2c613-366">32767</span></span>|
|<span data-ttu-id="2c613-367">N/n</span><span class="sxs-lookup"><span data-stu-id="2c613-367">N/n</span></span>|<span data-ttu-id="2c613-368">32,767</span><span class="sxs-lookup"><span data-stu-id="2c613-368">32,767</span></span>|       
|<span data-ttu-id="2c613-369">X/x</span><span class="sxs-lookup"><span data-stu-id="2c613-369">X/x</span></span>|<span data-ttu-id="2c613-370">7fff</span><span class="sxs-lookup"><span data-stu-id="2c613-370">7fff</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out ulong value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] unsigned int64&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.UInt64@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As ULong, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; *  *  * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-3.0;netcore-2.1;netcore-2.2;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.UInt64" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="2c613-371">要分析的 Utf8 字符串。</span><span class="sxs-lookup"><span data-stu-id="2c613-371">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="2c613-372">当方法返回时，如果分析操作成功，则包含从 <paramref name="source" /> 分析的值。</span><span class="sxs-lookup"><span data-stu-id="2c613-372">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="2c613-373">当方法返回时，如果分析操作成功，则包含已分析的子字符串的字节长度。</span><span class="sxs-lookup"><span data-stu-id="2c613-373">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="2c613-374">如果方法失败，则 <paramref name="bytesConsumed" /> 设置为 0。</span><span class="sxs-lookup"><span data-stu-id="2c613-374">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="2c613-375">Utf8 字符串的预期格式。</span><span class="sxs-lookup"><span data-stu-id="2c613-375">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="2c613-376">分析 Utf8 字符串开头的 <see cref="T:System.UInt64" />。</span><span class="sxs-lookup"><span data-stu-id="2c613-376">Parses a <see cref="T:System.UInt64" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="2c613-377">如果成功，则为 <see langword="true" />；如果字符串在语法上无效或者出现溢出或下溢，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="2c613-377"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="2c613-378">支持的格式:</span><span class="sxs-lookup"><span data-stu-id="2c613-378">Formats supported:</span></span>

|<span data-ttu-id="2c613-379">格式字符串</span><span class="sxs-lookup"><span data-stu-id="2c613-379">Format string</span></span>|<span data-ttu-id="2c613-380">示例格式应为</span><span class="sxs-lookup"><span data-stu-id="2c613-380">Example expected format</span></span>|
|--|--|
|<span data-ttu-id="2c613-381">G/g (默认值)</span><span class="sxs-lookup"><span data-stu-id="2c613-381">G/g (default)</span></span>| |
|<span data-ttu-id="2c613-382">D/d</span><span class="sxs-lookup"><span data-stu-id="2c613-382">D/d</span></span>|<span data-ttu-id="2c613-383">32767</span><span class="sxs-lookup"><span data-stu-id="2c613-383">32767</span></span>|
|<span data-ttu-id="2c613-384">N/n</span><span class="sxs-lookup"><span data-stu-id="2c613-384">N/n</span></span>|<span data-ttu-id="2c613-385">32,767</span><span class="sxs-lookup"><span data-stu-id="2c613-385">32,767</span></span>|       
|<span data-ttu-id="2c613-386">X/x</span><span class="sxs-lookup"><span data-stu-id="2c613-386">X/x</span></span>|<span data-ttu-id="2c613-387">7fff</span><span class="sxs-lookup"><span data-stu-id="2c613-387">7fff</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
