<Type Name="Adorner" FullName="System.Windows.Forms.Design.Behavior.Adorner">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2e96b9f1b44f4a293297e4d9b4c2ecb6e353a511" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="65016404" /></Metadata><TypeSignature Language="C#" Value="public sealed class Adorner" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Adorner extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.Design.Behavior.Adorner" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Adorner" />
  <TypeSignature Language="C++ CLI" Value="public ref class Adorner sealed" />
  <TypeSignature Language="F#" Value="type Adorner = class" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>管理与用户界面相关的 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 对象的集合。 此类不能被继承。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可以<xref:System.Windows.Forms.Design.Behavior.Adorner>启用和禁用每个。 仅启用<xref:System.Windows.Forms.Design.Behavior.Adorner>的对象将接收来自的<xref:System.Windows.Forms.Design.Behavior.BehaviorService>命中测试和绘制消息。 可在与用户界面相关的元素 (包括所有<xref:System.Windows.Forms.Design.Behavior.Glyph>对象和<xref:System.Windows.Forms.Design.Behavior.BehaviorService>) 之间查看代理。 <xref:System.Windows.Forms.Design.Behavior.Adorner>  
  
 有关详细信息, 请参阅[行为服务概述](https://msdn.microsoft.com/library/7c60cc41-4324-46b5-b444-b39eda7cb33f)。  
  
   
  
## Examples  
 下面的代码示例演示<xref:System.Windows.Forms.Design.Behavior.Adorner>类如何<xref:System.Windows.Forms.Design.Behavior.Glyph>与和<xref:System.Windows.Forms.Design.Behavior.BehaviorService>类交互。 此代码示例是为<xref:System.Windows.Forms.Design.Behavior.BehaviorService>类提供的更大示例的一部分。  
  
 [!code-cpp[System.Windows.Forms.Design.Behavior.BehaviorService#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Design.Behavior.BehaviorService/cpp/Form1.cpp#3)]
 [!code-csharp[System.Windows.Forms.Design.Behavior.BehaviorService#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Design.Behavior.BehaviorService/CS/Form1.cs#3)]
 [!code-vb[System.Windows.Forms.Design.Behavior.BehaviorService#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Design.Behavior.BehaviorService/VB/Form1.vb#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.Design.Behavior.Glyph" />
    <altmember cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />
    <altmember cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />
    <altmember cref="T:System.Windows.Forms.Design.Behavior.Behavior" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ms171820(v=vs.120)">如何：在设计模式下扩展控件的外观和行为</related>
    <related type="Article" href="https://msdn.microsoft.com/library/7c60cc41-4324-46b5-b444-b39eda7cb33f">行为服务概述</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Adorner ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.Behavior.Adorner.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Adorner();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 默认情况下, <xref:System.Windows.Forms.Design.Behavior.GlyphCollection> 构造函数创建新的并启用。<xref:System.Windows.Forms.Design.Behavior.Adorner.%23ctor%2A>  
  
   
  
## Examples  
 下面的代码示例演示如何初始化 <xref:System.Windows.Forms.Design.Behavior.Adorner> 类的新实例。 此代码示例是为<xref:System.Windows.Forms.Design.Behavior.BehaviorService>类提供的更大示例的一部分。  
  
 [!code-cpp[System.Windows.Forms.Design.Behavior.BehaviorService#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Design.Behavior.BehaviorService/cpp/Form1.cpp#3)]
 [!code-csharp[System.Windows.Forms.Design.Behavior.BehaviorService#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Design.Behavior.BehaviorService/CS/Form1.cs#3)]
 [!code-vb[System.Windows.Forms.Design.Behavior.BehaviorService#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Design.Behavior.BehaviorService/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Design.Behavior.Glyph" />
        <altmember cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />
        <altmember cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />
      </Docs>
    </Member>
    <Member MemberName="BehaviorService">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Design.Behavior.BehaviorService BehaviorService { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Design.Behavior.BehaviorService BehaviorService" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Design.Behavior.Adorner.BehaviorService" />
      <MemberSignature Language="VB.NET" Value="Public Property BehaviorService As BehaviorService" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Design::Behavior::BehaviorService ^ BehaviorService { System::Windows::Forms::Design::Behavior::BehaviorService ^ get(); void set(System::Windows::Forms::Design::Behavior::BehaviorService ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BehaviorService : System.Windows.Forms.Design.Behavior.BehaviorService with get, set" Usage="System.Windows.Forms.Design.Behavior.Adorner.BehaviorService" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Design.Behavior.BehaviorService</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置与 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> 关联的 <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />。</summary>
        <value>与 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> 关联的 <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection> <xref:System.Windows.Forms.Design.Behavior.Adorner> <xref:System.Windows.Forms.Design.Behavior.BehaviorService>当将添加到<xref:System.Windows.Forms.Design.Behavior.BehaviorService>的时, 该集合将设置此属性, 以便可以回叫。 <xref:System.Windows.Forms.Design.Behavior.Adorner>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Design.Behavior.Glyph" />
        <altmember cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />
        <altmember cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Design.Behavior.Adorner.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool with get, set" Usage="System.Windows.Forms.Design.Behavior.Adorner.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示 <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> 是否能够启用。</summary>
        <value>如果启用了 <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `true` <xref:System.Windows.Forms.Design.Behavior.BehaviorService> `Paint` <xref:System.Windows.Forms.Design.Behavior.Adorner> `HitTest`如果属性为, 则类将向发送消息并向发送消息。 <xref:System.Windows.Forms.Design.Behavior.Adorner.Enabled%2A>  
  
   
  
## Examples  
 下面的代码示例演示如何启用和禁用<xref:System.Windows.Forms.Design.Behavior.Adorner>。 有关完整的代码清单, 请[参阅如何:在设计模式下](https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ms171820(v=vs.120))扩展控件的外观和行为。  
  
 [!code-csharp[System.Windows.Forms.Design.Behavior.Glyph.MarginBorderAnchorGlyphs#12](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Design.Behavior.Glyph.MarginBorderAnchorGlyphs/CS/DesignerDemoControl.cs#12)]
 [!code-vb[System.Windows.Forms.Design.Behavior.Glyph.MarginBorderAnchorGlyphs#12](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Design.Behavior.Glyph.MarginBorderAnchorGlyphs/VB/DesignerDemoControl.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Design.Behavior.Glyph" />
        <altmember cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />
        <altmember cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />
      </Docs>
    </Member>
    <Member MemberName="Glyphs">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Design.Behavior.GlyphCollection Glyphs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Design.Behavior.GlyphCollection Glyphs" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Design.Behavior.Adorner.Glyphs" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Glyphs As GlyphCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Design::Behavior::GlyphCollection ^ Glyphs { System::Windows::Forms::Design::Behavior::GlyphCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Glyphs : System.Windows.Forms.Design.Behavior.GlyphCollection" Usage="System.Windows.Forms.Design.Behavior.Adorner.Glyphs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Design.Behavior.GlyphCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 集合。</summary>
        <value><see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 对象的集合。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的示例演示如何访问<xref:System.Windows.Forms.Design.Behavior.Glyph>集合。 此代码示例是为<xref:System.Windows.Forms.Design.Behavior.BehaviorService>类提供的更大示例的一部分。  
  
 [!code-cpp[System.Windows.Forms.Design.Behavior.BehaviorService#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Design.Behavior.BehaviorService/cpp/Form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.Design.Behavior.BehaviorService#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Design.Behavior.BehaviorService/CS/Form1.cs#4)]
 [!code-vb[System.Windows.Forms.Design.Behavior.BehaviorService#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Design.Behavior.BehaviorService/VB/Form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Design.Behavior.Glyph" />
        <altmember cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />
        <altmember cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Invalidate">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>强制 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> 刷新其装饰器窗口。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的示例演示如何强制<xref:System.Windows.Forms.Design.Behavior.Adorner>重绘窗口。 有关完整的代码清单, 请[参阅如何:在设计模式下](https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ms171820(v=vs.120))扩展控件的外观和行为。  
  
 [!code-csharp[System.Windows.Forms.Design.Behavior.Glyph.MarginBorderAnchorGlyphs#13](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Design.Behavior.Glyph.MarginBorderAnchorGlyphs/CS/DesignerDemoControl.cs#13)]
 [!code-vb[System.Windows.Forms.Design.Behavior.Glyph.MarginBorderAnchorGlyphs#13](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Design.Behavior.Glyph.MarginBorderAnchorGlyphs/VB/DesignerDemoControl.vb#13)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Design.Behavior.Glyph" />
        <altmember cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />
        <altmember cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Invalidate">
      <MemberSignature Language="C#" Value="public void Invalidate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invalidate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.Behavior.Adorner.Invalidate" />
      <MemberSignature Language="VB.NET" Value="Public Sub Invalidate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invalidate();" />
      <MemberSignature Language="F#" Value="member this.Invalidate : unit -&gt; unit" Usage="adorner.Invalidate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>强制 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> 刷新其装饰器窗口。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例演示如何强制<xref:System.Windows.Forms.Design.Behavior.Adorner>重绘窗口。 有关完整的代码清单, 请[参阅如何:在设计模式下](https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ms171820(v=vs.120))扩展控件的外观和行为。  
  
 [!code-csharp[System.Windows.Forms.Design.Behavior.Glyph.MarginBorderAnchorGlyphs#13](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Design.Behavior.Glyph.MarginBorderAnchorGlyphs/CS/DesignerDemoControl.cs#13)]
 [!code-vb[System.Windows.Forms.Design.Behavior.Glyph.MarginBorderAnchorGlyphs#13](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Design.Behavior.Glyph.MarginBorderAnchorGlyphs/VB/DesignerDemoControl.vb#13)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Design.Behavior.Glyph" />
        <altmember cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />
        <altmember cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />
      </Docs>
    </Member>
    <Member MemberName="Invalidate">
      <MemberSignature Language="C#" Value="public void Invalidate (System.Drawing.Rectangle rectangle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invalidate(valuetype System.Drawing.Rectangle rectangle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.Behavior.Adorner.Invalidate(System.Drawing.Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invalidate(System::Drawing::Rectangle rectangle);" />
      <MemberSignature Language="F#" Value="member this.Invalidate : System.Drawing.Rectangle -&gt; unit" Usage="adorner.Invalidate rectangle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="rectangle">要使之无效的区域。</param>
        <summary>强制 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> 在给定的 <see cref="T:System.Drawing.Rectangle" /> 内刷新其装饰器窗口。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.Design.Behavior.Glyph" />
        <altmember cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />
        <altmember cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />
      </Docs>
    </Member>
    <Member MemberName="Invalidate">
      <MemberSignature Language="C#" Value="public void Invalidate (System.Drawing.Region region);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invalidate(class System.Drawing.Region region) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.Behavior.Adorner.Invalidate(System.Drawing.Region)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invalidate(System::Drawing::Region ^ region);" />
      <MemberSignature Language="F#" Value="member this.Invalidate : System.Drawing.Region -&gt; unit" Usage="adorner.Invalidate region" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="region" Type="System.Drawing.Region" />
      </Parameters>
      <Docs>
        <param name="region">要使之无效的 <see cref="T:System.Drawing.Region" />。</param>
        <summary>强制 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> 在给定的 <see cref="T:System.Drawing.Region" /> 内刷新其装饰器窗口。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.Design.Behavior.Glyph" />
        <altmember cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />
        <altmember cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />
      </Docs>
    </Member>
  </Members>
</Type>