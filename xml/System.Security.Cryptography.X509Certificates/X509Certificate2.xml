<Type Name="X509Certificate2" FullName="System.Security.Cryptography.X509Certificates.X509Certificate2">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6a20fa78951797e973f27dcc4683110f9d721679" /><Meta Name="ms.sourcegitcommit" Value="406d23aba879fbb482c6da0f64c8ef9494f6a944" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/31/2019" /><Meta Name="ms.locfileid" Value="68686266" /></Metadata><TypeSignature Language="C#" Value="public class X509Certificate2 : System.Security.Cryptography.X509Certificates.X509Certificate" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit X509Certificate2 extends System.Security.Cryptography.X509Certificates.X509Certificate" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />
  <TypeSignature Language="VB.NET" Value="Public Class X509Certificate2&#xA;Inherits X509Certificate" />
  <TypeSignature Language="C++ CLI" Value="public ref class X509Certificate2 : System::Security::Cryptography::X509Certificates::X509Certificate" />
  <TypeSignature Language="F#" Value="type X509Certificate2 = class&#xA;    inherit X509Certificate" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.X509Certificates.X509Certificate</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="c2f6b-101">表示 X.509 证书。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-101">Represents an X.509 certificate.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2f6b-102">X.509 结构源自国际标准化组织 (ISO) 工作组。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-102">The X.509 structure originated in the International Organization for Standardization (ISO) working groups.</span></span> <span data-ttu-id="c2f6b-103">此结构可用于表示各种类型的信息, 包括标识、权利和持有者属性 (权限、年龄、性别、位置、从属关系, 等等)。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-103">This structure can be used to represent various types of information including identity, entitlement, and holder attributes (permissions, age, sex, location, affiliation, and so forth).</span></span> <span data-ttu-id="c2f6b-104">尽管 ISO 规范在结构本身上是最丰富的信息, <xref:System.Security.Cryptography.X509Certificates.X509Certificate2>但类设计用于根据 Internet 工程任务组 (IETF) 公钥基础结构 x.509 (PKIX) 工作组。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-104">Although the ISO specifications are most informative on the structure itself, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> class is designed to model the usage scenarios defined in specifications issued by the Internet Engineering Task Force (IETF) Public Key Infrastructure, X.509 (PKIX) working group.</span></span> <span data-ttu-id="c2f6b-105">这些规范的最重要信息是 RFC 3280 "[证书和证书吊销列表 (CRL) 配置文件](https://go.microsoft.com/fwlink/?LinkId=45286)"。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-105">The most informative of these specifications is RFC 3280, "[Certificate and Certificate Revocation List (CRL) Profile](https://go.microsoft.com/fwlink/?LinkId=45286)."</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="c2f6b-106">从开始<xref:System.IDisposable> , 此类型实现接口。 [!INCLUDE[net_v46](~/includes/net-v46-md.md)]</span><span class="sxs-lookup"><span data-stu-id="c2f6b-106">Starting with the [!INCLUDE[net_v46](~/includes/net-v46-md.md)], this type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="c2f6b-107">在使用完类型后，您应直接或间接释放类型。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-107">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="c2f6b-108">若要直接<xref:System.IDisposable.Dispose%2A>释放类型, 请`try` / `catch`在块中调用其方法。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-108">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="c2f6b-109">若要间接释放类型，请使用 `using`（在 C# 中）或 `Using`（在 Visual Basic 中）等语言构造。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-109">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="c2f6b-110">有关详细信息, 请参阅<xref:System.IDisposable>接口主题中的 "使用实现 IDisposable 的对象" 一节。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-110">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
>   
>  <span data-ttu-id="c2f6b-111">对于面向[!INCLUDE[net_v452](~/includes/net-v452-md.md)]和更早版本的应用<xref:System.Security.Cryptography.X509Certificates.X509Certificate2> , <xref:System.IDisposable>类不实现接口, 因此不具有`Dispose`方法。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-111">For apps that target the [!INCLUDE[net_v452](~/includes/net-v452-md.md)] and earlier versions, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> class does not implement the <xref:System.IDisposable> interface and therefore does not have a `Dispose` method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c2f6b-112">下面的示例演示如何使用<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>对象对文件进行加密和解密。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-112">The following example demonstrates how to use an <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object to encrypt and decrypt a file.</span></span>  
  
 [!code-csharp[X509Certificate2#1](~/samples/snippets/csharp/VS_Snippets_CLR/x509certificate2/cs/program.cs#1)]
 [!code-vb[X509Certificate2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/x509certificate2/vb/program.vb#1)]  
  
 <span data-ttu-id="c2f6b-113">下面的示例创建一个命令行可执行文件, 该命令行可执行文件将证书文件作为参数, 并将各种证书属性打印到控制台。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-113">The following example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c2f6b-114">初始化 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-114">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c2f6b-115">初始化 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-115">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2f6b-116">此构造函数将创建<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>一个空对象, 这不同于此类的其他构造函数, 该构造函数使用字节数组、指针或证书文件中的证书信息。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-116">This constructor creates an empty <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object, unlike the other constructors for this class that use certificate information from a byte array, a pointer, or a certificate file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c2f6b-117">下面的代码示例打开当前用户证书存储, 仅选择活动证书, 并允许用户选择一个或多个证书。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-117">The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates.</span></span> <span data-ttu-id="c2f6b-118">然后, 该示例将证书信息写入控制台。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-118">The example then writes certificate information to the console.</span></span>  
  
 [!code-cpp[CertSelect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[CertSelect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[CertSelect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (byte[] rawData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] rawData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rawData As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(cli::array &lt;System::Byte&gt; ^ rawData);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509Certificate2 : byte[] -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="new System.Security.Cryptography.X509Certificates.X509Certificate2 rawData" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rawData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rawData"><span data-ttu-id="c2f6b-119">一个包含 X.509 证书数据的字节数组。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-119">A byte array containing data from an X.509 certificate.</span></span></param>
        <summary><span data-ttu-id="c2f6b-120">使用来自字节数组的信息初始化 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-120">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using information from a byte array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2f6b-121">此构造函数使用字节<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>数组中的证书信息创建新的对象。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-121">This constructor creates a new <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object using certificate information from a byte array.</span></span> <span data-ttu-id="c2f6b-122">字节数组可以是编码的二进制文件 (DER) 或 Base64 编码的 x.509 数据。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-122">The byte array can be binary (DER) encoded or Base64-encoded X.509 data.</span></span> <span data-ttu-id="c2f6b-123">字节数组还可以是 PKCS7 (Authenticode) 签名文件;签名者证书用于创建对象。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-123">The byte array can also be a PKCS7 (Authenticode) signed file; the signer certificate is used to create the object.</span></span>  
  
 <span data-ttu-id="c2f6b-124">如果通过为`rawData`指定<xref:System.Security.Cryptography.X509Certificates.X509Certificate2> PKCS7 签名的文件存储来创建证书, 则<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>会为对存储区 (而不是存储区中的任何证书) 签名的证书创建。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-124">If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> certificate by specifying a PKCS7 signed file store for `rawData`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> is created for the certificate that signed the store rather than for any of the certificates within the store.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="c2f6b-125">发生了与证书有关的错误。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-125">An error with the certificate occurs.</span></span> <span data-ttu-id="c2f6b-126">例如:</span><span class="sxs-lookup"><span data-stu-id="c2f6b-126">For example:</span></span>  
  
<span data-ttu-id="c2f6b-127">-   证书文件不存在。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-127">-   The certificate file does not exist.</span></span>  
  
<span data-ttu-id="c2f6b-128">-   证书无效。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-128">-   The certificate is invalid.</span></span>  
  
<span data-ttu-id="c2f6b-129">-   证书的密码不正确。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-129">-   The certificate's password is incorrect.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (handle As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(IntPtr handle);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509Certificate2 : nativeint -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="new System.Security.Cryptography.X509Certificates.X509Certificate2 handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle"><span data-ttu-id="c2f6b-130">一个指向非托管代码中的证书上下文的指针。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-130">A pointer to a certificate context in unmanaged code.</span></span> <span data-ttu-id="c2f6b-131">C 结构称为 <see langword="PCCERT_CONTEXT" />。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-131">The C structure is called <see langword="PCCERT_CONTEXT" />.</span></span></param>
        <summary><span data-ttu-id="c2f6b-132">使用非托管句柄初始化 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-132">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using an unmanaged handle.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2f6b-133">此构造函数使用 Microsoft <xref:System.Security.Cryptography.X509Certificates.X509Certificate2>加密 API 证书`PCCERT_CONTEXT`上下文的句柄创建新的对象。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-133">This constructor creates a new <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object using a handle for the Microsoft Cryptographic API certificate context, `PCCERT_CONTEXT`.</span></span> <span data-ttu-id="c2f6b-134">请注意, 此构造函数的直接调用方需要非托管代码权限。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-134">Note that the immediate caller of this constructor requires unmanaged code permission.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="c2f6b-135">构造函数创建证书上下文的副本。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-135">The constructor creates a copy of the certificate context.</span></span> <span data-ttu-id="c2f6b-136">不要假设您传递给构造函数的上下文结构是有效的;它可能已被释放。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-136">Do not assume that the context structure you passed to the constructor is valid; it may have been released.</span></span> <span data-ttu-id="c2f6b-137">可以`PCCERT_CONTEXT` <xref:System.Security.Cryptography.X509Certificates.X509Certificate2>从属性获取当前结构的副本, 但它仅在对象的生存期内有效。 <xref:System.Security.Cryptography.X509Certificates.X509Certificate.Handle%2A></span><span class="sxs-lookup"><span data-stu-id="c2f6b-137">You can get a copy of the current `PCCERT_CONTEXT` structure from the <xref:System.Security.Cryptography.X509Certificates.X509Certificate.Handle%2A> property, but it is valid only during the lifetime of the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="c2f6b-138">发生了与证书有关的错误。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-138">An error with the certificate occurs.</span></span> <span data-ttu-id="c2f6b-139">例如:</span><span class="sxs-lookup"><span data-stu-id="c2f6b-139">For example:</span></span>  
  
<span data-ttu-id="c2f6b-140">-   证书文件不存在。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-140">-   The certificate file does not exist.</span></span>  
  
<span data-ttu-id="c2f6b-141">-   证书无效。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-141">-   The certificate is invalid.</span></span>  
  
<span data-ttu-id="c2f6b-142">-   证书的密码不正确。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-142">-   The certificate's password is incorrect.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="c2f6b-143">用于访问非托管代码。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-143">for accessing unmanaged code.</span></span> <span data-ttu-id="c2f6b-144">安全操作: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-144">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span></span> <span data-ttu-id="c2f6b-145">关联的枚举:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="c2f6b-145">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (System.Security.Cryptography.X509Certificates.X509Certificate certificate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Cryptography.X509Certificates.X509Certificate certificate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (certificate As X509Certificate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(System::Security::Cryptography::X509Certificates::X509Certificate ^ certificate);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509Certificate2 : System.Security.Cryptography.X509Certificates.X509Certificate -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="new System.Security.Cryptography.X509Certificates.X509Certificate2 certificate" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="certificate"><span data-ttu-id="c2f6b-146"><see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-146">An <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> object.</span></span></param>
        <summary><span data-ttu-id="c2f6b-147">使用 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> 对象初始化 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-147">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2f6b-148">此方法<xref:System.Security.Cryptography.X509Certificates.X509Certificate2> <xref:System.Security.Cryptography.X509Certificates.X509Certificate>使用对象创建类的新实例。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-148">This method creates a new instance of the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> class using an <xref:System.Security.Cryptography.X509Certificates.X509Certificate> object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="c2f6b-149">发生了与证书有关的错误。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-149">An error with the certificate occurs.</span></span> <span data-ttu-id="c2f6b-150">例如:</span><span class="sxs-lookup"><span data-stu-id="c2f6b-150">For example:</span></span>  
  
<span data-ttu-id="c2f6b-151">-   证书文件不存在。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-151">-   The certificate file does not exist.</span></span>  
  
<span data-ttu-id="c2f6b-152">-   证书无效。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-152">-   The certificate is invalid.</span></span>  
  
<span data-ttu-id="c2f6b-153">-   证书的密码不正确。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-153">-   The certificate's password is incorrect.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="c2f6b-154">用于访问非托管代码。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-154">for accessing unmanaged code.</span></span> <span data-ttu-id="c2f6b-155">安全操作: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-155">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span></span> <span data-ttu-id="c2f6b-156">关联的枚举:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="c2f6b-156">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509Certificate2 : string -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="new System.Security.Cryptography.X509Certificates.X509Certificate2 fileName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="c2f6b-157">一个证书文件的名称。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-157">The name of a certificate file.</span></span></param>
        <summary><span data-ttu-id="c2f6b-158">使用证书文件名初始化 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-158">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a certificate file name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2f6b-159">此构造函数使用证书<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>文件名创建新的对象。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-159">This constructor creates a new <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object using a certificate file name.</span></span> <span data-ttu-id="c2f6b-160">它支持二进制 (DER) 编码或 Base64 编码。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-160">It supports binary (DER) encoding or Base64 encoding.</span></span>  
  
 <span data-ttu-id="c2f6b-161">如果通过为`fileName`指定<xref:System.Security.Cryptography.X509Certificates.X509Certificate2> PKCS7 签名的文件存储来创建证书, 则<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>会为对存储区 (而不是存储区中的任何证书) 签名的证书创建。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-161">If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> certificate by specifying a PKCS7 signed file store for `fileName`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> is created for the certificate that signed the store rather than for any of the certificates within the store.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="c2f6b-162">发生了与证书有关的错误。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-162">An error with the certificate occurs.</span></span> <span data-ttu-id="c2f6b-163">例如:</span><span class="sxs-lookup"><span data-stu-id="c2f6b-163">For example:</span></span>  
  
<span data-ttu-id="c2f6b-164">-   证书文件不存在。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-164">-   The certificate file does not exist.</span></span>  
  
<span data-ttu-id="c2f6b-165">-   证书无效。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-165">-   The certificate is invalid.</span></span>  
  
<span data-ttu-id="c2f6b-166">-   证书的密码不正确。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-166">-   The certificate's password is incorrect.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (byte[] rawData, System.Security.SecureString password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] rawData, class System.Security.SecureString password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[],System.Security.SecureString)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rawData As Byte(), password As SecureString)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(cli::array &lt;System::Byte&gt; ^ rawData, System::Security::SecureString ^ password);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509Certificate2 : byte[] * System.Security.SecureString -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="new System.Security.Cryptography.X509Certificates.X509Certificate2 (rawData, password)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="rawData" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="password" Type="System.Security.SecureString" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="rawData"><span data-ttu-id="c2f6b-167">包含 X.509 证书数据的字节数组。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-167">A byte array that contains data from an X.509 certificate.</span></span></param>
        <param name="password"><span data-ttu-id="c2f6b-168">访问 X.509 证书数据所需的密码。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-168">The password required to access the X.509 certificate data.</span></span></param>
        <summary><span data-ttu-id="c2f6b-169">使用一个字节数组和一个密码初始化 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-169">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a byte array and a password.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2f6b-170">此构造函数与包含证书私钥的 PKCS12 (PFX) 文件一起使用。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-170">This constructor is used with PKCS12 (PFX) files that contain the certificate's private key.</span></span> <span data-ttu-id="c2f6b-171">使用正确的密码调用此构造函数将对私钥进行解密, 并将其保存到密钥容器。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-171">Calling this constructor with the correct password decrypts the private key and saves it to a key container.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="c2f6b-172">切勿在源代码中对密码进行硬编码。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-172">Never hard code a password within your source code.</span></span>  <span data-ttu-id="c2f6b-173">使用[Ildasm (IL 拆装器)](~/docs/framework/tools/ildasm-exe-il-disassembler.md)、十六进制编辑器或只是在文本编辑器 (例如 notepad.exe) 中打开程序集, 可以从程序集检索硬编码的密码。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-173">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 <span data-ttu-id="c2f6b-174">如果通过为`rawData`指定<xref:System.Security.Cryptography.X509Certificates.X509Certificate> PKCS7 签名的文件存储来创建证书, 则<xref:System.Security.Cryptography.X509Certificates.X509Certificate>会为对存储区 (而不是存储区中的任何证书) 签名的证书创建。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-174">If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate> certificate by specifying a PKCS7 signed file store for `rawData`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate> is created for the certificate that signed the store rather than for any of the certificates within the store.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="c2f6b-175">发生了与证书有关的错误。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-175">An error with the certificate occurs.</span></span> <span data-ttu-id="c2f6b-176">例如:</span><span class="sxs-lookup"><span data-stu-id="c2f6b-176">For example:</span></span>  
  
<span data-ttu-id="c2f6b-177">-   证书文件不存在。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-177">-   The certificate file does not exist.</span></span>  
  
<span data-ttu-id="c2f6b-178">-   证书无效。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-178">-   The certificate is invalid.</span></span>  
  
<span data-ttu-id="c2f6b-179">-   证书的密码不正确。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-179">-   The certificate's password is incorrect.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="c2f6b-180">用于访问非托管代码。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-180">for accessing unmanaged code.</span></span> <span data-ttu-id="c2f6b-181">安全操作: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-181">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span></span> <span data-ttu-id="c2f6b-182">关联的枚举:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="c2f6b-182">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (byte[] rawData, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] rawData, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rawData As Byte(), password As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(cli::array &lt;System::Byte&gt; ^ rawData, System::String ^ password);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509Certificate2 : byte[] * string -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="new System.Security.Cryptography.X509Certificates.X509Certificate2 (rawData, password)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rawData" Type="System.Byte[]" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="rawData"><span data-ttu-id="c2f6b-183">一个包含 X.509 证书数据的字节数组。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-183">A byte array containing data from an X.509 certificate.</span></span></param>
        <param name="password"><span data-ttu-id="c2f6b-184">访问 X.509 证书数据所需的密码。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-184">The password required to access the X.509 certificate data.</span></span></param>
        <summary><span data-ttu-id="c2f6b-185">使用一个字节数组和一个密码初始化 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-185">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a byte array and a password.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2f6b-186">此构造函数使用一个<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>字节数组和一个访问证书数据所需的密码来创建一个新的对象。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-186">This constructor creates a new <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object using a byte array and a password that is needed to access the certificate data.</span></span> <span data-ttu-id="c2f6b-187">它与包含证书私钥的 PKCS12 (PFX) 文件一起使用。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-187">It is used with PKCS12 (PFX) files that contain the certificate's private key.</span></span> <span data-ttu-id="c2f6b-188">使用正确的密码调用此构造函数将对私钥进行解密, 并将其保存到密钥容器。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-188">Calling this constructor with the correct password decrypts the private key and saves it to a key container.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="c2f6b-189">切勿在源代码中对密码进行硬编码。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-189">Never hard code a password within your source code.</span></span>  <span data-ttu-id="c2f6b-190">使用[Ildasm (IL 拆装器)](~/docs/framework/tools/ildasm-exe-il-disassembler.md)、十六进制编辑器或只是在文本编辑器 (例如 notepad.exe) 中打开程序集, 可以从程序集检索硬编码的密码。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-190">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 <span data-ttu-id="c2f6b-191">如果通过为`rawData`指定<xref:System.Security.Cryptography.X509Certificates.X509Certificate2> PKCS7 签名的文件存储来创建证书, 则<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>会为对存储区 (而不是存储区中的任何证书) 签名的证书创建。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-191">If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> certificate by specifying a PKCS7 signed file store for `rawData`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> is created for the certificate that signed the store rather than for any of the certificates within the store.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="c2f6b-192">发生了与证书有关的错误。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-192">An error with the certificate occurs.</span></span> <span data-ttu-id="c2f6b-193">例如:</span><span class="sxs-lookup"><span data-stu-id="c2f6b-193">For example:</span></span>  
  
<span data-ttu-id="c2f6b-194">-   证书文件不存在。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-194">-   The certificate file does not exist.</span></span>  
  
<span data-ttu-id="c2f6b-195">-   证书无效。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-195">-   The certificate is invalid.</span></span>  
  
<span data-ttu-id="c2f6b-196">-   证书的密码不正确。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-196">-   The certificate's password is incorrect.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="c2f6b-197">用于访问非托管代码。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-197">for accessing unmanaged code.</span></span> <span data-ttu-id="c2f6b-198">安全操作: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-198">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span></span> <span data-ttu-id="c2f6b-199">关联的枚举:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="c2f6b-199">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected X509Certificate2 (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; X509Certificate2(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509Certificate2 : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="new System.Security.Cryptography.X509Certificates.X509Certificate2 (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="c2f6b-200">反序列化新的 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 所需的序列化信息。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-200">The serialization information required to deserialize the new <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />.</span></span></param>
        <param name="context"><span data-ttu-id="c2f6b-201">有关要反序列化的流的源的上下文信息。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-201">Contextual information about the source of the stream to be deserialized.</span></span></param>
        <summary><span data-ttu-id="c2f6b-202">使用指定的序列化和流上下文信息初始化 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-202">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using the specified serialization and stream context information.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="c2f6b-203">仅限 .NET Core：在所有情况下。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-203">.NET Core only: In all cases.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="c2f6b-204">用于访问非托管代码。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-204">for accessing unmanaged code.</span></span> <span data-ttu-id="c2f6b-205">安全操作: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-205">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span></span> <span data-ttu-id="c2f6b-206">关联的枚举:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="c2f6b-206">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (string fileName, System.Security.SecureString password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, class System.Security.SecureString password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String,System.Security.SecureString)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, password As SecureString)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(System::String ^ fileName, System::Security::SecureString ^ password);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509Certificate2 : string * System.Security.SecureString -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="new System.Security.Cryptography.X509Certificates.X509Certificate2 (fileName, password)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="password" Type="System.Security.SecureString" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="c2f6b-207">一个证书文件的名称。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-207">The name of a certificate file.</span></span></param>
        <param name="password"><span data-ttu-id="c2f6b-208">访问 X.509 证书数据所需的密码。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-208">The password required to access the X.509 certificate data.</span></span></param>
        <summary><span data-ttu-id="c2f6b-209">使用一个证书文件名和一个密码初始化 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-209">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a certificate file name and a password.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2f6b-210">此构造函数与包含证书私钥的 PKCS12 (PFX) 文件一起使用。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-210">This constructor is used with PKCS12 (PFX) files that contain the certificate's private key.</span></span> <span data-ttu-id="c2f6b-211">使用正确的密码调用此构造函数将对私钥进行解密, 并将其保存到密钥容器。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-211">Calling this constructor with the correct password decrypts the private key and saves it to a key container.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="c2f6b-212">切勿在源代码中对密码进行硬编码。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-212">Never hard code a password within your source code.</span></span>  <span data-ttu-id="c2f6b-213">使用[Ildasm (IL 拆装器)](~/docs/framework/tools/ildasm-exe-il-disassembler.md)、十六进制编辑器或只是在文本编辑器 (例如 notepad.exe) 中打开程序集, 可以从程序集检索硬编码的密码。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-213">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 <span data-ttu-id="c2f6b-214">如果通过为`fileName`指定<xref:System.Security.Cryptography.X509Certificates.X509Certificate> PKCS7 签名的文件存储来创建证书, 则<xref:System.Security.Cryptography.X509Certificates.X509Certificate>会为对存储区 (而不是存储区中的任何证书) 签名的证书创建。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-214">If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate> certificate by specifying a PKCS7 signed file store for `fileName`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate> is created for the certificate that signed the store rather than for any of the certificates within the store.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="c2f6b-215">发生了与证书有关的错误。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-215">An error with the certificate occurs.</span></span> <span data-ttu-id="c2f6b-216">例如:</span><span class="sxs-lookup"><span data-stu-id="c2f6b-216">For example:</span></span>  
  
<span data-ttu-id="c2f6b-217">-   证书文件不存在。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-217">-   The certificate file does not exist.</span></span>  
  
<span data-ttu-id="c2f6b-218">-   证书无效。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-218">-   The certificate is invalid.</span></span>  
  
<span data-ttu-id="c2f6b-219">-   证书的密码不正确。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-219">-   The certificate's password is incorrect.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="c2f6b-220">用于访问非托管代码。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-220">for accessing unmanaged code.</span></span> <span data-ttu-id="c2f6b-221">安全操作: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-221">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span></span> <span data-ttu-id="c2f6b-222">关联的枚举:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="c2f6b-222">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (string fileName, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, password As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(System::String ^ fileName, System::String ^ password);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509Certificate2 : string * string -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="new System.Security.Cryptography.X509Certificates.X509Certificate2 (fileName, password)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="c2f6b-223">一个证书文件的名称。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-223">The name of a certificate file.</span></span></param>
        <param name="password"><span data-ttu-id="c2f6b-224">访问 X.509 证书数据所需的密码。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-224">The password required to access the X.509 certificate data.</span></span></param>
        <summary><span data-ttu-id="c2f6b-225">使用一个证书文件名和一个用于访问该证书的密码初始化 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-225">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a certificate file name and a password used to access the certificate.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2f6b-226">此构造函数使用证书<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>文件名和访问证书所需的密码来创建新的对象。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-226">This constructor creates a new <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object using a certificate file name and a password needed to access the certificate.</span></span> <span data-ttu-id="c2f6b-227">它与包含证书私钥的 PKCS12 (PFX) 文件一起使用。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-227">It is used with PKCS12 (PFX) files that contain the certificate's private key.</span></span> <span data-ttu-id="c2f6b-228">使用正确的密码调用此构造函数将对私钥进行解密, 并将其保存到密钥容器。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-228">Calling this constructor with the correct password decrypts the private key and saves it to a key container.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="c2f6b-229">切勿在源代码中对密码进行硬编码。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-229">Never hard code a password within your source code.</span></span>  <span data-ttu-id="c2f6b-230">使用[Ildasm (IL 拆装器)](~/docs/framework/tools/ildasm-exe-il-disassembler.md)、十六进制编辑器或只是在文本编辑器 (例如 notepad.exe) 中打开程序集, 可以从程序集检索硬编码的密码。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-230">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 <span data-ttu-id="c2f6b-231">如果通过为`fileName`指定<xref:System.Security.Cryptography.X509Certificates.X509Certificate2> PKCS7 签名的文件存储来创建证书, 则<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>会为对存储区 (而不是存储区中的任何证书) 签名的证书创建。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-231">If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> certificate by specifying a PKCS7 signed file store for `fileName`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> is created for the certificate that signed the store rather than for any of the certificates within the store.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="c2f6b-232">发生了与证书有关的错误。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-232">An error with the certificate occurs.</span></span> <span data-ttu-id="c2f6b-233">例如:</span><span class="sxs-lookup"><span data-stu-id="c2f6b-233">For example:</span></span>  
  
<span data-ttu-id="c2f6b-234">-   证书文件不存在。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-234">-   The certificate file does not exist.</span></span>  
  
<span data-ttu-id="c2f6b-235">-   证书无效。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-235">-   The certificate is invalid.</span></span>  
  
<span data-ttu-id="c2f6b-236">-   证书的密码不正确。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-236">-   The certificate's password is incorrect.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="c2f6b-237">用于访问非托管代码。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-237">for accessing unmanaged code.</span></span> <span data-ttu-id="c2f6b-238">安全操作: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-238">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span></span> <span data-ttu-id="c2f6b-239">关联的枚举:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="c2f6b-239">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (byte[] rawData, System.Security.SecureString password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] rawData, class System.Security.SecureString password, valuetype System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rawData As Byte(), password As SecureString, keyStorageFlags As X509KeyStorageFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(cli::array &lt;System::Byte&gt; ^ rawData, System::Security::SecureString ^ password, System::Security::Cryptography::X509Certificates::X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509Certificate2 : byte[] * System.Security.SecureString * System.Security.Cryptography.X509Certificates.X509KeyStorageFlags -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="new System.Security.Cryptography.X509Certificates.X509Certificate2 (rawData, password, keyStorageFlags)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="rawData" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="password" Type="System.Security.SecureString" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="keyStorageFlags" Type="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="rawData"><span data-ttu-id="c2f6b-240">包含 X.509 证书数据的字节数组。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-240">A byte array that contains data from an X.509 certificate.</span></span></param>
        <param name="password"><span data-ttu-id="c2f6b-241">访问 X.509 证书数据所需的密码。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-241">The password required to access the X.509 certificate data.</span></span></param>
        <param name="keyStorageFlags"><span data-ttu-id="c2f6b-242">一个枚举值的按位组合，这些值控制在何处以及如何导入证书。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-242">A bitwise combination of the enumeration values that control where and how to import the certificate.</span></span></param>
        <summary><span data-ttu-id="c2f6b-243">使用一个字节数组、一个密码和一个密钥存储标志初始化 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-243">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a byte array, a password, and a key storage flag.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2f6b-244">此构造函数与包含证书私钥的 PKCS12 (PFX) 文件一起使用。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-244">This constructor is used with PKCS12 (PFX) files that contain the certificate's private key.</span></span> <span data-ttu-id="c2f6b-245">使用正确的密码调用此构造函数将对私钥进行解密, 并将其保存到 Microsoft 加密 API 加密服务提供程序 (CSP)。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-245">Calling this constructor with the correct password decrypts the private key and saves it to a Microsoft Cryptographic API Cryptographic Service Provider (CSP).</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="c2f6b-246">切勿在源代码中对密码进行硬编码。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-246">Never hard code a password within your source code.</span></span>  <span data-ttu-id="c2f6b-247">使用[Ildasm (IL 拆装器)](~/docs/framework/tools/ildasm-exe-il-disassembler.md)、十六进制编辑器或只是在文本编辑器 (例如 notepad.exe) 中打开程序集, 可以从程序集检索硬编码的密码。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-247">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 <span data-ttu-id="c2f6b-248">如果通过为`rawData`指定<xref:System.Security.Cryptography.X509Certificates.X509Certificate> PKCS7 签名的文件存储来创建证书, 则<xref:System.Security.Cryptography.X509Certificates.X509Certificate>会为对存储区 (而不是存储区中的任何证书) 签名的证书创建。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-248">If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate> certificate by specifying a PKCS7 signed file store for `rawData`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate> is created for the certificate that signed the store rather than for any of the certificates within the store.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="c2f6b-249">发生了与证书有关的错误。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-249">An error with the certificate occurs.</span></span> <span data-ttu-id="c2f6b-250">例如:</span><span class="sxs-lookup"><span data-stu-id="c2f6b-250">For example:</span></span>  
  
<span data-ttu-id="c2f6b-251">-   证书文件不存在。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-251">-   The certificate file does not exist.</span></span>  
  
<span data-ttu-id="c2f6b-252">-   证书无效。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-252">-   The certificate is invalid.</span></span>  
  
<span data-ttu-id="c2f6b-253">-   证书的密码不正确。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-253">-   The certificate's password is incorrect.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="c2f6b-254">用于访问非托管代码。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-254">for accessing unmanaged code.</span></span> <span data-ttu-id="c2f6b-255">安全操作: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-255">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span></span> <span data-ttu-id="c2f6b-256">关联的枚举:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="c2f6b-256">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (byte[] rawData, string password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] rawData, string password, valuetype System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rawData As Byte(), password As String, keyStorageFlags As X509KeyStorageFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(cli::array &lt;System::Byte&gt; ^ rawData, System::String ^ password, System::Security::Cryptography::X509Certificates::X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509Certificate2 : byte[] * string * System.Security.Cryptography.X509Certificates.X509KeyStorageFlags -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="new System.Security.Cryptography.X509Certificates.X509Certificate2 (rawData, password, keyStorageFlags)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rawData" Type="System.Byte[]" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="keyStorageFlags" Type="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" />
      </Parameters>
      <Docs>
        <param name="rawData"><span data-ttu-id="c2f6b-257">一个包含 X.509 证书数据的字节数组。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-257">A byte array containing data from an X.509 certificate.</span></span></param>
        <param name="password"><span data-ttu-id="c2f6b-258">访问 X.509 证书数据所需的密码。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-258">The password required to access the X.509 certificate data.</span></span></param>
        <param name="keyStorageFlags"><span data-ttu-id="c2f6b-259">一个枚举值的按位组合，这些值控制在何处以及如何导入证书。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-259">A bitwise combination of the enumeration values that control where and how to import the certificate.</span></span></param>
        <summary><span data-ttu-id="c2f6b-260">使用一个字节数组、一个密码和一个密钥存储标志初始化 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-260">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a byte array, a password, and a key storage flag.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2f6b-261">此构造函数使用字节<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>数组、访问证书数据所需的密码和密钥存储标志来创建一个新的对象。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-261">This constructor creates a new <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object using a byte array, a password that is needed to access the certificate data, and a key storage flag.</span></span> <span data-ttu-id="c2f6b-262">它与包含证书私钥的 PKCS12 (PFX) 文件一起使用。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-262">It is used with PKCS12 (PFX) files that contain the certificate's private key.</span></span> <span data-ttu-id="c2f6b-263">使用正确的密码调用此构造函数将对私钥进行解密, 并将其保存到 Microsoft 加密 API 加密服务提供程序 (CSP)。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-263">Calling this constructor with the correct password decrypts the private key and saves it to a Microsoft Cryptographic API Cryptographic Service Provider (CSP).</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="c2f6b-264">切勿在源代码中对密码进行硬编码。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-264">Never hard code a password within your source code.</span></span>  <span data-ttu-id="c2f6b-265">使用[Ildasm (IL 拆装器)](~/docs/framework/tools/ildasm-exe-il-disassembler.md)、十六进制编辑器或只是在文本编辑器 (例如 notepad.exe) 中打开程序集, 可以从程序集检索硬编码的密码。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-265">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 <span data-ttu-id="c2f6b-266">如果通过为`rawData`指定<xref:System.Security.Cryptography.X509Certificates.X509Certificate2> PKCS7 签名的文件存储来创建证书, 则<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>会为对存储区 (而不是存储区中的任何证书) 签名的证书创建。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-266">If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> certificate by specifying a PKCS7 signed file store for `rawData`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> is created for the certificate that signed the store rather than for any of the certificates within the store.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="c2f6b-267">发生了与证书有关的错误。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-267">An error with the certificate occurs.</span></span> <span data-ttu-id="c2f6b-268">例如:</span><span class="sxs-lookup"><span data-stu-id="c2f6b-268">For example:</span></span>  
  
<span data-ttu-id="c2f6b-269">-   证书文件不存在。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-269">-   The certificate file does not exist.</span></span>  
  
<span data-ttu-id="c2f6b-270">-   证书无效。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-270">-   The certificate is invalid.</span></span>  
  
<span data-ttu-id="c2f6b-271">-   证书的密码不正确。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-271">-   The certificate's password is incorrect.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="c2f6b-272">用于访问非托管代码。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-272">for accessing unmanaged code.</span></span> <span data-ttu-id="c2f6b-273">安全操作: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-273">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span></span> <span data-ttu-id="c2f6b-274">关联的枚举:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="c2f6b-274">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (string fileName, System.Security.SecureString password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, class System.Security.SecureString password, valuetype System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, password As SecureString, keyStorageFlags As X509KeyStorageFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(System::String ^ fileName, System::Security::SecureString ^ password, System::Security::Cryptography::X509Certificates::X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509Certificate2 : string * System.Security.SecureString * System.Security.Cryptography.X509Certificates.X509KeyStorageFlags -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="new System.Security.Cryptography.X509Certificates.X509Certificate2 (fileName, password, keyStorageFlags)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="password" Type="System.Security.SecureString" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="keyStorageFlags" Type="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="c2f6b-275">一个证书文件的名称。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-275">The name of a certificate file.</span></span></param>
        <param name="password"><span data-ttu-id="c2f6b-276">访问 X.509 证书数据所需的密码。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-276">The password required to access the X.509 certificate data.</span></span></param>
        <param name="keyStorageFlags"><span data-ttu-id="c2f6b-277">一个枚举值的按位组合，这些值控制在何处以及如何导入证书。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-277">A bitwise combination of the enumeration values that control where and how to import the certificate.</span></span></param>
        <summary><span data-ttu-id="c2f6b-278">使用一个证书文件名、一个密码和一个密钥存储标志初始化 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-278">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a certificate file name, a password, and a key storage flag.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2f6b-279">如果通过为`fileName`指定<xref:System.Security.Cryptography.X509Certificates.X509Certificate> PKCS7 签名的文件存储来创建证书, 则<xref:System.Security.Cryptography.X509Certificates.X509Certificate>会为对存储区 (而不是存储区中的任何证书) 签名的证书创建。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-279">If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate> certificate by specifying a PKCS7 signed file store for `fileName`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate> is created for the certificate that signed the store rather than for any of the certificates within the store.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="c2f6b-280">发生了与证书有关的错误。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-280">An error with the certificate occurs.</span></span> <span data-ttu-id="c2f6b-281">例如:</span><span class="sxs-lookup"><span data-stu-id="c2f6b-281">For example:</span></span>  
  
<span data-ttu-id="c2f6b-282">-   证书文件不存在。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-282">-   The certificate file does not exist.</span></span>  
  
<span data-ttu-id="c2f6b-283">-   证书无效。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-283">-   The certificate is invalid.</span></span>  
  
<span data-ttu-id="c2f6b-284">-   证书的密码不正确。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-284">-   The certificate's password is incorrect.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="c2f6b-285">用于访问非托管代码。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-285">for accessing unmanaged code.</span></span> <span data-ttu-id="c2f6b-286">安全操作: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-286">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span></span> <span data-ttu-id="c2f6b-287">关联的枚举:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="c2f6b-287">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (string fileName, string password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, string password, valuetype System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, password As String, keyStorageFlags As X509KeyStorageFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(System::String ^ fileName, System::String ^ password, System::Security::Cryptography::X509Certificates::X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509Certificate2 : string * string * System.Security.Cryptography.X509Certificates.X509KeyStorageFlags -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="new System.Security.Cryptography.X509Certificates.X509Certificate2 (fileName, password, keyStorageFlags)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="keyStorageFlags" Type="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="c2f6b-288">一个证书文件的名称。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-288">The name of a certificate file.</span></span></param>
        <param name="password"><span data-ttu-id="c2f6b-289">访问 X.509 证书数据所需的密码。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-289">The password required to access the X.509 certificate data.</span></span></param>
        <param name="keyStorageFlags"><span data-ttu-id="c2f6b-290">一个枚举值的按位组合，这些值控制在何处以及如何导入证书。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-290">A bitwise combination of the enumeration values that control where and how to import the certificate.</span></span></param>
        <summary><span data-ttu-id="c2f6b-291">使用一个证书文件名、一个用于访问该证书的密码和一个密钥存储标志初始化 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-291">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a certificate file name, a password used to access the certificate, and a key storage flag.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2f6b-292">此构造函数使用证书<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>文件名、访问证书所需的密码和密钥存储标志来创建一个新的对象。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-292">This constructor creates a new <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object using a certificate file name, a password needed to access the certificate, and a key storage flag.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="c2f6b-293">切勿在源代码中对密码进行硬编码。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-293">Never hard code a password within your source code.</span></span>  <span data-ttu-id="c2f6b-294">使用[Ildasm (IL 拆装器)](~/docs/framework/tools/ildasm-exe-il-disassembler.md)、十六进制编辑器或只是在文本编辑器 (例如 notepad.exe) 中打开程序集, 可以从程序集检索硬编码的密码。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-294">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 <span data-ttu-id="c2f6b-295">如果通过为`fileName`指定<xref:System.Security.Cryptography.X509Certificates.X509Certificate2> PKCS7 签名的文件存储来创建证书, 则<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>会为对存储区 (而不是存储区中的任何证书) 签名的证书创建。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-295">If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> certificate by specifying a PKCS7 signed file store for `fileName`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> is created for the certificate that signed the store rather than for any of the certificates within the store.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="c2f6b-296">发生了与证书有关的错误。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-296">An error with the certificate occurs.</span></span> <span data-ttu-id="c2f6b-297">例如:</span><span class="sxs-lookup"><span data-stu-id="c2f6b-297">For example:</span></span>  
  
<span data-ttu-id="c2f6b-298">-   证书文件不存在。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-298">-   The certificate file does not exist.</span></span>  
  
<span data-ttu-id="c2f6b-299">-   证书无效。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-299">-   The certificate is invalid.</span></span>  
  
<span data-ttu-id="c2f6b-300">-   证书的密码不正确。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-300">-   The certificate's password is incorrect.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="c2f6b-301">用于访问非托管代码。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-301">for accessing unmanaged code.</span></span> <span data-ttu-id="c2f6b-302">安全操作: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-302">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span></span> <span data-ttu-id="c2f6b-303">关联的枚举:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="c2f6b-303">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Archived">
      <MemberSignature Language="C#" Value="public bool Archived { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Archived" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.Archived" />
      <MemberSignature Language="VB.NET" Value="Public Property Archived As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Archived { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Archived : bool with get, set" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.Archived" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c2f6b-304">获取或设置一个指示是否存档 X.509 证书的值。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-304">Gets or sets a value indicating that an X.509 certificate is archived.</span></span></summary>
        <value><span data-ttu-id="c2f6b-305">如果存档该证书，则为 <see langword="true" />；如果不存档该证书，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-305"><see langword="true" /> if the certificate is archived, <see langword="false" /> if the certificate is not archived.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2f6b-306">仅对与存储关联的证书设置此属性。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-306">This property is set only on a certificate that is associated with a store.</span></span> <span data-ttu-id="c2f6b-307">如果设置了属性, 并将证书添加到证书存储区, 则会保留值。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-307">If the property is set and the certificate is added to a certificate store, the value is persisted.</span></span> <span data-ttu-id="c2f6b-308">如果在从存储区中检索到的证书上设置了该属性, 则会立即保留值。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-308">If the property is set on a certificate retrieved from a store, the value is persisted immediately.</span></span>  
  
 <span data-ttu-id="c2f6b-309">在 x.509 存储中, 存档的证书不包含在返回<xref:System.Security.Cryptography.X509Certificates.X509Certificate2Collection>的对象中, 除非将<xref:System.Security.Cryptography.X509Certificates.X509Certificate2.Archived%2A>属性设置为。 `true`</span><span class="sxs-lookup"><span data-stu-id="c2f6b-309">In an X.509 store, archived certificates are not included in the returned <xref:System.Security.Cryptography.X509Certificates.X509Certificate2Collection> object unless the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.Archived%2A> property is set to `true`.</span></span> <span data-ttu-id="c2f6b-310">设置或取消设置<xref:System.Security.Cryptography.X509Certificates.X509Certificate2.Archived%2A>值时, 不会发生物理存档活动。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-310">No physical archival activity occurs when the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.Archived%2A> value is set or unset.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c2f6b-311">下面的代码示例打开当前用户证书存储, 仅选择活动证书, 并允许用户选择一个或多个证书。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-311">The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates.</span></span> <span data-ttu-id="c2f6b-312">然后, 该示例将证书信息写入控制台。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-312">The example then writes certificate information to the console.</span></span>  
  
 [!code-cpp[CertSelect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[CertSelect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[CertSelect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="c2f6b-313">该证书不可读。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-313">The certificate is unreadable.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Export">
      <MemberSignature Language="C#" Value="public override byte[] Export (System.Security.Cryptography.X509Certificates.X509ContentType contentType, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] Export(valuetype System.Security.Cryptography.X509Certificates.X509ContentType contentType, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Export(System.Security.Cryptography.X509Certificates.X509ContentType,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Export (contentType As X509ContentType, password As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ Export(System::Security::Cryptography::X509Certificates::X509ContentType contentType, System::String ^ password);" />
      <MemberSignature Language="F#" Value="override this.Export : System.Security.Cryptography.X509Certificates.X509ContentType * string -&gt; byte[]" Usage="x509Certificate2.Export (contentType, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("X509ContentType.SerializedCert is not supported")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contentType" Type="System.Security.Cryptography.X509Certificates.X509ContentType" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="password" Type="System.String" Index="1" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="contentType">To be added.</param>
        <param name="password">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Extensions">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509ExtensionCollection Extensions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509ExtensionCollection Extensions" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.Extensions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Extensions As X509ExtensionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X509ExtensionCollection ^ Extensions { System::Security::Cryptography::X509Certificates::X509ExtensionCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Extensions : System.Security.Cryptography.X509Certificates.X509ExtensionCollection" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.Extensions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509ExtensionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c2f6b-314">获取 <see cref="T:System.Security.Cryptography.X509Certificates.X509Extension" /> 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-314">Gets a collection of <see cref="T:System.Security.Cryptography.X509Certificates.X509Extension" /> objects.</span></span></summary>
        <value><span data-ttu-id="c2f6b-315"><see cref="T:System.Security.Cryptography.X509Certificates.X509ExtensionCollection" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-315">An <see cref="T:System.Security.Cryptography.X509Certificates.X509ExtensionCollection" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2f6b-316">X.509 v3 证书格式中定义的扩展允许在证书中包含其他数据。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-316">The extensions defined in the X.509 v3 certificate format allow additional data to be included in the certificate.</span></span> <span data-ttu-id="c2f6b-317">X.509 v3 定义以及 RFC 3280 "[证书和证书吊销列表 (CRL) 配置文件](https://go.microsoft.com/fwlink/?LinkId=45286)" 中的 PKIX 定义了许多扩展。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-317">A number of extensions are defined by ISO in the X.509 v3 definition as well as by PKIX in RFC 3280, "[Certificate and Certificate Revocation List (CRL) Profile](https://go.microsoft.com/fwlink/?LinkId=45286)."</span></span> <span data-ttu-id="c2f6b-318">常见的扩展包括有关密钥用法 (<xref:System.Security.Cryptography.X509Certificates.X509KeyUsageExtension>)、密钥标识符 (<xref:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension>)、证书策略、吊销信息 (CRL 分发点扩展) 以及其他用途的信息。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-318">Common extensions include information regarding key usage (<xref:System.Security.Cryptography.X509Certificates.X509KeyUsageExtension>), key identifiers (<xref:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension>), certificate policies, revocation information (CRL Distribution Point extension), and other uses.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c2f6b-319">下面的代码示例打开当前用户证书存储, 仅选择活动证书, 并允许用户选择一个或多个证书。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-319">The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates.</span></span> <span data-ttu-id="c2f6b-320">然后, 该示例将证书信息写入控制台。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-320">The example then writes certificate information to the console.</span></span>  
  
 [!code-cpp[CertSelect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[CertSelect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[CertSelect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="c2f6b-321">该证书不可读。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-321">The certificate is unreadable.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FriendlyName">
      <MemberSignature Language="C#" Value="public string FriendlyName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FriendlyName" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.FriendlyName" />
      <MemberSignature Language="VB.NET" Value="Public Property FriendlyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FriendlyName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FriendlyName : string with get, set" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.FriendlyName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c2f6b-322">获取或设置证书的关联别名。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-322">Gets or sets the associated alias for a certificate.</span></span></summary>
        <value><span data-ttu-id="c2f6b-323">证书的友好名称。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-323">The certificate's friendly name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2f6b-324">友好名称是可设置的 x.509 证书存储中的属性。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-324">Friendly names are properties in the X.509 certificate store that can be set.</span></span> <span data-ttu-id="c2f6b-325">它们用于使用户能够将别名与证书相关联, 以便能够轻松地识别它们。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-325">They are used to enable a user to associate aliases with certificates so they can be easily identified.</span></span>  
  
 <span data-ttu-id="c2f6b-326">如果证书不存在友好名称, 则返回空字符串 ("")。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-326">If no friendly name exists for the certificate, an empty string ("") is returned.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c2f6b-327">下面的代码示例创建一个命令行可执行文件, 该命令行可执行文件将证书文件作为参数, 并将各种证书属性打印到控制台。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-327">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="c2f6b-328">该证书不可读。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-328">The certificate is unreadable.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCertContentType">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c2f6b-329">指示字节数组或文件中所包含的证书类型。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-329">Indicates the type of certificate contained in a byte array or file.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCertContentType">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.X509Certificates.X509ContentType GetCertContentType (byte[] rawData);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Security.Cryptography.X509Certificates.X509ContentType GetCertContentType(unsigned int8[] rawData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCertContentType (rawData As Byte()) As X509ContentType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::X509Certificates::X509ContentType GetCertContentType(cli::array &lt;System::Byte&gt; ^ rawData);" />
      <MemberSignature Language="F#" Value="static member GetCertContentType : byte[] -&gt; System.Security.Cryptography.X509Certificates.X509ContentType" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType rawData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("Detection limited to Cert, Pfx, Pkcs12, Pkcs7 and Unknown")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509ContentType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rawData"><span data-ttu-id="c2f6b-330">一个包含 X.509 证书数据的字节数组。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-330">A byte array containing data from an X.509 certificate.</span></span></param>
        <summary><span data-ttu-id="c2f6b-331">指示字节数组中所包含的证书类型。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-331">Indicates the type of certificate contained in a byte array.</span></span></summary>
        <returns><span data-ttu-id="c2f6b-332"><see cref="T:System.Security.Cryptography.X509Certificates.X509ContentType" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-332">An <see cref="T:System.Security.Cryptography.X509Certificates.X509ContentType" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2f6b-333">此方法使你能够发现文件中的证书类型。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-333">This method enables you to discover the type of certificate in a file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c2f6b-334">下面的代码示例打开当前用户证书存储, 仅选择活动证书, 并允许用户选择一个或多个证书。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-334">The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates.</span></span> <span data-ttu-id="c2f6b-335">然后, 该示例将证书信息写入控制台。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-335">The example then writes certificate information to the console.</span></span>  
  
 [!code-cpp[CertSelect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[CertSelect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[CertSelect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c2f6b-336"><paramref name="rawData" /> 的长度为零或为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-336"><paramref name="rawData" /> has a zero length or is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetCertContentType">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.X509Certificates.X509ContentType GetCertContentType (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Security.Cryptography.X509Certificates.X509ContentType GetCertContentType(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCertContentType (fileName As String) As X509ContentType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::X509Certificates::X509ContentType GetCertContentType(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="static member GetCertContentType : string -&gt; System.Security.Cryptography.X509Certificates.X509ContentType" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("Detection limited to Cert, Pfx, Pkcs12 and Unknown")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509ContentType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="c2f6b-337">一个证书文件的名称。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-337">The name of a certificate file.</span></span></param>
        <summary><span data-ttu-id="c2f6b-338">指示文件中所包含的证书类型。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-338">Indicates the type of certificate contained in a file.</span></span></summary>
        <returns><span data-ttu-id="c2f6b-339"><see cref="T:System.Security.Cryptography.X509Certificates.X509ContentType" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-339">An <see cref="T:System.Security.Cryptography.X509Certificates.X509ContentType" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2f6b-340">此方法使你能够发现文件中的证书类型。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-340">This method enables you to discover the type of certificate in a file.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c2f6b-341"><paramref name="fileName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-341"><paramref name="fileName" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="c2f6b-342">用于读取证书。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-342">for reading the certificate.</span></span> <span data-ttu-id="c2f6b-343">安全操作: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-343">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="c2f6b-344">关联的枚举:<see cref="F:System.IO.FileAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="c2f6b-344">Associated enumeration: <see cref="F:System.IO.FileAccess.Read" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetNameInfo">
      <MemberSignature Language="C#" Value="public string GetNameInfo (System.Security.Cryptography.X509Certificates.X509NameType nameType, bool forIssuer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetNameInfo(valuetype System.Security.Cryptography.X509Certificates.X509NameType nameType, bool forIssuer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.GetNameInfo(System.Security.Cryptography.X509Certificates.X509NameType,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNameInfo (nameType As X509NameType, forIssuer As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetNameInfo(System::Security::Cryptography::X509Certificates::X509NameType nameType, bool forIssuer);" />
      <MemberSignature Language="F#" Value="member this.GetNameInfo : System.Security.Cryptography.X509Certificates.X509NameType * bool -&gt; string" Usage="x509Certificate2.GetNameInfo (nameType, forIssuer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("always return String.Empty for UpnName, DnsFromAlternativeName and UrlName")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nameType" Type="System.Security.Cryptography.X509Certificates.X509NameType" />
        <Parameter Name="forIssuer" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="nameType"><span data-ttu-id="c2f6b-345">该主题的 <see cref="T:System.Security.Cryptography.X509Certificates.X509NameType" /> 值。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-345">The <see cref="T:System.Security.Cryptography.X509Certificates.X509NameType" /> value for the subject.</span></span></param>
        <param name="forIssuer"><span data-ttu-id="c2f6b-346">如果包含颁发者名称，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-346"><see langword="true" /> to include the issuer name; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="c2f6b-347">从证书中获取主题和颁发者名称。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-347">Gets the subject and issuer names from a certificate.</span></span></summary>
        <returns><span data-ttu-id="c2f6b-348">证书的名称。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-348">The name of the certificate.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2f6b-349">应始终使用此方法而不是分析证书, 因为很多名称值可以位于多个位置。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-349">This method should always be used instead of parsing the certificate, since many of the name values can be located in multiple locations.</span></span> <span data-ttu-id="c2f6b-350">使用此方法可以确保返回适当的名称。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-350">Using this method ensures that the appropriate name is returned.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c2f6b-351">下面的代码示例打开当前用户证书存储, 仅选择活动证书, 并允许用户选择一个或多个证书。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-351">The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates.</span></span> <span data-ttu-id="c2f6b-352">然后, 该示例将证书信息写入控制台。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-352">The example then writes certificate information to the console.</span></span>  
  
 [!code-cpp[CertSelect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[CertSelect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[CertSelect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasPrivateKey">
      <MemberSignature Language="C#" Value="public bool HasPrivateKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasPrivateKey" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.HasPrivateKey" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasPrivateKey As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasPrivateKey { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasPrivateKey : bool" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.HasPrivateKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c2f6b-353">获取一个值，该值指示 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 对象是否包含私钥。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-353">Gets a value that indicates whether an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object contains a private key.</span></span></summary>
        <value><span data-ttu-id="c2f6b-354">如果 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 对象包含私钥，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-354"><see langword="true" /> if the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object contains a private key; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="c2f6b-355">证书上下文无效。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-355">The certificate context is invalid.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Import">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c2f6b-356">使用所提供的证书信息填充 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-356">Populates an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object with the certificate information provided.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Import">
      <MemberSignature Language="C#" Value="public override void Import (byte[] rawData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Import(unsigned int8[] rawData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Import (rawData As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Import(cli::array &lt;System::Byte&gt; ^ rawData);" />
      <MemberSignature Language="F#" Value="override this.Import : byte[] -&gt; unit" Usage="x509Certificate2.Import rawData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawData" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="rawData"><span data-ttu-id="c2f6b-357">一个包含 X.509 证书数据的字节数组。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-357">A byte array containing data from an X.509 certificate.</span></span></param>
        <summary><span data-ttu-id="c2f6b-358">使用字节数组中的数据填充 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-358">Populates an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object with data from a byte array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2f6b-359">此方法可用于获取 x.509 证书的原始字节数组, 并使用其关联值填充<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>对象。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-359">This method can be used to take a raw byte array of an X.509 certificate and populate the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object with its associated values.</span></span>  
  
 <span data-ttu-id="c2f6b-360">由于此方法只接受字节数组, 因此它只能用于不需要密码的证书类型, 包括 Base64 编码或 DER 编码的 x.509 证书或 PFX/PKCS12 证书。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-360">Since this method accepts only a byte array, it can be used only for certificate types that do not require a password, including a Base64-encoded or DER-encoded X.509 certificate or a PFX/PKCS12 certificate.</span></span> <span data-ttu-id="c2f6b-361">请注意, PFX/PKCS12 证书可包含多个证书。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-361">Note that a PFX/PKCS12 certificate can contain more than one certificate.</span></span> <span data-ttu-id="c2f6b-362">在这种情况下, 将使用与私钥关联的第一个证书, 或者如果找不到私钥, 则使用第一个证书。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-362">In that case, the first certificate associated with a private key is used or, if no private key is found, the first certificate is used.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand"><span data-ttu-id="c2f6b-363">表示完全信任直接调用方。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-363">for full trust for the immediate caller.</span></span> <span data-ttu-id="c2f6b-364">此成员不能由部分信任的代码使用。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-364">This member cannot be used by partially trusted code.</span></span></permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand"><span data-ttu-id="c2f6b-365">完全信任继承者。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-365">for full trust for inheritors.</span></span> <span data-ttu-id="c2f6b-366">部分受信任的代码不能继承此成员。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-366">This member cannot be inherited by partially trusted code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Import">
      <MemberSignature Language="C#" Value="public override void Import (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Import(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Import (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Import(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="override this.Import : string -&gt; unit" Usage="x509Certificate2.Import fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="c2f6b-367">证书的名称。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-367">The name of a certificate.</span></span></param>
        <summary><span data-ttu-id="c2f6b-368">使用证书文件中的信息填充 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-368">Populates an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object with information from a certificate file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2f6b-369">此方法使用证书文件 (如扩展名为 .cer 的文件) 来表示 x.509 证书, 并使用该文件包含的证书来填充<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>对象。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-369">This method uses a certificate file, such as a file with a .cer extension, that represents an X.509 certificate and populates the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object with the certificate the file contains.</span></span>  
  
 <span data-ttu-id="c2f6b-370">此方法可与多种证书类型一起使用, 包括 Base64 编码或 DER 编码的 x.509 证书、PFX/PKCS12 证书和签名程序证书 (如 Authenticode)。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-370">This method can be used with several certificate types, including Base64-encoded or DER-encoded X.509 certificates, PFX/PKCS12 certificates, and signer certificates such as Authenticode.</span></span> <span data-ttu-id="c2f6b-371">请注意, PFX/PKCS12 证书可包含多个证书。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-371">Note that a PFX/PKCS12 certificate can contain more than one certificate.</span></span> <span data-ttu-id="c2f6b-372">在这种情况下, 将使用与私钥关联的第一个证书, 或者如果找不到私钥, 则使用第一个证书。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-372">In that case, the first certificate associated with a private key is used or, if no private key is found, the first certificate is used.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand"><span data-ttu-id="c2f6b-373">表示完全信任直接调用方。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-373">for full trust for the immediate caller.</span></span> <span data-ttu-id="c2f6b-374">此成员不能由部分信任的代码使用。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-374">This member cannot be used by partially trusted code.</span></span></permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand"><span data-ttu-id="c2f6b-375">完全信任继承者。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-375">for full trust for inheritors.</span></span> <span data-ttu-id="c2f6b-376">部分受信任的代码不能继承此成员。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-376">This member cannot be inherited by partially trusted code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Import">
      <MemberSignature Language="C#" Value="public override void Import (byte[] rawData, System.Security.SecureString password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Import(unsigned int8[] rawData, class System.Security.SecureString password, valuetype System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Import (rawData As Byte(), password As SecureString, keyStorageFlags As X509KeyStorageFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Import(cli::array &lt;System::Byte&gt; ^ rawData, System::Security::SecureString ^ password, System::Security::Cryptography::X509Certificates::X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="F#" Value="override this.Import : byte[] * System.Security.SecureString * System.Security.Cryptography.X509Certificates.X509KeyStorageFlags -&gt; unit" Usage="x509Certificate2.Import (rawData, password, keyStorageFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("SecureString is incomplete")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawData" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="password" Type="System.Security.SecureString" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="keyStorageFlags" Type="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="rawData"><span data-ttu-id="c2f6b-377">包含 X.509 证书数据的字节数组。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-377">A byte array that contains data from an X.509 certificate.</span></span></param>
        <param name="password"><span data-ttu-id="c2f6b-378">访问 X.509 证书数据所需的密码。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-378">The password required to access the X.509 certificate data.</span></span></param>
        <param name="keyStorageFlags"><span data-ttu-id="c2f6b-379">一个枚举值的按位组合，这些值控制在何处以及如何导入证书。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-379">A bitwise combination of the enumeration values that control where and how to import the certificate.</span></span></param>
        <summary><span data-ttu-id="c2f6b-380">使用一个字节数组中的数据、一个密码和一个密钥存储标志填充 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-380">Populates an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object using data from a byte array, a password, and a key storage flag.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2f6b-381">你可以将此方法用于证书类型, 如 Base64 编码或 DER 编码的 x.509 证书或 PFX/PKCS12 证书。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-381">You can use this method for certificate types such as Base64-encoded or DER-encoded X.509 certificates, or PFX/PKCS12 certificates.</span></span> <span data-ttu-id="c2f6b-382">请注意, PFX/PKCS12 证书可包含多个证书。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-382">Note that a PFX/PKCS12 certificate can contain more than one certificate.</span></span> <span data-ttu-id="c2f6b-383">在这种情况下, 将使用与私钥关联的第一个证书, 或者如果找不到私钥, 则使用第一个证书。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-383">In that case, the first certificate associated with a private key is used or, if no private key is found, the first certificate is used.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="c2f6b-384">切勿在源代码中对密码进行硬编码。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-384">Never hard code a password within your source code.</span></span>  <span data-ttu-id="c2f6b-385">使用[Ildasm (IL 拆装器)](~/docs/framework/tools/ildasm-exe-il-disassembler.md)、十六进制编辑器或只是在文本编辑器 (例如 notepad.exe) 中打开程序集, 可以从程序集检索硬编码的密码。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-385">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand"><span data-ttu-id="c2f6b-386">表示完全信任直接调用方。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-386">for full trust for the immediate caller.</span></span> <span data-ttu-id="c2f6b-387">此成员不能由部分信任的代码使用。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-387">This member cannot be used by partially trusted code.</span></span></permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand"><span data-ttu-id="c2f6b-388">完全信任继承者。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-388">for full trust for inheritors.</span></span> <span data-ttu-id="c2f6b-389">部分受信任的代码不能继承此成员。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-389">This member cannot be inherited by partially trusted code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Import">
      <MemberSignature Language="C#" Value="public override void Import (byte[] rawData, string password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Import(unsigned int8[] rawData, string password, valuetype System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Import (rawData As Byte(), password As String, keyStorageFlags As X509KeyStorageFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Import(cli::array &lt;System::Byte&gt; ^ rawData, System::String ^ password, System::Security::Cryptography::X509Certificates::X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="F#" Value="override this.Import : byte[] * string * System.Security.Cryptography.X509Certificates.X509KeyStorageFlags -&gt; unit" Usage="x509Certificate2.Import (rawData, password, keyStorageFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("missing KeyStorageFlags support")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawData" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="password" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="keyStorageFlags" Type="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="rawData"><span data-ttu-id="c2f6b-390">一个包含 X.509 证书数据的字节数组。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-390">A byte array containing data from an X.509 certificate.</span></span></param>
        <param name="password"><span data-ttu-id="c2f6b-391">访问 X.509 证书数据所需的密码。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-391">The password required to access the X.509 certificate data.</span></span></param>
        <param name="keyStorageFlags"><span data-ttu-id="c2f6b-392">一个枚举值的按位组合，这些值控制在何处以及如何导入证书。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-392">A bitwise combination of the enumeration values that control where and how to import the certificate.</span></span></param>
        <summary><span data-ttu-id="c2f6b-393">使用一个字节数组中的数据、一个密码和用于确定如何导入私钥的标志填充 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-393">Populates an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object using data from a byte array, a password, and flags for determining how to import the private key.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2f6b-394">此方法可用于使用由字节数组<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>表示的证书的密码来填充对象。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-394">This method can be used to populate an <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object using a password for the certificate represented by the byte array.</span></span> <span data-ttu-id="c2f6b-395"><xref:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags>值可用于控制在何处以及如何导入私钥。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-395">The <xref:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags> value can be used to control where and how to import the private key.</span></span>  
  
 <span data-ttu-id="c2f6b-396">此方法接受字节数组, 可用于证书类型, 如 Base64 编码的 x.509 证书或 "DER 编码的 PKCS12 证书" 或 "PFX/证书"。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-396">This method accepts a byte array and can be used for certificate types such as Base64-encoded or DER-encoded X.509 certificates or PFX/PKCS12 certificates.</span></span> <span data-ttu-id="c2f6b-397">请注意, PFX/PKCS12 证书可包含多个证书。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-397">Note that a PFX/PKCS12 certificate can contain more than one certificate.</span></span> <span data-ttu-id="c2f6b-398">在这种情况下, 将使用与私钥关联的第一个证书, 或者如果找不到私钥, 则使用第一个证书。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-398">In that case, the first certificate associated with a private key is used or, if no private key is found, the first certificate is used.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="c2f6b-399">切勿在源代码中对密码进行硬编码。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-399">Never hard code a password within your source code.</span></span>  <span data-ttu-id="c2f6b-400">使用[Ildasm (IL 拆装器)](~/docs/framework/tools/ildasm-exe-il-disassembler.md)、十六进制编辑器或只是在文本编辑器 (例如 notepad.exe) 中打开程序集, 可以从程序集检索硬编码的密码。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-400">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c2f6b-401">下面的代码示例创建一个命令行可执行文件, 该命令行可执行文件将证书文件作为参数, 并将各种证书属性打印到控制台。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-401">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand"><span data-ttu-id="c2f6b-402">表示完全信任直接调用方。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-402">for full trust for the immediate caller.</span></span> <span data-ttu-id="c2f6b-403">此成员不能由部分信任的代码使用。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-403">This member cannot be used by partially trusted code.</span></span></permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand"><span data-ttu-id="c2f6b-404">完全信任继承者。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-404">for full trust for inheritors.</span></span> <span data-ttu-id="c2f6b-405">部分受信任的代码不能继承此成员。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-405">This member cannot be inherited by partially trusted code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Import">
      <MemberSignature Language="C#" Value="public override void Import (string fileName, System.Security.SecureString password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Import(string fileName, class System.Security.SecureString password, valuetype System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Import (fileName As String, password As SecureString, keyStorageFlags As X509KeyStorageFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Import(System::String ^ fileName, System::Security::SecureString ^ password, System::Security::Cryptography::X509Certificates::X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="F#" Value="override this.Import : string * System.Security.SecureString * System.Security.Cryptography.X509Certificates.X509KeyStorageFlags -&gt; unit" Usage="x509Certificate2.Import (fileName, password, keyStorageFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("SecureString is incomplete")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="password" Type="System.Security.SecureString" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="keyStorageFlags" Type="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="c2f6b-406">一个证书文件的名称。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-406">The name of a certificate file.</span></span></param>
        <param name="password"><span data-ttu-id="c2f6b-407">访问 X.509 证书数据所需的密码。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-407">The password required to access the X.509 certificate data.</span></span></param>
        <param name="keyStorageFlags"><span data-ttu-id="c2f6b-408">一个枚举值的按位组合，这些值控制在何处以及如何导入证书。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-408">A bitwise combination of the enumeration values that control where and how to import the certificate.</span></span></param>
        <summary><span data-ttu-id="c2f6b-409">使用一个证书文件中的信息，一个密码和一个密钥存储标志填充 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-409">Populates an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object with information from a certificate file, a password, and a key storage flag.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2f6b-410">**安全说明**切勿在源代码中对密码进行硬编码。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-410">**Security Note** Never hard code a password within your source code.</span></span>  <span data-ttu-id="c2f6b-411">使用[Ildasm (IL 拆装器)](~/docs/framework/tools/ildasm-exe-il-disassembler.md)、十六进制编辑器或只是在文本编辑器 (例如 notepad.exe) 中打开程序集, 可以从程序集检索硬编码的密码。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-411">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand"><span data-ttu-id="c2f6b-412">表示完全信任直接调用方。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-412">for full trust for the immediate caller.</span></span> <span data-ttu-id="c2f6b-413">此成员不能由部分信任的代码使用。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-413">This member cannot be used by partially trusted code.</span></span></permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand"><span data-ttu-id="c2f6b-414">表示完全信任直接调用方。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-414">for full trust for the immediate caller.</span></span> <span data-ttu-id="c2f6b-415">此成员不能由部分信任的代码使用。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-415">This member cannot be used by partially trusted code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Import">
      <MemberSignature Language="C#" Value="public override void Import (string fileName, string password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Import(string fileName, string password, valuetype System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Import (fileName As String, password As String, keyStorageFlags As X509KeyStorageFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Import(System::String ^ fileName, System::String ^ password, System::Security::Cryptography::X509Certificates::X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="F#" Value="override this.Import : string * string * System.Security.Cryptography.X509Certificates.X509KeyStorageFlags -&gt; unit" Usage="x509Certificate2.Import (fileName, password, keyStorageFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("missing KeyStorageFlags support")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="password" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="keyStorageFlags" Type="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="c2f6b-416">一个证书文件的名称。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-416">The name of a certificate file.</span></span></param>
        <param name="password"><span data-ttu-id="c2f6b-417">访问 X.509 证书数据所需的密码。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-417">The password required to access the X.509 certificate data.</span></span></param>
        <param name="keyStorageFlags"><span data-ttu-id="c2f6b-418">一个枚举值的按位组合，这些值控制在何处以及如何导入证书。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-418">A bitwise combination of the enumeration values that control where and how to import the certificate.</span></span></param>
        <summary><span data-ttu-id="c2f6b-419">使用一个证书文件中的信息、一个密码和一个 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 值填充 <see cref="T:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-419">Populates an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object with information from a certificate file, a password, and a <see cref="T:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" /> value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2f6b-420">此方法可用于使用证书文件<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>中的信息、密码<xref:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags>和值填充对象。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-420">This method can be used populate an <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object with information from a certificate file, a password, and an <xref:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags> value.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="c2f6b-421">切勿在源代码中对密码进行硬编码。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-421">Never hard code a password within your source code.</span></span>  <span data-ttu-id="c2f6b-422">使用[Ildasm (IL 拆装器)](~/docs/framework/tools/ildasm-exe-il-disassembler.md)、十六进制编辑器或只是在文本编辑器 (例如 notepad.exe) 中打开程序集, 可以从程序集检索硬编码的密码。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-422">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand"><span data-ttu-id="c2f6b-423">表示完全信任直接调用方。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-423">for full trust for the immediate caller.</span></span> <span data-ttu-id="c2f6b-424">此成员不能由部分信任的代码使用。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-424">This member cannot be used by partially trusted code.</span></span></permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand"><span data-ttu-id="c2f6b-425">完全信任继承者。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-425">for full trust for inheritors.</span></span> <span data-ttu-id="c2f6b-426">部分受信任的代码不能继承此成员。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-426">This member cannot be inherited by partially trusted code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="IssuerName">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X500DistinguishedName IssuerName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X500DistinguishedName IssuerName" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.IssuerName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IssuerName As X500DistinguishedName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X500DistinguishedName ^ IssuerName { System::Security::Cryptography::X509Certificates::X500DistinguishedName ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.IssuerName : System.Security.Cryptography.X509Certificates.X500DistinguishedName" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.IssuerName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X500DistinguishedName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c2f6b-427">获取证书颁发者的可分辨名称。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-427">Gets the distinguished name of the certificate issuer.</span></span></summary>
        <value><span data-ttu-id="c2f6b-428">一个 <see cref="T:System.Security.Cryptography.X509Certificates.X500DistinguishedName" /> 对象，包含证书颁发者的名称。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-428">An <see cref="T:System.Security.Cryptography.X509Certificates.X500DistinguishedName" /> object that contains the name of the certificate issuer.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2f6b-429">此属性包含颁发证书的证书颁发机构 (CA) 的名称。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-429">This property contains the name of the certificate authority (CA) that issued the certificate.</span></span> <span data-ttu-id="c2f6b-430">若要获取证书的名称, 请使用<xref:System.Security.Cryptography.X509Certificates.X509Certificate2.GetNameInfo%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-430">To obtain the name of a certificate, use the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.GetNameInfo%2A> method.</span></span>  
  
 <span data-ttu-id="c2f6b-431">证书的可分辨名称是证书主题或颁发者的文本表示形式。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-431">The distinguished name for the certificate is a textual representation of the certificate subject or issuer.</span></span> <span data-ttu-id="c2f6b-432">此表示形式包含名称属性 (例如, "CN = MyName, OU = MyOrgUnit, C = US")。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-432">This representation consists of name attributes (for example, "CN=MyName, OU=MyOrgUnit, C=US").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c2f6b-433">下面的代码示例创建一个命令行可执行文件, 该文件将证书文件作为参数, 并将各种证书属性打印到控制台。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-433">The following code example creates a command-line executable file that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="c2f6b-434">证书上下文无效。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-434">The certificate context is invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="NotAfter">
      <MemberSignature Language="C#" Value="public DateTime NotAfter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime NotAfter" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.NotAfter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NotAfter As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime NotAfter { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.NotAfter : DateTime" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.NotAfter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c2f6b-435">获取本地时间中的一个日期，在该日期后证书不再有效。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-435">Gets the date in local time after which a certificate is no longer valid.</span></span></summary>
        <value><span data-ttu-id="c2f6b-436">表示证书的到期日期的 <see cref="T:System.DateTime" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-436">A <see cref="T:System.DateTime" /> object that represents the expiration date for the certificate.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2f6b-437">此属性指示证书失效的到期日期。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-437">This property indicates an expiration date on which the certificate becomes invalid.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c2f6b-438">下面的代码示例创建一个命令行可执行文件, 该命令行可执行文件将证书文件作为参数, 并将各种证书属性打印到控制台。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-438">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="c2f6b-439">该证书不可读。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-439">The certificate is unreadable.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="NotBefore">
      <MemberSignature Language="C#" Value="public DateTime NotBefore { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime NotBefore" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.NotBefore" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NotBefore As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime NotBefore { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.NotBefore : DateTime" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.NotBefore" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c2f6b-440">获取证书生效的本地时间中的日期。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-440">Gets the date in local time on which a certificate becomes valid.</span></span></summary>
        <value><span data-ttu-id="c2f6b-441">一个表示证书生效日期的 <see cref="T:System.DateTime" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-441">A <see cref="T:System.DateTime" /> object that represents the effective date of the certificate.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2f6b-442">此属性指示证书生效的日期。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-442">This property indicates the date on which the certificate becomes valid.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c2f6b-443">下面的代码示例创建一个命令行可执行文件, 该命令行可执行文件将证书文件作为参数, 并将各种证书属性打印到控制台。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-443">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="c2f6b-444">该证书不可读。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-444">The certificate is unreadable.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="PrivateKey">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.AsymmetricAlgorithm PrivateKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.AsymmetricAlgorithm PrivateKey" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.PrivateKey" />
      <MemberSignature Language="VB.NET" Value="Public Property PrivateKey As AsymmetricAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::AsymmetricAlgorithm ^ PrivateKey { System::Security::Cryptography::AsymmetricAlgorithm ^ get(); void set(System::Security::Cryptography::AsymmetricAlgorithm ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PrivateKey : System.Security.Cryptography.AsymmetricAlgorithm with get, set" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.PrivateKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.AsymmetricAlgorithm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c2f6b-445">获取或设置 <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> 对象，该对象表示与证书关联的私钥。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-445">Gets or sets the <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> object that represents the private key associated with a certificate.</span></span></summary>
        <value><span data-ttu-id="c2f6b-446">一个 <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> 对象，表示 RSA 或 DSA 加密服务提供程序。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-446">An <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> object, which is either an RSA or DSA cryptographic service provider.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2f6b-447">此属性当前仅支持 RSA 或 DSA 密钥, 因此它<xref:System.Security.Cryptography.RSA>将返回 .net <xref:System.Security.Cryptography.DSACryptoServiceProvider> Core <xref:System.Security.Cryptography.RSACryptoServiceProvider>中<xref:System.Security.Cryptography.DSA>的或对象或 .NET Framework 中的或对象。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-447">Currently this property supports only RSA or DSA keys, so it returns either an <xref:System.Security.Cryptography.RSA> or a <xref:System.Security.Cryptography.DSA> object in .NET Core or an <xref:System.Security.Cryptography.RSACryptoServiceProvider> or a <xref:System.Security.Cryptography.DSACryptoServiceProvider> object in .NET Framework.</span></span> <span data-ttu-id="c2f6b-448">如果没有与证书关联的私钥, 则返回`null`。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-448">If no private key is associated with the certificate, it returns `null`.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="c2f6b-449">如果将此属性设置为`null`或, 而不先删除它, 则会在磁盘上保留一个私钥文件。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-449">If you set this property to `null` or to another key without first deleting it, a private key file is left on the disk.</span></span>  
  
 <span data-ttu-id="c2f6b-450">若要正确删除与此属性关联的私钥, 请`PersistKeyInCsp`将`false`设置为<xref:System.Security.Cryptography.AsymmetricAlgorithm.Clear%2A> , 然后调用方法。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-450">To properly delete the private key associated with this property, set `PersistKeyInCsp` to `false`, and then call the <xref:System.Security.Cryptography.AsymmetricAlgorithm.Clear%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c2f6b-451">下面的代码示例打开当前用户证书存储, 仅选择活动证书, 并允许用户选择一个或多个证书。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-451">The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates.</span></span> <span data-ttu-id="c2f6b-452">然后, 该示例将证书信息写入控制台。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-452">The example then writes certificate information to the console.</span></span>  
  
 [!code-cpp[CertSelect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[CertSelect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[CertSelect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="c2f6b-453">密钥值不是 RSA 或 DSA 密钥，或者密钥不可读。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-453">The key value is not an RSA or DSA key, or the key is unreadable.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c2f6b-454">为此属性设置的值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-454">The value being set for this property is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="c2f6b-455">此私钥的密钥算法不受支持。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-455">The key algorithm for this private key is not supported.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicUnexpectedOperationException"><span data-ttu-id="c2f6b-456">X.509 密钥不匹配。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-456">The X.509 keys do not match.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c2f6b-457">加密服务提供程序密钥为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-457">The cryptographic service provider key is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="c2f6b-458">仅限 .NET Core：已尝试设置此属性。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-458">.NET Core only: An attempt was made to set this property.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="PublicKey">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.PublicKey PublicKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.PublicKey PublicKey" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PublicKey As PublicKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::PublicKey ^ PublicKey { System::Security::Cryptography::X509Certificates::PublicKey ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PublicKey : System.Security.Cryptography.X509Certificates.PublicKey" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.PublicKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c2f6b-459">获取一个与证书相关联的 <see cref="P:System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-459">Gets a <see cref="P:System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey" /> object associated with a certificate.</span></span></summary>
        <value><span data-ttu-id="c2f6b-460">一个 <see cref="P:System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-460">A <see cref="P:System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2f6b-461">此属性返回一个<xref:System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey%2A>对象, 该对象包含表示公钥算法<xref:System.Security.Cryptography.Oid>的对象标识符 ()、asn. 1 编码的参数和一个</span><span class="sxs-lookup"><span data-stu-id="c2f6b-461">This property returns a <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey%2A> object, which contains the object identifier (<xref:System.Security.Cryptography.Oid>) representing the public key algorithm, the ASN.1-encoded parameters, and the ASN.1-encoded key value.</span></span>  
  
 <span data-ttu-id="c2f6b-462">还可以通过<xref:System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey%2A>引用属性, 将密钥<xref:System.Security.Cryptography.AsymmetricAlgorithm>作为对象来获取。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-462">You can also obtain the key as an <xref:System.Security.Cryptography.AsymmetricAlgorithm> object by referencing the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey%2A> property.</span></span> <span data-ttu-id="c2f6b-463">此属性仅支持 RSA 或 DSA 密钥, 因此它将返回<xref:System.Security.Cryptography.RSACryptoServiceProvider> <xref:System.Security.Cryptography.DSACryptoServiceProvider>或代表公钥的对象。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-463">This property supports only RSA or DSA keys, so it returns either an <xref:System.Security.Cryptography.RSACryptoServiceProvider> or a <xref:System.Security.Cryptography.DSACryptoServiceProvider> object that represents the public key.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c2f6b-464">下面的代码示例创建一个命令行可执行文件, 该命令行可执行文件将证书文件作为参数, 并将各种证书属性打印到控制台。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-464">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertSelect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[CertSelect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[CertSelect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="c2f6b-465">密钥值不是 RSA 或 DSA 密钥，或者密钥不可读。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-465">The key value is not an RSA or DSA key, or the key is unreadable.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RawData">
      <MemberSignature Language="C#" Value="public byte[] RawData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] RawData" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.RawData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RawData As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ RawData { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RawData : byte[]" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.RawData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c2f6b-466">获取证书的原始数据。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-466">Gets the raw data of a certificate.</span></span></summary>
        <value><span data-ttu-id="c2f6b-467">字节数组形式的证书原始数据。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-467">The raw data of the certificate as a byte array.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c2f6b-468">下面的代码示例创建一个命令行可执行文件, 该命令行可执行文件将证书文件作为参数, 并将各种证书属性打印到控制台。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-468">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertSelect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[CertSelect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[CertSelect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public override void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Reset();" />
      <MemberSignature Language="F#" Value="override this.Reset : unit -&gt; unit" Usage="x509Certificate2.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c2f6b-469">重置 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 对象的状态。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-469">Resets the state of an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2f6b-470">此方法可用于重置证书的状态。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-470">This method can be used to reset the state of the certificate.</span></span> <span data-ttu-id="c2f6b-471">它还可释放与证书关联的任何资源。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-471">It also frees any resources associated with the certificate.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand"><span data-ttu-id="c2f6b-472">表示完全信任直接调用方。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-472">for full trust for the immediate caller.</span></span> <span data-ttu-id="c2f6b-473">此成员不能由部分信任的代码使用。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-473">This member cannot be used by partially trusted code.</span></span></permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand"><span data-ttu-id="c2f6b-474">完全信任继承者。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-474">for full trust for inheritors.</span></span> <span data-ttu-id="c2f6b-475">部分受信任的代码不能继承此成员。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-475">This member cannot be inherited by partially trusted code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="SerialNumber">
      <MemberSignature Language="C#" Value="public string SerialNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SerialNumber" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.SerialNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SerialNumber As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SerialNumber { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SerialNumber : string" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.SerialNumber" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c2f6b-476">获取 big-endian 十六进制字符串形式的证书序列号。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-476">Gets the serial number of a certificate as a big-endian hexadecimal string.</span></span></summary>
        <value><span data-ttu-id="c2f6b-477">作为大字节序十六进制字符串的证书的序列号。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-477">The serial number of the certificate as a big-endian hexadecimal string.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2f6b-478">证书的序列号是原始 x.509 协议的一部分。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-478">The serial number of the certificate is part of the original X.509 protocol.</span></span> <span data-ttu-id="c2f6b-479">序列号是证书颁发者颁发的唯一编号, 也称为证书颁发机构 (CA)。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-479">The serial number is a unique number issued by the certificate issuer, which is also called the Certificate Authority (CA).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c2f6b-480">下面的代码示例创建一个命令行可执行文件, 该命令行可执行文件将证书文件作为参数, 并将各种证书属性打印到控制台。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-480">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignatureAlgorithm">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Oid SignatureAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Oid SignatureAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.SignatureAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SignatureAlgorithm As Oid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::Oid ^ SignatureAlgorithm { System::Security::Cryptography::Oid ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SignatureAlgorithm : System.Security.Cryptography.Oid" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.SignatureAlgorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Oid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c2f6b-481">获取用于创建证书签名的算法。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-481">Gets the algorithm used to create the signature of a certificate.</span></span></summary>
        <value><span data-ttu-id="c2f6b-482">签名算法的对象标识符。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-482">The object identifier of the signature algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2f6b-483">对象标识符 (<xref:System.Security.Cryptography.Oid>) 标识证书使用的签名算法的类型。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-483">The object identifier (<xref:System.Security.Cryptography.Oid>) identifies the type of signature algorithm used by the certificate.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c2f6b-484">下面的代码示例打开当前用户证书存储, 仅选择活动证书, 并允许用户选择一个或多个证书。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-484">The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates.</span></span> <span data-ttu-id="c2f6b-485">然后, 该示例将证书信息写入控制台。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-485">The example then writes certificate information to the console.</span></span>  
  
 [!code-cpp[CertSelect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[CertSelect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[CertSelect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="c2f6b-486">该证书不可读。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-486">The certificate is unreadable.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SubjectName">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X500DistinguishedName SubjectName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X500DistinguishedName SubjectName" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.SubjectName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SubjectName As X500DistinguishedName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X500DistinguishedName ^ SubjectName { System::Security::Cryptography::X509Certificates::X500DistinguishedName ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SubjectName : System.Security.Cryptography.X509Certificates.X500DistinguishedName" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.SubjectName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X500DistinguishedName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c2f6b-487">获取证书的主题可分辨名称。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-487">Gets the subject distinguished name from a certificate.</span></span></summary>
        <value><span data-ttu-id="c2f6b-488">一个 <see cref="T:System.Security.Cryptography.X509Certificates.X500DistinguishedName" /> 对象，用于表示证书主题的名称。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-488">An <see cref="T:System.Security.Cryptography.X509Certificates.X500DistinguishedName" /> object that represents the name of the certificate subject.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2f6b-489">使用者可分辨名称是证书的用户的名称。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-489">The subject distinguished name is the name of the user of the certificate.</span></span> <span data-ttu-id="c2f6b-490">证书的可分辨名称是证书的使用者或颁发者的文本表示形式。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-490">The distinguished name for the certificate is a textual representation of the subject or issuer of the certificate.</span></span> <span data-ttu-id="c2f6b-491">此表示形式包含名称特性, 例如 "CN = MyName, OU = MyOrgUnit, C = US"。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-491">This representation consists of name attributes, for example, "CN=MyName, OU=MyOrgUnit, C=US".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c2f6b-492">下面的代码示例创建一个命令行可执行文件, 该命令行可执行文件将证书文件作为参数, 并将各种证书属性打印到控制台。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-492">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="c2f6b-493">证书上下文无效。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-493">The certificate context is invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Thumbprint">
      <MemberSignature Language="C#" Value="public string Thumbprint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Thumbprint" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.Thumbprint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Thumbprint As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Thumbprint { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Thumbprint : string" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.Thumbprint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c2f6b-494">获取证书的指纹。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-494">Gets the thumbprint of a certificate.</span></span></summary>
        <value><span data-ttu-id="c2f6b-495">证书的指纹。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-495">The thumbprint of the certificate.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2f6b-496">指纹是使用 SHA1 算法动态生成的, 并且在证书中实际上不存在。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-496">The thumbprint is dynamically generated using the SHA1 algorithm and does not physically exist in the certificate.</span></span> <span data-ttu-id="c2f6b-497">由于指纹是证书的唯一值, 因此通常用于在证书存储区中查找特定证书。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-497">Since the thumbprint is a unique value for the certificate, it is commonly used to find a particular certificate in a certificate store.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c2f6b-498">下面的代码示例创建一个命令行可执行文件, 该命令行可执行文件将证书文件作为参数, 并将各种证书属性打印到控制台。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-498">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c2f6b-499">以文本格式显示 X.509 证书。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-499">Displays an X.509 certificate in text format.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="x509Certificate2.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c2f6b-500">以文本格式显示 X.509 证书。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-500">Displays an X.509 certificate in text format.</span></span></summary>
        <returns><span data-ttu-id="c2f6b-501">证书信息。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-501">The certificate information.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2f6b-502">与所有`ToString`方法一样, 输出在不同版本的 .NET Framework 中可能不一致, 因此不应为内容分析方法结果。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-502">As with all `ToString` methods, the output might not be consistent across versions of the .NET Framework, so the method results should not be parsed for content.</span></span> <span data-ttu-id="c2f6b-503">使用<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>对象上的属性可获取有关内容的精确信息, 或<xref:System.Security.Cryptography.X509Certificates.X509Certificate2.ToString%2A>使用方法获取有关证书的信息。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-503">Use the properties on the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object to obtain precise information about the content or use the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.ToString%2A> method to obtain information about the certificate.</span></span>  
  
 <span data-ttu-id="c2f6b-504">此方法以文本格式显示证书。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-504">This method displays the certificate in text format.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c2f6b-505">下面的代码示例创建一个命令行可执行文件, 该命令行可执行文件将证书文件作为参数, 并将各种证书属性打印到控制台。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-505">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString (bool verbose);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString(bool verbose) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.ToString(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString (verbose As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString(bool verbose);" />
      <MemberSignature Language="F#" Value="override this.ToString : bool -&gt; string" Usage="x509Certificate2.ToString verbose" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="verbose" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="verbose"><span data-ttu-id="c2f6b-506">为 <see langword="true" /> 则显示公钥、私钥、扩展等；为 <see langword="false" /> 则显示类似于 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 类的信息，包括指纹、序列号、主题和颁发者名称等。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-506"><see langword="true" /> to display the public key, private key, extensions, and so forth; <see langword="false" /> to display information that is similar to the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class, including thumbprint, serial number, subject and issuer names, and so on.</span></span></param>
        <summary><span data-ttu-id="c2f6b-507">以文本格式显示 X.509 证书。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-507">Displays an X.509 certificate in text format.</span></span></summary>
        <returns><span data-ttu-id="c2f6b-508">证书信息。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-508">The certificate information.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2f6b-509">与所有`ToString`方法一样, 输出在不同版本的 .NET Framework 中可能不一致, 因此不应为内容分析方法结果。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-509">As with all `ToString` methods, the output might not be consistent across versions of the .NET Framework, so the method results should not be parsed for content.</span></span> <span data-ttu-id="c2f6b-510">使用<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>对象的属性来获取精确的信息。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-510">Use the properties on the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object to obtain precise information.</span></span>  
  
 <span data-ttu-id="c2f6b-511">此方法以文本格式显示证书。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-511">This method displays the certificate in text format.</span></span> <span data-ttu-id="c2f6b-512">如果参数设置为`true`, 则文本显示包括公钥、私钥和扩展名。 `verbose`</span><span class="sxs-lookup"><span data-stu-id="c2f6b-512">If the `verbose` parameter is set to `true`, the text display includes the public key, private key, and extensions.</span></span> <span data-ttu-id="c2f6b-513">如果`verbose`设置为`false`, 则文本显示包含 x.509 证书中的可用字段, 包括指纹、序列号、主题和颁发者名称以及有效性日期信息。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-513">If `verbose` is set to `false`, the text display includes those fields available from the X.509 certificate, including thumbprint, serial number, subject and issuer names, and validity date information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c2f6b-514">下面的代码示例创建一个命令行可执行文件, 它将证书文件作为参数, 并将各种证书属性打印到控制台。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-514">The following code example creates a command line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Verify">
      <MemberSignature Language="C#" Value="public bool Verify ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Verify() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Verify" />
      <MemberSignature Language="VB.NET" Value="Public Function Verify () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Verify();" />
      <MemberSignature Language="F#" Value="member this.Verify : unit -&gt; bool" Usage="x509Certificate2.Verify " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("by default this depends on the incomplete X509Chain")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c2f6b-515">使用基本验证策略执行 X.509 链验证。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-515">Performs a X.509 chain validation using basic validation policy.</span></span></summary>
        <returns><span data-ttu-id="c2f6b-516">如果验证成功，则为 <see langword="true" />；如果验证失败，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-516"><see langword="true" /> if the validation succeeds; <see langword="false" /> if the validation fails.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2f6b-517">此方法为证书生成一个简单的链, 并将基本策略应用到该链。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-517">This method builds a simple chain for the certificate and applies the base policy to that chain.</span></span> <span data-ttu-id="c2f6b-518">如果需要有关失败的详细信息, 请使用<xref:System.Security.Cryptography.X509Certificates.X509Chain>对象直接验证证书。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-518">If you need more information about a failure, validate the certificate directly using the <xref:System.Security.Cryptography.X509Certificates.X509Chain> object.</span></span>  
  
 <span data-ttu-id="c2f6b-519">请注意, 可以使用<xref:System.Security.Cryptography.CryptoConfig>类重写默认链接引擎。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-519">Note that the default chaining engine can be overridden using the <xref:System.Security.Cryptography.CryptoConfig> class.</span></span> <span data-ttu-id="c2f6b-520">在 Microsoft Windows Server 2003 上, 默认引擎符合 RFC3280 "[证书和证书吊销列表 (CRL) 配置文件](https://go.microsoft.com/fwlink/?LinkId=45286)" 中所述的规范。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-520">On Microsoft Windows Server 2003, the default engine conforms to the specification described in RFC3280, "[Certificate and Certificate Revocation List (CRL) Profile](https://go.microsoft.com/fwlink/?LinkId=45286)."</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c2f6b-521">下面的代码示例打开当前用户证书存储, 仅选择活动证书, 并允许用户选择一个或多个证书。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-521">The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates.</span></span> <span data-ttu-id="c2f6b-522">然后, 该示例将证书信息写入控制台。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-522">The example then writes certificate information to the console.</span></span>  
  
 [!code-cpp[CertSelect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[CertSelect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[CertSelect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="c2f6b-523">该证书不可读。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-523">The certificate is unreadable.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public int Version { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Version" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.Version" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Version As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Version { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Version : int" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.Version" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c2f6b-524">获取证书的 X.509 格式版本。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-524">Gets the X.509 format version of a certificate.</span></span></summary>
        <value><span data-ttu-id="c2f6b-525">证书格式。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-525">The certificate format.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2f6b-526">有多种版本的 x.509 证书。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-526">There are several versions of X.509 certificates.</span></span> <span data-ttu-id="c2f6b-527">此属性标识证书使用的格式。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-527">This property identifies which format the certificate uses.</span></span> <span data-ttu-id="c2f6b-528">例如, 为版本3证书返回 "3"。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-528">For example, "3" is returned for a version 3 certificate.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c2f6b-529">下面的代码示例创建一个命令行可执行文件, 该命令行可执行文件将证书文件作为参数, 并将各种证书属性打印到控制台。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-529">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="c2f6b-530">该证书不可读。</span><span class="sxs-lookup"><span data-stu-id="c2f6b-530">The certificate is unreadable.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
